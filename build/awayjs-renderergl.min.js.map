{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticleData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/base/ParticleGeometry.ts",
    "awayjs-renderergl/lib/base/RendererBase.ts",
    "awayjs-renderergl/lib/compilation/DepthRenderObject.ts",
    "awayjs-renderergl/lib/compilation/DistanceRenderObject.ts",
    "awayjs-renderergl/lib/compilation/RegisterPool.ts",
    "awayjs-renderergl/lib/compilation/RenderBasicMaterialObject.ts",
    "awayjs-renderergl/lib/compilation/RenderObjectBase.ts",
    "awayjs-renderergl/lib/compilation/RenderObjectPool.ts",
    "awayjs-renderergl/lib/compilation/ShaderCompilerBase.ts",
    "awayjs-renderergl/lib/compilation/ShaderLightingCompiler.ts",
    "awayjs-renderergl/lib/compilation/ShaderLightingObject.ts",
    "awayjs-renderergl/lib/compilation/ShaderObjectBase.ts",
    "awayjs-renderergl/lib/compilation/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/compilation/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/compilation/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/compilation/SkyboxRenderObject.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/passes/DepthPass.ts",
    "awayjs-renderergl/lib/passes/DistancePass.ts",
    "awayjs-renderergl/lib/passes/RenderPassBase.ts",
    "awayjs-renderergl/lib/passes/SkyboxPass.ts",
    "awayjs-renderergl/lib/pick/JSPickingCollider.ts",
    "awayjs-renderergl/lib/pick/PickingColliderBase.ts",
    "awayjs-renderergl/lib/pick/ShaderPicker.ts",
    "awayjs-renderergl/lib/pool/BillboardRenderable.ts",
    "awayjs-renderergl/lib/pool/CurveSubMeshRenderable.ts",
    "awayjs-renderergl/lib/pool/LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/pool/LineSubMeshRenderable.ts",
    "awayjs-renderergl/lib/pool/RenderableBase.ts",
    "awayjs-renderergl/lib/pool/RenderablePoolBase.ts",
    "awayjs-renderergl/lib/pool/RendererPoolBase.ts",
    "awayjs-renderergl/lib/pool/SkyboxRenderable.ts",
    "awayjs-renderergl/lib/pool/TriangleSubMeshRenderable.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts",
    "awayjs-renderergl/lib/utils/ShaderCompilerHelper.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Matrix3D",
    "Vector3D",
    "RenderTexture",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "RendererBase",
    "RenderablePoolBase",
    "SkyboxRenderable",
    "RTTBufferManager",
    "DefaultRenderer",
    "_super",
    "rendererPoolClass",
    "stage",
    "_skyboxProjection",
    "_width",
    "width",
    "window",
    "innerWidth",
    "_pRttBufferManager",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "Object",
    "defineProperty",
    "get",
    "_antiAlias",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pStage",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "entityCollector",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_shareContext",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "dirLights",
    "directionalLights",
    "pointLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "pDraw",
    "skyBox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "_pGetRenderObject",
    "renderable",
    "renderObjectOwner",
    "getRenderObject",
    "_pool",
    "_skyboxRenderablePool",
    "getItem",
    "camera",
    "updateSkyboxProjection",
    "renderObject",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "iSetStage",
    "getInstance",
    "_pRendererPoolClass",
    "getPool",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/geom/Matrix3D",
    "undefined",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/base/RendererBase",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/pool/RenderablePoolBase",
    "awayjs-renderergl/lib/pool/SkyboxRenderable",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "getDepthRenderObject",
    "getDistanceRenderObject",
    "Event",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "getMainInputTexture",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "Array",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setVertexBufferAt",
    "FLOAT_2",
    "renderToScreenVertexBuffer",
    "setTextureAt",
    "setProgram",
    "getProgram",
    "activate",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawTriangles",
    "deactivate",
    "removeEventListener",
    "awayjs-core/lib/events/Event",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "shaderObject",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "assetType",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "node",
    "push",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "id",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "dispatchEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "mesh",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableSubGeometry",
    "sourceSubGeometry",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationSubGeometry",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationSubGeometries",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "_timeNode",
    "_iProcessAnimationSetting",
    "mode",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "profile",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "numUsedStreams",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationSubGeometry",
    "subMesh",
    "parentMesh",
    "animationSubGeometry",
    "subGeometry",
    "_iGenerateAnimationSubGeometries",
    "initParticleFunc",
    "geometry",
    "j",
    "k",
    "newAnimationSubGeometry",
    "localNode",
    "subMeshes",
    "shareAnimationGeometry",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorSubGeometry",
    "getAnimatorSubGeometry",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "TriangleSubGeometry",
    "SubGeometryEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedSubGeometry",
    "_morphedSubGeometryDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "numCondensedJoints",
    "_condensedMatrices",
    "usesCPU",
    "morphSubGeometry",
    "activateBuffer",
    "getVertexData",
    "JOINT_INDEX_DATA",
    "getVertexOffset",
    "JOINT_INDEX_FORMAT",
    "JOINT_WEIGHT_DATA",
    "JOINT_WEIGHT_FORMAT",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetSubGeometry",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "INDICES_UPDATED",
    "VERTICES_UPDATED",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "vertexNormals",
    "sourceTangents",
    "vertexTangents",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "updatePositions",
    "updateVertexNormals",
    "updateVertexTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "updateIndices",
    "morphGeometry",
    "dataType",
    "UV_DATA",
    "updateUVs",
    "uvs",
    "SECONDARY_UV_DATA",
    "secondaryUVs",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-core/lib/events/SubGeometryEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexDataPool",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGeometry",
    "nextGeometry",
    "blendWeight",
    "_iInvalidateRenderableGeometries",
    "setNullPose",
    "subGeom",
    "subGeometries",
    "_iIndex",
    "getIndexData",
    "POSITION_DATA",
    "getOffset",
    "POSITION_FORMAT",
    "NORMAL_DATA",
    "NORMAL_FORMAT",
    "awayjs-stagegl/lib/pool/VertexDataPool",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "data",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/compilation/ShaderRegisterCache",
    "awayjs-renderergl/lib/compilation/ShaderRegisterElement",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticleData",
    "ParticleData",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "position",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "subtract",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "sourceEntity",
    "sceneTransform",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "transform",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "setPositions",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGeometry",
    "_nextGeometry",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/base/ParticleGeometry",
    "Geometry",
    "ParticleGeometry",
    "apply",
    "arguments",
    "awayjs-core/lib/data/Geometry",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RenderableMergeSort",
    "RendererEvent",
    "StageEvent",
    "EntityCollector",
    "DefaultMaterialManager",
    "AGALMiniAssembler",
    "StageManager",
    "RendererPoolBase",
    "_numUsedStreams",
    "_numUsedTextures",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumTriangles",
    "_disableColor",
    "_renderBlended",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "_rendererPool",
    "getFreeStage",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "shader",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_iCreateEntityCollector",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_viewportDirty",
    "_scissorDirty",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "setRenderTarget",
    "LESS",
    "head",
    "_pOpaqueRenderableHead",
    "first",
    "LESS_EQUAL",
    "_pBlendedRenderableHead",
    "item",
    "entityHead",
    "_pCamera",
    "_iEntryPoint",
    "_pCameraForward",
    "forwardVector",
    "entity",
    "_iCollectRenderables",
    "next",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "_snapshotRequired",
    "_snapshotBitmapData",
    "drawToBitmapData",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderable2",
    "_renderObjectOwner",
    "alphaThreshold",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "applyRenderable",
    "getDefaultMaterial",
    "renderableOwner",
    "renderObjectId",
    "renderOrderId",
    "cascaded",
    "zIndex",
    "zOffset",
    "dotProduct",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "numTriangles",
    "overflow",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "awayjs-display/lib/traverse/EntityCollector",
    "awayjs-renderergl/lib/pool/RendererPoolBase",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/compilation/DepthRenderObject",
    "RenderObjectBase",
    "DepthPass",
    "DepthRenderObject",
    "pool",
    "renderableClass",
    "_pAddScreenPass",
    "awayjs-renderergl/lib/compilation/RenderObjectBase",
    "awayjs-renderergl/lib/passes/DepthPass",
    "awayjs-renderergl/lib/compilation/DistanceRenderObject",
    "DistancePass",
    "DistanceRenderObject",
    "awayjs-renderergl/lib/passes/DistancePass",
    "awayjs-renderergl/lib/compilation/IRenderObjectClass",
    "awayjs-renderergl/lib/compilation/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "c",
    "awayjs-renderergl/lib/compilation/RenderBasicMaterialObject",
    "BlendMode",
    "BasicMaterialPass",
    "RenderBasicMaterialObject",
    "material",
    "_material",
    "_screenPass",
    "_pUpdateRenderObject",
    "_pRequiresBlending",
    "NORMAL",
    "alphaBlending",
    "colorTransform",
    "preserveAlpha",
    "setBlendMode",
    "LAYER",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-renderergl/lib/passes/BasicMaterialPass",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRenderObject",
    "_passes",
    "_renderableClass",
    "_onPassChangeDelegate",
    "onPassChange",
    "_updateAnimation",
    "_renderOrderId",
    "_iIncludeDependencies",
    "useMipmapping",
    "mipmap",
    "useSmoothTextures",
    "isAsset",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "useBothSides",
    "bothSides",
    "repeatTextures",
    "repeat",
    "animateUVs",
    "texture",
    "_pClearScreenPasses",
    "disposeItem",
    "invalidateRenderObject",
    "invalidatePasses",
    "invalidatePass",
    "invalidateAnimation",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "usesAnimation",
    "invalidateProgram",
    "_pRemoveScreenPass",
    "CHANGE",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/compilation/RenderObjectPool",
    "RenderObjectPool",
    "renderObjectClass",
    "_renderObjectPool",
    "_renderObjectClass",
    "_iAddRenderObject",
    "_iRemoveRenderObject",
    "awayjs-renderergl/lib/compilation/ShaderCompilerBase",
    "ShaderRegisterData",
    "ShaderCompilerBase",
    "renderPass",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pRenderableClass",
    "_pRenderPass",
    "_pShaderObject",
    "_pSharedRegisters",
    "_pRegisterCache",
    "compile",
    "pIncludeDependencies",
    "pInitRegisterIndices",
    "pCompileDependencies",
    "_iGetVertexCode",
    "_iGetFragmentCode",
    "fragmentOutputRegister",
    "removeFragmentTempUsage",
    "initConstantData",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_uvSource",
    "_uvTarget",
    "_iInitConstantData",
    "_pOutputsNormals",
    "outputsTangentNormals",
    "_pOutputsTangentNormals",
    "usesTangentSpace",
    "_pUsesTangentSpace",
    "viewDirDependencies",
    "globalPosDependencies",
    "getFreeFragmentVectorTemp",
    "compileGlobalPositionCode",
    "localPosDependencies",
    "compileLocalPositionCode",
    "uvDependencies",
    "compileUVCode",
    "secondaryUVDependencies",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "globalPositionVertex",
    "sceneMatrixReg",
    "sceneMatrixIndex",
    "localPosition",
    "usesGlobalPosFragment",
    "globalPositionVarying",
    "localPositionVarying",
    "uvAttributeReg",
    "uvBufferIndex",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "uvTransformIndex",
    "secondaryUVBufferIndex",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "cameraPositionIndex",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "sceneNormalMatrixIndex",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "getFreeFragmentConstant",
    "commonsDataIndex",
    "tangentInput",
    "tangentBufferIndex",
    "normalBufferIndex",
    "colorDependencies",
    "colorInput",
    "colorBufferIndex",
    "colorVarying",
    "awayjs-renderergl/lib/compilation/ShaderRegisterData",
    "awayjs-renderergl/lib/compilation/ShaderLightingCompiler",
    "ShaderLightingCompiler",
    "renderLightingPass",
    "shaderLightingObject",
    "_shaderLightingObject",
    "_renderLightingPass",
    "usesShadows",
    "pCompileShadowCode",
    "usesLights",
    "initLightRegisters",
    "compileLightCode",
    "usesProbes",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "lightVertexConstantIndex",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "lightFragmentConstantIndex",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "addSpec",
    "usesLightsForSpecular",
    "addDiff",
    "usesLightsForDiffuse",
    "numDirectionalLights",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "numPointLights",
    "usesLightFallOff",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "usesProbesForSpecular",
    "usesProbesForDiffuse",
    "lightProbeDiffuseIndices",
    "lightProbeSpecularIndices",
    "_pNumProbeRegisters",
    "probeWeightsIndex",
    "numLightProbes",
    "getFreeTextureReg",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/compilation/ShaderLightingObject",
    "LightSources",
    "ContextGLProfile",
    "ShaderObjectBase",
    "ShaderLightingObject",
    "_includeCasters",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "numLights",
    "LIGHTS",
    "PROBES",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "cast",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLightsOffset",
    "castingPointLights",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "activateCubeTexture",
    "diffuseMap",
    "specularMap",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/compilation/ShaderObjectBase",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "LineSubGeometry",
    "ContextGLTriangleFace",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "_defaultCulling",
    "BACK",
    "_renderPass",
    "_updateProgram",
    "_programData",
    "projectionDependencies",
    "registerCache",
    "setCulling",
    "NONE",
    "projection",
    "coordinateSystem",
    "UV_FORMAT",
    "SECONDARY_UV_FORMAT",
    "TANGENT_DATA",
    "TANGENT_FORMAT",
    "COLOR_DATA",
    "COLOR_FORMAT",
    "uvTransform",
    "copyRawDataTo",
    "invalidateShader",
    "compiler",
    "_calcAnimationCode",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "usages",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeFragmentSingleTemp",
    "component",
    "_toStr",
    "COMPONENTS",
    "awayjs-renderergl/lib/compilation/SkyboxRenderObject",
    "SkyboxPass",
    "SkyboxRenderObject",
    "awayjs-renderergl/lib/passes/SkyboxPass",
    "message",
    "awayjs-core/lib/errors/Error",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "pAddTask",
    "_textureWidth",
    "_textureHeight",
    "mainTarget",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "ContextGLTextureFormat",
    "Filter3DTaskBase",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "pUpdateTextures",
    "_program3D",
    "pInvalidateProgram",
    "pUpdateProgram",
    "pGetVertexCode",
    "pGetFragmentCode",
    "createTexture",
    "BGRA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "TextureUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/TextureUtils",
    "ShaderCompilerHelper",
    "RenderPassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "_shader",
    "regCache",
    "sharedReg",
    "alphaReg",
    "targetReg",
    "diffuseInputReg",
    "_texturesIndex",
    "getTex2DSampleCode",
    "cutOffReg",
    "_fragmentConstantsIndex",
    "activateTexture",
    "awayjs-renderergl/lib/passes/RenderPassBase",
    "awayjs-renderergl/lib/utils/ShaderCompilerHelper",
    "sharedRegisters",
    "dataReg1",
    "dataReg2",
    "projectionFragment",
    "albedo",
    "far",
    "awayjs-renderergl/lib/passes/IRenderLightingPass",
    "awayjs-renderergl/lib/passes/IRenderPassBase",
    "ArgumentError",
    "_preserveAlpha",
    "_depthCompareMode",
    "_blendFactorSource",
    "_blendFactorDest",
    "_pEnableBlending",
    "_writeDepth",
    "_renderObject",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "awayjs-core/lib/errors/ArgumentError",
    "_skybox",
    "mip",
    "getFormatStringForTexture",
    "cubeMap",
    "awayjs-renderergl/lib/pick/JSPickingCollider",
    "PickingColliderBase",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "_pTestRenderableCollision",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "i0",
    "i1",
    "i2",
    "rx",
    "ry",
    "rz",
    "coeff",
    "p0x",
    "p0y",
    "p0z",
    "p1x",
    "p1y",
    "p1z",
    "p2x",
    "p2y",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "indexData",
    "collisionTriangleIndex",
    "positionData",
    "positionStride",
    "dataPerVertex",
    "positionOffset",
    "uvData",
    "uvStride",
    "uvOffset",
    "numIndices",
    "rayDirection",
    "rayPosition",
    "rayEntryDistance",
    "localNormal",
    "uv",
    "_pGetCollisionUV",
    "awayjs-renderergl/lib/pick/PickingColliderBase",
    "BillboardRenderable",
    "TriangleSubMeshRenderable",
    "_billboardRenderablePool",
    "_subMeshRenderablePool",
    "_pPetCollisionNormal",
    "triangleIndex",
    "normal",
    "p0",
    "side0",
    "side1",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "setLocalRay",
    "localDirection",
    "testBillboardCollision",
    "billboard",
    "localRayPosition",
    "localRayDirection",
    "testMeshCollision",
    "findClosest",
    "awayjs-renderergl/lib/pool/BillboardRenderable",
    "awayjs-renderergl/lib/pool/TriangleSubMeshRenderable",
    "awayjs-renderergl/lib/pick/ShaderPicker",
    "Debug",
    "BitmapData",
    "Matrix3DUtils",
    "ShaderPicker",
    "shaderPickingDetails",
    "_onlyMouseEnabled",
    "_interactives",
    "_localHitPosition",
    "_hitUV",
    "_localHitNormal",
    "_rayPos",
    "_rayDir",
    "_shaderPickingDetails",
    "_id",
    "_viewportData",
    "_boundOffsetScale",
    "getViewCollision",
    "view",
    "collector",
    "iEntityCollector",
    "renderer",
    "_context",
    "_projX",
    "_projY",
    "_potentialFound",
    "_blendedRenderableHead",
    "_opaqueRenderableHead",
    "_bitmapData",
    "_hitColor",
    "getPixel",
    "_hitRenderable",
    "_hitEntity",
    "_iIsMouseEnabled",
    "_collisionVO",
    "_iPickingCollisionVO",
    "getHitDetails",
    "_faceIndex",
    "getSceneCollision",
    "direction",
    "scene",
    "MOUSE_SCISSOR_RECT",
    "_interactiveId",
    "_objectProgram",
    "initObjectProgram",
    "CALCULATION_MATRIX",
    "setProgramConstantsFromMatrix",
    "getIndexBuffer",
    "updateRay",
    "getRay",
    "throwPIR",
    "initTriangleProgram",
    "_triangleProgram",
    "getApproximatePosition",
    "getPreciseDetails",
    "bounds",
    "getBox",
    "col",
    "scX",
    "scY",
    "scZ",
    "offsX",
    "offsY",
    "offsZ",
    "localViewProjection",
    "depth",
    "setScissorRectangle",
    "t1",
    "t2",
    "t3",
    "v0x",
    "v0y",
    "v0z",
    "v1x",
    "v1y",
    "v1z",
    "v2x",
    "v2y",
    "v2z",
    "ni1",
    "ni2",
    "ni3",
    "n1",
    "n2",
    "n3",
    "nLength",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "invDenom",
    "ui1",
    "ui2",
    "ui3",
    "normals",
    "normalStride",
    "normalOffset",
    "getPrecisePosition",
    "invSceneTransform",
    "px",
    "py",
    "pz",
    "RAW_DATA_CONTAINER",
    "awayjs-core/lib/data/BitmapData",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/utils/Debug",
    "RenderableBase",
    "_billboard",
    "_pGetSubGeometry",
    "_materialGeometry",
    "_pVertexDataDirty",
    "viewMatrixReg",
    "viewMatrixIndex",
    "matrix3D",
    "awayjs-renderergl/lib/pool/RenderableBase",
    "awayjs-renderergl/lib/pool/CurveSubMeshRenderable",
    "CurveSubGeometry",
    "CurveSubMeshRenderable",
    "level",
    "indexOffset",
    "_constants",
    "curves",
    "CURVE_DATA",
    "sd",
    "standardDerivatives",
    "out",
    "curve",
    "curvex",
    "curvey",
    "curvez",
    "free",
    "free1",
    "free2",
    "d2",
    "fixa",
    "fixb",
    "_aa",
    "_1",
    "join",
    "CURVE_FORMAT",
    "_pGetOverflowRenderable",
    "_level",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-renderergl/lib/pool/IRenderableClass",
    "awayjs-renderergl/lib/pool/IRendererPoolClass",
    "awayjs-renderergl/lib/pool/LineSegmentRenderable",
    "LineSegmentRenderable",
    "lineSegment",
    "_thickness",
    "_lineSegment",
    "_calcMatrix",
    "_lineGeometry",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "startPostion",
    "end",
    "endPosition",
    "startPositions",
    "endPositions",
    "thickness",
    "updateThickness",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "THICKNESS_FORMAT",
    "awayjs-renderergl/lib/pool/LineSubMeshRenderable",
    "LineSubMeshRenderable",
    "startColors",
    "SubGeometryBase",
    "RenderableOwnerEvent",
    "IndexDataPool",
    "_geometryDirty",
    "_indexDataDirty",
    "_vertexData",
    "_vertexOffset",
    "_onIndicesUpdatedDelegate",
    "_onIndicesUpdated",
    "_onVerticesUpdatedDelegate",
    "_onVerticesUpdated",
    "_onRenderObjectOwnerUpdatedDelegate",
    "_onRenderObjectOwnerUpdated",
    "_indexOffset",
    "RENDER_OBJECT_OWNER_UPDATED",
    "_updateIndexData",
    "_overflow",
    "_numTriangles",
    "_indexData",
    "_updateVertexData",
    "_concatenateArrays",
    "VERTEX_DATA",
    "invalidateGeometry",
    "invalidateIndexData",
    "invalidateVertexData",
    "_iFillIndexData",
    "_updateGeometry",
    "_subGeometry",
    "concatenateArrays",
    "awayjs-core/lib/data/SubGeometryBase",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-stagegl/lib/pool/IndexDataPool",
    "_renderablePool",
    "_materialRenderObjectPool",
    "_skyboxRenderObjectPool",
    "_depthRenderObjectPool",
    "_distanceRenderObjectPool",
    "_iAddRenderable",
    "getMaterialRenderObject",
    "getSkyboxRenderObject",
    "_iRemoveRenderable",
    "disposePool",
    "pools",
    "_pools",
    "_renderer",
    "_pUpdatePool",
    "_lineSegmentRenderablePool",
    "_triangleSubMeshRenderablePool",
    "_lineSubMeshRenderablePool",
    "_curveSubMeshRenderablePool",
    "applyBillboard",
    "applyLineSegment",
    "applyTriangleSubMesh",
    "triangleSubMesh",
    "applyCurveSubMesh",
    "curveSubMesh",
    "applyLineSubMesh",
    "lineSubMesh",
    "skybox",
    "_vertexArray",
    "_geometry",
    "FLOAT_1",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Mesh",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToMeshes",
    "meshes",
    "_toDispose",
    "_geomVOs",
    "destMesh",
    "subIdx",
    "oldGeom",
    "destGeom",
    "useSubMaterials",
    "sub",
    "vertices",
    "tangents",
    "addSubGeometry",
    "m",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "pd",
    "nd",
    "td",
    "ud",
    "getSubGeomData",
    "transformVectors",
    "deltaTransformVectors",
    "GeometryVO",
    "object",
    "child",
    "numChildren",
    "getChildAt",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform",
    "ParticleGeometryTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper",
    "ParticleGeometryHelper",
    "generateGeometry",
    "geometries",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "sourceSubGeometries",
    "numSubGeometries",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGeometryTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "particleGeometry",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "copyRawDataFrom",
    "inputReg",
    "mipmaps",
    "uvReg",
    "forceWrap",
    "wrap",
    "getTexCubeSampleCode",
    "COMPRESSED",
    "COMPRESSED_ALPHA"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,yCAAA,SAAAjB,EAAAkB,EAAAJ,GCCA,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCLtB,IAAOG,GAAQ5B,EAAgB,gCAE/B,IAAO6B,GAAQ7B,EAAgB,gCAC/B,IAAO8B,GAAa9B,EAAc,yCAelC,IAAO+B,GAAoB/B,EAAa,+CACxC,IAAOgC,GAAkBhC,EAAa,6CAGtC,IAAOiC,GAAajC,EAAc,sCAClC,IAAOkC,GAAgBlC,EAAc,yCACrC,IAAOmC,GAAgBnC,EAAc,yCACrC,IAAOoC,GAAYpC,EAAe,0CAOlC,IAAOqC,GAAkBrC,EAAa,gDACtC,IAAOsC,GAAgBtC,EAAc,8CACrC,IAAOuC,GAAgBvC,EAAc,kDDTrC,ICkBMwC,GAAe,SAAAC,GAAStB,EAAxBqB,EAAeC,EAkFpB,SAlFKD,GAkFOE,EAA6CC,GAA7C,GAAAD,QAAA,GAA2C,CAA3CA,EAAA,KAA6C,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAExDF,EAAA1B,KAAAK,KAAMsB,EAAmBC,EA7ElBvB,MAAAwB,kBAA6B,GAAIhB,EA+ExC,IAAIR,KAAKyB,QAAU,EAClBzB,KAAK0B,MAAQC,OAAOC,eAEpB5B,MAAK6B,mBAAmBC,UAAY9B,KAAKyB,MAE1C,IAAIzB,KAAK+B,SAAW,EACnB/B,KAAKgC,OAASL,OAAOM,gBAErBjC,MAAK6B,mBAAmBK,WAAalC,KAAK+B,QAhF5CI,OAAAC,eAAWhB,EAAAb,UAAA,aDTJ8B,ICSP,WAEC,MAAOrC,MAAKsC,YDRNC,ICWP,SAAqBC,GAEpB,GAAIxC,KAAKsC,YAAcE,EACtB,MAEDxC,MAAKsC,WAAaE,CAElBxC,MAAKyC,oBAAsB,MDZrBC,WAAY,KACZC,aAAc,MCiBrBR,QAAAC,eAAWhB,EAAAb,UAAA,gBDXJ8B,ICWP,WAEC,MAAOrC,MAAK4C,eDVNL,ICaP,SAAwBC,GAEvBxC,KAAK4C,cAAgBJ,GDZfE,WAAY,KACZC,aAAc,MCkBrBR,QAAAC,eAAWhB,EAAAb,UAAA,aDXJ8B,ICWP,WAEC,MAAOrC,MAAK6C,mBAAoB7C,KAAK6C,mBAAmBC,QAAU,MDV5DP,ICYP,SAAqBC,GAEpB,GAAIA,GAASA,EAAM5C,QAAU,EAC5B4C,EAAQ,IAET,IAAIxC,KAAK6C,qBAAuBL,EAAO,CACtCxC,KAAK6C,mBAAmBE,SACxB/C,MAAK6C,mBAAqB,SACpB,KAAK7C,KAAK6C,oBAAsBL,EAAO,CAC7CxC,KAAK6C,mBAAqB,GAAI9B,GAAiBf,KAAKgD,QACpDhD,MAAK6C,mBAAmBC,QAAUN,EAGnC,GAAIxC,KAAK6C,mBAAoB,CAC5B7C,KAAK6C,mBAAmBC,QAAUN,CAClCxC,MAAKiD,qBAAuBjD,KAAK6C,mBAAmBK,uBAC9C,CACNlD,KAAKiD,qBAAuB,KAE5B,IAAIjD,KAAKmD,cAAe,CACvBnD,KAAKmD,cAAcJ,SACnB/C,MAAKmD,cAAgB,QDVjBT,WAAY,KACZC,aAAc,MCmCdvB,GAAAb,UAAA6C,OAAP,SAAcC,GAEbhC,EAAAd,UAAM6C,OAAMzD,KAAAK,KAACqD,EAEb,KAAKrD,KAAKgD,QAAQM,sBAAuB,CACxCtD,KAAKyC,oBAAsB,IAC3B,QAGD,GAAIzC,KAAKyC,oBACRzC,KAAKuD,mBAEN,IAAIvD,KAAKwD,eAAiBxD,KAAKyD,UAC9BzD,KAAKyD,UAAUC,MAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG9C,EAAmB+C,MAE3D,IAAI3D,KAAK6C,mBAAoB,CAC5B7C,KAAK4D,cAAgB5D,KAAK6B,mBAAmB+B,aAC7C5D,MAAK6D,cAAgB7D,KAAK6B,mBAAmBgC,kBACvC,CACN7D,KAAK4D,cAAgB,CACrB5D,MAAK6D,cAAgB,EAGtB,GAAI7D,KAAKiD,qBACRjD,KAAK8D,2BAA6CT,EAEnD,IAAIrD,KAAK4C,cACR5C,KAAK+D,oBAAsCV,EAE5C,IAAIrD,KAAK6C,oBAAsB7C,KAAKyD,UAAW,MAIxC,CAEN,GAAIzD,KAAKwD,cACRxD,KAAKgE,SAASX,EAAiB,KAAMrD,KAAKiE,mBAE1CjE,MAAKgE,SAASX,GAGhBhC,EAAAd,UAAM6C,OAAMzD,KAAAK,KAACqD,EAEb,KAAKrD,KAAKwD,eAAiBxD,KAAKyD,UAC/BzD,KAAKyD,UAAUS,SAGhBlE,MAAKgD,QAAQmB,YAAc,MAGrB/C,GAAAb,UAAA6D,eAAP,SAAsBf,EAAiCgB,EAA2BC,EAA8BC,GAAzD,GAAAF,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAE/GvE,KAAKwE,aAAanB,EAElBhC,GAAAd,UAAM6D,eAAczE,KAAAK,KAACqD,EAAiBgB,EAAQC,EAAaC,GAGpDnD,GAAAb,UAAAiE,aAAR,SAAqBnB,GAEpB,GAAIoB,GAAoCpB,EAAgBqB,iBACxD,IAAIC,GAAgCtB,EAAgBsB,WACpD,IAAIC,GAAYvF,CAChB,IAAIwF,EACJ,IAAIC,EAEJF,GAAMH,EAAU7E,MAChB,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBwF,EAAQJ,EAAUpF,EAElByF,GAAeD,EAAMC,YAErB,IAAID,EAAME,eAAiBD,EAAaE,mBAAqBF,EAAaG,kBACzEH,EAAaI,gBAAgB7B,EAAiBrD,KAAKmF,iBAGrDP,EAAMD,EAAY/E,MAClB,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBwF,EAAQF,EAAYtF,EAEpByF,GAAeD,EAAMC,YAErB,IAAID,EAAME,eAAiBD,EAAaE,mBAAqBF,EAAaG,kBACzEH,EAAaI,gBAAgB7B,EAAiBrD,KAAKoF,qBAO/ChE,GAAAb,UAAA8E,MAAP,SAAahC,GAEZ,GAAIA,EAAgBiC,OAAQ,CAC3BtF,KAAKyD,UAAU8B,aAAa,MAAO5E,EAAqB6E,OAExDxF,MAAKyF,WAAWpC,GAGjBhC,EAAAd,UAAM8E,MAAK1F,KAAAK,KAACqD,GAGNjC,GAAAb,UAAAmF,kBAAP,SAAyBC,EAA2BC,GAEnD,MAA0BA,GAAkBC,gBAAgBF,EAAWG,OAQhE1E,GAAAb,UAAAkF,WAAR,SAAmBpC,GAElB,GAAIiC,GAA6CtF,KAAK+F,sBAAsBC,QAAQ3C,EAAgBiC,OAEpG,IAAIW,GAAgB5C,EAAgB4C,MAEpCjG,MAAKkG,uBAAuBD,EAE5B,IAAIE,GAAgCb,EAAOa,aAAenG,KAAK0F,kBAAkBJ,EAAQA,EAAOM,kBAChG,IAAIQ,GAAsBD,EAAaE,OAAO,EAE9CrG,MAAKsG,aAAahB,EAAQc,EAAMH,EAChCX,GAAOtB,SAASoC,EAAMH,EAAQjG,KAAKwB,kBACnCxB,MAAKuG,eAAejB,EAAQc,GAGrBhF,GAAAb,UAAA2F,uBAAR,SAA+BD,GAE9B,GAAIO,GAAgB,GAAI/F,EAExBT,MAAKwB,kBAAkBiF,SAASzG,KAAK0G,0BACrC1G,MAAKwB,kBAAkBmF,UAAU,EAAGH,EAEpC,IAAII,GAAkBX,EAAOY,aAE7B,IAAIC,GAAYN,EAAKO,CACrB,IAAIC,GAAYR,EAAKS,CACrB,IAAIC,GAAYV,EAAKW,CACrB,IAAIC,KAAcZ,EAAKO,EAAEH,EAAOG,EAAIP,EAAKS,EAAEL,EAAOK,EAAIT,EAAKW,EAAEP,EAAOO,EAAIE,KAAKC,KAAKR,EAAGA,EAAKE,EAAGA,EAAKE,EAAGA,GAErG,IAAIK,GAAeT,GAAM,EAAG,GAAK,CACjC,IAAIU,GAAeR,GAAM,EAAG,GAAK,CAEjC,IAAI7G,GAAa,GAAIM,GAAS8G,EAAOC,EAAO,EAAG,EAE/C,IAAIC,GAAmBzH,KAAKwB,kBAAkBkG,OAC9CD,GAAQE,QAER,IAAIC,GAAaH,EAAQI,gBAAgB1H,EAEzCH,MAAKwB,kBAAkBmF,UAAU,EAAGxG,EAEpC,IAAIf,IAAYwI,EAAEb,EAAE5G,EAAE4G,EAAIa,EAAEX,EAAE9G,EAAE8G,EAAIW,EAAET,EAAEhH,EAAEgH,EAAIS,EAAEE,EAAE3H,EAAE2H,IAAIhB,EAAGc,EAAEb,EAAIC,EAAGY,EAAEX,EAAIC,EAAGU,EAAET,EAAIC,EAAGQ,EAAEE,EAExF9H,MAAKwB,kBAAkBuG,YAAY,EAAG,GAAItH,GAASqG,EAAG1H,EAAG4H,EAAG5H,EAAG8H,EAAG9H,EAAGgI,EAAGhI,IAGlEgC,GAAAb,UAAAwC,QAAP,WAEC,IAAK/C,KAAKwD,cACTxD,KAAKgD,QAAQD,SAEd/C,MAAK+F,sBAAsBhD,SAC3B/C,MAAK+F,sBAAwB,IAE7B/F,MAAK6B,mBAAmBkB,SACxB/C,MAAK6B,mBAAqB,IAE1B7B,MAAKmF,gBAAgBpC,SACrB/C,MAAKoF,mBAAmBrC,SACxB/C,MAAKmF,gBAAkB,IACvBnF,MAAKoF,mBAAqB,IAE1BpF,MAAKmD,cAAgB,IAErB9B,GAAAd,UAAMwC,QAAOpD,KAAAK,MAOPoB,GAAAb,UAAAwD,oBAAP,SAA2BV,GAE1BrD,KAAKmF,gBAAgB6C,aAAe,IAEpC,IAAIhI,KAAK6C,mBAAoB,MAItB,CACN7C,KAAKmF,gBAAgBvB,cAAgB,CACrC5D,MAAKmF,gBAAgBtB,cAAgB,CACrC7D,MAAKmF,gBAAgBnB,SAASX,GAG/BrD,KAAKmF,gBAAgB6C,aAAe,MAO9B5G,GAAAb,UAAAuD,2BAAP,SAAkCT,GAEjC,GAAIrD,KAAKiI,wBAA0BjI,KAAKmD,cACvCnD,KAAKkI,iBAA8BlI,KAAKgD,QAAQmF,QAEjDnI,MAAKmF,gBAAgBvB,cAAgB5D,KAAK6B,mBAAmB+B,aAC7D5D,MAAKmF,gBAAgBtB,cAAgB7D,KAAK6B,mBAAmBgC,aAC7D7D,MAAKmF,gBAAgBnB,SAASX,EAAiBrD,KAAKmD,eAO9C/B,GAAAb,UAAAgD,kBAAP,WAKC,GAAIvD,KAAKgD,QAAQmF,UAAYnI,KAAKwD,cAAe,CAChD,GAAIxD,KAAKyB,QAAUzB,KAAK+B,QAAS,CAChC/B,KAAKgD,QAAQoF,oBAAoBpI,KAAKyB,OAAQzB,KAAK+B,QAAS/B,KAAKsC,WAAY,KAC7EtC,MAAKyC,oBAAsB,QAKvBrB,GAAAb,UAAA8H,UAAP,SAAiB7F,GAEhBnB,EAAAd,UAAM8H,UAAS1I,KAAAK,KAACwC,EAEhB,IAAIxC,KAAKgD,QAAS,CACjBhD,KAAK6B,mBAAqBV,EAAiBmH,YAAYtI,KAAKgD,QAE5DhD,MAAKmF,gBAAkB,GAAItE,GAAcb,KAAKuI,oBAAqBvI,KAAKgD,QACxEhD,MAAKoF,mBAAqB,GAAItE,GAAiBd,KAAKuI,oBAAqBvI,KAAKgD,QAE9EhD,MAAK+F,sBAAwB9E,EAAmBuH,QAAQtH,EAAkBlB,KAAKgD,UAOzE5B,GAAAb,UAAA2H,iBAAR,SAAyBC,GAExBnI,KAAKiI,sBAAwB,KAE7B,IAAIjI,KAAKmD,cACRnD,KAAKmD,cAAcJ,SAEpB/C,MAAKmD,cAAgB,GAAIzC,GAAcV,KAAK6B,mBAAmB4G,aAAczI,KAAK6B,mBAAmB6G,eAEvG,OAAAtH,IAjW8BJ,EAmWLlB,GAAAJ,QAAhB0B,IDzGNuH,gCAAgCC,UAAUC,gCAAgCD,UAAUE,yCAAyCF,UAAUG,sCAAsC,sCAAsCC,yCAAyC,yCAAyCC,yCAAyC,yCAAyCC,0CAA0C,0CAA0CC,kDAAkD,kDAAkDC,gDAAgD,gDAAgDC,8CAA8C,8CAA8CC,6CAA6CV,UAAUW,+CAA+CX,YAAYG,uCAAuC,SAASnK,EAAQkB,EAAOJ,GAC/5B,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GEhStB,IAAOW,GAAYpC,EAAe,0CFwSlC,IE5RMiC,GAAa,SAAAQ,GAAStB,EAAtBc,EAAaQ,EAOlB,SAPKR,GAOOS,EAA6CC,GAA7C,GAAAD,QAAA,GAA2C,CAA3CA,EAAA,KAA6C,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAExDF,EAAA1B,KAAAK,KAAMsB,EAAmBC,EAEzBvB,MAAKwJ,cAAgB,CACrBxJ,MAAKyJ,cAAgB,CACrBzJ,MAAK0J,cAAgB,EAIf7I,EAAAN,UAAAmF,kBAAP,SAAyBC,EAA2BC,GAEnD,MAAOD,GAAWG,MAAM6D,qBAAqB/D,GAE/C,OAAA/E,IArB4BG,EAuBLlB,GAAAJ,QAAdmB,IF4RNqI,0CAA0C,4CAA4CF,0CAA0C,SAASpK,EAAQkB,EAAOJ,GAC3J,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GGpUtB,IAAOW,GAAYpC,EAAe,0CH4UlC,IGhUMkC,GAAgB,SAAAO,GAAStB,EAAzBe,EAAgBO,EAOrB,SAPKP,GAOOQ,EAA6CC,GAA7C,GAAAD,QAAA,GAA2C,CAA3CA,EAAA,KAA6C,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAExDF,EAAA1B,KAAAK,KAAMsB,EAAmBC,EAEzBvB,MAAKwJ,cAAgB,CACrBxJ,MAAKyJ,cAAgB,CACrBzJ,MAAK0J,cAAgB,EAIf5I,EAAAP,UAAAmF,kBAAP,SAAyBC,EAA2BC,GAEnD,MAAOD,GAAWG,MAAM8D,wBAAwBhE,GAElD,OAAA9E,IArB+BE,EAuB/BlB,GAA0BJ,QAAjBoB,IHgUNoI,0CAA0C,4CAA4CD,0CAA0C,SAASrK,EAAQkB,EAAOJ,GI7W3J,GAAOmK,GAAKjL,EAAgB,+BAK5B,IAAOkL,GAAoBlL,EAAa,+CACxC,IAAOmL,GAA2BnL,EAAW,sDAM7C,IAAOuC,GAAgBvC,EAAc,kDJyWrC,IIlWMmC,GAAgB,WAYrB,QAZKA,GAYOQ,GAZb,GAAAyI,GAAAhK,IASSA,MAAAiK,oBAA8B,IAKrCjK,MAAKkK,qBAAuB,SAACC,GAAgB,MAAAH,GAAKI,YAAYD,GAE9DnK,MAAKqK,OAAS9I,CACdvB,MAAKsK,YAAcnJ,EAAiBmH,YAAY/G,EAChDvB,MAAKsK,YAAYC,iBAAiBV,EAAMW,OAAQxK,KAAKkK,sBAI9CnJ,EAAAR,UAAA6J,YAAR,SAAoBD,GAEnBnK,KAAKiK,oBAAsB,KAG5B9H,QAAAC,eAAWrB,EAAAR,UAAA,sBJoVJ8B,IIpVP,WAEC,MAAOrC,MAAKyK,qBJqVN/H,WAAY,KACZC,aAAc,MInVd5B,GAAAR,UAAAmK,oBAAP,SAA2BnJ,GAE1B,GAAIvB,KAAK2K,oBAAqB,CAE7B3K,KAAK4K,kBAAkBrJ,GAIxB,MAAOvB,MAAK6K,kBAGb1I,QAAAC,eAAWrB,EAAAR,UAAA,WJiVJ8B,IIjVP,WAEC,MAAOrC,MAAK8K,UJkVNvI,II/UP,SAAmBC,GAElBxC,KAAK8K,SAAWtI,CAEhBxC,MAAK2K,oBAAsB,IAE3B3K,MAAKyK,oBAAsB,KAE3B,KAAKzK,KAAK8K,SAAU,CAEnB,OAID,IAAK,GAAIzL,GAAW,EAAGA,EAAIW,KAAK8K,SAASlL,SAAUP,EAAG,CJ2UxC,GItUTJ,GAAQe,KAAK8K,SAASzL,EAC1B,IAAIa,GAAwBjB,EAAEiE,oBAAsB,KAAQ,MAAQjE,EAAEiE,kBAEtElD,MAAKyK,oBAAsBzK,KAAKyK,qBAAuBvK,EAIxDF,KAAKiK,oBAAsB,MJqUrBvH,WAAY,KACZC,aAAc,MIlUb5B,GAAAR,UAAAqK,kBAAR,SAA0BrJ,GAEzB,GAAIqD,EAEJ,IAAI5E,KAAKiK,oBAAqB,CAE7BjK,KAAK+K,oBAIN,IAAK/K,KAAK8K,SAAU,CACnB9K,KAAKgL,OAAS,IACd,QAGDhL,KAAKgL,OAAS,GAAIC,MAElBrG,GAAM5E,KAAK8K,SAASlL,OAAS,CAE7B,IAAIsL,EAEJ,KAAK,GAAI7L,GAAW,EAAGA,GAAKuF,IAAOvF,EAAG,CAGrC6L,EAASlL,KAAK8K,SAASzL,EAKvB6L,GAAOC,iBAAiB9L,GAAKuF,EAAK,KAAO5E,KAAK8K,SAASzL,EAAI,GAAGqL,oBAAoBnJ,GAAQA,EAE1FvB,MAAKgL,OAAShL,KAAKgL,OAAOI,OAAOF,EAAOG,OAIzCrL,KAAK6K,kBAAoB7K,KAAK8K,SAAS,GAAGJ,oBAAoBnJ,GAIxDR,GAAAR,UAAA6C,OAAP,SAAc7B,EAAa0E,EAAeqF,GAEzC,GAAI1G,EACJ,IAAIvF,EACJ,IAAIkM,EACJ,IAAIpD,GAAkC5G,EAAM4G,OAE5C,IAAIqD,GAA2BxL,KAAKsK,YAAYkB,WAEhD,IAAIC,GAA6BzL,KAAKsK,YAAYoB,2BAElD,KAAK1L,KAAK8K,SAAU,CACnB,OAGD,GAAI9K,KAAKiK,oBAAqB,CAC7BjK,KAAK+K,oBAGN,GAAI/K,KAAK2K,oBAAqB,CAC7B3K,KAAK4K,kBAAkBrJ,GAGxBqD,EAAM5E,KAAK8K,SAASlL,MAEpB,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBW,KAAK8K,SAASzL,GAAGsM,OAAOpK,EAAO0E,GAGhCrB,EAAM5E,KAAKgL,OAAOpL,MAElB,IAAIgF,EAAM,EAAG,CACZuD,EAAQyD,kBAAkB,EAAGH,EAAc,EAAG1B,EAA4B8B,QAC1E1D,GAAQyD,kBAAkB,EAAGH,EAAc,EAAG1B,EAA4B8B,SAG3E,IAAKxM,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CAEzBkM,EAAOvL,KAAKgL,OAAO3L,EAInB,KAAKkM,EAAKlH,OAAQ,CAEjB9C,EAAM+C,YAAc,IACpBmH,GAAezL,KAAKsK,YAAYwB,0BAChC3D,GAAQyD,kBAAkB,EAAGH,EAAc,EAAG1B,EAA4B8B,QAC1E1D,GAAQyD,kBAAkB,EAAGH,EAAc,EAAG1B,EAA4B8B,SAI3E1D,EAAQ4D,aAAa,EAAGR,EAAKb,oBAAoBnJ,GACjD4G,GAAQ6D,WAAWT,EAAKU,WAAW1K,GACnC4G,GAAQzE,MAAM,EAAK,EAAK,EAAK,EAE7B6H,GAAKW,SAAS3K,EAAO0E,EAAQqF,EAE7BnD,GAAQgE,gBAAgBrC,EAAqBsC,IAAKtC,EAAqBuC,KACvElE,GAAQmE,cAAcd,EAAa,EAAG,EAEtCD,GAAKgB,WAAWhL,GAGjB4G,EAAQ4D,aAAa,EAAG,KACxB5D,GAAQyD,kBAAkB,EAAG,KAC7BzD,GAAQyD,kBAAkB,EAAG,MAGtB7K,GAAAR,UAAAwK,kBAAR,WAEC,IAAK,GAAI1L,GAAW,EAAGA,EAAIW,KAAK8K,SAASlL,SAAUP,EAAG,CACrDW,KAAK8K,SAASzL,GAAGoJ,aAAezI,KAAKsK,YAAY7B,YACjDzI,MAAK8K,SAASzL,GAAGqJ,cAAgB1I,KAAKsK,YAAY5B,cAGnD1I,KAAKiK,oBAAsB,KAIrBlJ,GAAAR,UAAAwC,QAAP,WAEC/C,KAAKsK,YAAYkC,oBAAoB3C,EAAMW,OAAQxK,KAAKkK,qBACxDlK,MAAKsK,YAAc,IACnBtK,MAAKqK,OAAS,KAEhB,OAAAtJ,KAEAjB,GAA0BJ,QAAjBqB,IJ2RN0L,+BAA+B7D,UAAUO,kDAAkD,kDAAkDuD,+CAA+C9D,UAAU+D,sDAAsD/D,YAAYgE,oDAAoD,SAAShO,EAAQkB,EAAOJ,GACvV,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GK9ftB,IAAOwM,GAASjO,EAAe,oCAC/B,IAAOkO,GAAmBlO,EAAa,6CAMvC,IAAOmO,GAAiBnO,EAAa,iDLigBrC,IKxfMoO,GAAgB,SAAA3L,GAAStB,EAAzBiN,EAAgB3L,EASrB,SATK2L,KAWJ3L,EAAA1B,KAAAK,KANOA,MAAAiN,YAAuC,GAAIhC,MAC3CjL,MAAAkN,gBAAgC,GAAIjC,MACpCjL,MAAAmN,qBAA8B,GAAIhL,QAcnC6K,EAAAzM,UAAA6M,cAAP,SAAqBC,EAAuBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE3C,GAAIjO,GAAoB,CACxB,IAAIkO,EAEJ,OAAO,KAAM,CACZA,EAAM,KAAOlO,CACb,IAAIgO,EAAQG,QAAQD,KAAS,GAAKD,GAAkBC,EACnD,MAAOA,KACNlO,EAIH,MAAO,MAQR8C,QAAAC,eAAW4K,EAAAzM,UAAA,WLgfJ8B,IKhfP,WAEC,MAAOrC,MAAKyN,ULifN/K,WAAY,KACZC,aAAc,MKzedqK,GAAAzM,UAAAmN,sBAAP,WAEC1N,KAAKyN,SAAW,MAGVT,GAAAzM,UAAAoN,uBAAP,WAEC3N,KAAKyN,SAAW,KAOVT,GAAAzM,UAAAqN,kBAAP,SAAyBC,GAExB,KAAM,IAAIf,GAMJE,GAAAzM,UAAA2L,SAAP,SAAgB2B,EAA+BtM,GAE9C,KAAM,IAAIuL,GAMJE,GAAAzM,UAAAgM,WAAP,SAAkBsB,EAA+BtM,GAEhD,KAAM,IAAIuL,GAMJE,GAAAzM,UAAAuN,oBAAP,SAA2BD,EAA+BE,GAEzD,KAAM,IAAIjB,GAMJE,GAAAzM,UAAAyN,cAAP,SAAqBH,GAEpB,KAAM,IAAIf,GAMJE,GAAAzM,UAAA0N,aAAP,SAAoBJ,GAEnB,KAAM,IAAIf,GAMX3K,QAAAC,eAAW4K,EAAAzM,UAAA,aLieJ8B,IKjeP,WAEC,MAAO2K,GAAiBkB,WLkelBxL,WAAY,KACZC,aAAc,MK7drBR,QAAAC,eAAW4K,EAAAzM,UAAA,cLmeJ8B,IKneP,WAEC,MAAOrC,MAAKiN,aLoeNvK,WAAY,KACZC,aAAc,MK/drBR,QAAAC,eAAW4K,EAAAzM,UAAA,kBLqeJ8B,IKreP,WAEC,MAAOrC,MAAKkN,iBLseNxK,WAAY,KACZC,aAAc,MK/ddqK,GAAAzM,UAAA4N,aAAP,SAAoBC,GAEnB,MAAOpO,MAAKmN,qBAAqBiB,IAAS,KAQpCpB,GAAAzM,UAAA8N,aAAP,SAAoBD,GAEnB,MAAOpO,MAAKmN,qBAAqBiB,GAS3BpB,GAAAzM,UAAA+N,aAAP,SAAoBC,GAEnB,GAAIvO,KAAKmN,qBAAqBoB,EAAKH,MAClC,KAAM,IAAIrB,GAAkB,mBAAqBwB,EAAKH,KAAO,8BAE9DpO,MAAKmN,qBAAqBoB,EAAKH,MAAQG,CAEvCvO,MAAKiN,YAAYuB,KAAKD,EAEtBvO,MAAKkN,gBAAgBsB,KAAKD,EAAKH,MAMzBpB,GAAAzM,UAAAwC,QAAP,YA/KciK,GAAAkB,UAAmB,sBAkLlC,OAAAlB,IApL+BH,EAsLL/M,GAAAJ,QAAjBsN,ILgeNyB,6CAA6C7F,UAAU8F,oCAAoC9F,UAAU+F,iDAAiD,mDAAmDC,gDAAgD,SAAShQ,EAAQkB,EAAOJ,GACpR,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM3qBtB,IAAOwM,GAASjO,EAAe,oCAC/B,IAAOkO,GAAmBlO,EAAa,6CACvC,IAAOiQ,GAAqBjQ,EAAY,8CACxC,IAAOkQ,GAAQlQ,EAAgB,iCAc/B,IAAOmQ,GAAanQ,EAAc,6CNwrBlC,IM3pBMoQ,GAAY,SAAA3N,GAAStB,EAArBiP,EAAY3N,EAgJjB,SAhJK2N,GAgJOC,GAEX5N,EAAA1B,KAAAK,KA5IOA,MAAAkP,YAAsB,IAItBlP,MAAAmP,MAAuB,CACvBnP,MAAAoP,eAAwB,CAGzBpP,MAAAqP,SAAuB,GAAIpE,MAI3BjL,MAAAsP,eAAwB,CAEvBtP,MAAAuP,iBAA0B,GAAIpN,OAO/BnC,MAAAwP,eAAyB,IAyH/BxP,MAAKyP,eAAiBR,CAEtBjP,MAAK0P,aAAe,GAAIb,GAAsB7O,KAAK2P,aAAc3P,MAzH3DgP,EAAAzO,UAAAqP,kBAAP,SAAyBrB,GAExB,GAAIsB,GAAgBtB,EAAKuB,UACzB,IAAIC,GAAaxB,EAAKyB,EAEtB,IAAIhQ,KAAKuP,iBAAiBQ,IAAQ,KACjC/P,KAAKuP,iBAAiBQ,GAAO,GAAIF,GAAU7P,KAAMuO,EAElD,OAAOvO,MAAKuP,iBAAiBQ,GAGvBf,GAAAzO,UAAA0P,wBAAP,SAA+B7B,GAE9B,MAAOpO,MAAK4P,kBAAkB5P,KAAKyP,eAAepB,aAAaD,IAShEjM,QAAAC,eAAW4M,EAAAzO,UAAA,gBNipBJ8B,IMjpBP,WAEC,MAAOrC,MAAKsP,gBNkpBN5M,WAAY,KACZC,aAAc,MM7oBrBR,QAAAC,eAAW4M,EAAAzO,UAAA,gBNmpBJ8B,IMnpBP,WAEC,MAAOrC,MAAKyP,gBNopBN/M,WAAY,KACZC,aAAc,MM/oBrBR,QAAAC,eAAW4M,EAAAzO,UAAA,eNqpBJ8B,IMrpBP,WAEC,MAAOrC,MAAKkQ,eNspBNxN,WAAY,KACZC,aAAc,MMjpBrBR,QAAAC,eAAW4M,EAAAzO,UAAA,mBNupBJ8B,IMvpBP,WAEC,MAAOrC,MAAKyP,eAAepB,aAAarO,KAAKmQ,wBNwpBvCzN,WAAY,KACZC,aAAc,MMnpBrBR,QAAAC,eAAW4M,EAAAzO,UAAA,uBNypBJ8B,IMzpBP,WAEC,MAAOrC,MAAKmQ,uBN0pBNzN,WAAY,KACZC,aAAc,MMhpBrBR,QAAAC,eAAW4M,EAAAzO,UAAA,cN2pBJ8B,IM3pBP,WAEC,MAAOrC,MAAKkP,aN4pBN3M,IMzpBP,SAAsBC,GAErB,GAAIxC,KAAKkP,aAAe1M,EACvB,MAEDxC,MAAKkP,YAAc1M,CAEnB,IAAIxC,KAAKkP,YACRlP,KAAKoQ,YACLpQ,MAAKqQ,QNypBA3N,WAAY,KACZC,aAAc,MMppBrBR,QAAAC,eAAW4M,EAAAzO,UAAA,QN0pBJ8B,IM1pBP,WAEC,MAAOrC,MAAKmP,ON2pBN5M,IMxpBP,SAAgBC,GAEf,GAAIxC,KAAKmP,OAAS3M,EACjB,MAEDxC,MAAK2L,OAAOnJ,INwpBNE,WAAY,KACZC,aAAc,MMjpBdqM,GAAAzO,UAAA+P,MAAP,SAAa9N,GAEZxC,KAAKkQ,cAAcI,MAAM9N,GAoB1BL,QAAAC,eAAW4M,EAAAzO,UAAA,iBNyoBJ8B,IMzoBP,WAEC,MAAOrC,MAAKoP,gBN0oBN7M,IMvoBP,SAAyBC,GAExBxC,KAAKoP,eAAiB5M,GNwoBhBE,WAAY,KACZC,aAAc,MMtoBdqM,GAAAzO,UAAAgQ,eAAP,SAAsB1C,EAA+BlI,EAA2BpE,EAAa0E,EAAeuK,EAAqCC,GAEhJ,KAAM,IAAI3D,GAMJkC,GAAAzO,UAAA6P,MAAP,WAEC,GAAIpQ,KAAK0Q,aAAe1Q,KAAKkP,YAC5B,MAEDlP,MAAKmP,MAAQnP,KAAKsP,eAAiBR,GAEnC9O,MAAK0Q,WAAa,IAElB1Q,MAAK0P,aAAaU,OAElB,KAAKpQ,KAAK2Q,iBAAiB5B,EAAc6B,OACxC,MAED,IAAI5Q,KAAK6Q,aAAe,KACvB7Q,KAAK6Q,YAAc,GAAI9B,GAAcA,EAAc6B,MAAO5Q,KAE3DA,MAAK8Q,cAAc9Q,KAAK6Q,aAUlB7B,GAAAzO,UAAA8P,KAAP,WAEC,IAAKrQ,KAAK0Q,WACT,MAED1Q,MAAK0Q,WAAa,KAElB1Q,MAAK0P,aAAaW,MAElB,KAAKrQ,KAAK2Q,iBAAiB5B,EAAcgC,MACxC,MAED,IAAI/Q,KAAKgR,YAAc,KACtBhR,KAAKgR,WAAa,GAAIjC,GAAcA,EAAcgC,KAAM/Q,KAEzDA,MAAK8Q,cAAc9Q,KAAKgR,YAUlBhC,GAAAzO,UAAAoL,OAAP,SAAcsF,GAEb,GAAIC,IAAaD,EAAOjR,KAAKmP,OAAOnP,KAAKmR,aAEzCnR,MAAKoR,kBAAkBF,EAEvBlR,MAAKmP,MAAQ8B,EAGPjC,GAAAzO,UAAA8Q,MAAP,SAAajD,EAAakD,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzBtR,KAAK4P,kBAAkB5P,KAAKyP,eAAepB,aAAaD,IAAOkD,OAAOA,EAAStR,KAAKsP,gBAQ9EN,GAAAzO,UAAAgR,SAAP,SAAgBC,GAEfxR,KAAKqP,SAASb,KAAKgD,GAQbxC,GAAAzO,UAAAkR,YAAP,SAAmBD,GAElBxR,KAAKqP,SAASqC,OAAO1R,KAAKqP,SAAS7B,QAAQgE,GAAO,GAQ5CxC,GAAAzO,UAAA6Q,kBAAP,SAAyBF,GAExBlR,KAAKsP,gBAAkB4B,CAEvBlR,MAAKkQ,cAAcvE,OAAO3L,KAAKsP,eAE/B,IAAItP,KAAKwP,eACRxP,KAAK2R,qBAMC3C,GAAAzO,UAAAoP,aAAR,SAAqBxF,GAAA,GAAAA,QAAA,GAAkB,CAAlBA,EAAA,KAEpBnK,KAAK2L,OAAOmD,KAGLE,GAAAzO,UAAAoR,mBAAR,WAEC,GAAIC,GAAiB5R,KAAKkQ,cAAc2B,aACxC,IAAIC,GAAcF,EAAMhS,MACxB,IAAIgF,EACJ,IAAIkN,EAAO,EAAG,CACblN,EAAM5E,KAAKqP,SAASzP,MACpB,KAAK,GAAIP,GAAoB,EAAGA,EAAIuF,IAAOvF,EAC1CW,KAAKqP,SAAShQ,GAAG0S,eAAeH,EAAOE,IASnC9C,GAAAzO,UAAAyR,mBAAP,WAEC,GAAIhS,KAAK2Q,iBAAiB5B,EAAckD,gBAAiB,CACxD,GAAIjS,KAAKkS,aAAe,KACvBlS,KAAKkS,YAAc,GAAInD,GAAcA,EAAckD,eAAgBjS,KAEpEA,MAAK8Q,cAAc9Q,KAAKkS,cAOnBlD,GAAAzO,UAAAmH,MAAP,WAEC,KAAM,IAAIoF,GAMJkC,GAAAzO,UAAAwC,QAAP,YAOOiM,GAAAzO,UAAA4R,qBAAP,SAA4BtE,GAE3B,KAAM,IAAIf,GAMX3K,QAAAC,eAAW4M,EAAAzO,UAAA,aN+lBJ8B,IM/lBP,WAEC,MAAO2M,GAAad,WNgmBdxL,WAAY,KACZC,aAAc,MM7lBdqM,GAAAzO,UAAA6R,yBAAP,SAAgCzM,EAAsC0M,GAGrE,MAAOA,GAvVMrD,GAAAd,UAAmB,kBAyVlC,OAAAc,IA3V2BnC,EA6V3B/M,GAAsBJ,QAAbsP,INkmBNP,6CAA6C7F,UAAU8F,oCAAoC9F,UAAU0J,8CAA8C1J,UAAU2J,iCAAiC3J,UAAU4J,6CAA6C,+CAA+CC,wDAAwD,SAAS7T,EAAQkB,EAAOJ,GACvX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GO1+BtB,IAAO2M,GAAgBpO,EAAe,mDAEtC,IAAO8T,GAAsB9T,EAAa,8DAC1C,IAAO+T,GAAoB/T,EAAc,4DACzC,IAAOgU,GAAqBhU,EAAa,6DACzC,IAAOiU,GAAkBjU,EAAc,0DACvC,IAAOkU,GAAsBlU,EAAa,8DAG1C,IAAOmU,GAAgBnU,EAAe,yDP++BtC,IOr+BMoU,GAAoB,SAAA3R,GAAStB,EAA7BiT,EAAoB3R,EAgEzB,SAhEK2R,GAgEOC,EAA8BC,EAA6BC,GAA3D,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEtE9R,EAAA1B,KAAAK,KAhDOA,MAAAoT,wBAAiC,GAAIjR,OACrCnC,MAAAqT,eAAyC,GAAIpI,MAC7CjL,MAAAsT,mBAA6C,GAAIrI,MACjDjL,MAAAuT,kBAA4C,GAAItI,MAChDjL,MAAAwT,qBAAsC,CA+C7CxT,MAAKsO,aAAatO,KAAKyT,UAAY,GAAIV,GAAiBE,EAAcC,EAAaC,IAMpFhR,OAAAC,eAAW4Q,EAAAzS,UAAA,iBPo7BJ8B,IOp7BP,WAEC,MAAOrC,MAAKqT,gBPq7BN3Q,WAAY,KACZC,aAAc,MOh7BdqQ,GAAAzS,UAAA+N,aAAP,SAAoBC,GAEnB,GAAIlP,EACJ,IAAIN,GAAwCwP,CAC5CxP,GAAE2U,0BAA0B1T,KAC5B,IAAIjB,EAAE4U,MAAQb,EAAuBc,aAAc,CAClD7U,EAAE8U,aAAe7T,KAAKwT,oBACtBxT,MAAKwT,sBAAwBzU,EAAE+U,UAC/B9T,MAAKuT,kBAAkB/E,KAAKzP,OACtB,IAAIA,EAAE4U,MAAQb,EAAuBiB,cAC3C/T,KAAKsT,mBAAmB9E,KAAKzP,EAE9B,KAAKM,EAAIW,KAAKqT,eAAezT,OAAS,EAAGP,GAAK,EAAGA,IAAK,CACrD,GAAIW,KAAKqT,eAAehU,GAAG2U,UAAYjV,EAAEiV,SACxC,MAGFhU,KAAKqT,eAAe3B,OAAOrS,EAAI,EAAG,EAAGN,EAErCsC,GAAAd,UAAM+N,aAAY3O,KAAAK,KAACuO,GAMbyE,GAAAzS,UAAA2L,SAAP,SAAgB2B,EAA+BtM,IAQxCyR,GAAAzS,UAAAgM,WAAP,SAAkBsB,EAA+BtM,IAY1CyR,GAAAzS,UAAAqN,kBAAP,SAAyBC,GAGxB7N,KAAKiU,yBAA2BpG,EAAaqG,sBAE7C,IAAIlU,KAAKiU,0BAA4B,KACpCjU,KAAKiU,yBAA2BpG,EAAaqG,uBAAyB,GAAIxB,GAAuB7E,EAAasG,QAG/GnU,MAAKiU,yBAAyBzD,qBAAuB3C,EAAauG,sBAClEpU,MAAKiU,yBAAyBI,uBAAyBxG,EAAayG,cACpEtU,MAAKiU,yBAAyBM,eAAiB1G,EAAa2G,eAC5DxU,MAAKiU,yBAAyBQ,uBAAyB5G,EAAa6G,wBACpE1U,MAAKiU,yBAAyBU,UAAY3U,KAAK2U,SAC/C3U,MAAKiU,yBAAyBW,aAAe5U,KAAK4U,YAClD5U,MAAKiU,yBAAyBY,aAAe7U,KAAK6U,YAClD7U,MAAKiU,yBAAyBa,gBAAkBjH,EAAakH,oBAC7D/U,MAAKiU,yBAAyBe,gBAAkBnH,EAAaoH,wBAC7DjV,MAAKiU,yBAAyBiB,sBAAwBrH,EAAasH,qBACnEnV,MAAKiU,yBAAyBmB,iBAAmBvH,EAAawH,eAC9DrV,MAAKiU,yBAAyBqB,gBAAkBtV,KAAKsV,eACrDtV,MAAKiU,yBAAyBsB,gBAAkBvV,KAAKuV,eACrDvV,MAAKiU,yBAAyB5C,OAE9B,IAAI7R,GAAc,EAElBA,IAAQQ,KAAKiU,yBAAyBuB,aAEtC,IAAIjH,EACJ,IAAIlP,EAEJ,KAAKA,EAAI,EAAGA,EAAIW,KAAKqT,eAAezT,OAAQP,IAAK,CAChDkP,EAAOvO,KAAKqT,eAAehU,EAC3B,IAAIkP,EAAKyF,SAAWhB,EAAqByC,cACxCjW,GAAQ+O,EAAKX,kBAAkBC,EAAc7N,KAAKiU,0BAGpDzU,GAAQQ,KAAKiU,yBAAyByB,oBAEtC,KAAKrW,EAAI,EAAGA,EAAIW,KAAKqT,eAAezT,OAAQP,IAAK,CAChDkP,EAAOvO,KAAKqT,eAAehU,EAC3B,IAAIkP,EAAKyF,UAAYhB,EAAqByC,eAAiBlH,EAAKyF,SAAWhB,EAAqB2C,eAC/FnW,GAAQ+O,EAAKX,kBAAkBC,EAAc7N,KAAKiU,0BAGpDzU,GAAQQ,KAAKiU,yBAAyB2B,oBAEtC,KAAKvW,EAAI,EAAGA,EAAIW,KAAKqT,eAAezT,OAAQP,IAAK,CAChDkP,EAAOvO,KAAKqT,eAAehU,EAC3B,IAAIkP,EAAKyF,UAAYhB,EAAqB2C,eACzCnW,GAAQ+O,EAAKX,kBAAkBC,EAAc7N,KAAKiU,0BAEpDzU,GAAQQ,KAAKiU,yBAAyB4B,kBACtC,OAAOrW,GAMDwT,GAAAzS,UAAAyN,cAAP,SAAqBH,GAEpB,GAAIrO,GAAc,EAClB,IAAIQ,KAAK2U,UAAW,CACnB3U,KAAKiU,yBAAyB6B,qBAAqBjI,EAAakI,SAAUlI,EAAamI,SACvFxW,IAAQ,OAASQ,KAAKiU,yBAAyB+B,SAAW,OAAShW,KAAKiU,yBAAyBgC,YAAYC,WAAa,IAC1H,IAAI3H,EACJ,KAAK,GAAIlP,GAAoB,EAAGA,EAAIW,KAAKqT,eAAezT,OAAQP,IAC/DkP,EAAOvO,KAAKqT,eAAehU,EAC3BG,IAAQ+O,EAAKP,cAAcH,EAAc7N,KAAKiU,yBAC/CzU,IAAQ,OAASQ,KAAKiU,yBAAyBkC,MAAMD,WAAa,IAAMlW,KAAKiU,yBAAyB+B,SAAW,YAEjHxW,IAAQ,OAASqO,EAAamI,SAAW,IAAMnI,EAAakI,SAAW,IACxE,OAAOvW,GAMDwT,GAAAzS,UAAAuN,oBAAP,SAA2BD,EAA+BE,GAEzD,MAAO/N,MAAKiU,yBAAyBmC,wBAAwBrI,GAMvDiF,GAAAzS,UAAA0N,aAAP,SAAoBJ,GAEnB7N,KAAKiU,yBAAyBoC,eAG9BrW,MAAKiU,yBAAyBqC,eAAetW,KAAKiU,yBAAyBsC,gBAAgBC,MAAO,EAAG,EAAG,EAAG,GAM5GrU,QAAAC,eAAW4Q,EAAAzS,UAAA,WP45BJ8B,IO55BP,WAEC,MAAO,QP65BDK,WAAY,KACZC,aAAc,MOx5BdqQ,GAAAzS,UAAAoN,uBAAP,YAKOqF,GAAAzS,UAAAwC,QAAP,WAEC,IAAK,GAAI0T,KAAOzW,MAAKoT,wBACIpT,KAAKoT,wBAAwBqD,GAAM1T,SAE5D1B,GAAAd,UAAMwC,QAAOpD,KAAAK,MAGPgT,GAAAzS,UAAAmW,wBAAP,SAA+BC,GAE9B,GAAInF,GAAYmF,EAAQC,UACxB,IAAIC,GAA6CrF,EAA2B,uBAAGxR,KAAKoT,wBAAwBuD,EAAQG,YAAY9G,IAAMhQ,KAAKoT,wBAAwBuD,EAAQ3G,GAE3K,IAAI6G,EACH,MAAOA,EAER7W,MAAK+W,iCAAiCvF,EAEtC,OAAQA,GAA2B,uBAAGxR,KAAKoT,wBAAwBuD,EAAQG,YAAY9G,IAAMhQ,KAAKoT,wBAAwBuD,EAAQ3G,IAK5HgD,GAAAzS,UAAAwW,iCAAP,SAAwCvF,GAEvC,GAAIxR,KAAKgX,kBAAoB,KAC5B,KAAK,IAAKzX,OAAM,0BAEjB,IAAI0X,GAA+CzF,EAAKyF,QAExD,KAAKA,EACJ,KAAK,IAAK1X,OAAM,wEAEjB,IAAIF,GAAkB6X,EAAkBC,CACxC,IAAIN,EACJ,IAAIO,GAAkC,KACtC,IAAIN,EACJ,IAAIH,EACJ,IAAIU,EAEJ,KAAKhY,EAAI,EAAGA,EAAImS,EAAK8F,UAAU1X,OAAQP,IAAK,CAC3CsX,EAAUnF,EAAK8F,UAAUjY,EACzByX,GAAcH,EAAQG,WACtB,IAAItF,EAAK+F,uBAAwB,CAChCV,EAAuB7W,KAAKoT,wBAAwB0D,EAAY9G,GAEhE,IAAI6G,EACH,SAGFA,EAAuB,GAAIlE,EAE3B,IAAInB,EAAK+F,uBACRvX,KAAKoT,wBAAwB0D,EAAY9G,IAAM6G,MAE/C7W,MAAKoT,wBAAwBuD,EAAQ3G,IAAM6G,CAE5CO,GAA0B,IAG1BP,GAAqBW,iBAAiBV,EAAYW,YAAazX,KAAKwT,sBAGrE,IAAK4D,EACJ,MAED,IAAIM,GAAgCT,EAASS,SAC7C,IAAIC,GAAkCD,EAAU9X,MAChD,IAAIgY,GAA+BX,EAASW,YAC5C,IAAIC,GAAwC,GAAIhF,EAChD,IAAIiF,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIV,EACJ,IAAIW,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAGJV,GAAmBW,MAAQZ,CAC3BC,GAAmBY,UAAY,CAC/BZ,GAAmBa,SAAW,GAC9Bb,GAAmBc,MAAQ,EAE3BtZ,GAAI,CACJ6X,GAAI,CACJ,OAAO7X,EAAIuY,EAAc,CACxBC,EAAmBrB,MAAQnX,CAG3BW,MAAKgX,iBAAiBrX,KAAKK,KAAK4Y,kBAAmBf,EAGnD,KAAKV,EAAI,EAAGA,EAAInX,KAAKuT,kBAAkB3T,OAAQuX,IAC9CnX,KAAKuT,kBAAkB4D,GAAG0B,gCAAgChB,EAG3D,OAAOX,EAAIS,IAAoBG,EAAWJ,EAAUR,IAAI4B,eAAiBzZ,EAAG,CAE3E,IAAK8X,EAAI,EAAGA,EAAI3F,EAAK8F,UAAU1X,OAAQuX,IAAK,CAC3CR,EAAUnF,EAAK8F,UAAUH,EACzB,IAAIR,EAAQG,aAAegB,EAAShB,YAAa,CAChDD,EAAwBrF,EAA2B,uBAAGxR,KAAKoT,wBAAwBuD,EAAQG,YAAY9G,IAAMhQ,KAAKoT,wBAAwBuD,EAAQ3G,GAClJ,QAGFyH,EAAcK,EAASL,WACvBW,GAAavB,EAAqBuB,UAClCC,GAAeZ,EAAYzX,KAAKwT,oBAChC8E,GAAiBzB,EAAqBkC,qBAAqB/Y,KAAKwT,oBAGhE,KAAK2D,EAAI,EAAGA,EAAInX,KAAKuT,kBAAkB3T,OAAQuX,IAAK,CACnDE,EAAYrX,KAAKuT,kBAAkB4D,EACnCgB,GAAUd,EAAUc,OACpBJ,GAAaV,EAAUvD,UACvBkE,GAAgBM,EAAiBjB,EAAUxD,YAG3C,KAAKoE,EAAmB,EAAGA,EAAmBI,EAAcJ,GAAoBjY,KAAKwT,qBAAsB,CAC1G+E,EAAeP,EAAgBC,CAG/B,KAAKC,EAAoB,EAAGA,EAAoBH,EAAYG,IAC3DE,EAAWG,EAAeL,GAAqBC,EAAQD,IAM1D,GAAIlY,KAAKsT,mBAAmB1T,OAC3BiX,EAAqBmC,mBAAmBxK,KAAK,GAAIoE,GAAsBvT,EAAGwY,EAAmBY,UAAWZ,EAAmBa,SAAUb,EAAmBc,MAAOb,GAEhKjB,GAAqBkC,sBAAwBtB,CAG7CP,KAID7X,KApXY2T,GAAAyC,cAA+B,CAK/BzC,GAAA2C,eAAgC,EAkX/C,OAAA3C,IAlYmChG,EAoYnClN,GAA8BJ,QAArBsT,IP43BNpG,mDAAmD,mDAAmDqM,8DAA8D,8DAA8DC,4DAA4D,4DAA4DC,6DAA6D,6DAA6DC,0DAA0D,0DAA0DC,8DAA8D,8DAA8DC,yDAAyD,2DAA2DC,oDAAoD,SAAS3a,EAAQkB,EAAOJ,GACv4B,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQ7xCtB,IAAOmZ,GAAoB5a,EAAc,+CAGzC,IAAOoQ,GAAYpQ,EAAgB,+CAGnC,IAAO+T,GAAoB/T,EAAc,4DAEzC,IAAOkU,GAAsBlU,EAAa,8DRoyC1C,IQpxCM6a,GAAgB,SAAApY,GAAStB,EAAzB0Z,EAAgBpY,EAerB,SAfKoY,GAeOC,GAEXrY,EAAA1B,KAAAK,KAAM0Z,EAbC1Z,MAAA2Z,yBAAoD,GAAI1O,MACxDjL,MAAA4Z,wBAAmD,GAAI3O,MACvDjL,MAAA6Z,oBAA+C,GAAI5O,MACnDjL,MAAAwT,qBAAuC,CACvCxT,MAAA8Z,uBAAgC,GAAI3X,OAU3CnC,MAAK+Z,sBAAwBL,CAE7B,IAAIM,EACJ,IAAIzL,EAEJ,KAAK,GAAIlP,GAAW,EAAGA,EAAIW,KAAK+Z,sBAAsBE,cAAcra,OAAQP,IAAK,CAChFkP,EAAOvO,KAAK+Z,sBAAsBE,cAAc5a,EAChD2a,GAA4Bha,KAAK4P,kBAAkBrB,EACnD,IAAIA,EAAKoF,MAAQb,EAAuBiB,cAAe,CACtD/T,KAAK4Z,wBAAwBpL,KAAKwL,EAClCzL,GAAKsF,aAAe7T,KAAKwT,oBACzBxT,MAAKwT,sBAAwBjF,EAAKuF,eAC5B,CACN9T,KAAK2Z,yBAAyBnL,KAAKwL,GAEpC,GAAIA,EAAME,eACTla,KAAK6Z,oBAAoBrL,KAAKwL,IAO1BP,EAAAlZ,UAAAmH,MAAP,WAEC,MAAO,IAAI+R,GAAiBzZ,KAAK+Z,uBAM3BN,GAAAlZ,UAAAgQ,eAAP,SAAsB1C,EAA+BlI,EAA2BpE,EAAa0E,EAAeuK,EAAqCC,GAEhJ,GAAIyD,GAAgDlU,KAAK+Z,sBAAsB9F,wBAE/E,IAAI0C,GAAgDhR,EAAYgR,OAChE,IAAIqD,EACJ,IAAI3a,EAEJ,KAAKsX,EACJ,KAAK,IAAKpX,OAAM,kBR2wCX,IQxwCFsX,GAA4C7W,KAAK+Z,sBAAsBrD,wBAAwBC,EAEnG,KAAKtX,EAAI,EAAGA,EAAIW,KAAK2Z,yBAAyB/Z,OAAQP,IACrDW,KAAK2Z,yBAAyBta,GAAGkR,eAAehP,EAAOoE,EAAYkR,EAAsB3C,EAAwBjO,ERywC5G,IQtwCFkU,GAA2Cna,KAAKoa,uBAAuBzD,EAE3E,KAAKtX,EAAI,EAAGA,EAAIW,KAAK4Z,wBAAwBha,OAAQP,IACpDW,KAAK4Z,wBAAwBva,GAAGkR,eAAehP,EAAOoE,EAAYwU,EAAqBjG,EAAwBjO,EAEhH1E,GAAM4G,QAAQkS,6BAA6Bb,EAAqBc,OAAQpG,EAAuB1D,qBAAsB0D,EAAuBqG,mBAAoBrG,EAAuBsG,kBAEvL,IAAItG,EAAuBuG,oBAAsB,EAChDlZ,EAAM4G,QAAQkS,6BAA6Bb,EAAqBkB,SAAUxG,EAAuBO,uBAAwBP,EAAuByG,qBAAsBzG,EAAuBuG,qBAMxLhB,GAAAlZ,UAAA4R,qBAAP,SAA4BtE,IAQrB4L,GAAAlZ,UAAA6P,MAAP,WAEC/O,EAAAd,UAAM6P,MAAKzQ,KAAAK,KAEX,KAAK,GAAIX,GAAW,EAAGA,EAAIW,KAAK6Z,oBAAoBja,OAAQP,IAC3DW,KAAK6Z,oBAAoBxa,GAAGiS,OAAOtR,KAAKsP,gBAMnCmK,GAAAlZ,UAAA6Q,kBAAP,SAAyBF,GAExBlR,KAAKsP,gBAAkB4B,CAEvB,KAAK,GAAI7R,GAAW,EAAGA,EAAIW,KAAK6Z,oBAAoBja,OAAQP,IAC3DW,KAAK6Z,oBAAoBxa,GAAGsM,OAAO3L,KAAKsP,gBAMnCmK,GAAAlZ,UAAAqa,UAAP,SAAiBtJ,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,EAEhB,IAAK,GAAIjS,GAAW,EAAGA,EAAIW,KAAK6Z,oBAAoBja,OAAQP,IAC3DW,KAAK6Z,oBAAoBxa,GAAGiS,OAAOtR,KAAKsP,eAAiBgC,EAC1DtR,MAAK2L,OAAO3L,KAAKiR,MAGXwI,GAAAlZ,UAAAwC,QAAP,WAEC,IAAK,GAAI0T,KAAOzW,MAAK8Z,uBACI9Z,KAAK8Z,uBAAuBrD,GAAM1T,UAGpD0W,GAAAlZ,UAAA6Z,uBAAR,SAA+BzD,GAE9B,IAAK3W,KAAK4Z,wBAAwBha,OACjC,MAED,IAAIkX,GAA8BH,EAAQG,WAC1C,IAAIqD,GAA2Cna,KAAK8Z,uBAAuBhD,EAAY9G,IAAM,GAAI2C,EAGjGwH,GAAoB3C,iBAAiBV,EAAYW,YAAazX,KAAKwT,qBAGnE2G,GAAoBnB,mBAAqBhZ,KAAK+Z,sBAAsBrD,wBAAwBC,GAASqC,mBAEvG,OAAAS,IA1I+BzK,EA4ILlP,GAAAJ,QAAjB+Z,IRqvCN7K,+CAA+C,+CAA+CsK,4DAA4D,4DAA4DG,8DAA8D,8DAA8DwB,+CAA+CjS,YAAYkS,wDAAwD,SAASlc,EAAQkB,EAAOJ,GAChe,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GS95CtB,IAAO2M,GAAgBpO,EAAe,mDTs6CtC,IS95CMmc,GAAoB,SAAA1Z,GAAStB,EAA7Bgb,EAAoB1Z,EAkBzB,SAlBK0Z,GAkBOC,GAAA,GAAAA,QAAA,GAAmC,CAAnCA,EAAA,EAEX3Z,EAAA1B,KAAAK,KAEAA,MAAKib,iBAAmBD,EAdzB7Y,OAAAC,eAAW2Y,EAAAxa,UAAA,mBTu6CJ8B,ISv6CP,WAEC,MAAOrC,MAAKib,kBTw6CNvY,WAAY,KACZC,aAAc,MSv5CdoY,GAAAxa,UAAAqN,kBAAP,SAAyBC,GAExB,GAAIjJ,GAAsBiJ,EAAakH,qBAAqBnV,MAE5D,IAAIsb,GAA+BrN,EAAauG,sBAChD,IAAI+G,GAA+BD,EAAe,CAClD,IAAIE,GAA+BF,EAAe,CAClD,IAAIG,GAAqB,KAAOxN,EAAayG,cAC7C,IAAIgH,GAAsB,MAAQzN,EAAayG,eAAiB,EAChE,IAAIiH,IAA0BF,EAAc,KAAMA,EAAc,KAAMA,EAAc,KAAMA,EAAc,KACxG,IAAIG,IAA0BF,EAAe,KAAMA,EAAe,KAAMA,EAAe,KAAMA,EAAe,KAC5G,IAAIG,GAAezb,KAAKoN,cAAcS,EAAaoH,yBACnD,IAAIyG,GAAe1b,KAAKoN,cAAcS,EAAaoH,yBAA0BwG,EAC7E,IAAIE,GAAa,KACjB,IAAInc,GAAc,EAElB,KAAK,GAAIH,GAAoB,EAAGA,EAAIuF,IAAOvF,EAAG,CAE7C,GAAIuc,GAAa/N,EAAakH,qBAAqB1V,EAEnD,KAAK,GAAI6X,GAAoB,EAAGA,EAAIlX,KAAKib,mBAAoB/D,EAAG,CAC/D1X,GAAQmc,EAAM,IAAMF,EAAQ,OAASG,EAAM,QAAUL,EAAQrE,GAAK,IAAMgE,EAAe,MACtFS,EAAM,IAAMF,EAAQ,OAASG,EAAM,QAAUL,EAAQrE,GAAK,IAAMiE,EAAe,MAC/EQ,EAAM,IAAMF,EAAQ,OAASG,EAAM,QAAUL,EAAQrE,GAAK,IAAMkE,EAAe,MAC/E,OAASK,EAAQ,OAASG,EAAM,OAChC,OAASH,EAAQ,KAAOA,EAAQ,KAAOD,EAAQtE,GAAK,IAGrD,IAAIA,GAAK,EACR1X,GAAQ,OAASkc,EAAQ,KAAOD,EAAQ,SACxCjc,IAAQ,OAASkc,EAAQ,KAAOA,EAAQ,KAAOD,EAAQ,KAGzDE,EAAM,KACNnc,IAAQ,OAASqO,EAAaoH,yBAAyB5V,GAAK,KAAOqc,EAAQ,KAG5E,MAAOlc,GAMDub,GAAAxa,UAAA2L,SAAP,SAAgB2B,EAA+BtM,IAOxCwZ,GAAAxa,UAAAgM,WAAP,SAAkBsB,EAA+BtM,IAW1CwZ,GAAAxa,UAAAuN,oBAAP,SAA2BD,EAA+BE,GAEzD,MAAO,GAMDgN,GAAAxa,UAAAyN,cAAP,SAAqBH,GAEpB,MAAO,OAASA,EAAamI,SAAW,IAAMnI,EAAakI,SAAW,KAMhEgF,GAAAxa,UAAA0N,aAAP,SAAoBJ,IAIrB,OAAAkN;EA7GmC/N,EA+GLlN,GAAAJ,QAArBqb,IT04CNnO,mDAAmD,qDAAqDiP,oDAAoD,SAASjd,EAAQkB,EAAOJ,GACvL,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GUtgDtB,IAAOyb,GAAmBld,EAAc,2CAGxC,IAAOmd,GAAgBnd,EAAe,0CAEtC,IAAO4a,GAAoB5a,EAAc,+CAGzC,IAAOoQ,GAAYpQ,EAAgB,+CAEnC,IAAOod,GAASpd,EAAgB,iDAGhC,IAAOqd,GAAYrd,EAAgB,oDAGnC,IAAOsd,GAAmBtd,EAAc,mDVogDxC,IU1/CMud,GAAgB,SAAA9a,GAAStB,EAAzBoc,EAAgB9a,EAsFrB,SAtFK8a,GAsFOlN,EAAmCmN,EAAmBC,GAtFnE,GAAArS,GAAAhK,IAsFmE,IAAAqc,QAAA,GAAwB,CAAxBA,EAAA,MAEjEhb,EAAA1B,KAAAK,KAAMiP,EArFCjP,MAAAsc,YAA2B,GAAIL,EAG/Bjc,MAAAuc,oBAA6B,GAAIpa,OACjCnC,MAAAwc,yBAAkC,GAAIra,OAmF7CnC,MAAKyc,UAAYL,CACjBpc,MAAK0c,UAAYL,CACjBrc,MAAKib,iBAAmBhM,EAAa+L,eAErChb,MAAK2c,WAAa3c,KAAKyc,UAAUG,SACjC5c,MAAK6c,gBAAkB,GAAI5R,OAAcjL,KAAK2c,WAAW,GAEzD,IAAIzF,GAAmB,CACvB,KAAK,GAAI7X,GAAoB,EAAGA,EAAIW,KAAK2c,aAActd,EAAG,CACzDW,KAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,CAC5BlX,MAAK6c,gBAAgB3F,KAAO,EAG7BlX,KAAK8c,8BAAgC,SAAC3S,GAA8B,MAAAH,GAAK+S,qBAAqB5S,GAC9FnK,MAAKgd,yBAA2B,SAAC7S,GAA2B,MAAAH,GAAKiT,gBAAgB9S,GACjFnK,MAAKkd,0BAA4B,SAAC/S,GAA2B,MAAAH,GAAKmT,iBAAiBhT,IA1FpFhI,OAAAC,eAAW+Z,EAAA5b,UAAA,kBV+gDJ8B,IU/gDP,WAEC,GAAIrC,KAAKod,uBACRpd,KAAKqd,wBAEN,OAAOrd,MAAK6c,iBV+gDNna,WAAY,KACZC,aAAc,MUxgDrBR,QAAAC,eAAW+Z,EAAA5b,UAAA,cVghDJ8B,IUhhDP,WAEC,GAAIrC,KAAKod,uBACRpd,KAAKqd,wBAEN,OAAOrd,MAAKsc,aVghDN5Z,WAAY,KACZC,aAAc,MU1gDrBR,QAAAC,eAAW+Z,EAAA5b,UAAA,YVihDJ8B,IUjhDP,WAEC,MAAOrC,MAAKyc,WVkhDN/Z,WAAY,KACZC,aAAc,MU5gDrBR,QAAAC,eAAW+Z,EAAA5b,UAAA,YVmhDJ8B,IUnhDP,WAEC,MAAOrC,MAAK0c,WVohDNha,WAAY,KACZC,aAAc,MU7gDrBR,QAAAC,eAAW+Z,EAAA5b,UAAA,uBVqhDJ8B,IUrhDP,WAEC,MAAOrC,MAAKsd,sBVshDN/a,IUnhDP,SAA+BC,GAE9BxC,KAAKsd,qBAAuB9a,GVohDtBE,WAAY,KACZC,aAAc,MUx+CdwZ,GAAA5b,UAAAmH,MAAP,WAIC,MAAO,IAAIyU,GAAwCnc,KAAKyP,eAAgBzP,KAAKyc,UAAWzc,KAAK0c,WAUvFP,GAAA5b,UAAAgd,KAAP,SAAYnP,EAAaoP,EAAwClM,GAAxC,GAAAkM,QAAA,GAAsC,CAAtCA,EAAA,KAAwC,GAAAlM,QAAA,GAAmB,CAAnBA,EAAAmM,IAEhE,GAAIzd,KAAKmQ,uBAAyB/B,EACjC,MAEDpO,MAAKmQ,sBAAwB/B,CAE7B,KAAKpO,KAAKyP,eAAetB,aAAaC,GACrC,KAAM,IAAI7O,OAAM,uBAAyB6O,EAAO,cAEjD,IAAIoP,GAAcxd,KAAK0d,aAAc,CAEpC1d,KAAK0d,aAAeF,EAAWG,iBAAiB3d,KAAMA,KAAK0d,aAAc1d,KAAKyP,eAAepB,aAAaD,GAAOpO,KAAKsP,eACtHtP,MAAK0d,aAAanT,iBAAiB2R,EAAoB0B,oBAAqB5d,KAAK8c,mCAEjF9c,MAAK0d,aAAe1d,KAAKyP,eAAepB,aAAaD,EAEtDpO,MAAKkQ,cAAgBlQ,KAAK4P,kBAAkB5P,KAAK0d,aAEjD,IAAI1d,KAAKwP,eAAgB,CAExBxP,KAAKkQ,cAAcvE,OAAO3L,KAAKsP,eAC/BtP,MAAKkQ,cAAc2B,cAGpB7R,KAAK6d,qBAAiD7d,KAAKkQ,aAE3DlQ,MAAKoQ,OAGL,KAAK0N,MAAMxM,GACVtR,KAAKqR,MAAMjD,EAAMkD,GAMZ6K,GAAA5b,UAAAgQ,eAAP,SAAsB1C,EAA+BlI,EAA2BpE,EAAa0E,EAAeuK,EAAqCC,GAGhJ,GAAIzQ,KAAKod,uBACRpd,KAAKqd,wBAEN,IAAIvG,GAAwGnR,EAAYgR,QAASG,WAEjIA,GAAYiH,oBAAsB/d,KAAKsd,oBAEvC,IAAItd,KAAKsd,qBAAsB,CAE9Btd,KAAKge,wBAAwBlH,EAAYmH,qBAAsBnH,EAAYoH,mBAC3E3c,GAAM4G,QAAQkS,6BAA6Bb,EAAqBc,OAAQ9J,EAAsBxQ,KAAKme,mBAAoBrH,EAAYoH,mBAAmB,OAChJ,CACN,GAAIle,KAAKyP,eAAe2O,QAAS,CAChC,GAAIpe,KAAKwc,yBAAyB1F,EAAY9G,IAC7ChQ,KAAKqe,iBAA6C1Y,EAAYmR,EAE/D,QAEDvV,EAAM4G,QAAQkS,6BAA6Bb,EAAqBc,OAAQ9J,EAAsBxQ,KAAK6c,gBAAiB7c,KAAK2c,WAAW,GAGrIpb,EAAM+c,eAAe7N,EAAoB9K,EAAW4Y,cAAczC,EAAoB0C,kBAAmB7Y,EAAW8Y,gBAAgB3C,EAAoB0C,kBAAmB7Y,EAAW+Y,mBACtLnd,GAAM+c,eAAe7N,EAAqB,EAAG9K,EAAW4Y,cAAczC,EAAoB6C,mBAAoBhZ,EAAW8Y,gBAAgB3C,EAAoB6C,mBAAoBhZ,EAAWiZ,qBAMtLzC,GAAA5b,UAAA4R,qBAAP,SAA4BtE,GAE3B,IAAK7N,KAAKsd,uBAAyBtd,KAAK0c,WAAa1c,KAAKib,iBAAmB,GAAKpN,EAAauG,uBAAyBpU,KAAK2c,WAAW,EAAI,KAC3I3c,KAAKyP,eAAe9B,yBAMfwO,GAAA5b,UAAA6Q,kBAAP,SAAyBF,GAExB7P,EAAAd,UAAM6Q,kBAAiBzR,KAAAK,KAACkR,EAGxBlR,MAAKod,uBAAyB,IAG9B,IAAIpd,KAAKyP,eAAe2O,QACvB,IAAK,GAAI3H,KAAOzW,MAAKwc,yBACpBxc,KAAKwc,yBAAyB/F,GAAO,KAGhC0F,GAAA5b,UAAAyd,wBAAR,SAAgCC,EAA6CrB,GAE5E,GAAIvd,GAAoB,EAAG6X,EAAoB,CAC/C,IAAItS,EACJ,IAAIia,EAEJ7e,MAAKme,mBAAqB,GAAIlT,MAE9B,GAAG,CACF4T,EAAWZ,EAAqB5e,GAAG,CACnCuF,GAAMia,EAAW,EAEjB,OAAOA,EAAWja,EACjB5E,KAAKme,mBAAmBjH,KAAOlX,KAAK6c,gBAAgBgC,aAC3Cxf,EAAIud,GAGRT,GAAA5b,UAAA8c,uBAAR,WAECrd,KAAKod,uBAAyB,KAG9Bpd,MAAK8e,kBAAkB9e,KAAK6d,qBAAqBkB,gBAAgB/e,KAAKyc,WAAYzc,KAAKsc,YAAatc,KAAKyc,UVm9CnG,IUh9CFuC,GAA4B,CAChC,IAAIC,GAA+Bjf,KAAKsc,YAAY4C,UACpD,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,EAAWC,CACrC,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAA8BnhB,KAAKyc,UAAU0E,MACjD,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIxiB,EAEJ,KAAK,GAAIO,GAAoB,EAAGA,EAAIW,KAAK2c,aAActd,EAAG,CACzD+hB,EAAOnC,EAAY5f,EACnBgiB,GAAOD,EAAKG,WACZD,GAAMF,EAAKI,WACXpC,GAAKiC,EAAKta,CACVsY,GAAKgC,EAAKpa,CACVqY,GAAK+B,EAAKla,CACVoY,GAAK8B,EAAKvZ,CAEV0X,IAAO1gB,EAAI,EAAIsgB,GAAIC,CACnBI,GAAM3gB,EAAEwgB,CACRI,GAAM5gB,EAAEygB,CACRI,IAAO7gB,EAAI,EAAIugB,GAAIC,CACnBM,GAAM9gB,EAAEygB,CACRM,GAAM,EAAIP,EAAGC,CAEbI,GAAM,EAAIN,EAAGC,CACbM,GAAM,EAAIP,EAAGE,CACbM,GAAM,EAAIP,EAAGC,CACbH,IAAMA,CACNC,IAAMA,CACNC,IAAMA,CACNC,IAAMA,CAENO,IAAOhhB,EAAIsgB,EAAKC,GAAMC,EAAKC,CAC3BQ,GAAMP,EAAMK,CACZG,GAAMP,EAAMG,CACZK,GAAMT,EAAMK,CACZK,IAAOphB,EAAIwgB,EAAKC,CAChBY,GAAMR,EAAMD,CACZU,GAAMX,EAAMG,CACZS,GAAMV,EAAMD,CACZY,IAAOlB,EAAKC,EAAKC,EAAKC,CAGtBJ,GAAMgC,EAAO9hB,GAAGoiB,eAChBlB,GAAMpB,EAAI,EACVqB,GAAMrB,EAAI,EACVsB,GAAMtB,EAAI,EACVuB,GAAMvB,EAAI,GACVwB,GAAMxB,EAAI,EACVyB,GAAMzB,EAAI,EACV0B,GAAM1B,EAAI,EACV2B,GAAM3B,EAAI,GACV4B,GAAM5B,EAAI,EACV6B,GAAM7B,EAAI,EACV8B,GAAM9B,EAAI,GACV+B,GAAM/B,EAAI,GAEVnf,MAAK6c,gBAAgBmC,GAAac,EAAIS,EAAMR,EAAIY,EAAMX,EAAIe,CAC1D/gB,MAAK6c,gBAAgBmC,EAAY,GAAKc,EAAIU,EAAMT,EAAIa,EAAMZ,EAAIgB,CAC9DhhB,MAAK6c,gBAAgBmC,EAAY,GAAKc,EAAIW,EAAMV,EAAIc,EAAMb,EAAIiB,CAC9DjhB,MAAK6c,gBAAgBmC,EAAY,GAAKc,EAAIY,EAAMX,EAAIe,EAAMd,EAAIkB,EAAMI,EAAIva,CACxE/G,MAAK6c,gBAAgBmC,EAAY,GAAKiB,EAAIM,EAAML,EAAIS,EAAMR,EAAIY,CAC9D/gB,MAAK6c,gBAAgBmC,EAAY,GAAKiB,EAAIO,EAAMN,EAAIU,EAAMT,EAAIa,CAC9DhhB,MAAK6c,gBAAgBmC,EAAY,GAAKiB,EAAIQ,EAAMP,EAAIW,EAAMV,EAAIc,CAC9DjhB,MAAK6c,gBAAgBmC,EAAY,GAAKiB,EAAIS,EAAMR,EAAIY,EAAMX,EAAIe,EAAMI,EAAIra,CACxEjH,MAAK6c,gBAAgBmC,EAAY,GAAKoB,EAAIG,EAAMF,EAAIM,EAAML,EAAIS,CAC9D/gB,MAAK6c,gBAAgBmC,EAAY,GAAKoB,EAAII,EAAMH,EAAIO,EAAMN,EAAIU,CAC9DhhB,MAAK6c,gBAAgBmC,EAAY,IAAMoB,EAAIK,EAAMJ,EAAIQ,EAAMP,EAAIW,CAC/DjhB,MAAK6c,gBAAgBmC,EAAY,IAAMoB,EAAIM,EAAML,EAAIS,EAAMR,EAAIY,EAAMI,EAAIna,CAEzE6X,GAAYA,EAAY,IAKnB7C,GAAA5b,UAAA6R,yBAAP,SAAgCzM,EAAsC0M,GAErErS,KAAKwc,yBAAyBnK,EAAkBrC,IAAM,IAGtD,KAAKhQ,KAAKyP,eAAe2O,QACxB,MAAO/L,EAER,IAAIqP,EAEJ,MAAMA,EAAoB1hB,KAAKuc,oBAAoBlK,EAAkBrC,KAAM,CAE1E0R,EAAoB1hB,KAAKuc,oBAAoBlK,EAAkBrC,IAAMqC,EAAkB3K,OAEvFga,GAAkBC,kBAAoB,KACtCD,GAAkBE,mBAAqB,KACvCF,GAAkBG,cAAgB,KAElCxP,GAAkB9H,iBAAiBwR,EAAiB+F,gBAAiB9hB,KAAKgd,yBAC1E3K,GAAkB9H,iBAAiBwR,EAAiBgG,iBAAkB/hB,KAAKkd,2BAG5E,MAAOwE,GAQDvF,GAAA5b,UAAA8d,iBAAP,SAAwB1Y,EAAsC0M,GAE7DrS,KAAKwc,yBAAyBnK,EAAkBrC,IAAM,KAEtD,IAAIgS,GAAgC3P,EAAkB4P,SACtD,IAAIC,GAA8B7P,EAAkB8P,aACpD,IAAIC,GAA+B/P,EAAkBgQ,cAErD,IAAIC,GAA6BjQ,EAAkBiQ,YACnD,IAAIC,GAA6BlQ,EAAkBkQ,YAEnD,IAAIb,GAAoB1hB,KAAKuc,oBAAoBlK,EAAkBrC,GAEnE,IAAIwS,GAAgCd,EAAkBO,SACtD,IAAIQ,GAA8Bf,EAAkBS,aACpD,IAAIO,GAA+BhB,EAAkBW,cAErD,IAAI7L,GAAwB,CAC5B,IAAIU,GAAoB,CACxB,IAAIC,EACJ,IAAIwL,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIve,GAAqBod,EAAgBpiB,MACzC,IAAIwjB,EACJ,IAAIC,GAAcC,EAAcC,CAChC,IAAIC,GAAcC,EAAcC,CAChC,IAAIC,GAAcC,EAAcC,CAChC,IAAItD,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CAExC,OAAO1K,EAAQ5R,EAAK,CACnBye,EAAQrB,EAAgBxL,EACxB8M,GAAQtB,EAAgBxL,EAAQ,EAChC+M,GAAQvB,EAAgBxL,EAAQ,EAChCgN,GAAQtB,EAAc1L,EACtBiN,GAAQvB,EAAc1L,EAAQ,EAC9BkN,GAAQxB,EAAc1L,EAAQ,EAC9BmN,GAAQvB,EAAe5L,EACvBoN,GAAQxB,EAAe5L,EAAQ,EAC/BqN,GAAQzB,EAAe5L,EAAQ,EAC/BmM,GAAK,CACLC,GAAK,CACLC,GAAK,CACLC,GAAK,CACLC,GAAK,CACLC,GAAK,CACLC,GAAK,CACLC,GAAK,CACLC,GAAK,CACLhM,GAAI,CACJ,OAAOA,EAAInX,KAAKib,iBAAkB,CACjCmI,EAASb,EAAarL,EACtB,IAAIkM,EAAS,EAAG,CV47CA,GU17CXpE,GAA4BsD,EAAapL,MAAQ,CACrDqJ,GAAMvgB,KAAK6c,gBAAgBmC,EAC3BwB,GAAMxgB,KAAK6c,gBAAgBmC,EAAY,EACvCyB,GAAMzgB,KAAK6c,gBAAgBmC,EAAY,EACvC0B,GAAM1gB,KAAK6c,gBAAgBmC,EAAY,EACvC2B,GAAM3gB,KAAK6c,gBAAgBmC,EAAY,EACvC4B,GAAM5gB,KAAK6c,gBAAgBmC,EAAY,EACvC6B,GAAM7gB,KAAK6c,gBAAgBmC,EAAY,EACvC8B,GAAM9gB,KAAK6c,gBAAgBmC,EAAY,EACvC+B,GAAM/gB,KAAK6c,gBAAgBmC,EAAY,EACvCgC,GAAMhhB,KAAK6c,gBAAgBmC,EAAY,EACvCiC,GAAMjhB,KAAK6c,gBAAgBmC,EAAY,GACvCkC,GAAMlhB,KAAK6c,gBAAgBmC,EAAY,GACvC2D,IAAMS,GAAQ7C,EAAI8C,EAAQ7C,EAAI8C,EAAQ7C,EAAI8C,EAAQ7C,EAClDkC,IAAMQ,GAAQzC,EAAI0C,EAAQzC,EAAI0C,EAAQzC,EAAI0C,EAAQzC,EAClD+B,IAAMO,GAAQrC,EAAIsC,EAAQrC,EAAIsC,EAAQrC,EAAIsC,EAAQrC,EAClD4B,IAAMM,GAAQ7C,EAAIiD,EAAQhD,EAAIiD,EAAQhD,EAAIiD,EAC1CX,IAAMK,GAAQzC,EAAI6C,EAAQ5C,EAAI6C,EAAQ5C,EAAI6C,EAC1CV,IAAMI,GAAQrC,EAAIyC,EAAQxC,EAAIyC,EAAQxC,EAAIyC,EAC1CT,IAAMG,GAAQ7C,EAAIoD,EAAQnD,EAAIoD,EAAQnD,EAAIoD,EAC1CX,IAAME,GAAQzC,EAAIgD,EAAQ/C,EAAIgD,EAAQ/C,EAAIgD,EAC1CV,IAAMC,GAAQrC,EAAI4C,EAAQ3C,EAAI4C,EAAQ3C,EAAI4C,KACxC1M,MACI,CACND,GAAMlX,KAAKib,iBAAmB9D,CAC9BA,GAAInX,KAAKib,kBAIXuH,EAAgBhM,GAASmM,CACzBH,GAAgBhM,EAAQ,GAAKoM,CAC7BJ,GAAgBhM,EAAQ,GAAKqM,CAC7BJ,GAAcjM,GAASsM,CACvBL,GAAcjM,EAAQ,GAAKuM,CAC3BN,GAAcjM,EAAQ,GAAKwM,CAC3BN,GAAelM,GAASyM,CACxBP,GAAelM,EAAQ,GAAK0M,CAC5BR,GAAelM,EAAQ,GAAK2M,CAE5B3M,IAAS,EAGVkL,EAAkBoC,gBAAgBtB,EAClCd,GAAkBqC,oBAAoBtB,EACtCf,GAAkBsC,qBAAqBtB,GAQhCvG,GAAA5b,UAAAue,kBAAR,SAA0BmF,EAAyBC,EAAyB9H,GAE3E,GAAI6C,GAA+BiF,EAAWhF,UAC9C,IAAIiF,EACJ,IAAIhD,GAA8B/E,EAAS+E,MAC3C,IAAIvc,GAAsBqf,EAAWG,aACrC,IAAIlF,GAA8B+E,EAAW/E,UAC7C,IAAImF,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAInD,EACJ,IAAIoD,EACJ,IAAIC,EACJ,IAAI3lB,EACJ,IAAI8I,EAEJ,IAAI8c,GAAWC,EAAWC,EAAWC,CACrC,IAAIC,GAAWC,EAAWC,EAAWC,CACrC,IAAIC,GAAWC,EAAWC,CAG1B,IAAInG,EAAYrf,QAAUgF,EACzBqa,EAAYrf,OAASgF,CAEtB,KAAK,GAAIvF,GAAoB,EAAGA,EAAIuF,IAAOvF,EAAG,CAC7C8kB,EAAkBlF,EAAY5f,EAE9B,IAAI8kB,GAAmB,KACtBA,EAAkBlF,EAAY5f,GAAK,GAAI2c,EAExCsI,GAAQnD,EAAO9hB,EACfglB,GAAcC,EAAMD,WACpBjD,GAAOlC,EAAW7f,EAElBuI,GAAIuc,EAAgB5C,WACpBziB,GAAIqlB,EAAgB3C,WAEpB,IAAI6C,EAAc,EAAG,CACpBI,EAAKrD,EAAKI,WACVgD,GAAKpD,EAAKG,WACV3Z,GAAEb,EAAIyd,EAAGzd,CACTa,GAAEX,EAAIud,EAAGvd,CACTW,GAAET,EAAIqd,EAAGrd,CACTS,GAAEE,EAAI0c,EAAG1c,CACThJ,GAAEiI,EAAI0d,EAAG1d,CACTjI,GAAEmI,EAAIwd,EAAGxd,CACTnI,GAAEqI,EAAIsd,EAAGtd,MACH,CAENod,EAAatF,EAAYoF,EAGzBG,GAAKD,EAAWhD,WAChBkD,GAAKrD,EAAKI,WACVsD,GAAKN,EAAGzd,CACRge,GAAKP,EAAGvd,CACR+d,GAAKR,EAAGrd,CACR8d,GAAKT,EAAG1c,CACRod,GAAKT,EAAG1d,CACRoe,GAAKV,EAAGxd,CACRme,GAAKX,EAAGtd,CAER0d,IAAMC,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,CACzBV,GAAKO,EAAGC,EAAKH,EAAGK,EAAKJ,EAAGG,CACxBR,GAAKM,EAAGE,EAAKL,EAAGM,EAAKJ,EAAGE,CACxBN,GAAKK,EAAGG,EAAKN,EAAGK,EAAKJ,EAAGG,CAGxBT,GAAKF,EAAW/C,WAChB1iB,GAAEiI,GAAK8d,EAAGC,EAAKJ,EAAGO,EAAKN,EAAGK,EAAKJ,EAAGG,EAAKN,EAAG1d,CAC1CjI,GAAEmI,GAAK4d,EAAGE,EAAKL,EAAGM,EAAKL,EAAGM,EAAKL,EAAGE,EAAKL,EAAGxd,CAC1CnI,GAAEqI,GAAK0d,EAAGG,EAAKN,EAAGK,EAAKJ,EAAGG,EAAKF,EAAGK,EAAKR,EAAGtd,CAG1Cud,GAAKF,EAAGzd,CACR4d,GAAKH,EAAGvd,CACR2d,GAAKJ,EAAGrd,CACR0d,GAAKL,EAAG1c,CACR0c,GAAKpD,EAAKG,WACVuD,GAAKN,EAAGzd,CACRge,GAAKP,EAAGvd,CACR+d,GAAKR,EAAGrd,CACR8d,GAAKT,EAAG1c,CAERF,GAAEE,EAAI+c,EAAGI,EAAKP,EAAGI,EAAKH,EAAGI,EAAKH,EAAGI,CACjCpd,GAAEb,EAAI8d,EAAGC,EAAKJ,EAAGO,EAAKN,EAAGK,EAAKJ,EAAGG,CACjCnd,GAAEX,EAAI4d,EAAGE,EAAKL,EAAGM,EAAKL,EAAGM,EAAKL,EAAGE,CACjCld,GAAET,EAAI0d,EAAGG,EAAKN,EAAGK,EAAKJ,EAAGG,EAAKF,EAAGK,IAK5B9I,GAAA5b,UAAAwc,qBAAR,SAA6B5S,GAE5B,GAAIA,EAAMkb,MAAQnJ,EAAoB0B,oBAAqB,CAC1DzT,EAAMmb,cAAc9Y,oBAAoB0P,EAAoB0B,oBAAqB5d,KAAK8c,8BAEtF,IAAI9c,KAAKkQ,eAAiB/F,EAAMob,eAAgB,CAC/CvlB,KAAK0d,aAAe1d,KAAKyP,eAAepB,aAAarO,KAAKmQ,sBAC1DnQ,MAAKkQ,cAAgBlQ,KAAK4P,kBAAkB5P,KAAK0d,aACjD1d,MAAK6d,qBAAiD7d,KAAKkQ,gBAKtDiM,GAAA5b,UAAA0c,gBAAR,SAAwB9S,GAEvB,GAAI2M,GAAwD3M,EAAM9F,MAE3CrE,MAAKuc,oBAAoBzF,EAAY9G,IAAKwV,cAAc1O,EAAYyE,SAGpFY,GAAA5b,UAAA4c,iBAAR,SAAyBhT,GAExB,GAAI2M,GAAwD3M,EAAM9F,MAClE,IAAIohB,GAA0DzlB,KAAKuc,oBAAoBzF,EAAY9G,GAEnG,QAAO7F,EAAMub,UACZ,IAAK5J,GAAoB6J,QACxBF,EAAcG,UAAU9O,EAAY+O,IACrC,KAAK/J,GAAoBgK,kBACxBL,EAAcG,UAAU9O,EAAYiP,eAGxC,OAAA5J,IArlB+BnN,EAulBLlP,GAAAJ,QAAjByc,IVs6CN6J,2CAA2Cpd,UAAUqd,0CAA0Crd,UAAUgG,+CAA+C,+CAA+CsX,iDAAiD,iDAAiDC,oDAAoD,oDAAoDC,mDAAmD,mDAAmDvL,+CAA+CjS,YAAYyd,sDAAsD,SAASznB,EAAQkB,EAAOJ,GACnoB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GW5hEtB,IAAO2M,GAAgBpO,EAAe,mDACtC,IAAO0nB,GAAmB1nB,EAAc,2DXoiExC,IW5hEM2nB,GAAkB,SAAAllB,GAAStB,EAA3BwmB,EAAkBllB,EAqCvB,SArCKklB,GAqCOC,EAA8BC,GAA9B,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,EAA8B,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,WAEzCplB,EAAA1B,KAAAK,KACAA,MAAK0mB,UAAYF,CACjBxmB,MAAK2mB,WAAaF,EAjCnBtkB,OAAAC,eAAWmkB,EAAAhmB,UAAA,YXgjEJ8B,IWhjEP,WAEC,MAAOrC,MAAK0mB,WXijENhkB,WAAY,KACZC,aAAc,MW5iErBR,QAAAC,eAAWmkB,EAAAhmB,UAAA,aXkjEJ8B,IWljEP,WAEC,MAAOrC,MAAK2mB,YXmjENjkB,WAAY,KACZC,aAAc,MWthEd4jB,GAAAhmB,UAAAqN,kBAAP,SAAyBC,GAExB,GAAI7N,KAAK2mB,YAAcL,EAAoBM,SAC1C,MAAO5mB,MAAK6mB,oBAAoBhZ,OAEhC,OAAO7N,MAAK8mB,oBAAoBjZ,GAM3B0Y,GAAAhmB,UAAA2L,SAAP,SAAgB2B,EAA+BtM,IAUxCglB,GAAAhmB,UAAAgM,WAAP,SAAkBsB,EAA+BtM,IAe1CglB,GAAAhmB,UAAAuN,oBAAP,SAA2BD,EAA+BE,GAEzD,MAAO,GAMDwY,GAAAhmB,UAAAyN,cAAP,SAAqBH,GAEpB,MAAO,OAASA,EAAamI,SAAW,IAAMnI,EAAakI,SAAW,KAMhEwQ,GAAAhmB,UAAA0N,aAAP,SAAoBJ,IAQZ0Y,GAAAhmB,UAAAsmB,oBAAR,SAA4BhZ,GAE3B,GAAIrO,GAAc,EAClB,IAAIic,GAAezb,KAAKoN,cAAcS,EAAaoH,yBACnD,IAAIyG,GAAe1b,KAAKoN,cAAcS,EAAaoH,yBAA0BwG,EAC7E,IAAIsL,GAAqB,GAAI9b,OAAc,IAAK,IAAK,IAAK,IAC1D,IAAIrG,GAAsBiJ,EAAakH,qBAAqBnV,MAC5D,IAAIonB,GAAqB,KAAOnZ,EAAauG,sBAE7C,IAAIxP,EAAM,EACTA,EAAM,CACP,IAAIqiB,GAA8BpZ,EAAayG,cAE/C,KAAK,GAAIjV,GAAoB,EAAGA,EAAIuF,IAAOvF,EAAG,CAC7CG,GAAQ,OAASic,EAAQ,KAAO5N,EAAakH,qBAAqB1V,GAAK,KAAO2nB,EAAc,IAAMD,EAAK,GAAK,IAE5G,KAAK,GAAI7P,GAAoB,EAAGA,EAAIlX,KAAK0mB,YAAaxP,EAAG,CACxD1X,GAAQ,OAASkc,EAAQ,OAASuL,EAAc,KAAOD,EAAc,IAAMD,EAAK7P,GAAK,IAErF,IAAIA,EAAIlX,KAAK0mB,UAAY,EACxBlnB,GAAQ,OAASic,EAAQ,KAAOA,EAAQ,KAAOC,EAAQ,OAEtDuL,EAGHznB,GAAQ,OAASqO,EAAaoH,yBAAyB5V,GAAK,KAAOoc,EAAQ,KAAOC,EAAQ,KAI3F,GAAI7N,EAAaqZ,oBAAsB,GAAKrZ,EAAasZ,eAAgB,CACxE3nB,GAAQ,OAASic,EAAQ,OAAS5N,EAAakH,qBAAqB,GAAK,KAAOlH,EAAaoH,yBAAyB,GAAK,KAC1H,OAASwG,EAAQ,KAAO5N,EAAaoH,yBAAyB,GAAK,KAAOwG,EAAQ,OAClF,OAAS5N,EAAaoH,yBAAyB,GAAK,KAAOpH,EAAaoH,yBAAyB,GAAK,KAAOwG,EAAQ,KAEvH,MAAOjc,GAMA+mB,GAAAhmB,UAAAumB,oBAAR,SAA4BjZ,GAE3B,GAAIrO,GAAc,EAClB,IAAIoF,GAAsBiJ,EAAakH,qBAAqBnV,MAC5D,IAAImnB,IAAsB,IAAK,IAAK,IAAK,IACzC,IAAItL,GAAezb,KAAKoN,cAAcS,EAAaoH,yBACnD,IAAIkC,EAEJ,IAAI8P,GAA8BpZ,EAAayG,cAE/C,IAAI1P,EAAM,EACTA,EAAM,CAEPpF,IAAQ,QAAUqO,EAAaoH,yBAAyB,GAAK,KAAOpH,EAAakH,qBAAqB,GAAK,IAC3G,IAAIlH,EAAauZ,mBAAqB,EACrC5nB,GAAQ,OAASqO,EAAaoH,yBAAyB,GAAK,KAAOpH,EAAakH,qBAAqB,GAAK,IAE3G,KAAK,GAAI1V,GAAoB,EAAGA,EAAIuF,IAAOvF,EAAG,CAC7C,IAAK,GAAI6X,GAAoB,EAAGA,EAAIlX,KAAK0mB,YAAaxP,EAAG,CACxD1X,GAAQ,OAASic,EAAQ,QAAUwL,EAAc9P,GAAK,OAAStJ,EAAauG,uBAAyB,IAAM2S,EAAK7P,GAAK,KACpH,OAASrJ,EAAaoH,yBAAyB5V,GAAK,KAAOwO,EAAaoH,yBAAyB5V,GAAK,KAAOoc,EAAQ,IACtHtE,MAIF,GAAItJ,EAAaqZ,oBAAsB,GAAKrZ,EAAasZ,eAAgB,CACxE3nB,GAAQ,OAASic,EAAQ,OAAS5N,EAAakH,qBAAqB,GAAK,KAAOlH,EAAaoH,yBAAyB,GAAK,KAC1H,OAASwG,EAAQ,KAAO5N,EAAaoH,yBAAyB,GAAK,KAAOwG,EAAQ,OAClF,OAAS5N,EAAaoH,yBAAyB,GAAK,KAAOpH,EAAakH,qBAAqB,GAAK,KAAO0G,EAAQ,KAGnH,MAAOjc,GAET,OAAA+mB,IArLiCvZ,EAuLjClN,GAA4BJ,QAAnB6mB,IX4/DN3Z,mDAAmD,mDAAmDya,2DAA2D,6DAA6DC,kDAAkD,SAAS1oB,EAAQkB,EAAOJ,GAC3S,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYnsEtB,IAAOyb,GAAmBld,EAAc,2CAOxC,IAAO4a,GAAoB5a,EAAc,+CACzC,IAAO2oB,GAAc3oB,EAAe,yCAEpC,IAAOoQ,GAAYpQ,EAAgB,+CAEnC,IAAO0nB,GAAmB1nB,EAAc,2DZmsExC,IYvrEM4oB,GAAc,SAAAnmB,GAAStB,EAAvBynB,EAAcnmB,EAcnB,SAdKmmB,GAcOC,GAEXpmB,EAAA1B,KAAAK,KAAMynB,EAbCznB,MAAA0nB,OAAyB,GAAIzc,MAC7BjL,MAAA2nB,SAAyB1c,MAAc,EAAG,EAAG,EAAG,EAcvDjL,MAAK4nB,oBAAsBH,CAC3BznB,MAAK0mB,UAAYe,EAAmBjB,QACpCxmB,MAAK2mB,WAAac,EAAmBhB,UAM/Be,EAAAjnB,UAAAmH,MAAP,WAEC,MAAO,IAAI8f,GAAexnB,KAAK4nB,qBAOzBJ,GAAAjnB,UAAAgd,KAAP,SAAYnP,EAAaoP,EAAwClM,GAAxC,GAAAkM,QAAA,GAAsC,CAAtCA,EAAA,KAAwC,GAAAlM,QAAA,GAAmB,CAAnBA,EAAAmM,IAEhE,GAAIzd,KAAKmQ,uBAAyB/B,EACjC,MAEDpO,MAAKmQ,sBAAwB/B,CAI7B,KAAKpO,KAAKyP,eAAetB,aAAaC,GACrC,KAAM,IAAI7O,OAAM,uBAAyB6O,EAAO,cAEjDpO,MAAK0d,aAAe1d,KAAKyP,eAAepB,aAAaD,EAErDpO,MAAKkQ,cAAgBlQ,KAAK4P,kBAAkB5P,KAAK0d,aAEjD,IAAI1d,KAAKwP,eAAgB,CAExBxP,KAAKkQ,cAAcvE,OAAO3L,KAAKsP,eAC/BtP,MAAKkQ,cAAc2B,cAGpB7R,KAAK6nB,mBAA6C7nB,KAAKkQ,aAEvDlQ,MAAKoQ,OAGL,KAAK0N,MAAMxM,GACVtR,KAAKqR,MAAMjD,EAAMkD,GAMZkW,GAAAjnB,UAAA6Q,kBAAP,SAAyBF,GAExB7P,EAAAd,UAAM6Q,kBAAiBzR,KAAAK,KAACkR,EAExB,IAAI4W,GAAuB,KAE3B,IAAI9nB,KAAK0nB,OAAO,IAAM1nB,KAAK6nB,mBAAmBE,gBAAiB,CAC9D/nB,KAAK0nB,OAAO,GAAK1nB,KAAK6nB,mBAAmBE,eACzCD,GAAe,KAGhB,GAAI9nB,KAAK0nB,OAAO,IAAM1nB,KAAK6nB,mBAAmBG,aAAc,CAC3DhoB,KAAK0nB,OAAO,GAAK1nB,KAAK6nB,mBAAmBG,YACzCF,GAAe,KAGhB9nB,KAAK2nB,SAAS,GAAK,GAAK3nB,KAAK2nB,SAAS,GAAK3nB,KAAK6nB,mBAAmBI,YAEnE,IAAIH,EAAc,CZgqER,GY9pELtW,EACJ,IAAI5M,GAAa5E,KAAKqP,SAASzP,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,EAAKvF,IAAK,CACpCmS,EAAOxR,KAAKqP,SAAShQ,EACrBmS,GAAK0W,qCAQDV,GAAAjnB,UAAAgQ,eAAP,SAAsB1C,EAA+BlI,EAA2BpE,EAAa0E,EAAeuK,EAAqCC,GAKhJ,IAAKzQ,KAAK0nB,OAAO9nB,OAAQ,CACxBI,KAAKmoB,YAAYta,EAAclI,EAAYpE,EAAOiP,EAAsBC,EACxE,QZ8pEK,GY1pEFkG,GAAyEhR,EAAYgR,OACzF,IAAIyR,EACJ,IAAI/oB,EACJ,IAAIuF,GAAsB5E,KAAK0mB,SAE/BnlB,GAAM4G,QAAQkS,6BAA6Bb,EAAqBc,OAAQ9J,EAAsBxQ,KAAK2nB,SAAU,EAE7G,IAAI3nB,KAAK2mB,YAAcL,EAAoBM,SAC1CvnB,EAAI,MAEJA,GAAI,CAEL,MAAOA,EAAIuF,IAAOvF,EAAG,CACpB+oB,EAAUpoB,KAAK0nB,OAAOroB,GAAGgpB,cAAc1R,EAAQ2R,UAAY3R,EAAQG,WAEnEvV,GAAM+c,eAAe7N,IAAsB8W,EAAevhB,QAAQoiB,EAASziB,EAAW4iB,eAAgBzM,EAAoB0M,eAAgBJ,EAAQK,UAAU3M,EAAoB0M,eAAgB1M,EAAoB4M,gBAEpN,IAAI7a,EAAauZ,mBAAqB,EACrC7lB,EAAM+c,eAAe7N,IAAsB8W,EAAevhB,QAAQoiB,EAASziB,EAAW4iB,eAAgBzM,EAAoB6M,aAAcP,EAAQK,UAAU3M,EAAoB6M,aAAc7M,EAAoB8M,gBAI3MpB,GAAAjnB,UAAA4nB,YAAR,SAAoBta,EAA+BlI,EAA2BpE,EAAaiP,EAAqCC,GAE/HlP,EAAM4G,QAAQkS,6BAA6Bb,EAAqBc,OAAQ9J,EAAsBxQ,KAAK2nB,SAAU,EAE7G,IAAI3nB,KAAK2mB,YAAcL,EAAoBM,SAAU,CACpD,GAAIhiB,GAAsB5E,KAAK0mB,SAC/B,KAAK,GAAIrnB,GAAoB,EAAGA,EAAIuF,IAAOvF,EAAG,CAC7CkC,EAAM+c,eAAe7N,IAAsB9K,EAAW4Y,cAAczC,EAAoB0M,eAAgB7iB,EAAW8Y,gBAAgB3C,EAAoB0M,eAAgB1M,EAAoB4M,gBAE3L,IAAI7a,EAAauZ,mBAAqB,EACrC7lB,EAAM+c,eAAe7N,IAAsB9K,EAAW4Y,cAAczC,EAAoB6M,aAAchjB,EAAW8Y,gBAAgB3C,EAAoB6M,aAAc7M,EAAoB8M,iBAUpLpB,GAAAjnB,UAAA4R,qBAAP,SAA4BtE,IAIrB2Z,GAAAjnB,UAAA6R,yBAAP,SAAgCzM,EAAsC0M,GAErE,GAAIrS,KAAK2mB,YAAcL,EAAoBM,UAAY5mB,KAAK0nB,OAAO9nB,OAClE,MAA6BI,MAAK0nB,OAAO,GAAGW,cAAc1iB,EAAWgR,QAAQ2R,UAAYjW,CAG1F,OAAOA,GAET,OAAAmV,IAtK6BxY,EAwK7BlP,GAAwBJ,QAAf8nB,IZ+oENxB,2CAA2Cpd,UAAUgG,+CAA+C,+CAA+CyY,2DAA2D,2DAA2DxM,+CAA+CjS,UAAUigB,yCAAyCjgB,YAAYqQ,+DAA+D,SAASra,EAAQkB,EAAOJ,GACjd,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gal1EtB,IAAOyoB,GAAmBlqB,EAAa,wDACvC,IAAOmqB,GAAqBnqB,EAAY,0Dbw1ExC,Ial1EM8T,GAAsB,SAAArR,GAAStB,EAA/B2S,EAAsBrR,EA8C3B,SA9CKqR,GA8COyB,GAEX9S,EAAA1B,KAAAK,KAAMmU,EAfCnU,MAAAgpB,gBAAyB,GAAI7mB,OA2J9BnC,MAAAua,mBAAmC,GAAItP,MACvCjL,MAAA2a,qBAAqC,GAAI1P,OA1IzCyH,EAAAnS,UAAA8Q,MAAP,WAEChQ,EAAAd,UAAM8Q,MAAK1R,KAAAK,KAEXA,MAAKipB,kBAAoB,GAAIhe,MAC7BjL,MAAKkpB,kBAAoBlpB,KAAKmpB,sBAAsBnpB,KAAK8U,gBAAgB,GACzE9U,MAAKopB,qBAAuBppB,KAAKmpB,sBAAsBnpB,KAAKgV,gBAAgB,GAC5EhV,MAAKqpB,oBAAoBrpB,KAAKopB,qBAAsB,EAEpD,KAAK,GAAI/pB,GAAmB,EAAGA,EAAIW,KAAKgV,gBAAgBpV,OAAQP,IAAK,CACpEW,KAAKipB,kBAAkBza,KAAKxO,KAAKmpB,sBAAsBnpB,KAAKgV,gBAAgB3V,IAC5EW,MAAKqpB,oBAAoBrpB,KAAKipB,kBAAkB5pB,EAAI,GAAI,GAGzDW,KAAKopB,qBAAuB,GAAIL,GAAsB/oB,KAAKopB,qBAAqBE,QAAStpB,KAAKopB,qBAAqB5S,MAInHxW,MAAKuW,gBAAkBvW,KAAKupB,uBAC5BvpB,MAAKuW,gBAAkB,GAAIwS,GAAsB/oB,KAAKuW,gBAAgB+S,QAAStpB,KAAKuW,gBAAgBC,MAAO,EAC3GxW,MAAKwpB,eAAiB,GAAIT,GAAsB/oB,KAAKuW,gBAAgB+S,QAAStpB,KAAKuW,gBAAgBC,MAAO,EAC1GxW,MAAKypB,eAAiB,GAAIV,GAAsB/oB,KAAKuW,gBAAgB+S,QAAStpB,KAAKuW,gBAAgBC,MAAO,EAG1GxW,MAAK0pB,eAAiB1pB,KAAK2pB,yBAC3B3pB,MAAKqpB,oBAAoBrpB,KAAK0pB,eAAgB,EAC9C1pB,MAAK0pB,eAAiB,GAAIX,GAAsB/oB,KAAK0pB,eAAeJ,QAAStpB,KAAK0pB,eAAelT,MAEjG,IAAIxW,KAAK4U,aAAc,CACtB5U,KAAK4pB,eAAiB5pB,KAAK2pB,yBAC3B3pB,MAAKqpB,oBAAoBrpB,KAAK4pB,eAAgB,EAC9C5pB,MAAK4pB,eAAiB,GAAIb,GAAsB/oB,KAAK4pB,eAAeN,QAAStpB,KAAK4pB,eAAepT,MACjGxW,MAAK6pB,WAAa,GAAId,GAAsB/oB,KAAK4pB,eAAeN,QAAStpB,KAAK4pB,eAAepT,MAAO,EACpGxW,MAAK8pB,WAAa,GAAIf,GAAsB/oB,KAAK0pB,eAAeJ,QAAStpB,KAAK0pB,eAAelT,MAAO,OAC9F,CACN,GAAIuT,GAAiC/pB,KAAK2pB,yBAC1C3pB,MAAKqpB,oBAAoBU,EAAU,EACnC/pB,MAAK6pB,WAAa,GAAId,GAAsBgB,EAAST,QAASS,EAASvT,MAAO,EAC9ExW,MAAK8pB,WAAa,GAAIf,GAAsBgB,EAAST,QAASS,EAASvT,MAAO,IAKzE9D,GAAAnS,UAAAuV,qBAAP,SAA4BkU,EAAoBC,GAE/CjqB,KAAKmW,MAAQnW,KAAKmpB,sBAAsBc,EACxCjqB,MAAKiW,YAAcjW,KAAKmpB,sBAAsBa,EAE9ChqB,MAAKgW,SAAW,GAAI+S,GAAsB/oB,KAAK0pB,eAAeJ,QAAStpB,KAAK0pB,eAAelT,OAGrF9D,GAAAnS,UAAA2pB,iBAAP,SAAwB3b,EAAwB4b,EAA+BC,Gb8xExE,Ga3xEFtrB,GAA0BkB,KAAKgpB,gBAAgBza,EAAKyB,GAExD,IAAIlR,GAAK,KACRA,EAAIkB,KAAKgpB,gBAAgBza,EAAKyB,IAAM,GAAI/E,OAAc,EAEvDnM,GAAEqrB,GAAkBC,EAGd1X,GAAAnS,UAAA8pB,iBAAP,SAAwB9b,EAAwB4b,GAE/C,MAAwBnqB,MAAKgpB,gBAAgBza,EAAKyB,IAAKma,GAGjDzX,GAAAnS,UAAAiV,YAAP,WAEC,GAAI5Q,GAAqB5E,KAAK8U,gBAAgBlV,MAC9C,IAAIJ,GAAc,EAClB,KAAK,GAAIH,GAAmB,EAAGA,EAAIuF,EAAKvF,IACvCG,GAAQ,OAASQ,KAAKgV,gBAAgB3V,GAAK,IAAMW,KAAK8U,gBAAgBzV,GAAK,IAE5EG,IAAQ,OAASQ,KAAK0pB,eAAiB,QAAU1pB,KAAKuW,gBAAgBL,WAAa,IAEnF,IAAIlW,KAAK4U,aACRpV,GAAQ,OAASQ,KAAK4pB,eAAiB,QAAU5pB,KAAKuW,gBAAgBL,WAAa,IAEpF,OAAO1W,GAGDkT,GAAAnS,UAAAmV,mBAAP,WAEC,MAAO,OAAS1V,KAAKopB,qBAAuB,QAAUppB,KAAKopB,qBAAuB,QAAUppB,KAAK0pB,eAAiB,SAG5GhX,GAAAnS,UAAAqV,mBAAP,WAEC,GAAIpW,GAAc,EAClB,IAAIQ,KAAKuV,gBAAiB,CACzBvV,KAAKsqB,eAAiBtqB,KAAK2pB,yBAC3B3pB,MAAKqpB,oBAAoBrpB,KAAKsqB,eAAgB,EAC9CtqB,MAAKuqB,aAAevqB,KAAKwqB,gBACzBhrB,IAAQ,OAASQ,KAAKsqB,eAAiB,IAAMtqB,KAAKwpB,eAAiB,KAEpE,GAAIxpB,KAAKsV,gBAAiB,CACzBtV,KAAKyqB,eAAiBzqB,KAAK2pB,yBAC3B3pB,MAAKqpB,oBAAoBrpB,KAAKyqB,eAAgB,EAC9CzqB,MAAK0qB,aAAe1qB,KAAKwqB,gBACzBhrB,IAAQ,OAASQ,KAAKyqB,eAAiB,IAAMzqB,KAAKuW,gBAAkB,KAErE,MAAO/W,GAGDkT,GAAAnS,UAAAsV,iBAAP,WAEC,GAAIrW,GAAc,EAClB,IAAIQ,KAAKkV,wBAA0BlV,KAAKsV,iBAAmBtV,KAAKuV,iBAAkB,CACjF,GAAIvV,KAAKuV,gBACR/V,GAAQ,OAASQ,KAAKuqB,aAAe,IAAMvqB,KAAKsqB,eAAiB,IAClE,IAAItqB,KAAKsV,gBACR9V,GAAQ,OAASQ,KAAK0qB,aAAe,IAAM1qB,KAAKyqB,eAAiB,KAEnE,MAAOjrB,GAGDkT,GAAAnS,UAAA6V,wBAAP,SAA+BrI,GAE9B,GAAIvO,GAAc,EAClB,IAAIQ,KAAKkV,wBAA0BlV,KAAKsV,iBAAmBtV,KAAKuV,iBAAkB,CACjF,GAAIoV,GAAoC3qB,KAAKmpB,sBAAsBpb,EACnE/N,MAAK4qB,sBAAsBD,EAAa,EACxC,IAAI3qB,KAAKuV,gBACR/V,GAAQ,OAASmrB,EAAc,IAAMA,EAAc,IAAM3qB,KAAKuqB,aAAe,IAC9E,IAAIvqB,KAAKsV,gBACR9V,GAAQ,OAASmrB,EAAc,IAAMA,EAAc,IAAM3qB,KAAK0qB,aAAe,KAE/E,MAAOlrB,GAGAkT,GAAAnS,UAAA4oB,sBAAR,SAA8B3pB,GAE7B,GAAIqrB,GAAqBrrB,EAAKsrB,MAAM,QACpC,OAAO,IAAI/B,GAAsB8B,EAAK,GAAIE,SAASF,EAAK,KASzD1oB,QAAAC,eAAWsQ,EAAAnS,UAAA,qBbkwEJ8B,IalwEP,WAEC,MAAOrC,MAAKgrB,oBbmwENtoB,WAAY,KACZC,aAAc,MajwErBR,QAAAC,eAAWsQ,EAAAnS,UAAA,uBbowEJ8B,IapwEP,WAEC,MAAOrC,MAAKirB,sBbqwENvoB,WAAY,KACZC,aAAc,ManwEd+P,GAAAnS,UAAA8V,cAAP,WAECrW,KAAKgrB,mBAAqBhrB,KAAKoU,uBAAyBpU,KAAKwQ,oBAC7DxQ,MAAKirB,qBAAuBjrB,KAAK0U,yBAA2B1U,KAAKyU,sBACjEzU,MAAKua,mBAAmB3a,OAASI,KAAKgrB,mBAAmB,CACzDhrB,MAAK2a,qBAAqB/a,OAASI,KAAKirB,qBAAqB,EAGvDvY,GAAAnS,UAAA+V,eAAP,SAAsBE,EAAsBzP,EAAcE,EAAcE,EAAcW,GAA1C,GAAAf,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAE,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAE,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAW,QAAA,GAAY,CAAZA,EAAA,EAErF,GAAIojB,IAAyB1U,EAAQxW,KAAKwQ,sBAAsB,CAChExQ,MAAKua,mBAAmB2Q,KAAYnkB,CACpC/G,MAAKua,mBAAmB2Q,KAAYjkB,CACpCjH,MAAKua,mBAAmB2Q,KAAY/jB,CACpCnH,MAAKua,mBAAmB2Q,GAAUpjB,EAG5B4K,GAAAnS,UAAA4qB,wBAAP,SAA+B3U,EAAsB4U,GAEpD,GAAIF,IAAyB1U,EAAQxW,KAAKwQ,sBAAsB,CAChE,KAAK,GAAInR,GAAmB,EAAGA,EAAI+rB,EAAKxrB,OAAQP,IAC/CW,KAAKua,mBAAmB2Q,KAAYE,EAAK/rB,GAGpCqT,GAAAnS,UAAA8qB,yBAAP,SAAgC7U,EAAsB8U,GAErD,GAAIC,GAAwBD,EAAOC,OACnC,IAAIL,IAAyB1U,EAAQxW,KAAKwQ,sBAAsB,CAChExQ,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,GAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,GAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,GAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,GAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,EAC5CvrB,MAAKua,mBAAmB2Q,KAAYK,EAAQ,GAC5CvrB,MAAKua,mBAAmB2Q,GAAUK,EAAQ,IAIpC7Y,GAAAnS,UAAAirB,iBAAP,SAAwBhV,EAAsBzP,EAAcE,EAAcE,EAAcW,GAA1C,GAAAf,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAE,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAE,QAAA,GAAY,CAAZA,EAAA,EAAc,GAAAW,QAAA,GAAY,CAAZA,EAAA,EAEvF,GAAIojB,IAAyB1U,EAAQxW,KAAKyU,wBAAwB,CAClEzU,MAAK2a,qBAAqBuQ,KAAYnkB,CACtC/G,MAAK2a,qBAAqBuQ,KAAYjkB,CACtCjH,MAAK2a,qBAAqBuQ,KAAY/jB,CACtCnH,MAAK2a,qBAAqBuQ,GAAUpjB,EAEtC,OAAA4K,IAnQqCoW,EAqQrChpB,GAAgCJ,QAAvBgT,IbswEN+Y,wDAAwD,wDAAwDC,0DAA0D,4DAA4DxS,6DAA6D,SAASta,EAAQkB,EAAOJ,GAI9T,GcjhFMiT,GAAoB,WA2BzB,QA3BKA,KAME3S,KAAA2rB,eAAsC,GAAI1gB,OAAqB,EAC/DjL,MAAA4rB,gBAAoC,GAAI3gB,OAAkB,EAC1DjL,MAAA6rB,cAA+B,GAAI5gB,OAAe,EAMlDjL,MAAA+Y,qBAAsC,CAEtC/Y,MAAA8rB,aAAsBC,OAAOC,iBAE7BhsB,MAAAgZ,mBAAkD,GAAI/N,MAW5D,KAAK,GAAI5L,GAAmB,EAAGA,EAAI,EAAGA,IACrCW,KAAK6rB,cAAcxsB,GAAK,IAEzBW,MAAKisB,WAAatZ,EAAqBuZ,mBAGjCvZ,EAAApS,UAAAiX,iBAAP,SAAwBC,EAA6B0U,GAEpDnsB,KAAKosB,aAAe3U,CACpBzX,MAAKwT,qBAAuB2Y,CAC5BnsB,MAAKqsB,aAAe,GAAIphB,OAAcwM,EAAY0U,GAG5CxZ,GAAApS,UAAA+rB,qBAAP,SAA4B9V,EAAsB+V,EAA6BhrB,EAAairB,GAE3F,GAAIC,GAA8BlrB,EAAMmrB,UACxC,IAAIvkB,GAAkC5G,EAAM4G,OAE5C,IAAIwkB,GAAuB3sB,KAAK2rB,eAAec,EAC/C,KAAKE,GAAU3sB,KAAK4rB,gBAAgBa,IAAiBtkB,EAAS,CAC7DwkB,EAAS3sB,KAAK2rB,eAAec,GAAgBtkB,EAAQykB,mBAAmB5sB,KAAKosB,aAAcpsB,KAAKwT,qBAChGxT,MAAK4rB,gBAAgBa,GAAgBtkB,CACrCnI,MAAK6rB,cAAcY,GAAgB,KAEpC,GAAIzsB,KAAK6rB,cAAcY,GAAe,CACrCE,EAAOE,gBAAgB7sB,KAAKqsB,aAAc,EAAGrsB,KAAKosB,aAClDpsB,MAAK6rB,cAAcY,GAAgB,MAEpCtkB,EAAQyD,kBAAkB4K,EAAOmW,EAAQJ,EAAcC,GAGjD7Z,GAAApS,UAAAwC,QAAP,WAEC,MAAO/C,KAAK2rB,eAAe/rB,OAAQ,CAClC,GAAI6L,GAA6BzL,KAAK2rB,eAAemB,KAErD,IAAIrhB,EACHA,EAAa1I,WAIT4P,GAAApS,UAAAwsB,iBAAP,WAEC,IAAK,GAAI1tB,GAAmB,EAAGA,EAAI,EAAGA,IACrCW,KAAK6rB,cAAcxsB,GAAK,KAG1B8C,QAAAC,eAAWuQ,EAAApS,UAAA,cdi/EJ8B,Icj/EP,WAEC,MAAOrC,MAAKqsB,cdk/EN3pB,WAAY,KACZC,aAAc,Mch/ErBR,QAAAC,eAAWuQ,EAAApS,UAAA,edm/EJ8B,Icn/EP,WAEC,MAAOrC,MAAKosB,cdo/EN1pB,WAAY,KACZC,aAAc,Mcl/ErBR,QAAAC,eAAWuQ,EAAApS,UAAA,uBdq/EJ8B,Icr/EP,WAEC,MAAOrC,MAAKwT,sBds/EN9Q,WAAY,KACZC,aAAc,Mc7kFPgQ,GAAAuZ,iBAA0B,CAwFzC,OAAAvZ,KAEA7S,GAA8BJ,QAArBiT,Od2/EHqa,0DAA0D,SAASpuB,EAAQkB,EAAOJ,Ge9lFxF,GAAMutB,GAAiB,WAKtB,QALKA,GAKOC,EAAaC,GAGxB,GAAID,GAAQ,GAAKA,GAAQ,EACxB,KAAK,IAAK3tB,OAAM,2BACjBS,MAAKotB,MAAQF,CACbltB,MAAKqtB,OAASF,EAGfhrB,OAAAC,eAAW6qB,EAAA1sB,UAAA,Sf0lFJ8B,Ie1lFP,WAEC,MAAOrC,MAAKqtB,Qf2lFN3qB,WAAY,KACZC,aAAc,MezlFrBR,QAAAC,eAAW6qB,EAAA1sB,UAAA,Qf4lFJ8B,Ie5lFP,WAEC,MAAOrC,MAAKotB,Of6lFN1qB,WAAY,KACZC,aAAc,Me3lFtB,OAAAsqB,KAE2BntB,GAAAJ,QAAlButB,OfgmFH/G,kDAAkD,SAAStnB,EAAQkB,EAAOJ,GgB5nFhF,GAAOc,GAAQ5B,EAAiB,gCAChC,IAAO0uB,GAAU1uB,EAAgB,kCACjC,IAAO6B,GAAQ7B,EAAiB,gChBsoFhC,IgB5nFMod,GAAS,WAiBd,QAjBKA,KAUEhc,KAAAuhB,YAAyB,GAAI+L,EAK7BttB,MAAAwhB,YAAuB,GAAI/gB,GAa3Bub,EAAAzb,UAAAgtB,WAAP,SAAkBlpB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEjB,GAAIA,GAAU,KACbA,EAAS,GAAI7D,EAEdR,MAAKuhB,YAAYgM,WAAWlpB,EAC5BA,GAAOmpB,kBAAkBxtB,KAAKwhB,YAAYza,EAAG/G,KAAKwhB,YAAYva,EAAGjH,KAAKwhB,YAAYra,EAClF,OAAO9C,GAQD2X,GAAAzb,UAAAkG,SAAP,SAAgB2a,GAEf,GAAIoD,GAAgBpD,EAAKG,WACzB,IAAIkD,GAAcrD,EAAKI,WACvBxhB,MAAKuhB,YAAYxa,EAAIyd,EAAGzd,CACxB/G,MAAKuhB,YAAYta,EAAIud,EAAGvd,CACxBjH,MAAKuhB,YAAYpa,EAAIqd,EAAGrd,CACxBnH,MAAKuhB,YAAYzZ,EAAI0c,EAAG1c,CACxB9H,MAAKwhB,YAAYza,EAAI0d,EAAG1d,CACxB/G,MAAKwhB,YAAYva,EAAIwd,EAAGxd,CACxBjH,MAAKwhB,YAAYra,EAAIsd,EAAGtd,EAE1B,OAAA6U,KAEmBlc,GAAAJ,QAAVsc,IhBinFNrT,gCAAgCC,UAAU6kB,kCAAkC7kB,UAAUC,gCAAgCD,YAAYuQ,8DAA8D,SAASva,EAAQkB,EAAOJ,GAI3N,GiBrrFMkT,GAAqB,WAU1B,QAVKA,GAUO4D,EAAuBiC,EAAkBC,EAAiBC,EAAcb,GAEnF9X,KAAKwW,MAAQA,CACbxW,MAAKyY,UAAYA,CACjBzY,MAAK0tB,UAAYhV,EAAWC,CAC5B3Y,MAAK0Y,SAAWA,CAChB1Y,MAAK2Y,MAAQA,CACb3Y,MAAK2tB,iBAAmB7V,EAAS6V,gBACjC3tB,MAAKyX,YAAcK,EAASL,YAE9B,MAAA7E,KAEA9S,GAA+BJ,QAAtBkT,OjB8qFHgb,qDAAqD,SAAShvB,EAAQkB,EAAOJ,GkBvsFnF,GAAMmuB,GAAY,WAAlB,QAAMA,MAMN,MAAAA,KAEA/tB,GAAqBJ,QAAZmuB,OlBwsFHxU,+DAA+D,SAASza,EAAQkB,EAAOJ,GAI7F,GmBntFMoT,GAAsB,WAA5B,QAAMA,MAKSA,EAAAgb,OAAyB,CAKzBhb,GAAAc,aAA+B,CAK/Bd,GAAAiB,cAAgC,CAC/C,OAAAjB,KAEAhT,GAAgCJ,QAAvBoT,OnBqtFHsG,2DAA2D,SAASxa,EAAQkB,EAAOJ,GAKzF,GoB3uFMmT,GAAkB,WAAxB,QAAMA,MA8BN,MAAAA,KAE4B/S,GAAAJ,QAAnBmT,OpBmtFHkb,sDAAsD,SAASnvB,EAAQkB,EAAOJ,GAMpF,GqBxvFMsuB,GAAa,WAsBlB,QAtBKA,KAOEhuB,KAAAqkB,aAA8B,EAkBtC,MAAA2J,KAEAluB,GAAuBJ,QAAdsuB,OrB8uFH7H,qDAAqD,SAASvnB,EAAQkB,EAAOJ,GACnF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsBlxFtB,IAAOwM,GAASjO,EAAgB,oCAEhC,IAAOod,GAASpd,EAAgB,iDtB6xFhC,IsBjxFMqd,GAAY,SAAA5a,GAAStB,EAArBkc,EAAY5a,EAsBjB,SAtBK4a,KAwBJ5a,EAAA1B,KAAAK,KAEAA,MAAKkf,WAAa,GAAIjU,OAZvB9I,OAAAC,eAAW6Z,EAAA1b,UAAA,iBtBgxFJ8B,IsBhxFP,WAEC,MAAOrC,MAAKkf,WAAWtf,QtBixFjB8C,WAAY,KACZC,aAAc,MsBlwFrBR,QAAAC,eAAW6Z,EAAA1b,UAAA,atBwwFJ8B,IsBxwFP,WAEC,MAAO4Z,GAAa/N,WtBywFdxL,WAAY,KACZC,aAAc,MsBjwFdsZ,GAAA1b,UAAA0tB,kBAAP,SAAyBC,GAExB,GAAIC,GAAgCnuB,KAAKouB,uBAAuBF,EAChE,IAAIC,IAAmB,EACtB,MAAOnuB,MAAKkf,WAAWiP,OACvB,OAAO,MAWFlS,GAAA1b,UAAA6tB,uBAAP,SAA8BF,GtB+wFvB,GsBvwFFC,EACJ,IAAIE,EACJ,KAAK,GAAIhvB,GAAmBA,EAAIW,KAAKkf,WAAWtf,OAAQP,IAAK,CAC5DgvB,EAAYruB,KAAKkf,WAAW7f,EAC5B,IAAIgvB,EAAUjgB,MAAQ8f,EACrB,MAAOC,EACRA,KAGD,OAAQ,EAQFlS,GAAA1b,UAAAmH,MAAP,WAEC,GAAIA,GAAqB,GAAIuU,EAC7B,IAAImI,GAAgCpkB,KAAKkf,WAAWtf,MACpD,KAAK,GAAIP,GAAoB,EAAGA,EAAI+kB,EAAe/kB,IAAK,CACvD,GAAIivB,GAA2B,GAAItS,EACnC,IAAIuS,GAA0BvuB,KAAKkf,WAAW7f,EAC9CivB,GAAelgB,KAAOmgB,EAAcngB,IACpCkgB,GAAe7nB,SAAS8nB,EACxB7mB,GAAMwX,WAAW7f,GAAKivB,EAEvB,MAAO5mB,GAMDuU,GAAA1b,UAAAwC,QAAP,WAEC/C,KAAKkf,WAAWtf,OAAS,EArGZqc,GAAA/N,UAAmB,sBAuGlC,OAAA+N,IAzG2BpP,EA2G3B/M,GAAsBJ,QAAbuc,ItBswFNvN,oCAAoC9F,UAAUsd,iDAAiD,mDAAmDsI,iDAAiD,SAAS5vB,EAAQkB,EAAOJ,GAC9N,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuBl4FtB,IAAOwM,GAASjO,EAAgB,oCvB04FhC,IuBn4FM6vB,GAAQ,SAAAptB,GAAStB,EAAjB0uB,EAAQptB,EAsBb,SAtBKotB,KAwBJptB,EAAA1B,KAAAK,KAGAA,MAAKmhB,OAAS,GAAIlW,OAbnB9I,OAAAC,eAAWqsB,EAAAluB,UAAA,avBm4FJ8B,IuBn4FP,WAEC,MAAOrC,MAAKmhB,OAAOvhB,QvBo4Fb8C,WAAY,KACZC,aAAc,MuB/2Fd8rB,GAAAluB,UAAAmuB,cAAP,SAAqBR,GAEpB,GAAIS,GAA4B3uB,KAAK4uB,mBAAmBV,EACxD,IAAIS,IAAe,EAClB,MAAO3uB,MAAKmhB,OAAOwN,OACnB,OAAO,MAWFF,GAAAluB,UAAAquB,mBAAP,SAA0BV,GvB+3FnB,GuBv3FFS,EACJ,IAAIrK,EACJ,KAAK,GAAIjlB,GAAkBA,EAAIW,KAAKmhB,OAAOvhB,OAAQP,IAAK,CACvDilB,EAAQtkB,KAAKmhB,OAAO9hB,EACpB,IAAIilB,EAAMlW,MAAQ8f,EACjB,MAAOS,EACRA,KAGD,OAAQ,EAMFF,GAAAluB,UAAAwC,QAAP,WAEC/C,KAAKmhB,OAAOvhB,OAAS,EAMtBuC,QAAAC,eAAWqsB,EAAAluB,UAAA,avBo3FJ8B,IuBp3FP,WAEC,MAAOosB,GAASvgB,WvBq3FVxL,WAAY,KACZC,aAAc,MuB38FP8rB,GAAAvgB,UAAmB,kBAuFlC,OAAAugB,IAzFuB5hB,EA2FL/M,GAAAJ,QAAT+uB,IvB03FN/f,oCAAoC9F,YAAYye,4DAA4D,SAASzoB,EAAQkB,EAAOJ,GAMvI,GwBh+FM4mB,GAAmB,WAAzB,QAAMA,MAKSA,EAAAuI,SAAkB,UAKlBvI,GAAAM,SAAkB,UACjC,OAAAN,KAEAxmB,GAA6BJ,QAApB4mB,OxBm+FHwI,+DAA+D,SAASlwB,EAAQkB,EAAOJ,GAC7F,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyB1/FtB,IAAOI,GAAQ7B,EAAiB,gCAEhC,IAAOmwB,GAAiBnwB,EAAc,uDzB+/FtC,IyB1/FMowB,GAAqB,SAAA3tB,GAAStB,EAA9BivB,EAAqB3tB,EAwF1B,SAxFK2tB,KA0FJ3tB,EAAA1B,KAAAK,KAxFMA,MAAAivB,UAAoB,IACpBjvB,MAAAkvB,gBAAkC,CAGlClvB,MAAAmvB,cAAwB,IACxBnvB,MAAAovB,mBAA6B,KAC7BpvB,MAAAqvB,YAA8B,CAE9BrvB,MAAAsvB,YAA4B,GAAIrkB,MAEhCjL,MAAAuvB,aAAwB,GAAI9uB,EAE5BT,MAAAwvB,eAAyB,KAKhCrtB,OAAAC,eAAW4sB,EAAAzuB,UAAA,WzB4/FJ8B,IyB5/FP,WAEC,MAAOrC,MAAKivB,WzB6/FN1sB,IyB1/FP,SAAmBC,GAElB,GAAIxC,KAAKivB,WAAazsB,EACrB,MAEDxC,MAAKivB,UAAYzsB,CAEjBxC,MAAKmvB,cAAgB,MzBy/FfzsB,WAAY,KACZC,aAAc,MyBn/FrBR,QAAAC,eAAW4sB,EAAAzuB,UAAA,oBzB0/FJ8B,IyB1/FP,WAEC,MAAOrC,MAAKovB,oBzB2/FN7sB,IyBx/FP,SAA4BC,GAE3B,GAAIxC,KAAKovB,oBAAsB5sB,EAC9B,MAEDxC,MAAKovB,mBAAqB5sB,CAE1BxC,MAAKmvB,cAAgB,MzBu/FfzsB,WAAY,KACZC,aAAc,MyBr/FrBR,QAAAC,eAAW4sB,EAAAzuB,UAAA,iBzBw/FJ8B,IyBx/FP,WAEC,GAAIrC,KAAKmvB,cACRnvB,KAAKyvB,gBAEN,OAAOzvB,MAAKkvB,iBzBw/FNxsB,WAAY,KACZC,aAAc,MyBt/FrBR,QAAAC,eAAW4sB,EAAAzuB,UAAA,czBy/FJ8B,IyBz/FP,WAEC,GAAIrC,KAAKmvB,cACRnvB,KAAKyvB,gBAEN,OAAOzvB,MAAKuvB,czBy/FN7sB,WAAY,KACZC,aAAc,MyBv/FrBR,QAAAC,eAAW4sB,EAAAzuB,UAAA,azB0/FJ8B,IyB1/FP,WAEC,GAAIrC,KAAKmvB,cACRnvB,KAAKyvB,gBAEN,OAAOzvB,MAAK0vB,azB0/FNhtB,WAAY,KACZC,aAAc,MyBr/FrBR,QAAAC,eAAW4sB,EAAAzuB,UAAA,azB2/FJ8B,IyB3/FP,WAEC,MAAOrC,MAAKsvB,azB4/FN5sB,WAAY,KACZC,aAAc,MyB7+FdqsB,GAAAzuB,UAAAkvB,eAAP,WAECzvB,KAAKmvB,cAAgB,KAErBnvB,MAAK0vB,YAAe1vB,KAAuB,mBAAGA,KAAKqvB,YAAcrvB,KAAKqvB,YAAc,CAEpFrvB,MAAKkvB,gBAAkB,CACvBlvB,MAAKuvB,aAAaxoB,EAAI,CACtB/G,MAAKuvB,aAAatoB,EAAI,CACtBjH,MAAKuvB,aAAapoB,EAAI,EAExB,OAAA6nB,IA7GoCD,EA+GpCjvB,GAA+BJ,QAAtBsvB,IzBo/FNnmB,gCAAgCD,UAAU+mB,uDAAuD/mB,YAAYgnB,kEAAkE,SAAShxB,EAAQkB,EAAOJ,GAC1M,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0B/mGtB,IAAOI,GAAQ7B,EAAiB,gCAQhC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOkxB,GAAyBlxB,EAAY,mE1B8mG5C;G0BzmGMmxB,GAAwB,SAAA1uB,GAAStB,EAAjCgwB,EAAwB1uB,EAiB7B,SAjBK0uB,GAiBOpc,EAAsBqc,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjC3uB,EAAA1B,KAAAK,KAAM,uBAAwB2T,EAAM,EAEpC3T,MAAKiwB,aAAeH,CAEpB9vB,MAAKkwB,cAAgBF,GAAgB,GAAIvvB,GAMnCsvB,EAAAxvB,UAAA4vB,mBAAP,SAA0BtiB,EAA+BqG,GAExD,GAAIkc,GAA2CpwB,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACtKpc,GAAuBgW,iBAAiBlqB,KAAM8vB,EAA0BS,mBAAoBH,EAAkB5Z,MAE9G,IAAIqU,GAA6B3W,EAAuByV,yBACxDzV,GAAuBmV,oBAAoBwB,EAAM,EAEjD,IAAIrrB,GAAc,OAASqrB,EAAO,IAAM3W,EAAuB2V,WAAa,IAAMuG,EAAoB,IAEtG,IAAIlc,EAAuBU,aAAc,CACxC,GAAI8G,GAA8BxH,EAAuByV,yBACzDnqB,IAAQ,OAASkc,EAAQ,IAAMmP,EAAO,IAAM3W,EAAuBuV,eAAiB,IACpFjqB,IAAQ,OAAS0U,EAAuB0V,eAAiB,QAAUlO,EAAQ,QAAUxH,EAAuB0V,eAAiB,SAE9H1V,EAAuBsc,sBAAsB3F,EAE7CrrB,IAAQ,OAASqrB,EAAO,IAAMA,EAAO,IAAM3W,EAAuB2V,WAAa,IAC/ErqB,IAAQ,OAAS0U,EAAuBwV,eAAiB,QAAUmB,EAAO,IAAM3W,EAAuBwV,eAAiB,QACxH,OAAOlqB,GAMDuwB,GAAAxvB,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAmCA,GAAS7gB,kBAAkB5P,MAMxD+vB,GAAAxvB,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIC,GAA4BD,EAAMX,EAAyBa,sBAC/D,KAAKD,EACJ,KAAM,IAAIpxB,OAAM,eAAiBwwB,EAAyBa,sBAAwB,aAEnF5wB,MAAK6wB,UAAU,GAAKF,EAAiB5pB,EAAE,CACvC/G,MAAK6wB,UAAU,GAAKF,EAAiB1pB,EAAE,CACvCjH,MAAK6wB,UAAU,GAAKF,EAAiBxpB,EAAE,EA7D1B4oB,GAAAa,sBAA+B,sBA+D9C,OAAAb,IAxEuCF,EA0EvC/vB,GAAkCJ,QAAzBqwB,I1B2lGNlnB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDC,mEAAmE,qEAAqEC,iEAAiE,SAASpyB,EAAQkB,EAAOJ,GAC5f,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2BzrGtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmqB,GAAqBnqB,EAAa,0DAGzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOqyB,GAAwBryB,EAAa,kE3ByrG5C,I2BprGMsyB,GAAuB,SAAA7vB,GAAStB,EAAhCmxB,EAAuB7vB,EA0B5B,SA1BK6vB,GA0BOvd,EAAsBwd,EAA8BC,GAA9B,GAAAD,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/D/vB,EAAA1B,KAAAK,KAAM,sBAAuB2T,EAAM,EAEnC3T,MAAKiwB,aAAegB,CAEpBjxB,MAAKqxB,eAAiBF,GAAgB,GAAI1wB,EAC1CT,MAAKsxB,WAAaF,GAAY,GAAI3wB,GAM5BywB,EAAA3wB,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAIqd,GAAsCvxB,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACjKpc,GAAuBgW,iBAAiBlqB,KAAMixB,EAAyBO,qBAAsBD,EAAa/a,MAE1G,IAAIib,GAAkCzxB,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBAC7Jpc,GAAuBgW,iBAAiBlqB,KAAMixB,EAAyBS,iBAAkBD,EAASjb,MAElG,IAAIqU,GAA6B3W,EAAuByV,yBACxD,IAAIgI,GAAiC,GAAI5I,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACzF,IAAIob,GAA+B,GAAI7I,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACvF,IAAIqb,GAAkC,GAAI9I,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EAC1FtC,GAAuBmV,oBAAoBwB,EAAM,EACjD,IAAInP,GAA8BxH,EAAuByV,yBACzD,IAAImI,GAAiC,GAAI/I,GAAsBrN,EAAM4N,QAAS5N,EAAMlF,MACpFtC,GAAuBsc,sBAAsB3F,EAE7C,IAAIrrB,GAAc,EAClBA,IAAQ,OAASmyB,EAAW,IAAMzd,EAAuBsV,eAAiB,IAAMtV,EAAuB4V,WAAa,IACpHtqB,IAAQ,OAASoyB,EAAS,IAAM1d,EAAuB4V,WAAa,IAAM5V,EAAuB4V,WAAa,IAE9GtqB,IAAQ,OAASqyB,EAAY,IAAM3d,EAAuB4V,WAAa,IAAM6H,EAAW,IACxFnyB,IAAQ,OAASqyB,EAAY,IAAMA,EAAY,IAAM3d,EAAuBuV,eAAiB,IAC7FjqB,IAAQ,OAASsyB,EAAW,QAAUD,EAAY,IAAMN,EAAe,IACvE/xB,IAAQ,OAAS0U,EAAuBwV,eAAiB,QAAUoI,EAAW,QAAU5d,EAAuBwV,eAAiB,QAChIlqB,IAAQ,OAASsyB,EAAW,QAAUF,EAAS,IAAMH,EAAW,IAChEjyB,IAAQ,OAAS0U,EAAuBwV,eAAiB,QAAUoI,EAAW,QAAU5d,EAAuBwV,eAAiB,QAEhI,IAAIxV,EAAuBU,aAAc,CACxCpV,GAAQ,OAASoyB,EAAS,IAAM1d,EAAuB4V,WAAa,IAAM5V,EAAuBuV,eAAiB,IAClHjqB,IAAQ,OAASqyB,EAAY,IAAM3d,EAAuBsV,eAAiB,IAAMoI,EAAS,IAC1FpyB,IAAQ,OAASqyB,EAAY,IAAM3d,EAAuBuV,eAAiB,IAAMoI,EAAY,IAC7FryB,IAAQ,OAASsyB,EAAW,QAAUP,EAAe,IAAMM,EAAY,IACvEryB,IAAQ,OAAS0U,EAAuB0V,eAAiB,QAAUkI,EAAW,QAAU5d,EAAuB0V,eAAiB,QAChIpqB,IAAQ,OAASsyB,EAAW,QAAUL,EAAW,IAAMG,EAAS,IAChEpyB,IAAQ,OAAS0U,EAAuB0V,eAAiB,QAAUkI,EAAW,QAAU5d,EAAuB0V,eAAiB,SAGjI,MAAOpqB,GAMD0xB,GAAA3wB,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAkCA,GAAS7gB,kBAAkB5P,MAMvDkxB,GAAA3wB,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIqB,GAAyBrB,EAAMQ,EAAwBc,wBAC3D,KAAKD,EACJ,KAAM,IAAIxyB,OAAM,eAAiB2xB,EAAwBc,wBAA0B,aAEpF,IAAIC,GAAqBvB,EAAMQ,EAAwBgB,oBACvD,KAAKD,EACJ,KAAM,IAAI1yB,OAAM,eAAiB2xB,EAAwBgB,oBAAsB,aAEhFlyB,MAAK6wB,UAAU,GAAKkB,EAAchrB,CAClC/G,MAAK6wB,UAAU,GAAKkB,EAAc9qB,CAClCjH,MAAK6wB,UAAU,GAAKkB,EAAc5qB,CAClCnH,MAAK6wB,UAAU,GAAKoB,EAAUlrB,CAC9B/G,MAAK6wB,UAAU,GAAKoB,EAAUhrB,CAC9BjH,MAAK6wB,UAAU,GAAKoB,EAAU9qB,EA/FjB+pB,GAAAc,wBAAiC,uBAMjCd,GAAAgB,oBAA6B,mBA2F5C,OAAAhB,IA5GsCrB,EA8GtC/vB,GAAiCJ,QAAxBwxB,I3BiqGNroB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDqB,kEAAkE,kEAAkEzG,0DAA0D,4DAA4D0G,+DAA+D,SAASxzB,EAAQkB,EAAOJ,GAC5mB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4B1xGtB,IAAOyS,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOyzB,GAAsBzzB,EAAa,gE5BgyG1C,I4B3xGM0zB,GAAqB,SAAAjxB,GAAStB,EAA9BuyB,EAAqBjxB,EAQ1B,SARKixB,GAQOC,GAAA,GAAAA,QAAA,GAA6B,CAA7BA,EAAA,KAEXlxB,EAAA1B,KAAAK,KAAM,oBAAqB8S,EAAuBgb,OAAQ,EAAG,EAE7D9tB,MAAKiwB,aAAeoC,CAEpBryB,MAAKwyB,gBAAkBD,EAMjBD,EAAA/xB,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAIue,GAA+Cve,EAAuBqV,uBAC1ErV,GAAuBgW,iBAAiBlqB,KAAMqyB,EAAuBK,aAAcD,EAAuBjc,MAC1GtC,GAAuBqV,uBACvBrV,GAAuBqV,uBACvBrV,GAAuBqV,uBAEvB,IAAIsB,GAA6B3W,EAAuByV,yBAExD,IAAInqB,GAAc,OAASqrB,EAAO,QAAU3W,EAAuBkV,qBAAuB,IAAMqJ,EAAyB,KACnH,OAASve,EAAuBkV,qBAAuB,QAAUyB,EAAO,IAE9E,IAAI8H,EACJ,KAAK,GAAItzB,GAAoB,EAAGA,EAAI6U,EAAuB+U,kBAAkBrpB,OAAQP,IAAK,CACzFszB,EAAwBze,EAAuB+U,kBAAkB5pB,EACjEG,IAAQ,OAASqrB,EAAO,QAAU8H,EAAwB,IAAMF,EAAyB,KACvF,OAASE,EAAwB,QAAUA,EAAwB,KAGtE,MAAOnzB,GAMD8yB,GAAA/xB,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAgCA,GAAS7gB,kBAAkB5P,MAMrDsyB,GAAA/xB,UAAAmT,0BAAP,SAAiCgG,GAEhCA,EAAqB7E,aAAe,KAEtC,OAAAyd,IA1DoCzC,EA4DL/vB,GAAAJ,QAAtB4yB,I5B6wGNjZ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD8B,gEAAgE,kEAAkEC,2DAA2D,SAASj0B,EAAQkB,EAAOJ,GACtc,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6B91GtB,IAAOyyB,GAAcl0B,EAAe,sCAQpC,IAAOoU,GAAoBpU,EAAc,uDAEzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOm0B,GAAkBn0B,EAAc,4D7B41GvC,I6Bv1GMo0B,GAAiB,SAAA3xB,GAAStB,EAA1BizB,EAAiB3xB,EA6CtB,SA7CK2xB,GA6COrf,EAAsBsf,EAA+BC,EAA2BC,EAA2BC,EAA2BC,EAAkCC,EAAgCC,EAA0BC,GAA5M,GAAAP,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAE7OnyB,EAAA1B,KAAAK,KAAM,gBAAiB2T,EAAOsf,GAAkBC,EAAa,GAAK,EAAGlgB,EAAqB2C,eAE1F3V,MAAKiwB,aAAe8C,CAEpB/yB,MAAKyzB,iBAAmBR,CACxBjzB,MAAK0zB,aAAeR,CACpBlzB,MAAK2zB,YAAcR,CACnBnzB,MAAK4zB,YAAcR,CAEnBpzB,MAAK6zB,aAAeR,GAAc,GAAIP,EACtC9yB,MAAK8zB,WAAaR,GAAY,GAAIR,EAClC9yB,MAAK+zB,gBAAkBR,CACvBvzB,MAAKg0B,aAAeR,EAMdR,EAAAzyB,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI1U,GAAc,EAClB,IAAI0U,EAAuBgB,sBAAuB,CACjD,GAAI2V,GAA6B3W,EAAuByV,yBAExD,IAAI3pB,KAAK2zB,YAAa,CACrB,GAAIM,GAAmC/f,EAAuBqV,uBAC9DrV,GAAuBgW,iBAAiBlqB,KAAM+yB,EAAmBmB,YAAaD,EAAWzd,MAEzFtC,GAAuBmV,oBAAoBwB,EAAM,EACjD,IAAIsJ,GAA4BjgB,EAAuBkgB,yBACvDlgB,GAAuBsc,sBAAsB3F,EAE7CrrB,IAAQ,OAAS20B,EAAM,IAAMjgB,EAAuB2V,WAAa,IAAMoK,EAAa,MAEpF,IAAIj0B,KAAK4zB,YACRp0B,GAAQ,OAAS20B,EAAM,IAAMA,EAAM,IAAMF,EAAa,MAEvDz0B,IAAQ,OAAS20B,EAAM,IAAMA,EAAM,KAGpC,GAAIn0B,KAAKyzB,iBAAkB,CAC1B,GAAIY,GAA8Cr0B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACzK,IAAIgE,GAA8Ct0B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBAEzKpc,GAAuBgW,iBAAiBlqB,KAAM+yB,EAAmBwB,uBAAwBF,EAAqB7d,MAC9GtC,GAAuBgW,iBAAiBlqB,KAAM+yB,EAAmByB,uBAAwBF,EAAqB9d,MAE9GhX,IAAQ,OAASqrB,EAAO,IAAMyJ,EAAuB,KAAOt0B,KAAK2zB,YAAaQ,EAAMjgB,EAAuB4V,YAAc,IACzHtqB,IAAQ,OAASqrB,EAAO,IAAMA,EAAO,IAAMwJ,EAAuB,IAClE70B,IAAQ,OAAS0U,EAAuBoW,eAAiB,IAAMO,EAAO,IAAM3W,EAAuBoW,eAAiB,KAGrH,GAAItqB,KAAK0zB,aAAc,CACtB,GAAIe,GAA0Cz0B,KAAKqwB,QAAUvd,EAAuBc,aAAeM,EAAuBoc,yBAA2Bpc,EAAuBqV,uBAC5K,IAAImL,GAA0C10B,KAAKqwB,QAAUvd,EAAuBc,aAAeM,EAAuBoc,yBAA2Bpc,EAAuBqV,uBAE5KrV,GAAuBgW,iBAAiBlqB,KAAM+yB,EAAmB4B,mBAAoBF,EAAiBje,MACtGtC,GAAuBgW,iBAAiBlqB,KAAM+yB,EAAmB6B,mBAAoBF,EAAiBle,MAEtGhX,IAAQ,OAASqrB,EAAO,IAAM6J,EAAmB,KAAO10B,KAAK2zB,YAAaQ,EAAMjgB,EAAuB4V,YAAc,IACrHtqB,IAAQ,OAASqrB,EAAO,IAAMA,EAAO,IAAM4J,EAAmB,IAC9Dj1B,IAAQ,OAAS0U,EAAuBuW,eAAiB,IAAMI,EAAO,IAAM3W,EAAuBuW,eAAiB,MAItH,MAAOjrB,GAMDwzB,GAAAzyB,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA4BA,GAAS7gB,kBAAkB5P,MAMjDgzB,GAAAzyB,UAAAmT,0BAAP,SAAiCgG,GAEhC,GAAI1Z,KAAKyzB,iBACR/Z,EAAqBnE,gBAAkB,IACxC,IAAIvV,KAAK0zB,aACRha,EAAqBpE,gBAAkB,KAMlC0d,GAAAzyB,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAI2C,GAA4B3C,EAAMsC,EAAkB6B,2BACxD,KAAKxB,EACJ,KAAK,IAAK9zB,OAAM,eAAiByzB,EAAkB6B,2BAA6B,aAEjF,IAAIvB,GAA0B5C,EAAMsC,EAAkB8B,yBACtD,KAAKxB,EACJ,KAAK,IAAK/zB,OAAM,eAAiByzB,EAAkB8B,yBAA2B,aAE/E,IAAIz1B,GAAoB,CAExB,KAAKW,KAAK2zB,YAAa,CAEtB,GAAI3zB,KAAKyzB,iBAAkB,CAC1BzzB,KAAK6wB,UAAUxxB,KAAOg0B,EAAW0B,aACjC/0B,MAAK6wB,UAAUxxB,KAAOg0B,EAAW2B,eACjCh1B,MAAK6wB,UAAUxxB,KAAOg0B,EAAW4B,cACjCj1B,MAAK6wB,UAAUxxB,KAAOg0B,EAAW6B,eACjCl1B,MAAK6wB,UAAUxxB,KAAOi0B,EAASyB,cAAgB1B,EAAW0B,aAC1D/0B,MAAK6wB,UAAUxxB,KAAOi0B,EAAS0B,gBAAkB3B,EAAW2B,eAC5Dh1B,MAAK6wB,UAAUxxB,KAAOi0B,EAAS2B,eAAiB5B,EAAW4B,cAC3Dj1B,MAAK6wB,UAAUxxB,KAAOi0B,EAAS4B,gBAAkB7B,EAAW6B,gBAI7D,GAAIl1B,KAAK0zB,aAAc,CACtB1zB,KAAK6wB,UAAUxxB,KAAOg0B,EAAW8B,UAAU,GAC3Cn1B,MAAK6wB,UAAUxxB,KAAOg0B,EAAW+B,YAAY,GAC7Cp1B,MAAK6wB,UAAUxxB,KAAOg0B,EAAWgC,WAAW,GAC5Cr1B,MAAK6wB,UAAUxxB,KAAOg0B,EAAWiC,YAAY,GAC7Ct1B,MAAK6wB,UAAUxxB,MAAQi0B,EAAS6B,UAAY9B,EAAW8B,WAAW,GAClEn1B,MAAK6wB,UAAUxxB,MAAQi0B,EAAS8B,YAAc/B,EAAW+B,aAAa,GACtEp1B,MAAK6wB,UAAUxxB,MAAQi0B,EAAS+B,WAAahC,EAAWgC,YAAY,GACpEr1B,MAAK6wB,UAAUxxB,MAAQi0B,EAASgC,YAAcjC,EAAWiC,aAAa,SAEjE,CAEN,GAAIt1B,KAAKyzB,iBAAkB,CAC1BzzB,KAAK6wB,UAAUxxB,MAAQg0B,EAAW0B,cAAgBzB,EAASyB,eAAe,CAC1E/0B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW2B,gBAAkB1B,EAAS0B,iBAAiB,CAC9Eh1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW4B,eAAiB3B,EAAS2B,gBAAgB,CAC5Ej1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW6B,gBAAkB5B,EAAS4B,iBAAiB,CAC9El1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW0B,cAAgBzB,EAASyB,eAAe,CAC1E/0B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW2B,gBAAkB1B,EAAS0B,iBAAiB,CAC9Eh1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW4B,eAAiB3B,EAAS2B,gBAAgB,CAC5Ej1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW6B,gBAAkB5B,EAAS4B,iBAAiB,EAI/E,GAAIl1B,KAAK0zB,aAAc,CACtB1zB,KAAK6wB,UAAUxxB,MAAQg0B,EAAW8B,UAAY7B,EAAS6B,YAAY,IAAI,EACvEn1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW+B,YAAc9B,EAAS8B,cAAc,IAAI,EAC3Ep1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAWgC,WAAa/B,EAAS+B,aAAa,IAAI,EACzEr1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAWiC,YAAchC,EAASgC,cAAc,IAAI,EAC3Et1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW8B,UAAY7B,EAAS6B,YAAY,IAAI,EACvEn1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAW+B,YAAc9B,EAAS8B,cAAc,IAAI,EAC3Ep1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAWgC,WAAa/B,EAAS+B,aAAa,IAAI,EACzEr1B,MAAK6wB,UAAUxxB,MAAQg0B,EAAWiC,YAAchC,EAASgC,cAAc,IAAI,KA3KhEtC,GAAA6B,2BAAoC,0BAMpC7B,GAAA8B,yBAAkC,wBA0KjD,OAAA9B,IAxMgCnD,EA0ML/vB,GAAAJ,QAAlBszB,I7BizGNuC,sCAAsC3sB,UAAU6J,uDAAuD,uDAAuD4G,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD0E,4DAA4D,8DAA8DC,4DAA4D,SAAS72B,EAAQkB,EAAOJ,GAC7lB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8B1gHtB,IAAO2S,GAAoBpU,EAAc,uDAEzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO82B,GAAmB92B,EAAc,6D9B+gHxC,I8B1gHM+2B,GAAkB,SAAAt0B,GAAStB,EAA3B41B,EAAkBt0B,EAkBvB,SAlBKs0B,GAkBOC,EAA6BC,EAA6BC,GAA1D,GAAAF,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAErEz0B,EAAA1B,KAAAK,KAAM,iBAAkB8S,EAAuBiB,cAAgB6hB,GAAgBC,EAAe,EAAI,EAAG7iB,EAAqByC,cAE1HzV,MAAKiwB,aAAeyF,CAEpB11B,MAAK+1B,eAAiBH,CACtB51B,MAAKg2B,eAAiBH,CACtB71B,MAAKi2B,SAAWH,EAOVH,EAAAp1B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,G9BigHjD,G8B9/GF1U,GAAc,EAClB,IAAIQ,KAAKg2B,eAAgB,CACxB,GAAIE,GAA0ChiB,EAAuBoc,wBACrEpc,GAAuBgW,iBAAiBlqB,KAAM01B,EAAoBS,sBAAuBD,EAAkB1f,MAE3G,IAAIiF,GAA8BvH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB5N,EAAO,EAClD,IAAIC,GAA8BxH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB3N,EAAO,EAClD,IAAI0a,GAA8BliB,EAAuByV,yBAEzD,IAAI0M,EACJ,IAAIniB,EAAuBW,aAAc,CACxCX,EAAuBmV,oBAAoB+M,EAAO,EAClDC,GAAQniB,EAAuByV,0BAGhCzV,EAAuBsc,sBAAsB/U,EAC7CvH,GAAuBsc,sBAAsB9U,EAC7C,IAAIxH,EAAuBW,aAC1BX,EAAuBsc,sBAAsB4F,EAE9C,IAAIxxB,GAAqBsP,EAAuB+U,kBAAkBrpB,MAClE,IAAIP,EAGJG,IAAQ,OAASic,EAAQ,IAAMvH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASic,EAAQ,MAAQvH,EAAuBsV,eAAiB,IACzEhqB,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,MAAQF,EAAoB,MACrD12B,IAAQ,OAAS42B,EAAQ,MAAQF,EAAoB,MACrD12B,IAAQ,OAASkc,EAAQ,MAAQxH,EAAuBqC,gBAAkB,IAC1E/W,IAAQ,OAASkc,EAAQ,MAAQ0a,EAAQ,MACzC52B,IAAQ,OAASkc,EAAQ,MAAQ0a,EAAQ,MAEzC,IAAIliB,EAAuBW,aAC1BrV,GAAQ,OAAS62B,EAAQ,QAAUniB,EAAuBwV,eAAiB,QAAUjO,EAAQ,SACzF,CACJjc,GAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAU3N,EAAQ,IACzI,KAAKpc,EAAI,EAAGA,EAAIuF,EAAKvF,IACpBG,GAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,QAAU6U,EAAuB+U,kBAAkB5pB,GAAK,IAAMoc,EAAQ,KAIvIjc,GAAQ,OAASic,EAAQ,IAAMvH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASic,EAAQ,MAAQya,EAAoB,MACrD12B,IAAQ,OAASic,EAAQ,MAAQya,EAAoB,MACrD12B,IAAQ,OAASkc,EAAQ,IAAMxH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASkc,EAAQ,MAAQxH,EAAuBsV,eAAiB,IACzEhqB,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,MAAQ3a,EAAQ,MACzCjc,IAAQ,OAAS42B,EAAQ,MAAQ3a,EAAQ,MAEzC,IAAIvH,EAAuBW,aAC1BrV,GAAQ,OAAS62B,EAAQ,QAAUA,EAAQ,QAAU5a,EAAQ,SACzD,CACJjc,GAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAU3N,EAAQ,IACzI,KAAKpc,EAAI,EAAGA,EAAIuF,EAAKvF,IACpBG,GAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,QAAU6U,EAAuB+U,kBAAkB5pB,GAAK,IAAMoc,EAAQ,KAIvIjc,GAAQ,OAASkc,EAAQ,IAAMxH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASkc,EAAQ,MAAQwa,EAAoB,MACrD12B,IAAQ,OAASkc,EAAQ,MAAQwa,EAAoB,MACrD12B,IAAQ,OAASic,EAAQ,IAAMvH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASic,EAAQ,MAAQC,EAAQ,MACzClc,IAAQ,OAASic,EAAQ,MAAQC,EAAQ,MACzClc,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,MAAQliB,EAAuBsV,eAAiB,IAEzE,IAAItV,EAAuBW,aAAc,CACxCrV,GAAQ,OAAS62B,EAAQ,QAAUA,EAAQ,QAAU5a,EAAQ,IAC7Djc,IAAQ,OAAS62B,EAAQ,QAAUA,EAAQ,QAAUniB,EAAuBwV,eAAiB,QAC7FlqB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUiN,EAAQ,QAAUniB,EAAuBkV,qBAAuB,aACnI,CACN5pB,GAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAU3N,EAAQ,IACzI,KAAKpc,EAAI,EAAGA,EAAIuF,EAAKvF,IACpBG,GAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,QAAU6U,EAAuB+U,kBAAkB5pB,GAAK,IAAMoc,EAAQ,MAKxI,GAAIzb,KAAK+1B,eAAgB,CACxB,GAAI7M,GAA0ChV,EAAuBoc,wBACrEpc,GAAuBgW,iBAAiBlqB,KAAM01B,EAAoBY,sBAAuBpN,EAAkB1S,MAC3GhX,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUF,EAAoB,IAAMhV,EAAuBkV,qBAAuB,SAGlJ,MAAO5pB,GAMDm2B,GAAAp1B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA6BA,GAAS7gB,kBAAkB5P,MAE1D,OAAA21B,IAvIiC9F,EAyIjC/vB,GAA4BJ,QAAnBi2B,I9Bm/GNljB,uDAAuD,uDAAuD4G,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDyF,6DAA6D,+DAA+DC,kEAAkE,SAAS53B,EAAQkB,EAAOJ,GACrjB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+BjpHtB,IAAOyyB,GAAcl0B,EAAe,sCAQpC,IAAOoU,GAAoBpU,EAAc,uDAEzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO63B,GAAyB73B,EAAY,mE/B+oH5C,I+B1oHM83B,GAAwB,SAAAr1B,GAAStB,EAAjC22B,EAAwBr1B,EAgB7B,SAhBKq1B,GAgBO/iB,EAAsBsf,EAA+BC,EAA4ByD,GAA3D,GAAA1D,QAAA,GAA6B,CAA7BA,EAAA,KAA+B,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,MAA4B,GAAAyD,QAAA,GAAkC,CAAlCA,EAAA,KAE5Ft1B,EAAA1B,KAAAK,KAAM,uBAAwB2T,EAAOsf,GAAkBC,EAAa,EAAI,EAAGlgB,EAAqB2C,eAEhG3V,MAAKiwB,aAAewG,CAEpBz2B,MAAKyzB,iBAAmBR,CACxBjzB,MAAK0zB,aAAeR,CACpBlzB,MAAK42B,eAAiBD,GAAgB,GAAI7D,GAMpC4D,EAAAn2B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI1U,GAAc,EAClB,IAAI0U,EAAuBgB,sBAAuB,CAEjD,GAAIlV,KAAKyzB,iBAAkB,CAC1B,GAAIoD,GAAyC72B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACpKpc,GAAuBgW,iBAAiBlqB,KAAMy2B,EAA0BK,iBAAkBD,EAAgBrgB,MAE1GhX,IAAQ,OAAS0U,EAAuBoW,eAAiB,IAAMuM,EAAkB,IAAM3iB,EAAuBoW,eAAiB,KAGhI,GAAItqB,KAAK0zB,aAAc,CACtB,GAAIqD,GAAqC/2B,KAAKqwB,QAAUvd,EAAuBc,aAAeM,EAAuBoc,yBAA2Bpc,EAAuBqV,uBACvKrV,GAAuBgW,iBAAiBlqB,KAAMy2B,EAA0BO,aAAcD,EAAYvgB,MAElGhX,IAAQ,OAAS0U,EAAuBuW,eAAiB,IAAMsM,EAAc,IAAM7iB,EAAuBuW,eAAiB,MAI7H,MAAOjrB,GAMDk3B,GAAAn2B,UAAAmT,0BAAP,SAAiCgG,GAEhC,GAAI1Z,KAAKyzB,iBACR/Z,EAAqBnE,gBAAkB,IACxC,IAAIvV,KAAK0zB,aACRha,EAAqBpE,gBAAkB,KAMlCohB,GAAAn2B,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIiG,GAA8BjG,EAAMgG,EAAyBO,6BACjE,KAAKN,EACJ,KAAK,IAAKp3B,OAAM,eAAiBm3B,EAAyBO,6BAA+B,aAE1F,IAAI53B,GAAoB,CAGxB,IAAIW,KAAKyzB,iBAAkB,CAC1BzzB,KAAK6wB,UAAUxxB,KAAOs3B,EAAa5B,aACnC/0B,MAAK6wB,UAAUxxB,KAAOs3B,EAAa3B,eACnCh1B,MAAK6wB,UAAUxxB,KAAOs3B,EAAa1B,cACnCj1B,MAAK6wB,UAAUxxB,KAAOs3B,EAAazB,gBAGpC,GAAIl1B,KAAK0zB,aAAc,CACtB1zB,KAAK6wB,UAAUxxB,KAAOs3B,EAAaxB,UAAU,GAC7Cn1B,MAAK6wB,UAAUxxB,KAAOs3B,EAAavB,YAAY,GAC/Cp1B,MAAK6wB,UAAUxxB,KAAOs3B,EAAatB,WAAW,GAC9Cr1B,MAAK6wB,UAAUxxB,KAAOs3B,EAAarB,YAAY,KAzEnCoB,GAAAO,6BAAsC,4BA8ErD,OAAAP,IA5FuC7G,EA8FL/vB,GAAAJ,QAAzBg3B,I/BqnHNnB,sCAAsC3sB,UAAU6J,uDAAuD,uDAAuD4G,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDoG,mEAAmE,qEAAqEpG,0DAA0D,SAASlyB,EAAQkB,EAAOJ,GACzmB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgCzuHtB,IAAO0uB,GAAiBnwB,EAAc,uDhC+uHtC,IgCpuHMixB,GAAgB,SAAAxuB,GAAStB,EAAzB8vB,EAAgBxuB,EA0ErB,SA1EKwuB,GA0EOzhB,EAAauF,EAAsBG,EAA4BE,GAAA,GAAAA,QAAA,GAA2B,CAA3BA,EAAA,EAE1E3S,EAAA1B,KAAAK,KAvEMA,MAAAm3B,aAA+B,CAyErC/oB,GAAOA,EAAOyhB,EAAiBuH,MAAMzjB,EAErC3T,MAAKoO,KAAOA,CACZpO,MAAKqwB,OAAS1c,CACd3T,MAAKq3B,UAAYrjB,CACjBhU,MAAKm3B,aAAerjB,CAEpB9T,MAAK6wB,UAAY,GAAI5lB,OAAcjL,KAAKm3B,cAzDzCh1B,OAAAC,eAAWytB,EAAAtvB,UAAA,QhCmuHJ8B,IgCnuHP,WAEC,MAAOrC,MAAKqwB,QhCouHN3tB,WAAY,KACZC,aAAc,MgC5tHrBR,QAAAC,eAAWytB,EAAAtvB,UAAA,YhCquHJ8B,IgCruHP,WAEC,MAAOrC,MAAKq3B,WhCsuHN30B,WAAY,KACZC,aAAc,MgC9tHrBR,QAAAC,eAAWytB,EAAAtvB,UAAA,chCuuHJ8B,IgCvuHP,WAEC,MAAOrC,MAAKm3B,chCwuHNz0B,WAAY,KACZC,aAAc,MgChuHrBR,QAAAC,eAAWytB,EAAAtvB,UAAA,WhCyuHJ8B,IgCzuHP,WAEC,MAAOrC,MAAK6wB,WhC0uHNnuB,WAAY,KACZC,aAAc,MgC/sHdktB,GAAAtvB,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,MAAO,GAMD2b,GAAAtvB,UAAAuN,oBAAP,SAA2BD,EAA+BqG,GAEzD,MAAO,GAMD2b,GAAAtvB,UAAAyN,cAAP,SAAqBH,EAA+BqG,GAEnD,MAAO,GAQD2b,GAAAtvB,UAAAsY,gCAAP,SAAuC6X,IAQhCb,GAAAtvB,UAAAmT,0BAAP,SAAiCgG,IAlHlBmW,GAAA/B,OAAgB,QAChB+B,GAAAjc,aAAsB,aACtBic,GAAA9b,cAAuB,cAGvB8b,GAAAuH,OAEd,EAAEvH,EAAiB/B,OACnBwJ,EAAEzH,EAAiBjc,aACnB2jB,EAAE1H,EAAiB9b,cA6GrB,OAAA8b,IAjI+Bd,EAmI/BjvB,GAA0BJ,QAAjBmwB,IhCstHNF,uDAAuD/mB,YAAY4uB,2DAA2D,SAAS54B,EAAQkB,EAAOJ,GACzJ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiCz2HtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmqB,GAAqBnqB,EAAa,0DAGzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO64B,GAAkB74B,EAAc,4DjCy2HvC,IiCp2HM84B,GAAiB,SAAAr2B,GAAStB,EAA1B23B,EAAiBr2B,EAsCtB,SAtCKq2B,GAsCO/jB,EAAsBgkB,EAA2BxE,EAA2BC,EAA2BwE,EAAqBrE,EAA0BC,EAAuBqE,GAAvJ,GAAAF,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAxE,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAwE,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAArE,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAqE,QAAA,GAAsB,CAAtBA,EAAA,KAExL,GAAIjzB,GAAqB,CACzB,IAAIwuB,EACHxuB,GACDvD,GAAA1B,KAAAK,KAAM,gBAAiB2T,EAAM/O,EAE7B5E,MAAKiwB,aAAewH,CAEpBz3B,MAAK83B,aAAeH,CACpB33B,MAAK2zB,YAAcR,CACnBnzB,MAAK4zB,YAAcR,CAEnBpzB,MAAK+3B,SAAWH,CAChB53B,MAAK+zB,gBAAkBR,CACvBvzB,MAAKg0B,aAAeR,CACpBxzB,MAAKg4B,SAAWH,GAAU,GAAIp3B,GAMxBi3B,EAAAn3B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI+jB,GAAuCj4B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBAClKpc,GAAuBgW,iBAAiBlqB,KAAMy3B,EAAmBS,YAAaD,EAAczhB,MAE5F,IAAI2hB,GAA6CjkB,EAAuBqV,uBACxErV,GAAuBgW,iBAAiBlqB,KAAMy3B,EAAmBW,aAAcD,EAAqB3hB,MACpGtC,GAAuBqV,uBACvBrV,GAAuBqV,uBACvBrV,GAAuBqV,uBAEvB,IAAI9N,GAA8BvH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB5N,EAAO,EAClD,IAAIqW,GAAiC,GAAI/I,GAAsBtN,EAAM6N,QAAS7N,EAAMjF,MAEpF,IAAIkF,GAA8BxH,EAAuByV,yBACzD,IAAI0O,GAA4B,GAAItP,GAAsBrN,EAAM4N,QAAS5N,EAAMlF,MAAO,EACtF,IAAI2d,GAA4B,GAAIpL,GAAsBrN,EAAM4N,QAAS5N,EAAMlF,MAAO,EACtF,IAAI8hB,GAA+B,GAAIvP,GAAsBrN,EAAM4N,QAAS5N,EAAMlF,MAAO,EACzFtC,GAAuBsc,sBAAsB/U,EAE7C,IAAIjc,GAAc,EAElB,IAAIQ,KAAK2zB,YAAa,CACrBn0B,GAAQ,OAAS84B,EAAS,IAAMpkB,EAAuB2V,WAAa,IAAMoO,EAAgB,MAE1F,IAAIj4B,KAAK4zB,YACRp0B,GAAQ,OAAS84B,EAAS,IAAMA,EAAS,IAAML,EAAgB,WAEhEz4B,IAAQ,OAAS84B,EAAS,IAAMpkB,EAAuB4V,WAAa,IAAMmO,EAAgB,MAE3Fz4B,IAAQ,OAAS64B,EAAM,IAAMC,EAAS,IACtC94B,IAAQ,OAAS20B,EAAM,IAAMmE,EAAS,IACtC94B,IAAQ,OAASsyB,EAAW,MAAQuG,EAAM,IAAMJ,EAAgB,MAChEz4B,IAAQ,OAASsyB,EAAW,MAAQqC,EAAM,IAAM8D,EAAgB,MAChEz4B,IAAQ,OAASsyB,EAAW,MAAQ5d,EAAuBqC,gBAAkB,IAC7E,IAAIvW,KAAK83B,aACRt4B,GAAQ,OAASsyB,EAAW,IAAMA,EAAW,IAAMqG,EAAuB,IAC3E34B,IAAQ,OAAS0U,EAAuBwV,eAAiB,QAAUoI,EAAW,QAAU5d,EAAuBwV,eAAiB,QAEhI,IAAIxV,EAAuBU,aAAc,CACxCpV,GAAQ,OAASsyB,EAAW,MAAQqC,EAAM,IAC1C30B,IAAQ,OAASsyB,EAAW,MAAQuG,EAAM,IAC1C74B,IAAQ,OAASsyB,EAAW,OAAS5d,EAAuBqC,gBAAkB,IAC9E,IAAIvW,KAAK83B,aACRt4B,GAAQ,OAASsyB,EAAW,IAAMA,EAAW,IAAMqG,EAAuB,IAC3E34B,IAAQ,OAASsyB,EAAW,IAAMA,EAAW,IAAMmG,EAAgB,MACnEz4B,IAAQ,OAASsyB,EAAW,IAAMA,EAAW,IAAMmG,EAAgB,MACnE,KAAKj4B,KAAK2zB,YACTn0B,GAAQ,OAASsyB,EAAW,IAAMA,EAAW,IAAM5d,EAAuB4V,WAAa,IACxFtqB,IAAQ,OAAS0U,EAAuB0V,eAAiB,QAAU1V,EAAuB0V,eAAiB,QAAUkI,EAAW,SAEjI,MAAOtyB,GAMDk4B,GAAAn3B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA4BA,GAAS7gB,kBAAkB5P,MAMjD03B,GAAAn3B,UAAAsY,gCAAP,SAAuC6X,GjCq0HhC,GiCl0HF6H,GAAiB7H,EAAMgH,EAAkBc,eAC7C,KAAKD,EACJ,KAAM,IAAIh5B,OAAM,eAAiBm4B,EAAkBc,eAAiB,aAErEx4B,MAAK6wB,UAAU,GAAK0H,EAAMxxB,CAC1B,IAAI/G,KAAK2zB,aAAe4E,EAAMtxB,GAAK,EAClC,KAAK,IAAK1H,OAAM,+CACjBS,MAAK6wB,UAAU,GAAKxpB,KAAKoxB,GAAG,IAAIz4B,KAAK2zB,YAAa,EAAI4E,EAAMtxB,EAC5DjH,MAAK6wB,UAAU,GAAK0H,EAAMxxB,EAAEM,KAAKoxB,GAAG,CACpC,IAAIz4B,KAAK4zB,YACR5zB,KAAK6wB,UAAU,GAAK0H,EAAMpxB,EAAEE,KAAKoxB,GAAG,IAnHxBf,GAAAc,eAAwB,eAqHvC,OAAAd,IA7IgC7H,EA+IhC/vB,GAA2BJ,QAAlBg4B,IjCy0HN7uB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD4H,4DAA4D,4DAA4DhN,0DAA0D,4DAA4DiN,gEAAgE,SAAS/5B,EAAQkB,EAAOJ,GACjmB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkC5+HtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmqB,GAAqBnqB,EAAa,0DAGzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOg6B,GAAuBh6B,EAAa,iElC4+H3C,IkCv+HMi6B,GAAsB,SAAAx3B,GAAStB,EAA/B84B,EAAsBx3B,EAiB3B,SAjBKw3B,GAiBOllB,EAAsBmlB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEjCz3B,EAAA1B,KAAAK,KAAM,qBAAsB2T,EAAM,EAElC3T,MAAKiwB,aAAe2I,CAEpB54B,MAAK+4B,aAAeD,GAAc,GAAIr4B,GAMhCo4B,EAAAt4B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI8kB,GAA4Ch5B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACvKpc,GAAuBgW,iBAAiBlqB,KAAM44B,EAAwBK,iBAAkBD,EAAmBxiB,MAC3G,IAAIqU,GAA6B3W,EAAuByV,yBACxD,IAAIuP,GAA8B,GAAInQ,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACtF,IAAI2d,GAA4B,GAAIpL,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACpF,IAAI6hB,GAA4B,GAAItP,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACpFtC,GAAuBmV,oBAAoBwB,EAAM,EACjD,IAAInP,GAA8BxH,EAAuByV,yBACzD,IAAImI,GAAiC,GAAI/I,GAAsBrN,EAAM4N,QAAS5N,EAAMlF,MACpFtC,GAAuBsc,sBAAsB3F,EAE7C,IAAIrrB,GAAc,EAClBA,IAAQ,OAAS05B,EAAQ,IAAMhlB,EAAuB2V,WAAa,IAAMmP,EAAqB,MAC9Fx5B,IAAQ,OAAS20B,EAAM,IAAM+E,EAAQ,IACrC15B,IAAQ,OAASsyB,EAAW,QAAUqC,EAAM,IAAM6E,EAAqB,QACvEx5B,IAAQ,OAAS0U,EAAuBwV,eAAiB,QAAUoI,EAAW,QAAU5d,EAAuBwV,eAAiB,QAEhI,IAAIxV,EAAuBU,aAAc,CACxCpV,GAAQ,OAAS64B,EAAM,IAAMa,EAAQ,IACrC15B,IAAQ,OAASsyB,EAAW,QAAUuG,EAAM,IAAMW,EAAqB,QACvEx5B,IAAQ,OAAS0U,EAAuB0V,eAAiB,QAAUkI,EAAW,QAAU5d,EAAuB0V,eAAiB,SAGjI,MAAOpqB,GAMDq5B,GAAAt4B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAiCA,GAAS7gB,kBAAkB5P,MAMtD64B,GAAAt4B,UAAAsY,gCAAP,SAAuC6X,GlCs9HhC,GkCn9HFyI,GAAiBzI,EAAMmI,EAAuBO,oBAClD,KAAKD,EACJ,KAAK,IAAK55B,OAAM,eAAiBs5B,EAAuBO,oBAAsB,aAE/Ep5B,MAAK6wB,UAAU,GAAKsI,EAAMpyB,CAC1B/G,MAAK6wB,UAAU,GAAKsI,EAAMlyB,CAC1BjH,MAAK6wB,UAAU,GAAKsI,EAAMhyB,CAC1B,IAAIgyB,EAAMrxB,GAAK,EACd,KAAK,IAAKvI,OAAM,4CACjBS,MAAK6wB,UAAU,GAAKxpB,KAAKoxB,GAAG,EAAEU,EAAMrxB,EAvEvB+wB,GAAAO,oBAA6B,oBAyE5C,OAAAP,IAlFqChJ,EAoFL/vB,GAAAJ,QAAvBm5B,IlC09HNhwB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDuI,iEAAiE,iEAAiE3N,0DAA0D,4DAA4D4N,8DAA8D,SAAS16B,EAAQkB,EAAOJ,GACzmB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmClkItB,IAAOI,GAAQ7B,EAAiB,gCAQhC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO26B,GAAqB36B,EAAa,+DnCikIzC,ImC5jIM46B,GAAoB,SAAAn4B,GAAStB,EAA7By5B,EAAoBn4B,EAiBzB,SAjBKm4B,GAiBO7lB,EAAsB8lB,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAEjCp4B,EAAA1B,KAAAK,KAAM,mBAAoB2T,EAAM,EAEhC3T,MAAKiwB,aAAesJ,CAEpBv5B,MAAK05B,WAAaD,GAAY,GAAIh5B,GAM5B+4B,EAAAj5B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAIgV,GAA2ClpB,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACtKpc,GAAuBgW,iBAAiBlqB,KAAMu5B,EAAsBI,eAAgBzQ,EAAkB1S,MAEtG,OAAO,OAAStC,EAAuBwV,eAAiB,QAAUR,EAAoB,QAAUhV,EAAuBwV,eAAiB,SAMlI8P,GAAAj5B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA+BA,GAAS7gB,kBAAkB5P,MAMpDw5B,GAAAj5B,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIpf,GAAkBof,EAAM8I,EAAqBI,kBACjD,KAAKtoB,EACJ,KAAK,IAAK/R,OAAM,eAAiBi6B,EAAqBI,kBAAoB,aAE3E55B,MAAK6wB,UAAU,GAAKvf,EAAOvK,CAC3B/G,MAAK6wB,UAAU,GAAKvf,EAAOrK,CAC3BjH,MAAK6wB,UAAU,GAAKvf,EAAOnK,EA/CdqyB,GAAAI,kBAA2B,kBAiD1C,OAAAJ,IA1DmC3J,EA4DnC/vB,GAA8BJ,QAArB85B,InCijIN3wB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD+I,+DAA+D,iEAAiEC,qEAAqE,SAASl7B,EAAQkB,EAAOJ,GACxf,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoC5nItB,IAAO0oB,GAAqBnqB,EAAa,0DAIzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOm7B,GAA4Bn7B,EAAY,sEpC+nI/C,IoC1nIMo7B,GAA2B,SAAA34B,GAAStB,EAApCi6B,EAA2B34B,EAKhC,SALK24B,KAOJ34B,EAAA1B,KAAAK,KAAM,0BAA2B8S,EAAuBgb,OAAQ,EAAG,EAEnE9tB,MAAKiwB,aAAe8J,EAMdC,EAAAz5B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI1U,GAAc,EAClB,IAAIoF,GAAqBsP,EAAuB+U,kBAAkBrpB,MAClE,IAAIP,EACJ,IAAI6U,EAAuBW,aAAc,CACxC,GAAI4G,GAA8BvH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB5N,EAAO,EAClD,IAAIC,GAA8BxH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB3N,EAAO,EAClD,IAAI0a,GAA8BliB,EAAuByV,yBAEzD,IAAI8I,GAA+Cve,EAAuBqV,uBAC1ErV,GAAuBgW,iBAAiBlqB,KAAM+5B,EAA6BrH,aAAcD,EAAuBjc,MAChHtC,GAAuBqV,uBACvBrV,GAAuBqV,uBACvBrV,GAAuBqV,uBAEvBrV,GAAuBsc,sBAAsB/U,EAC7CvH,GAAuBsc,sBAAsB9U,EAG7Clc,IAAQ,OAASic,EAAQ,QAAUvH,EAAuB0V,eAAiB,QAAU6I,EAAyB,IAE9GjzB,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,OAAS3a,EAAQ,OAC1Cjc,IAAQ,OAAS42B,EAAQ,QAAUA,EAAQ,QAI3C52B,IAAQ,OAASkc,EAAQ,IAAMxH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASkc,EAAQ,MAAQ0a,EAAQ,MACzC52B,IAAQ,OAASkc,EAAQ,MAAQ0a,EAAQ,MACzC52B,IAAQ,OAASic,EAAQ,IAAMvH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASic,EAAQ,MAAQ2a,EAAQ,MACzC52B,IAAQ,OAASic,EAAQ,MAAQ2a,EAAQ,MACzC52B,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,MAAQliB,EAAuBsV,eAAiB,IACzEhqB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAU3N,EAAQ,IACzI,KAAKpc,EAAI,EAAGA,EAAIuF,EAAKvF,IACpBG,GAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,QAAU6U,EAAuB+U,kBAAkB5pB,GAAK,IAAMoc,EAAQ,SAChI,CACN,GAAIwe,GAA+B/lB,EAAuByV,yBAC1DzV,GAAuBmV,oBAAoB4Q,EAAQ,EAEnD,IAAIC,GAA8BhmB,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB6Q,EAAO,EAElD,IAAIC,GAA0BjmB,EAAuByV,yBACrDzV,GAAuBmV,oBAAoB8Q,EAAG,EAC9C,IAAIC,GAA8BlmB,EAAuByV,yBACzD,IAAI0O,GAA4B,GAAItP,GAAsBoR,EAAE7Q,QAAS6Q,EAAE3jB,MAAO,EAC9E,IAAI2d,GAA4B,GAAIpL,GAAsBqR,EAAM9Q,QAAS8Q,EAAM5jB,MAAO,EACtF,IAAI6jB,GAA6B,GAAItR,GAAsBkR,EAAO3Q,QAAS2Q,EAAOzjB,MAAO,EACzF,IAAI8jB,GAAmCnG,CAEvCjgB,GAAuBsc,sBAAsByJ,EAC7C/lB,GAAuBsc,sBAAsB0J,EAC7ChmB,GAAuBsc,sBAAsB2J,EAE7C36B,IAAQ,OAAS06B,EAAQ,MAAQhmB,EAAuBsV,eAAiB,IACzEhqB,IAAQ,OAAS06B,EAAQ,OAAShmB,EAAuBqC,gBAAkB,IAE3E/W,IAAQ,OAASy6B,EAAS,QAAU/lB,EAAuB0V,eAAiB,QAC5EpqB,IAAQ,OAAS66B,EAAO,IAAMJ,EAAS,QAAUC,EAAQ,QACzD16B,IAAQ,OAASy6B,EAAS,QAAUC,EAAQ,QAAUD,EAAS,QAC/Dz6B,IAAQ,OAASy6B,EAAS,QAAUA,EAAS,QAG7Cz6B,IAAQ,OAAS26B,EAAI,MAAQF,EAAS,QAAUA,EAAS,QACzDz6B,IAAQ,OAAS26B,EAAI,MAAQjmB,EAAuBqC,gBAAkB,IAAM4jB,EAAI,MAChF36B,IAAQ,OAASy6B,EAAS,MAAQE,EAAI,MAAQF,EAAS,MAEvDz6B,IAAQ,OAAS86B,EAAa,IAAMD,EAAO,IAAMnmB,EAAuBsV,eAAiB,IACzFhqB,IAAQ,OAAS86B,EAAa,IAAMA,EAAa,IAAMpmB,EAAuBuV,eAAiB,IAC/FjqB,IAAQ,OAAS64B,EAAM,IAAMiC,EAAa,IAE1C96B,IAAQ,OAAS86B,EAAa,IAAMpmB,EAAuBsV,eAAiB,IAAM6Q,EAAO,IACzF76B,IAAQ,OAAS86B,EAAa,IAAMA,EAAa,IAAMpmB,EAAuBuV,eAAiB,IAC/FjqB,IAAQ,OAAS20B,EAAM,IAAMmG,EAAa,IAE1C96B,IAAQ,OAAS26B,EAAI,QAAUhG,EAAM,IAAM8F,EAAS,QAIpDz6B,IAAQ,OAAS46B,EAAQ,QAAUjG,EAAM,IAAM8F,EAAS,QACxDz6B,IAAQ,OAAS46B,EAAQ,QAAUA,EAAQ,QAK3C56B,IAAQ,OAASy6B,EAAS,QAAUE,EAAI,QAAUjmB,EAAuBkV,qBAAuB,QAGhG5pB,IAAQ,OAAS06B,EAAQ,QAAU7B,EAAM,IAAMnkB,EAAuBkV,qBAAuB,QAC7F5pB,IAAQ,OAASy6B,EAAS,QAAUA,EAAS,QAAUC,EAAQ,QAC/D16B,IAAQ,OAAS06B,EAAQ,MAAQC,EAAI,QAAUjmB,EAAuBkV,qBAAuB,QAC7F5pB,IAAQ,OAASy6B,EAAS,MAAQC,EAAQ,MAE1C16B,IAAQ,OAAS26B,EAAI,QAAUF,EAAS,QAAUG,EAAQ,QAE1D56B,IAAQ,OAAS06B,EAAQ,SAAWD,EAAS,SAAW5B,EAAM,IAC9D74B,IAAQ,OAAS26B,EAAI,QAAUA,EAAI,QAAUD,EAAQ,QACrD16B,IAAQ,OAAS06B,EAAQ,QAAUD,EAAS,MAAQG,EAAQ,QAE5D56B,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAU+Q,EAAI,QAAUD,EAAQ,QAE/F,KAAK76B,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CAGzBG,GAAQ,OAAS06B,EAAQ,MAAQhmB,EAAuBsV,eAAiB,IACzEhqB,IAAQ,OAAS06B,EAAQ,OAAShmB,EAAuBqC,gBAAkB,IAC3E/W,IAAQ,OAASy6B,EAAS,QAAU/lB,EAAuB0V,eAAiB,QAC5EpqB,IAAQ,OAAS66B,EAAO,IAAMJ,EAAS,QAAUC,EAAQ,QACzD16B,IAAQ,OAASy6B,EAAS,QAAUC,EAAQ,QAAUD,EAAS,QAC/Dz6B,IAAQ,OAASy6B,EAAS,QAAUA,EAAS,QAC7Cz6B,IAAQ,OAAS26B,EAAI,MAAQF,EAAS,QAAUA,EAAS,QACzDz6B,IAAQ,OAAS26B,EAAI,MAAQjmB,EAAuBqC,gBAAkB,IAAM4jB,EAAI,MAChF36B,IAAQ,OAASy6B,EAAS,MAAQE,EAAI,MAAQF,EAAS,MACvDz6B,IAAQ,OAAS86B,EAAa,IAAMD,EAAO,IAAMnmB,EAAuBsV,eAAiB,IACzFhqB,IAAQ,OAAS86B,EAAa,IAAMA,EAAa,IAAMpmB,EAAuBuV,eAAiB,IAC/FjqB,IAAQ,OAAS64B,EAAM,IAAMiC,EAAa,IAC1C96B,IAAQ,OAAS86B,EAAa,IAAMpmB,EAAuBsV,eAAiB,IAAM6Q,EAAO,IACzF76B,IAAQ,OAAS86B,EAAa,IAAMA,EAAa,IAAMpmB,EAAuBuV,eAAiB,IAC/FjqB,IAAQ,OAAS20B,EAAM,IAAMmG,EAAa,IAC1C96B,IAAQ,OAAS26B,EAAI,QAAUhG,EAAM,IAAM8F,EAAS,QACpDz6B,IAAQ,OAAS46B,EAAQ,QAAUjG,EAAM,IAAM8F,EAAS,QACxDz6B,IAAQ,OAAS46B,EAAQ,QAAUA,EAAQ,QAC3C56B,IAAQ,OAASy6B,EAAS,QAAUE,EAAI,QAAUjmB,EAAuB+U,kBAAkB5pB,GAAK,QAChGG,IAAQ,OAAS06B,EAAQ,QAAU7B,EAAM,IAAMnkB,EAAuB+U,kBAAkB5pB,GAAK,QAC7FG,IAAQ,OAASy6B,EAAS,QAAUA,EAAS,QAAUC,EAAQ,QAC/D16B,IAAQ,OAAS06B,EAAQ,MAAQC,EAAI,QAAUjmB,EAAuB+U,kBAAkB5pB,GAAK,QAC7FG,IAAQ,OAASy6B,EAAS,MAAQC,EAAQ,MAC1C16B,IAAQ,OAAS26B,EAAI,QAAUF,EAAS,QAAUG,EAAQ,QAC1D56B,IAAQ,OAAS06B,EAAQ,SAAWD,EAAS,SAAW5B,EAAM,IAC9D74B,IAAQ,OAAS26B,EAAI,QAAUA,EAAI,QAAUD,EAAQ,QACrD16B,IAAQ,OAAS06B,EAAQ,QAAUD,EAAS,MAAQG,EAAQ,QAC5D56B,IAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,QAAU86B,EAAI,QAAUD,EAAQ,UAIjG,MAAO16B,GAMDw6B,GAAAz5B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAsCA,GAAS7gB,kBAAkB5P,MAM3Dg6B,GAAAz5B,UAAAmT,0BAAP,SAAiCgG,GAEhCA,EAAqB9E,aAAe,KAEtC,OAAAolB,IA9K0CnK,EAgL1C/vB,GAAqCJ,QAA5Bs6B,IpCgmIN3gB,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDyJ,sEAAsE,sEAAsE7O,0DAA0D,4DAA4D8O,sEAAsE,SAAS57B,EAAQkB,EAAOJ,GACjlB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqCryItB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmqB,GAAqBnqB,EAAa,0DAGzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO67B,GAA6B77B,EAAW,uErCqyI/C,IqChyIM87B,GAA4B,SAAAr5B,GAAStB,EAArC26B,EAA4Br5B,EAcjC,SAdKq5B,GAcO/mB,EAAsB8lB,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAEjCp4B,EAAA1B,KAAAK,KAAM,2BAA4B2T,EAAM,EAAG,EAE3C3T,MAAKiwB,aAAewK,CAEpBz6B,MAAK05B,WAAaD,GAAY,GAAIh5B,GAM5Bi6B,EAAAn6B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAIgV,GAA2ClpB,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACtKpc,GAAuBgW,iBAAiBlqB,KAAMy6B,EAA8Bd,eAAgBzQ,EAAkB1S,MAE9G,IAAIhX,GAAc,EAClB,IAAIoF,GAAqBsP,EAAuB+U,kBAAkBrpB,MAClE,IAAIP,EACJ,IAAI6U,EAAuBW,aAAc,CACxC,GAAI4G,GAA8BvH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB5N,EAAO,EAClD,IAAIC,GAA8BxH,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB3N,EAAO,EAClD,IAAI0a,GAA8BliB,EAAuByV,yBAEzD,IAAI8I,GAA+Cve,EAAuBqV,uBAC1ErV,GAAuBgW,iBAAiBlqB,KAAMy6B,EAA8B/H,aAAcD,EAAuBjc,MACjHtC,GAAuBqV,uBACvBrV,GAAuBqV,uBACvBrV,GAAuBqV,uBAEvBrV,GAAuBsc,sBAAsB/U,EAC7CvH,GAAuBsc,sBAAsB9U,EAG7Clc,IAAQ,OAASic,EAAQ,QAAUyN,EAAoB,QAAUhV,EAAuBwV,eAAiB,QACzGlqB,IAAQ,OAASic,EAAQ,QAAUA,EAAQ,QAAUgX,EAAyB,IAE9EjzB,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,OAAS3a,EAAQ,OAC1Cjc,IAAQ,OAAS42B,EAAQ,QAAUA,EAAQ,QAI3C52B,IAAQ,OAASkc,EAAQ,IAAMxH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASkc,EAAQ,MAAQ0a,EAAQ,MACzC52B,IAAQ,OAASkc,EAAQ,MAAQ0a,EAAQ,MACzC52B,IAAQ,OAASic,EAAQ,IAAMvH,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAASic,EAAQ,MAAQ2a,EAAQ,MACzC52B,IAAQ,OAASic,EAAQ,MAAQ2a,EAAQ,MACzC52B,IAAQ,OAAS42B,EAAQ,IAAMliB,EAAuBqC,gBAAkB,IACxE/W,IAAQ,OAAS42B,EAAQ,MAAQliB,EAAuBsV,eAAiB,IACzEhqB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAU3N,EAAQ,IACzI,KAAKpc,EAAI,EAAGA,EAAIuF,EAAKvF,IACpBG,GAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,QAAU6U,EAAuB+U,kBAAkB5pB,GAAK,IAAMoc,EAAQ,SAChI,CACN,GAAIkf,GAAqCzmB,EAAuByV,yBAChEzV,GAAuBmV,oBAAoBsR,EAAc,EAEzD,IAAI9P,GAA6B3W,EAAuByV,yBACxDzV,GAAuBmV,oBAAoBwB,EAAM,EACjD,IAAIwN,GAA4B,GAAItP,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACpF,IAAI2d,GAA4B,GAAIpL,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACpF,IAAIokB,GAA+B,GAAI7R,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACvF,IAAI8jB,GAAmC,GAAIvR,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EAE3F,IAAI2jB,GAA0BjmB,EAAuByV,yBACrDzV,GAAuBmV,oBAAoB8Q,EAAG,EAE9CjmB,GAAuBsc,sBAAsBmK,EAC7CzmB,GAAuBsc,sBAAsB3F,EAC7C3W,GAAuBsc,sBAAsB2J,EAE7C36B,IAAQ,OAASm7B,EAAe,QAAUzR,EAAoB,QAAUhV,EAAuBwV,eAAiB,QAChHlqB,IAAQ,OAASm7B,EAAe,QAAUA,EAAe,QAEzDn7B,IAAQ,OAAS20B,EAAM,IAAMwG,EAAe,MAC5Cn7B,IAAQ,OAAS64B,EAAM,IAAMlE,EAAM,IAAMA,EAAM,IAC/C30B,IAAQ,OAAS64B,EAAM,IAAMnkB,EAAuBsV,eAAiB,IAAM6O,EAAM,IACjF74B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IAEnC74B,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuBkV,qBAAuB,MACvF5pB,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuBkV,qBAAuB,MACvF5pB,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuBkV,qBAAuB,MACvF5pB,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuBkV,qBAAuB,MAEvF5pB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,MAAQ+Q,EAAI,MAAQA,EAAI,MACvF36B,IAAQ,OAAS0U,EAAuBkV,qBAAuB,MAAQ+Q,EAAI,MAAQA,EAAI,MAEvF36B,IAAQ,OAAS26B,EAAI,MAAQQ,EAAe,MAC5Cn7B,IAAQ,OAAS26B,EAAI,MAAQA,EAAI,MAAQjmB,EAAuBsV,eAAiB,IACjFhqB,IAAQ,OAAS26B,EAAI,MAAQA,EAAI,MAAQQ,EAAe,MAGxDn7B,IAAQ,OAASm7B,EAAe,MAAQzmB,EAAuBqC,gBAAkB,IACjF/W,IAAQ,OAAS20B,EAAM,IAAMwG,EAAe,QAAUA,EAAe,QACrEn7B,IAAQ,OAAS86B,EAAa,IAAMpmB,EAAuBqC,gBAAkB,IAAM4d,EAAM,IAEzF30B,IAAQ,OAASm7B,EAAe,MAAQzmB,EAAuBqC,gBAAkB,IACjF/W,IAAQ,OAASm7B,EAAe,QAAUA,EAAe,QAEzDn7B,IAAQ,OAAS20B,EAAM,IAAMjgB,EAAuBsV,eAAiB,IAAM8Q,EAAa,IACxF96B,IAAQ,OAAS20B,EAAM,IAAMA,EAAM,IAAMwG,EAAe,MAExDn7B,IAAQ,OAAS64B,EAAM,IAAMsC,EAAe,MAC5Cn7B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IACnC74B,IAAQ,OAASo7B,EAAS,IAAM1mB,EAAuBsV,eAAiB,IAAM6O,EAAM,IACpF74B,IAAQ,OAASo7B,EAAS,IAAMT,EAAI,MAAQG,EAAa,IACzD96B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IAAMuC,EAAS,IAElDp7B,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuBkV,qBAAuB,MACvF5pB,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuBkV,qBAAuB,MACvF5pB,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuBkV,qBAAuB,MACvF5pB,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuBkV,qBAAuB,MAEvF5pB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,MAAQ+Q,EAAI,MAAQA,EAAI,MACvF36B,IAAQ,OAAS0U,EAAuBkV,qBAAuB,MAAQ+Q,EAAI,MAAQA,EAAI,MAEvF,KAAK96B,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CAGzBG,GAAQ,OAASm7B,EAAe,QAAUzR,EAAoB,QAAUhV,EAAuBwV,eAAiB,QAChHlqB,IAAQ,OAASm7B,EAAe,QAAUA,EAAe,QACzDn7B,IAAQ,OAAS20B,EAAM,IAAMwG,EAAe,MAC5Cn7B,IAAQ,OAAS64B,EAAM,IAAMlE,EAAM,IAAMA,EAAM,IAC/C30B,IAAQ,OAAS64B,EAAM,IAAMnkB,EAAuBsV,eAAiB,IAAM6O,EAAM,IACjF74B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IACnC74B,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,MAAQ86B,EAAI,MAAQA,EAAI,MACvF36B,IAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,MAAQ86B,EAAI,MAAQA,EAAI,MACvF36B,IAAQ,OAAS26B,EAAI,MAAQQ,EAAe,MAC5Cn7B,IAAQ,OAAS26B,EAAI,MAAQA,EAAI,MAAQjmB,EAAuBsV,eAAiB,IACjFhqB,IAAQ,OAAS26B,EAAI,MAAQA,EAAI,MAAQQ,EAAe,MACxDn7B,IAAQ,OAASm7B,EAAe,MAAQzmB,EAAuBqC,gBAAkB,IACjF/W,IAAQ,OAAS20B,EAAM,IAAMwG,EAAe,QAAUA,EAAe,QACrEn7B,IAAQ,OAAS86B,EAAa,IAAMpmB,EAAuBqC,gBAAkB,IAAM4d,EAAM,IACzF30B,IAAQ,OAASm7B,EAAe,MAAQzmB,EAAuBqC,gBAAkB,IACjF/W,IAAQ,OAASm7B,EAAe,QAAUA,EAAe,QACzDn7B,IAAQ,OAAS20B,EAAM,IAAMjgB,EAAuBsV,eAAiB,IAAM8Q,EAAa,IACxF96B,IAAQ,OAAS20B,EAAM,IAAMA,EAAM,IAAMwG,EAAe,MACxDn7B,IAAQ,OAAS64B,EAAM,IAAMsC,EAAe,MAC5Cn7B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IACnC74B,IAAQ,OAASo7B,EAAS,IAAM1mB,EAAuBsV,eAAiB,IAAM6O,EAAM,IACpF74B,IAAQ,OAASo7B,EAAS,IAAMT,EAAI,MAAQG,EAAa,IACzD96B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IAAMuC,EAAS,IAClDp7B,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS26B,EAAI,MAAQhG,EAAM,IAAMjgB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS26B,EAAI,MAAQ9B,EAAM,IAAMnkB,EAAuB+U,kBAAkB5pB,GAAK,MACvFG,IAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,MAAQ86B,EAAI,MAAQA,EAAI,MACvF36B,IAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,MAAQ86B,EAAI,MAAQA,EAAI,QAGzF,MAAO36B,GAMDk7B,GAAAn6B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAuCA,GAAS7gB,kBAAkB5P,MAM5D06B,GAAAn6B,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIpf,GAAkBof,EAAMgK,EAA6Bd,kBACzD,KAAKtoB,EACJ,KAAK,IAAK/R,OAAM,eAAiBm7B,EAA6Bd,kBAAoB,aAEnF55B,MAAK6wB,UAAU,GAAKvf,EAAOvK,CAC3B/G,MAAK6wB,UAAU,GAAKvf,EAAOrK,CAC3BjH,MAAK6wB,UAAU,GAAKvf,EAAOnK,EAzLduzB,GAAAd,kBAA2B,0BA2L1C,OAAAc,IApM2C7K,EAsML/vB,GAAAJ,QAA7Bg7B,IrCkwIN7xB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD+J,uEAAuE,uEAAuEnP,0DAA0D,4DAA4DoP,wEAAwE,SAASl8B,EAAQkB,EAAOJ,GAC/nB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsC59ItB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmqB,GAAqBnqB,EAAa,0DAGzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOm8B,GAA+Bn8B,EAAW,yEtC49IjD,IsCv9IMo8B,GAA8B,SAAA35B,GAAStB,EAAvCi7B,EAA8B35B,EAgBnC,SAhBK25B,GAgBOrnB,EAAsBsnB,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAEjC55B,EAAA1B,KAAAK,KAAM,6BAA8B2T,EAAM,EAE1C3T,MAAKiwB,aAAe8K,CAEpB/6B,MAAKk7B,qBAAuBD,GAAsB,GAAIx6B,GAMhDu6B,EAAAz6B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAIinB,GAA0Cn7B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBACrKpc,GAAuBgW,iBAAiBlqB,KAAM+6B,EAAgCK,yBAA0BD,EAAiB3kB,MAEzH,IAAIyjB,GAA+B/lB,EAAuByV,yBAC1DzV,GAAuBmV,oBAAoB4Q,EAAQ,EAEnD,IAAIC,GAA8BhmB,EAAuByV,yBACzDzV,GAAuBmV,oBAAoB6Q,EAAO,EAElD,IAAIrP,GAA6B3W,EAAuByV,yBACxDzV,GAAuBmV,oBAAoBwB,EAAM,EACjD,IAAIwQ,GAA8B,GAAItS,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAC/E,IAAI4jB,GAA8BlmB,EAAuByV,yBACzDyQ,GAAQ,GAAIrR,GAAsBqR,EAAM9Q,QAAS8Q,EAAM5jB,MAEvD,IAAI6hB,GAA4B,GAAItP,GAAsBsS,EAAM/R,QAAS+R,EAAM7kB,MAAO,EACtF,IAAI2d,GAA4B,GAAIpL,GAAsBqR,EAAM9Q,QAAS8Q,EAAM5jB,MAAO,EAEtFtC,GAAuBsc,sBAAsByJ,EAC7C/lB,GAAuBsc,sBAAsB0J,EAC7ChmB,GAAuBsc,sBAAsB3F,EAE7C,IAAIrrB,GAAc,EAClBA,IAAQ,OAASy6B,EAAS,QAAUkB,EAAmB,QACvD37B,IAAQ,OAASy6B,EAAS,MAAQ/lB,EAAuBqC,gBAAkB,IAE3E/W,IAAQ,OAAS64B,EAAM,IAAMnkB,EAAuB2V,WAAa,IAAMsR,EAAmB,MAE1F37B,IAAQ,OAAS20B,EAAM,IAAMkE,EAAM,IACnC74B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IAEnC74B,IAAQ,OAAS67B,EAAQ,QAAUlH,EAAM,IAAM8F,EAAS,QAExDz6B,IAAQ,OAAS46B,EAAQ,QAAUjG,EAAM,IAAM8F,EAAS,QACxDz6B,IAAQ,OAAS46B,EAAQ,QAAUA,EAAQ,QAG3C56B,IAAQ,OAASy6B,EAAS,QAAUoB,EAAQ,QAAUnnB,EAAuBkV,qBAAuB,QAEpG5pB,IAAQ,OAAS06B,EAAQ,QAAU7B,EAAM,IAAMnkB,EAAuBkV,qBAAuB,QAC7F5pB,IAAQ,OAASy6B,EAAS,QAAUA,EAAS,QAAUC,EAAQ,QAC/D16B,IAAQ,OAAS06B,EAAQ,MAAQmB,EAAQ,QAAUnnB,EAAuBkV,qBAAuB,QACjG5pB,IAAQ,OAASy6B,EAAS,MAAQC,EAAQ,MAE1C16B,IAAQ,OAAS67B,EAAQ,QAAUpB,EAAS,QAAUG,EAAQ,QAG9D56B,IAAQ,OAAS06B,EAAQ,SAAWD,EAAS,SAAW5B,EAAM,IAC9D74B,IAAQ,OAAS67B,EAAQ,QAAUA,EAAQ,QAAUnB,EAAQ,QAC7D16B,IAAQ,OAAS06B,EAAQ,QAAUD,EAAS,MAAQG,EAAQ,QAE5D56B,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUiS,EAAQ,QAAUnB,EAAQ,QAEnG,IAAIt1B,GAAqBsP,EAAuB+U,kBAAkBrpB,MAClE,KAAK,GAAIP,GAAmB,EAAGA,EAAIuF,EAAKvF,IAAK,CAC5CG,GAAQ,OAASy6B,EAAS,QAAUkB,EAAmB,QACvD37B,IAAQ,OAASy6B,EAAS,MAAQ/lB,EAAuBqC,gBAAkB,IAC3E/W,IAAQ,OAAS64B,EAAM,IAAMnkB,EAAuB2V,WAAa,IAAMsR,EAAmB,MAC1F37B,IAAQ,OAAS20B,EAAM,IAAMkE,EAAM,IACnC74B,IAAQ,OAAS64B,EAAM,IAAMA,EAAM,IACnC74B,IAAQ,OAAS67B,EAAQ,QAAUlH,EAAM,IAAM8F,EAAS,QACxDz6B,IAAQ,OAAS46B,EAAQ,QAAUjG,EAAM,IAAM8F,EAAS,QACxDz6B,IAAQ,OAAS46B,EAAQ,QAAUA,EAAQ,QAC3C56B,IAAQ,OAASy6B,EAAS,QAAUoB,EAAQ,QAAUnnB,EAAuB+U,kBAAkB5pB,GAAK,QACpGG,IAAQ,OAAS06B,EAAQ,QAAU7B,EAAM,IAAMnkB,EAAuB+U,kBAAkB5pB,GAAK,IAC7FG,IAAQ,OAASy6B,EAAS,QAAUA,EAAS,QAAUC,EAAQ,QAC/D16B,IAAQ,OAAS06B,EAAQ,MAAQmB,EAAQ,QAAUnnB,EAAuB+U,kBAAkB5pB,GAAK,IACjGG,IAAQ,OAASy6B,EAAS,MAAQC,EAAQ,MAC1C16B,IAAQ,OAAS67B,EAAQ,QAAUpB,EAAS,QAAUG,EAAQ,QAC9D56B,IAAQ,OAAS06B,EAAQ,SAAWD,EAAS,SAAW5B,EAAM,IAC9D74B,IAAQ,OAAS67B,EAAQ,QAAUA,EAAQ,QAAUnB,EAAQ,QAC7D16B,IAAQ,OAAS06B,EAAQ,QAAUD,EAAS,MAAQG,EAAQ,QAC5D56B,IAAQ,OAAS0U,EAAuB+U,kBAAkB5pB,GAAK,IAAMg8B,EAAQ,QAAUnB,EAAQ,SAEhG,MAAO16B,GAMDw7B,GAAAz6B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAyCA,GAAS7gB,kBAAkB5P,MAM9Dg7B,GAAAz6B,UAAAsY,gCAAP,SAAuC6X,GtCy7IhC,GsCt7IF4K,GAAkB5K,EAAMsK,EAA+BO,4BAC3D,KAAKD,EACJ,KAAK,IAAK/7B,OAAM,eAAiBy7B,EAA+BO,4BAA8B,aAE/F,IAAID,EAAO17B,QAAU,EACpB07B,EAAOn0B,EAAI,MAEXm0B,GAAOE,WAERx7B,MAAK6wB,UAAU,GAAKyK,EAAOv0B,CAC3B/G,MAAK6wB,UAAU,GAAKyK,EAAOr0B,CAC3BjH,MAAK6wB,UAAU,GAAKyK,EAAOn0B,CAC3B,IAAIm0B,EAAOxzB,GAAK,EACf,KAAK,IAAKvI,OAAM,4CAEjBS,MAAK6wB,UAAU,GAAKxpB,KAAKoxB,GAAG6C,EAAOxzB,EA/HtBkzB,GAAAO,4BAAqC,4BAiIpD,OAAAP,IA1I6CnL,EA4I7C/vB,GAAwCJ,QAA/Bs7B,ItC47INnyB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD2K,yEAAyE,yEAAyE/P,0DAA0D,4DAA4DgQ,2DAA2D,SAAS98B,EAAQkB,EAAOJ,GACtnB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuCplJtB,IAAOyS,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO+8B,GAAkB/8B,EAAc,4DvC0lJvC,IuCrlJMg9B,GAAiB,SAAAv6B,GAAStB,EAA1B67B,EAAiBv6B,EAkCtB,SAlCKu6B,GAkCOjoB,EAAsBwf,EAAmBC,EAAmByI,EAAqBC,EAAqBvI,EAA0BC,GAApE,GAAAqI,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAvI,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAE3InyB,EAAA1B,KAAAK,KAAM,gBAAiB2T,EAAOwf,GAAaC,EAAY,EAAMD,GAAaC,EAAY,EAAI,EAAI,EAE9FpzB,MAAKiwB,aAAe0L,CAEpB37B,MAAK2zB,YAAcR,CACnBnzB,MAAK4zB,YAAcR,CAEnBpzB,MAAK+7B,WAAaF,CAClB77B,MAAKg8B,WAAaF,CAClB97B,MAAK+zB,gBAAkBR,CACvBvzB,MAAKg0B,aAAeR,EAMdoI,EAAAr7B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI1U,GAAc,EAClB,IAAIqrB,GAA6B3W,EAAuBkgB,yBAExD,IAAI6H,GAAuCj8B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBAClKpc,GAAuBgW,iBAAiBlqB,KAAM27B,EAAmBO,YAAaD,EAAczlB,MAE5F,IAAIxW,KAAK2zB,YAAa,CACrBn0B,GAAQ,OAASqrB,EAAO,IAAM3W,EAAuB2V,WAAa,IAAMoS,EAAgB,MAExF,IAAIj8B,KAAK4zB,YACRp0B,GAAQ,OAASqrB,EAAO,IAAMA,EAAO,IAAMoR,EAAgB,MAE5Dz8B,IAAQ,OAASqrB,EAAO,IAAMA,EAAO,KAGtCrrB,GAAQ,OAASqrB,EAAO,IAAMoR,EAAgB,OAAUj8B,KAAgB,YAAG6qB,EAAO3W,EAAuB4V,YAAc,IACvHtqB,IAAQ,OAASqrB,EAAO,IAAMoR,EAAgB,MAAQpR,EAAO,IAC7DrrB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAUyB,EAAO,IAExI,OAAOrrB,GAMDo8B,GAAAr7B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA4BA,GAAS7gB,kBAAkB5P,MAMjD47B,GAAAr7B,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIyL,GAAiBzL,EAAMkL,EAAkBQ,eAC7C,KAAKD,EACJ,KAAK,IAAK58B,OAAM,eAAiBq8B,EAAkBQ,eAAiB,aAErE,IAAIp8B,KAAK2zB,YAAa,CACrB3zB,KAAK6wB,UAAU,IAAMsL,EAAMp1B,EAAIo1B,EAAMl1B,GAAG,CACxCjH,MAAK6wB,UAAU,GAAKxpB,KAAKg1B,IAAIF,EAAMp1B,EAAIo1B,EAAMl1B,GAAG,CAChD,IAAIk1B,EAAMh1B,GAAK,EACd,KAAK,IAAK5H,OAAM,+CACjBS,MAAK6wB,UAAU,GAAKxpB,KAAKoxB,GAAG,EAAE0D,EAAMh1B,CACpC,IAAInH,KAAK4zB,YACR5zB,KAAK6wB,UAAU,GAAKsL,EAAMr0B,EAAET,KAAKoxB,GAAG,QAC/B,CACNz4B,KAAK6wB,UAAU,GAAKsL,EAAMp1B,CAC1B/G,MAAK6wB,UAAU,GAAKsL,EAAMl1B,EAAIk1B,EAAMp1B,GAlFxB60B,GAAAQ,eAAwB,eAqFvC,OAAAR,IA1GgC/L,EA4GL/vB,GAAAJ,QAAlBk8B,IvC4jJNviB,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDwL,4DAA4D,8DAA8DC,oEAAoE,SAAS39B,EAAQkB,EAAOJ,GACvc,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwCtrJtB,IAAO0oB,GAAqBnqB,EAAa,0DAEzC,IAAOoU,GAAoBpU,EAAc,uDAGzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO49B,GAA2B59B,EAAY,qExCyrJ9C,IwCprJM69B,GAA0B,SAAAp7B,GAAStB,EAAnC08B,EAA0Bp7B,EAe/B,SAfKo7B,GAeOxJ,EAAwBC,EAAoBwJ,EAAgCrJ,EAA2BC,EAAyBqJ,GAG3It7B,EAAA1B,KAAAK,KAAM,yBAA0B8S,EAAuBgb,OAAQ,EAAG9a,EAAqB2C,eAEvF3V,MAAKiwB,aAAeuM,CAEpB,IAAIE,EAAkB,EACrB,KAAK,IAAKn9B,OAAM,8CACjBS,MAAKyzB,iBAAmBR,CACxBjzB,MAAK0zB,aAAeR,CACpBlzB,MAAK48B,kBAAoBF,CACzB18B,MAAK6zB,aAAeR,CACpBrzB,MAAK8zB,WAAaR,CAClBtzB,MAAK68B,gBAAkBF,EAMjBF,EAAAl8B,UAAAmT,0BAAP,SAAiCgG,GAEhC,GAAI1Z,KAAKyzB,iBACR/Z,EAAqBnE,gBAAkB,IACxC,IAAIvV,KAAK0zB,aACRha,EAAqBpE,gBAAkB,KAMlCmnB,GAAAl8B,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI1U,GAAc,EAClB,IAAI0U,EAAuBgB,sBAAuB,CACjD,GAAI4nB,EAEJ,IAAI98B,KAAKyzB,iBAAkB,CAC1BqJ,EAAqB5oB,EAAuByV,yBAC5CzV,GAAuBmV,oBAAoByT,EAAoB,GAGhE,GAAIC,GAAkC7oB,EAAuByV,yBAC7DzV,GAAuBmV,oBAAoB0T,EAAW,EAEtD,IAAIlS,GAA6B3W,EAAuByV,yBACxD,IAAIqT,GAAgC,GAAIjU,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACxF,IAAIuT,GAAiC,GAAIhB,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EAEzF,IAAIxW,KAAKyzB,iBACRvf,EAAuBsc,sBAAsBsM,EAE9C5oB,GAAuBsc,sBAAsBuM,ExC8pJpC,IwC3pJLE,GAAyC/oB,EAAuBqV,uBACpErV,GAAuBgW,iBAAiBlqB,KAAMw8B,EAA4BU,gBAAiBD,EAAiBzmB,MAE5G,IAAInX,EAEJ,IAAI89B,EACJ,IAAIC,EACJ,IAAIp9B,KAAKyzB,iBAAkB,CAC1B0J,EAAgBjpB,EAAuBqV,uBACvCrV,GAAuBgW,iBAAiBlqB,KAAMw8B,EAA4BjI,uBAAwB4I,EAAc3mB,MAChH4mB,GAAiB,GAAInyB,MACrB,KAAK5L,EAAI,EAAGA,EAAIW,KAAK48B,kBAAoB,EAAGv9B,IAC3C+9B,EAAe5uB,KAAK0F,EAAuBqV,yBAG7C,GAAIkL,EACJ,IAAI4I,EACJ,IAAIr9B,KAAK0zB,aAAc,CACtBe,EAAmBvgB,EAAuBqV,uBAC1CrV,GAAuBgW,iBAAiBlqB,KAAMw8B,EAA4B7H,mBAAoBF,EAAiBje,MAC/G6mB,GAAoB,GAAIpyB,MACxB,KAAK5L,EAAI,EAAGA,EAAIW,KAAK48B,kBAAoB,EAAGv9B,IAC3Cg+B,EAAkB7uB,KAAK0F,EAAuBqV,yBAGhD,GAAIvpB,KAAKyzB,iBACRj0B,GAAQ,OAASs9B,EAAqB,IAAMK,EAAgB,IAC7D,IAAIn9B,KAAK0zB,aACRl0B,GAAQ,OAAS0U,EAAuBuW,eAAiB,IAAMvW,EAAuBuW,eAAiB,IAAMgK,EAAmB,IAEjI,KAAKp1B,EAAI,EAAGA,EAAIW,KAAK48B,kBAAmBv9B,IAAK,CAC5C,OAAQA,GACP,IAAK,GACJG,GAAQ,OAASuqB,EAAW,IAAM7V,EAAuB4V,WAAa,IAAMmT,EAAmB,MAC/F,MACD,KAAK,GACJz9B,GAAQ,OAASw9B,EAAU,IAAM9oB,EAAuB4V,WAAa,IAAMmT,EAAmB,MAC9Fz9B,IAAQ,OAASuqB,EAAW,IAAMiT,EAAU,IAAM9oB,EAAuBqC,gBAAkB,IAC3F/W,IAAQ,OAASuqB,EAAW,IAAMA,EAAW,IAAMkT,EAAmB,MACtE,MACD,KAAK,GACJz9B,GAAQ,OAASw9B,EAAU,IAAMA,EAAU,IAAMC,EAAmB,MACpEz9B,IAAQ,OAASuqB,EAAW,IAAMiT,EAAU,IAAM9oB,EAAuBqC,gBAAkB,IAC3F/W,IAAQ,OAASuqB,EAAW,IAAMA,EAAW,IAAMkT,EAAmB,MACtE,MACD,KAAK,GACJz9B,GAAQ,OAASw9B,EAAU,IAAMA,EAAU,IAAMC,EAAmB,MACpEz9B,IAAQ,OAASuqB,EAAW,IAAMiT,EAAU,IAAM9oB,EAAuBqC,gBAAkB,IAC3F/W,IAAQ,OAASuqB,EAAW,IAAMA,EAAW,IAAMkT,EAAmB,MACtE,OAEF,GAAIj9B,KAAKyzB,iBAAkB,CAC1Bj0B,GAAQ,OAASu9B,EAAY,IAAMhT,EAAW,IAAMqT,EAAe/9B,GAAK,IACxEG,IAAQ,OAASs9B,EAAqB,IAAMA,EAAqB,IAAMC,EAAY,KAEpF,GAAI/8B,KAAK0zB,aAAc,CACtBl0B,GAAQ,OAASu9B,EAAY,IAAMhT,EAAW,IAAMsT,EAAkBh+B,GAAK,IAC3EG,IAAQ,OAAS0U,EAAuBuW,eAAiB,IAAMvW,EAAuBuW,eAAiB,IAAMsS,EAAY,MAK3H,GAAI/8B,KAAK48B,mBAAqB,EAC7B7S,EAAW7V,EAAuB4V,eAC9B,CACJ,OAAQ9pB,KAAK48B,mBACZ,IAAK,GACJp9B,GAAQ,OAASw9B,EAAU,IAAM9oB,EAAuB4V,WAAa,IAAMmT,EAAmB,MAC9F,MACD,KAAK,GACJz9B,GAAQ,OAASw9B,EAAU,IAAMA,EAAU,IAAMC,EAAmB,MACpE,MACD,KAAK,GACJz9B,GAAQ,OAASw9B,EAAU,IAAMA,EAAU,IAAMC,EAAmB,MACpE,MACD,KAAK,GACJz9B,GAAQ,OAASw9B,EAAU,IAAMA,EAAU,IAAMC,EAAmB,MACpE,OAEFz9B,GAAQ,OAASuqB,EAAW,IAAMiT,EAAU,IAAM9oB,EAAuBqC,gBAAkB,KAE5F,GAAIvW,KAAKyzB,iBAAkB,CAC1Bj0B,GAAQ,OAASu9B,EAAY,IAAMhT,EAAW,IAAMqT,EAAep9B,KAAK48B,mBAAqB,IAC7Fp9B,IAAQ,OAASs9B,EAAqB,IAAMA,EAAqB,IAAMC,EAAY,IACnFv9B,IAAQ,OAAS0U,EAAuBoW,eAAiB,IAAMpW,EAAuBoW,eAAiB,IAAMwS,EAAqB,KAEnI,GAAI98B,KAAK0zB,aAAc,CACtBl0B,GAAQ,OAASu9B,EAAY,IAAMhT,EAAW,IAAMsT,EAAkBr9B,KAAK48B,mBAAqB,IAChGp9B,IAAQ,OAAS0U,EAAuBuW,eAAiB,IAAMvW,EAAuBuW,eAAiB,IAAMsS,EAAY,MAI3H,MAAOv9B,GAGT,OAAAi9B,IArKyC5M,EAuKzC/vB,GAAoCJ,QAA3B+8B,IxCspJNhqB,uDAAuD,uDAAuD4G,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDwM,qEAAqE,qEAAqE5R,0DAA0D,4DAA4D6R,iEAAiE,SAAS3+B,EAAQkB,EAAOJ,GACxrB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyC/0JtB,IAAO0oB,GAAqBnqB,EAAa,0DAEzC,IAAOoU,GAAoBpU,EAAc,uDAEzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAO4+B,GAAwB5+B,EAAa,kEzCo1J5C,IyC90JM6+B,GAAuB,SAAAp8B,GAAStB,EAAhC09B,EAAuBp8B,EA4D5B,SA5DKo8B,GA4DO9pB,EAAsBwf,EAAmBC,EAAmBsK,EAA+BC,EAA6BpK,EAA0BC,EAAuBoK,GAA7G,GAAAF,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,EAA6B,GAAApK,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAoK,QAAA,GAA8C,CAA9CA,EAA8B7R,OAAO8R,UAEzNx8B,EAAA1B,KAAAK,KAAM,sBAAuB2T,EAAMwf,EAAYC,EAAW,EAAI,EAAK,EAAGpgB,EAAqByC,cAAgB,EAE3GzV,MAAKiwB,aAAeuN,CAEpBx9B,MAAK2zB,YAAcR,CACnBnzB,MAAK4zB,YAAcR,CAEnBpzB,MAAK89B,aAAeJ,CACpB19B,MAAK+9B,UAAYJ,CACjB39B,MAAKg0B,aAAeR,CACpBxzB,MAAK+zB,gBAAkBR,CACvBvzB,MAAKg+B,cAAgB32B,KAAK42B,IAAIL,EAAaF,EAAWC,GA7CvDx7B,OAAAC,eAAWq7B,EAAAl9B,UAAA,czCm1JJ8B,IyCn1JP,WAEC,MAAOrC,MAAK89B,czCo1JNp7B,WAAY,KACZC,aAAc,MyC/0JrBR,QAAAC,eAAWq7B,EAAAl9B,UAAA,WzCq1JJ8B,IyCr1JP,WAEC,MAAOrC,MAAK+9B,WzCs1JNr7B,WAAY,KACZC,aAAc,MyCj1JrBR,QAAAC,eAAWq7B,EAAAl9B,UAAA,ezCu1JJ8B,IyCv1JP,WAEC,MAAOrC,MAAKg+B,ezCw1JNt7B,WAAY,KACZC,aAAc,MyCxzJd86B,GAAAl9B,UAAAyN,cAAP,SAAqBH,EAA+BqG,GzC+zJ7C,GyC5zJFgqB,GAAsChqB,EAAuBqV,uBACjE,IAAI4U,GAAuCn+B,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBAClKpc,GAAuBgW,iBAAiBlqB,KAAMw9B,EAAyBY,WAAYF,EAAc1nB,MACjGtC,GAAuBgW,iBAAiBlqB,KAAMw9B,EAAyBa,WAAYF,EAAc3nB,MAEjG,IAAI8nB,GAA+B,GAAIvV,GAAsBmV,EAAc5U,QAAS4U,EAAc1nB,MAAO,EACzG,IAAI+nB,GAA8B,GAAIxV,GAAsBmV,EAAc5U,QAAS4U,EAAc1nB,MAAO,EACxG,IAAIgoB,GAA8B,GAAIzV,GAAsBmV,EAAc5U,QAAS4U,EAAc1nB,MAAO,EAExG,IAAIioB,GAA+B,GAAI1V,GAAsBoV,EAAc7U,QAAS6U,EAAc3nB,MAAO,EACzG,IAAIkoB,GAA8B,GAAI3V,GAAsBoV,EAAc7U,QAAS6U,EAAc3nB,MAAO,EACxG,IAAImoB,GAAkC,GAAI5V,GAAsBoV,EAAc7U,QAAS6U,EAAc3nB,MAAO,EAE5G,IAAIqU,GAA6B3W,EAAuByV,yBACxD,IAAI1Y,GAA6B,GAAI8X,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACrF,IAAIooB,GAAgC,GAAI7V,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EACxFqU,GAAO,GAAI9B,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EAC3D,IAAIkF,GAA8B,GAAIqN,GAAsB8B,EAAKvB,QAASuB,EAAKrU,MAAO,EAEtF,IAAIrX,GAA0B,GAAI4pB,GAAsB7U,EAAuB8B,SAASsT,QAASpV,EAAuB8B,SAASQ,MAAO,EACxI,IAAIqoB,GAA0B,GAAI9V,GAAsB7U,EAAuB8B,SAASsT,QAASpV,EAAuB8B,SAASQ,MAAO,EAExI,IAAIhX,GAAc,EAElBA,IAAQ,OAASL,EAAI,IAAMA,EAAI,IAAMo/B,EAAQ,IAC7C,IAAIv+B,KAAK+9B,UAAY,EACpBv+B,GAAQ,OAASq/B,EAAI,IAAMA,EAAI,IAAML,EAAQ,IAE9C,IAAIx+B,KAAK2zB,YAAa,CACrB,GAAI3zB,KAAK4zB,YACRp0B,GAAQ,OAASyR,EAAO,IAAMiD,EAAuB2V,WAAa,IAAM8U,EAAY,SAEpFn/B,IAAQ,OAASyR,EAAO,IAAMiD,EAAuB2V,WAAa,IACnErqB,IAAQ,OAASyR,EAAO,IAAMA,EAAO,IAAMytB,EAAQ,IACnDl/B,IAAQ,OAASyR,EAAO,IAAMA,EAAO,IACrCzR,IAAQ,OAASyR,EAAO,IAAMA,EAAO,IAAMytB,EAAQ,IACnDl/B,IAAQ,OAASqrB,EAAO,IAAM5Z,EAAO,IAAMwtB,EAAS,SAEpDj/B,IAAQ,OAASqrB,EAAK3U,WAAa,IAAMhC,EAAuB4V,WAAa,IAAMwU,EAAS,IAE7F,IAAIt+B,KAAK+9B,UAAY,EAAG,CACvBv+B,GAAQ,OAASkc,EAAQ,IAAMmP,EAAO,IACtCrrB,IAAQ,OAASo/B,EAAU,IAAM/T,EAAO,IAAMnP,EAAQ,IACtDlc,IAAQ,OAASo/B,EAAU,IAAMA,EAAU,IAAMJ,EAAQ,IACzDh/B,IAAQ,OAASq/B,EAAI,IAAMA,EAAI,IAAMD,EAAU,KAGhDp/B,GAAQ,OAASkc,EAAQ,IAAMmP,EAAO,IAAM0T,EAAQ,IACpD/+B,IAAQ,OAASqrB,EAAO,IAAMnP,EAAQ,IACtClc,IAAQ,OAASkc,EAAQ,IAAMA,EAAQ,IAAMmP,EAAO,IACpDrrB,IAAQ,OAASqrB,EAAO,IAAMnP,EAAQ,IAAM6iB,EAAQ,IAEpD,IAAIv+B,KAAK+9B,UAAY,EACpBv+B,GAAQ,OAASqrB,EAAO,IAAMA,EAAO,IACtCrrB,IAAQ,OAASL,EAAI,IAAMA,EAAI,IAAM0rB,EAAO,IAE5C,OAAOrrB,GAMDi+B,GAAAl9B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAkCA,GAAS7gB,kBAAkB5P,MAMvDy9B,GAAAl9B,UAAAmT,0BAAP,SAAiCgG,GAEhCA,EAAqB/E,UAAY,KAM3B8oB,GAAAl9B,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAI1wB,KAAK2zB,YAAa,CACrB,GAAImL,GAAmBpO,EAAM+M,EAAwBsB,YACrD,KAAKD,EACJ,KAAK,IAAKv/B,OAAM,eAAiBk+B,EAAwBsB,YAAc,aACxE,IAAID,EAAQ/3B,GAAK,EAChB,KAAK,IAAKxH,OAAM,+CACjB,IAAI++B,GAAgBt+B,KAAKg+B,cAAch+B,KAAK89B,YAC5C99B,MAAK6wB,UAAU,GAAKyN,EAAOQ,EAAQ/3B,CACnC/G,MAAK6wB,UAAU,GAAKiO,EAAQ/3B,CAC5B,IAAI/G,KAAK4zB,YACR5zB,KAAK6wB,UAAU,GAAKiO,EAAQ73B,GArJjBw2B,GAAAsB,YAAqB,YAwJpC,OAAAtB,IA/KsC5N,EAiLtC/vB,GAAiCJ,QAAxB+9B,IzCqzJNhrB,uDAAuD,uDAAuD4G,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDkO,kEAAkE,kEAAkEtT,0DAA0D,4DAA4DpS,0DAA0D,SAAS1a,EAAQkB,EAAOJ,GAC3qB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Cp/JtB,IAAOyS,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOqgC,GAAiBrgC,EAAc,2D1C0/JtC,I0Cr/JMmU,GAAgB,SAAA1R,GAAStB,EAAzBgT,EAAgB1R,EAgBrB,SAhBK0R,GAgBOE,EAA8BC,EAA6BC,GAA3D,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEtEnT,KAAKiwB,aAAegP,CAEpBj/B,MAAKk/B,eAAiBjsB,CACtBjT,MAAKm/B,cAAgBjsB,CACrBlT,MAAKo/B,YAAcjsB,CAEnB9R,GAAA1B,KAAAK,KAAM,eAAgB8S,EAAuBc,aAAc,EAAG,GAMxDb,EAAAxS,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAImrB,GAA2CnrB,EAAuBoc,wBACtEpc,GAAuBgW,iBAAiBlqB,KAAMi/B,EAAkBK,kBAAmBD,EAAmB7oB,MACtG,IAAI+oB,GAAkCrrB,EAAuBqV,uBAC7DrV,GAAuBgW,iBAAiBlqB,KAAMi/B,EAAkBO,oBAAqBD,EAAU/oB,MAE/F,IAAIhX,GAAc,EAClBA,IAAQ,OAAS0U,EAAuB2V,WAAa,IAAM0V,EAAY,IAAMF,EAAqB,M1C6+J5F,I0C3+JFxU,GAA6B3W,EAAuBkgB,yBACxD50B,IAAQ,OAASqrB,EAAO,IAAM3W,EAAuB2V,WAAa,IAAM3V,EAAuBqC,gBAAkB,IACjH/W,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAUyB,EAAO,IACxI,IAAI7qB,KAAKk/B,eAAgB,CACxB,GAAIl/B,KAAKm/B,cAAe,CACvB,GAAIM,GAA4BvrB,EAAuBkgB,yBACvD,IAAIp0B,KAAKo/B,YAAa,CACrB5/B,GAAQ,OAASigC,EAAM,IAAMvrB,EAAuB2V,WAAa,IAAMwV,EAAqB,MAC5F7/B,IAAQ,OAASigC,EAAM,IAAMA,EAAM,IACnCjgC,IAAQ,OAAS0U,EAAuB2V,WAAa,IAAM4V,EAAM,IAAMJ,EAAqB,MAC5F7/B,IAAQ,OAASigC,EAAM,IAAMvrB,EAAuB2V,WAAa,IAAMwV,EAAqB,MAC5F7/B,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAUqW,EAAM,SACjI,CACNjgC,GAAQ,OAASigC,EAAM,IAAMvrB,EAAuB2V,WAAa,IAAMwV,EAAqB,MAC5F7/B,IAAQ,OAASigC,EAAM,IAAMA,EAAM,IACnCjgC,IAAQ,OAAS0U,EAAuB2V,WAAa,IAAM4V,EAAM,IAAMJ,EAAqB,YAEvF,CACN,GAAIK,GAA4BxrB,EAAuBkgB,yBACvD50B,IAAQ,OAASkgC,EAAM,IAAML,EAAqB,MAAQnrB,EAAuB2V,WAAa,IAC9FrqB,IAAQ,OAAS0U,EAAuBkV,qBAAuB,QAAUlV,EAAuBkV,qBAAuB,QAAUsW,EAAM,MAGzIlgC,GAAQ,OAAS0U,EAAuB4V,WAAa,IAAM5V,EAAuB2V,WAAa,IAAMwV,EAAqB,MAC1H,OAAO7/B,GAMDuT,GAAAxS,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA2BA,GAAS7gB,kBAAkB5P,MAMhD+S,GAAAxS,UAAAsY,gCAAP,SAAuC6X,GAEtC1wB,KAAK6wB,UAAU,GAAKH,EAAMjY,SAC1BzY,MAAK6wB,UAAU,GAAKH,EAAMhY,QAC1B1Y,MAAK6wB,UAAU,GAAKH,EAAM/X,MAAQ+X,EAAMhY,QACxC1Y,MAAK6wB,UAAU,GAAK,EAAEH,EAAMhY,SAG9B,OAAA3F,IAtF+B8c,EAwF/B/vB,GAA0BJ,QAAjBqT,I1C2+JNsG,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD6O,2DAA2D,6DAA6DC,wDAAwD,SAAShhC,EAAQkB,EAAOJ,GACzb,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2CvlKtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmqB,GAAqBnqB,EAAa,0DAEzC,IAAOoU,GAAoBpU,EAAc,uDAEzC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOihC,GAAejhC,EAAe,yD3CulKrC,I2CllKMkhC,GAAc,SAAAz+B,GAAStB,EAAvB+/B,EAAcz+B,EA2BnB,SA3BKy+B,GA2BOnsB,EAAsB+qB,EAAkBvC,EAAkB4D,GAApC,GAAArB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAvC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA4D,QAAA,GAAiB,CAAjBA,EAAA,IAGrE1+B,EAAA1B,KAAAK,KAAM,aAAc8S,EAAuBgb,OAAQ,EAAG9a,EAAqByC,cAAgB,EAE3FzV,MAAKiwB,aAAe4P,CAEpB7/B,MAAKggC,OAAStB,CACd1+B,MAAKigC,OAAS9D,CACdn8B,MAAKkgC,MAAQH,CAEb//B,MAAKmgC,eAMNh+B,OAAAC,eAAW09B,EAAAv/B,UAAA,S3CgkKJ8B,I2ChkKP,WAEC,MAAOrC,MAAKggC,Q3CikKNz9B,I2C9jKP,SAAiBC,GAEhBxC,KAAKggC,OAASx9B,CAEdxC,MAAKmgC,gB3C8jKCz9B,WAAY,KACZC,aAAc,M2CzjKrBR,QAAAC,eAAW09B,EAAAv/B,UAAA,S3C+jKJ8B,I2C/jKP,WAEC,MAAOrC,MAAKigC,Q3CgkKN19B,I2C7jKP,SAAiBC,GAEhBxC,KAAKigC,OAASz9B,CAEdxC,MAAKmgC,gB3C6jKCz9B,WAAY,KACZC,aAAc,M2CxjKrBR,QAAAC,eAAW09B,EAAAv/B,UAAA,Q3C8jKJ8B,I2C9jKP,WAEC,MAAOrC,MAAKkgC,O3C+jKN39B,I2C5jKP,SAAgBC,GAEfxC,KAAKkgC,MAAQ19B,G3C6jKPE,WAAY,KACZC,aAAc,M2CxjKdm9B,GAAAv/B,UAAAyN,cAAP,SAAqBH,EAA+BqG,GAEnD,GAAI1U,GAAc,EAElB,IAAI4gC,GAAgClsB,EAAuBqV,uBAC3DrV,GAAuBgW,iBAAiBlqB,KAAM6/B,EAAgBQ,SAAUD,EAAQ5pB,MAEhF,IAAI8pB,GAAmBtgC,KAAKkgC,OAAS,IAAK,EAAKlgC,KAAKkgC,OAAS,IAAK,EAAI,CAEtE,IAAI77B,GAA+B,GAAI0kB,GAAsB7U,EAAuB8B,SAASsT,QAASpV,EAAuB8B,SAASQ,MAAO8pB,EAE7I,IAAInM,GAA4BjgB,EAAuBkgB,yBAEvD,IAAIp0B,KAAKigC,QAAU,EAClBzgC,GAAQ,OAAS6E,EAAS,IAAMA,EAAS,IAAM+7B,EAAU,MAE1D5gC,IAAQ,OAAS20B,EAAM,IAAMjgB,EAAuB2V,WAAa,IAAMuW,EAAU,MACjF5gC,IAAQ,OAAS20B,EAAM,IAAMA,EAAM,IACnC30B,IAAQ,OAAS6E,EAAS,IAAMA,EAAS,IAAM8vB,EAAM,IAErD,OAAO30B,GAMDsgC,GAAAv/B,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAyBA,GAAS7gB,kBAAkB5P,MAG7C8/B,GAAAv/B,UAAA4/B,aAAR,WAECngC,KAAKugC,SAAW,GAAI9/B,GAAS4G,KAAKoxB,GAAG,EAAEz4B,KAAKggC,OAAQhgC,KAAKigC,OAAQ,EAAG,GAM9DH,GAAAv/B,UAAAmT,0BAAP,SAAiCgG,GAEhCA,EAAqB/E,UAAY,KAxHpBmrB,GAAAU,OAAgB,GAKhBV,GAAAW,OAAgB,GAqH/B,OAAAX,IAlI6BjQ,EAoI7B/vB,GAAwBJ,QAAfogC,I3C0jKNj3B,gCAAgCD,UAAU6J,uDAAuD,uDAAuD4G,8DAA8D,8DAA8DyX,yDAAyD,yDAAyD4P,yDAAyD,yDAAyDhV,0DAA0D,4DAA4DiV,8DAA8D,SAAS/hC,EAAQkB,EAAOJ,GACvsB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4CntKtB,IAAOI,GAAQ7B,EAAiB,gCAQhC,IAAOkU,GAAsBlU,EAAa,8DAC1C,IAAOixB,GAAgBjxB,EAAe,yDACtC,IAAOgiC,GAAqBhiC,EAAa,+D5CktKzC,I4C7sKMiiC,GAAoB,SAAAx/B,GAAStB,EAA7B8gC,EAAoBx/B,EAiBzB,SAjBKw/B,GAiBOltB,EAAsBmtB,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAEjCz/B,EAAA1B,KAAAK,KAAM,mBAAoB2T,EAAM,EAEhC3T,MAAKiwB,aAAe2Q,CAEpB5gC,MAAK+gC,WAAaD,GAAY,GAAIrgC,GAM5BogC,EAAAtgC,UAAAqN,kBAAP,SAAyBC,EAA+BqG,GAEvD,GAAI8sB,GAAuChhC,KAAKqwB,QAAUvd,EAAuBgb,OAAS5Z,EAAuBqV,wBAA0BrV,EAAuBoc,wBAClKpc,GAAuBgW,iBAAiBlqB,KAAM4gC,EAAsBK,eAAgBD,EAAcxqB,MAElG,IAAIsb,GAAiC5d,EAAuByV,yBAC5D,IAAInqB,GAAc,EAClBA,IAAQ,OAASsyB,EAAW,IAAM5d,EAAuB2V,WAAa,IAAMmX,EAAgB,IAC5FxhC,IAAQ,OAAS0U,EAAuBwV,eAAiB,QAAUoI,EAAW,IAAM5d,EAAuBwV,eAAiB,QAE5H,IAAIxV,EAAuBU,aAC1BpV,GAAQ,OAAS0U,EAAuB0V,eAAiB,QAAUoX,EAAgB,QAAU9sB,EAAuB0V,eAAiB,QAEtI,OAAOpqB,GAMDqhC,GAAAtgC,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA+BA,GAAS7gB,kBAAkB5P,MAMpD6gC,GAAAtgC,UAAAsY,gCAAP,SAAuC6X,GAEtC,GAAIwQ,GAAyBxQ,EAAMmQ,EAAqBM,kBACxD,KAAKD,EACJ,KAAM,IAAI3hC,OAAM,eAAiBshC,EAAqBM,kBAAoB,aAE3EnhC,MAAK6wB,UAAU,GAAKqQ,EAAcn6B,CAClC/G,MAAK6wB,UAAU,GAAKqQ,EAAcj6B,CAClCjH,MAAK6wB,UAAU,GAAKqQ,EAAc/5B,EAvDrB05B,GAAAM,kBAA2B,kBAyD1C,OAAAN,IAlEmChR,EAoEnC/vB,GAA8BJ,QAArBmhC,I5CgsKNh4B,gCAAgCD,UAAUyQ,8DAA8D,8DAA8DyX,yDAAyD,yDAAyDsQ,+DAA+D,iEAAiEC,gEAAgE,SAASziC,EAAQkB,EAAOJ,GACnf,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6CtxKtB,IAAO0uB,GAAiBnwB,EAAc,uDAItC,IAAO0iC,GAAuB1iC,EAAa,iE7CyxK3C,I6CpxKM2iC,GAAsB,SAAAlgC,GAAStB,EAA/BwhC,EAAsBlgC,EAe3B,SAfKkgC,KAiBJlgC,EAAA1B,KAAAK,KAEAA,MAAKiwB,aAAeqR,EAMdC,EAAAhhC,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAiCA,GAAS7gB,kBAAkB5P,MAE9D,OAAAuhC,IA7BqCxS,EA+BLjvB,GAAAJ,QAAvB6hC,I7CywKN5R,uDAAuD/mB,UAAU44B,iEAAiE,mEAAmEC,0DAA0D,SAAS7iC,EAAQkB,EAAOJ,GAC1R,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8CnzKtB,IAAO2uB,GAAqBpwB,EAAa,8DACzC,IAAO8iC,GAAiB9iC,EAAc,2D9CyzKtC,I8CpzKM+iC,GAAgB,SAAAtgC,GAAStB,EAAzB4hC,EAAgBtgC,EAqBrB,SArBKsgC,KAuBJtgC,EAAA1B,KAAAK,KArBOA,MAAA4hC,QAA8B,GAAI32B,MAMnCjL,MAAA6hC,YAAsB,KAiB5B7hC,MAAKiwB,aAAeyR,EAZrBv/B,OAAAC,eAAWu/B,EAAAphC,UAAA,U9C0zKJ8B,I8C1zKP,WAEC,MAAOrC,MAAK4hC,S9C2zKNl/B,WAAY,KACZC,aAAc,M8CzyKdg/B,GAAAphC,UAAAuhC,SAAP,SAAgBC,EAA2BrpB,GAE1C1Y,KAAK4hC,QAAQpzB,KAAKuzB,EAClB/hC,MAAKsvB,YAAY9gB,KAAKkK,EAEtB1Y,MAAKqvB,YAAcrvB,KAAKsvB,YAAY1vB,MAEpCI,MAAKmvB,cAAgB,KAMfwS,GAAAphC,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA2BA,GAAS7gB,kBAAkB5P,MAMhD2hC,GAAAphC,UAAAkvB,eAAP,WAECpuB,EAAAd,UAAMkvB,eAAc9vB,KAAAK,KAEpB,IAAIX,GAAoBW,KAAKqvB,YAAc,CAC3C,IAAI2S,GAAaC,EAAarwB,CAC9B,OAAOvS,IAAK,CACXW,KAAKkvB,iBAAmBlvB,KAAKsvB,YAAYjwB,EACzC2iC,GAAKhiC,KAAK4hC,QAAQviC,GAAG6f,WAAW,GAAGsC,WACnCygB,GAAKjiC,KAAK4hC,QAAQviC,EAAI,GAAG6f,WAAW,GAAGsC,WACvC5P,GAAQqwB,EAAGC,SAASF,EACpBhiC,MAAKuvB,aAAaxoB,GAAK6K,EAAM7K,CAC7B/G,MAAKuvB,aAAatoB,GAAK2K,EAAM3K,CAC7BjH,MAAKuvB,aAAapoB,GAAKyK,EAAMzK,EAG9B,GAAInH,KAAKovB,qBAAuBpvB,KAAKivB,UAAW,CAC/CjvB,KAAKkvB,iBAAmBlvB,KAAKsvB,YAAYtvB,KAAKqvB,YAAc,EAC5D2S,GAAKhiC,KAAK4hC,QAAQ,GAAG1iB,WAAW,GAAGsC,WACnCygB,GAAKjiC,KAAK4hC,QAAQ,GAAG1iB,WAAW,GAAGsC,WACnC5P,GAAQqwB,EAAGC,SAASF,EACpBhiC,MAAKuvB,aAAaxoB,GAAK6K,EAAM7K,CAC7B/G,MAAKuvB,aAAatoB,GAAK2K,EAAM3K,CAC7BjH,MAAKuvB,aAAapoB,GAAKyK,EAAMzK,GAGhC,OAAAw6B,IAjF+B3S,EAmF/BlvB,GAA0BJ,QAAjBiiC,I9C2yKN7S,8DAA8D,8DAA8DqT,2DAA2D,6DAA6DC,gEAAgE,SAASxjC,EAAQkB,EAAOJ,GAC/U,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C94KtB,IAAO0uB,GAAiBnwB,EAAc,uDAItC,IAAOyjC,GAAuBzjC,EAAa,iE/Ci5K3C,I+C54KM0jC,GAAsB,SAAAjhC,GAAStB,EAA/BuiC,EAAsBjhC,EAe3B,SAfKihC,KAiBJjhC,EAAA1B,KAAAK,KAEAA,MAAKiwB,aAAeoS,EAMdC,EAAA/hC,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAiCA,GAAS7gB,kBAAkB5P,MAE9D,OAAAsiC,IA7BqCvT,EA+BNjvB,GAAAJ,QAAtB4iC,I/Ci4KN3S,uDAAuD/mB,UAAU25B,iEAAiE,mEAAmEC,iEAAiE,SAAS5jC,EAAQkB,EAAOJ,GACjS,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgD96KtB,IAAO0uB,GAAiBnwB,EAAc,uDAItC,IAAO6jC,GAAwB7jC,EAAa,kEhDi7K5C,IgD56KM8jC,GAAuB,SAAArhC,GAAStB,EAAhC2iC,EAAuBrhC,EAsB5B,SAtBKqhC,KAwBJrhC,EAAA1B,KAAAK,KAEAA,MAAKiwB,aAAewS,EAMdC,EAAAniC,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAAkCA,GAAS7gB,kBAAkB5P,MAG/D,OAAA0iC,IArCsC3T,EAuCtCjvB,GAAiCJ,QAAxBgjC,IhDs5KN/S,uDAAuD/mB,UAAU+5B,kEAAkE,oEAAoEC,8DAA8D,SAAShkC,EAAQkB,EAAOJ,GAChS,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiD38KtB,IAAO0uB,GAAiBnwB,EAAc,uDAItC,IAAOikC,GAAqBjkC,EAAa,+DjD88KzC,IiDz8KMkkC,GAAoB,SAAAzhC,GAAStB,EAA7B+iC,EAAoBzhC,EAczB,SAdKyhC,KAgBJzhC,EAAA1B,KAAAK,KAdMA,MAAA+iC,SAAoC,GAAI93B,MAgB9CjL,MAAKiwB,aAAe4S,EAZrB1gC,OAAAC,eAAW0gC,EAAAviC,UAAA,ajD88KJ8B,IiD98KP,WAEC,MAAOrC,MAAKgjC,YjD+8KNtgC,WAAY,KACZC,aAAc,MiD97KdmgC,GAAAviC,UAAA0iC,cAAP,SAAqBC,GAEpB,MAAOljC,MAAK+iC,SAASv1B,QAAQ01B,GAQvBJ,GAAAviC,UAAA4iC,WAAP,SAAkB3sB,GAEjB,MAAOxW,MAAK+iC,SAASvsB,GAMfssB,GAAAviC,UAAA6iC,SAAP,SAAgBF,GAEfljC,KAAK+iC,SAAS/iC,KAAKgjC,cAAgBE,EAM7BJ,GAAAviC,UAAAqP,kBAAP,SAAyB6gB,GAExB,MAA+BA,GAAS7gB,kBAAkB5P,MAE5D,OAAA8iC,IAxDmC/T,EA0DNjvB,GAAAJ,QAApBojC,IjDi8KNnT,uDAAuD/mB,UAAUy6B,+DAA+D,iEAAiEC,wDAAwD,SAAS1kC,EAAQkB,EAAOJ,GACpR,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkDzgLtB,IAAOI,GAAQ7B,EAAiB,gCAMhC,IAAOowB,GAAqBpwB,EAAa,8DACzC,IAAO2kC,GAAe3kC,EAAe,yDlD0gLrC,IkDrgLM4kC,GAAc,SAAAniC,GAAStB,EAAvByjC,EAAcniC,EAgBnB,SAhBKmiC,KAkBJniC,EAAA1B,KAAAK,KAhBOA,MAAA4hC,QAA0B,GAAI32B,MAC9BjL,MAAAyjC,cAAgC,GAAIx4B,MAiB3CjL,MAAKiwB,aAAesT,EAZrBphC,OAAAC,eAAWohC,EAAAjjC,UAAA,UlD4gLJ8B,IkD5gLP,WAEC,MAAOrC,MAAK4hC,SlD6gLNl/B,WAAY,KACZC,aAAc,MkD1/Kd6gC,GAAAjjC,UAAAuhC,SAAP,SAAgB7qB,EAAmByB,EAA0B8I,GAAA,GAAAA,QAAA,GAA2B,CAA3BA,EAAA,KAE5DxhB,KAAK4hC,QAAQpzB,KAAKyI,EAClBjX,MAAKsvB,YAAY9gB,KAAKkK,EACtB1Y,MAAKyjC,cAAcj1B,KAAKgT,GAAe,GAAI/gB,GAE3CT,MAAKqvB,YAAcrvB,KAAKsvB,YAAY1vB,MAEpCI,MAAKmvB,cAAgB,KAMfqU,GAAAjjC,UAAAkvB,eAAP,WAECpuB,EAAAd,UAAMkvB,eAAc9vB,KAAAK,KAEpB,IAAIX,GAAoBW,KAAKqvB,YAAc,CAC3C,IAAI2S,GAAaC,EAAarwB,CAC9B,OAAOvS,IAAK,CACXW,KAAKkvB,iBAAmBlvB,KAAKsvB,YAAYjwB,EACzC2iC,GAAKhiC,KAAKyjC,cAAcpkC,EACxB4iC,GAAKjiC,KAAKyjC,cAAcpkC,EAAI,EAC5BuS,GAAQqwB,EAAGC,SAASF,EACpBhiC,MAAKuvB,aAAaxoB,GAAK6K,EAAM7K,CAC7B/G,MAAKuvB,aAAatoB,GAAK2K,EAAM3K,CAC7BjH,MAAKuvB,aAAapoB,GAAKyK,EAAMzK,EAG9B,GAAInH,KAAKqvB,YAAc,IAAMrvB,KAAKovB,qBAAuBpvB,KAAKivB,WAAY,CACzEjvB,KAAKkvB,iBAAmBlvB,KAAKsvB,YAAYtvB,KAAKqvB,YAAc,EAC5D2S,GAAKhiC,KAAKyjC,cAAc,EACxBxB,GAAKjiC,KAAKyjC,cAAc,EACxB7xB,GAAQqwB,EAAGC,SAASF,EACpBhiC,MAAKuvB,aAAaxoB,GAAK6K,EAAM7K,CAC7B/G,MAAKuvB,aAAatoB,GAAK2K,EAAM3K,CAC7BjH,MAAKuvB,aAAapoB,GAAKyK,EAAMzK,GAGhC,OAAAq8B,IAtE6BxU,EAwELlvB,GAAAJ,QAAf8jC,IlDggLN36B,gCAAgCD,UAAUkmB,8DAA8D,8DAA8D4U,yDAAyD,2DAA2DC,6DAA6D,SAAS/kC,EAAQkB,EAAOJ,GAClX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDtlLtB,IAAOujC,GAAkBhlC,EAAc,4DACvC,IAAOsd,GAAmBtd,EAAc,mDnD4lLxC,ImDvlLMilC,GAAkB,SAAAxiC,GAAStB,EAA3B8jC,EAAkBxiC,EAiDvB,SAjDKwiC,GAiDOpT,EAAuBqT,GAElCziC,EAAA1B,KAAAK,KAAMywB,EAAUqT,EAzCV9jC,MAAA+jC,cAAwB,IA2C9B/jC,MAAKgkC,mBAAqBF,EAlC3B3hC,OAAAC,eAAWyhC,EAAAtjC,UAAA,enDmlLJ8B,ImDnlLP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAKkkC,enDmlLNxhC,WAAY,KACZC,aAAc,MmD9kLrBR,QAAAC,eAAWyhC,EAAAtjC,UAAA,gBnDolLJ8B,ImDplLP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAKmkC,gBnDolLNzhC,WAAY,KACZC,aAAc,MmD/kLrBR,QAAAC,eAAWyhC,EAAAtjC,UAAA,anDqlLJ8B,ImDrlLP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAKokC,anDqlLN1hC,WAAY,KACZC,aAAc,MmDzkLdkhC,GAAAtjC,UAAAoL,OAAP,SAAcsF,GAEb,IAAKjR,KAAKgkC,mBAAmBK,QAAS,CACrC,GAAIpzB,EAAOjR,KAAKskC,YAActkC,KAAKgkC,mBAAmBO,cACrDtzB,EAAOjR,KAAKskC,YAActkC,KAAKgkC,mBAAmBO,kBAAoB,IAAItzB,EAAOjR,KAAKskC,YACtFrzB,EAAOjR,KAAKskC,YAGd,GAAItkC,KAAKwkC,QAAUvzB,EAAOjR,KAAKskC,YAC9B,MAEDtkC,MAAKykC,aAAaxzB,GAMZ4yB,GAAAtjC,UAAA+P,MAAP,SAAa9N,GAEZ,GAAIyO,GAAsBzO,EAAMxC,KAAKgkC,mBAAmBO,cAAgBvkC,KAAKskC,WAE7E,IAAItkC,KAAKwkC,QAAUvzB,EAAOjR,KAAKskC,YAC9B,MAEDtkC,MAAKykC,aAAaxzB,GAMZ4yB,GAAAtjC,UAAAkkC,aAAP,SAAoBxzB,GAEnBjR,KAAK+jC,cAAgB,IAErB/jC,MAAK0kC,UAAazzB,EAAOjR,KAAKskC,YAActkC,KAAKwkC,OAAS,GAAK,CAE/DnjC,GAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAUb4yB,GAAAtjC,UAAA0jC,eAAP,WAECjkC,KAAK+jC,cAAgB,KAErB,IAAIM,GAAkBrkC,KAAKgkC,mBAAmBK,OAC9C,IAAIE,GAAgCvkC,KAAKgkC,mBAAmBO,aAC5D,IAAII,GAA4B3kC,KAAKgkC,mBAAmBW,SACxD,IAAI1zB,GAAsBjR,KAAKwkC,MAG/B,IAAIH,IAAYpzB,GAAQszB,GAAiBtzB,EAAO,GAAI,CACnDA,GAAQszB,CACR,IAAItzB,EAAO,EACVA,GAAQszB,EAGV,IAAKF,GAAWpzB,GAAQszB,EAAe,CACtCvkC,KAAK4kC,wBACL5kC,MAAKmkC,eAAiBQ,CACtB3kC,MAAKokC,YAAcO,CACnB3kC,MAAKkkC,cAAgB,MACf,KAAKG,GAAWpzB,GAAQ,EAAG,CACjCjR,KAAKmkC,eAAiB,CACtBnkC,MAAKokC,YAAc,CACnBpkC,MAAKkkC,cAAgB,MACf,IAAIlkC,KAAKgkC,mBAAmBxU,eAAgB,CAClD,GAAI1wB,GAAWmS,EAAKszB,EAAcI,CAClC3kC,MAAKmkC,eAAiB98B,KAAKw9B,MAAM/lC,EACjCkB,MAAKkkC,cAAgBplC,EAAIkB,KAAKmkC,cAC9BnkC,MAAKokC,YAAcpkC,KAAKmkC,eAAiB,MACnC,CACNnkC,KAAKmkC,eAAiB,CACtBnkC,MAAKokC,YAAc,CAEnB,IAAIU,GAAsB,EAAGC,CAC7B,IAAIC,GAAmChlC,KAAKgkC,mBAAmBgB,SAE/D,GAAG,CACFD,EAAYD,CACZA,IAAOE,EAAUhlC,KAAKokC,YACtBpkC,MAAKmkC,eAAiBnkC,KAAKokC,oBACnBnzB,EAAO6zB,EAEhB,IAAI9kC,KAAKmkC,gBAAkBQ,EAAW,CACrC3kC,KAAKmkC,eAAiB,CACtBnkC,MAAKokC,YAAc,EAGpBpkC,KAAKkkC,eAAiBjzB,EAAO8zB,GAAWC,EAAUhlC,KAAKmkC,iBAIjDN,GAAAtjC,UAAAqkC,uBAAR,WAEC,GAAI5kC,KAAKilC,iCAAmC,KAC3CjlC,KAAKilC,gCAAkC,GAAI/oB,GAAoBA,EAAoBgpB,kBAAmBllC,KAAKmlC,WAAYnlC,KAAMA,KAAKgkC,mBAEnIhkC,MAAKgkC,mBAAmBlzB,cAAc9Q,KAAKilC,iCAE7C,OAAApB,IApKiCD,EAsKjC9jC,GAA4BJ,QAAnBmkC,InD8jLNuB,4DAA4D,4DAA4Dhf,mDAAmD,qDAAqDgf,6DAA6D,SAASxmC,EAAQkB,EAAOJ,GoD7uLxT,GAAOe,GAAQ7B,EAAiB,gCpDkvLhC,IoDtuLMglC,GAAkB,WAwBvB,QAxBKA,GAwBOnT,EAAuBnL,GArB5BtlB,KAAAqlC,YAAuB,GAAI5kC,EAC3BT,MAAAslC,qBAA+B,IAG/BtlC,MAAAskC,YAAqB,CAmB3BtkC,MAAKmlC,WAAa1U,CAClBzwB,MAAKulC,gBAAkBjgB,EAdxBnjB,OAAAC,eAAWwhC,EAAArjC,UAAA,iBpDquLJ8B,IoDruLP,WAEC,GAAIrC,KAAKslC,qBAAsB,CAE9BtlC,KAAKwlC,wBAGN,MAAOxlC,MAAKqlC,apDouLN3iC,WAAY,KACZC,aAAc,MoDttLdihC,GAAArjC,UAAA+Q,OAAP,SAAcmH,GAEbzY,KAAKskC,YAAc7rB,CAEnBzY,MAAKslC,qBAAuB,KAUtB1B,GAAArjC,UAAAoL,OAAP,SAAcsF,GAEb,GAAIjR,KAAKwkC,QAAUvzB,EAAOjR,KAAKskC,YAAa,CAE3C,OAIDtkC,KAAKykC,aAAaxzB,GASZ2yB,GAAArjC,UAAA+P,MAAP,SAAa9N,IAUNohC,GAAArjC,UAAAkkC,aAAP,SAAoBxzB,GAEnBjR,KAAKwkC,OAASvzB,EAAOjR,KAAKskC,WAE1BtkC,MAAKslC,qBAAuB,KAMtB1B,GAAArjC,UAAAilC,sBAAP,YAGD,OAAA5B,KAEA9jC,GAA4BJ,QAAnBkkC,IpDgtLN/6B,gCAAgCD,YAAY68B,0DAA0D,SAAS7mC,EAAQkB,EAAOJ,SAI3HgmC,kEAAkE,SAAS9mC,EAAQkB,EAAOJ,SAI1FimC,gEAAgE,SAAS/mC,EAAQkB,EAAOJ,SAIxFqxB,oEAAoE,SAASnyB,EAAQkB,EAAOJ,GAClG,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDx0LtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DrDq0LtC,IqD/zLMkxB,GAAyB,SAAAzuB,GAAStB,EAAlC+vB,EAAyBzuB,EA0B9B,SA1BKyuB,GA0BOW,EAA2BoV,GAEtCxkC,EAAA1B,KAAAK,KAAMywB,EAAUoV,EAEhB7lC,MAAK8lC,0BAA4BD,CACjC7lC,MAAKkwB,cAAgBlwB,KAAK8lC,0BAA0B5V,aAEpDlwB,MAAK+lC,yBArBN5jC,OAAAC,eAAW0tB,EAAAvvB,UAAA,gBrD+zLJ8B,IqD/zLP,WAEC,MAAOrC,MAAKkwB,erDg0LN3tB,IqD7zLP,SAAwBC,GAEvBxC,KAAKkwB,cAAcnpB,EAAIvE,EAAMuE,CAC7B/G,MAAKkwB,cAAcjpB,EAAIzE,EAAMyE,CAC7BjH,MAAKkwB,cAAc/oB,EAAI3E,EAAM2E,CAE7BnH,MAAK+lC,0BrD6zLCrjC,WAAY,KACZC,aAAc,MqD9yLdmtB,GAAAvvB,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIuQ,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBzV,EAA0BS,mBAEnH,IAAIvwB,KAAK8lC,0BAA0BnyB,MAAQb,EAAuBc,aACjEiD,EAAqByV,qBAAqB9V,EAAOxW,KAAK8lC,0BAA0BjyB,aAActS,EAAOwI,EAA4Bi8B,aAEjI9xB,GAAuBoC,eAAeE,EAAOxW,KAAKimC,kBAAkBl/B,EAAG/G,KAAKimC,kBAAkBh/B,EAAGjH,KAAKimC,kBAAkB9+B,GAGlH2oB,GAAAvvB,UAAAwlC,uBAAR,WAEC,GAAI/lC,KAAK8lC,0BAA0BnyB,MAAQb,EAAuBgb,OACjE9tB,KAAKimC,kBAAoB,GAAIxlC,GAAST,KAAKkwB,cAAcnpB,EAAE,EAAG/G,KAAKkwB,cAAcjpB,EAAE,EAAGjH,KAAKkwB,cAAc/oB,EAAE,GAjD/F2oB,GAAAS,mBAAoC,CAmDnD,OAAAT,IAtDwC8V,EAwDxC9lC,GAAmCJ,QAA1BowB,IrDozLNjnB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAYupB,mEAAmE,SAASvzB,EAAQkB,EAAOJ,GAC5b,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsD93LtB,IAAO0J,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DtD+3LtC,IsD13LMqyB,GAAwB,SAAA5vB,GAAStB,EAAjCkxB,EAAwB5vB,EAsC7B,SAtCK4vB,GAsCOR,EAA2B0V,GAEtC9kC,EAAA1B,KAAAK,KAAMywB,EAAU0V,EAEhBnmC,MAAKomC,yBAA2BD,CAChCnmC,MAAKqmC,cAAgBrmC,KAAKomC,yBAAyB/U,cACnDrxB,MAAKsmC,UAAYtmC,KAAKomC,yBAAyB9U,WA7BhDnvB,OAAAC,eAAW6uB,EAAA1wB,UAAA,gBtDu3LJ8B,IsDv3LP,WAEC,MAAOrC,MAAKqmC,etDw3LN9jC,IsDr3LP,SAAwBC,GAEvBxC,KAAKqmC,cAAgB7jC,GtDs3LfE,WAAY,KACZC,aAAc,MsDj3LrBR,QAAAC,eAAW6uB,EAAA1wB,UAAA,YtDu3LJ8B,IsDv3LP,WAEC,MAAOrC,MAAKsmC,WtDw3LN/jC,IsDr3LP,SAAoBC,GAEnBxC,KAAKsmC,UAAY9jC,GtDs3LXE,WAAY,KACZC,aAAc,MsD32LdsuB,GAAA1wB,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIsgC,GAA8BryB,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBtU,EAAyBO,qBACzH,IAAIgV,GAA0BtyB,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBtU,EAAyBS,iBAErH,IAAI1xB,KAAKomC,yBAAyBzyB,MAAQb,EAAuBc,aAAc,CAC9EiD,EAAqByV,qBAAqBia,EAAcvmC,KAAKomC,yBAAyBvyB,aAActS,EAAOwI,EAA4Bi8B,QACvInvB,GAAqByV,qBAAqBka,EAAUxmC,KAAKomC,yBAAyBvyB,aAAe,EAAGtS,EAAOwI,EAA4Bi8B,aACjI,CACN9xB,EAAuBoC,eAAeiwB,EAAcvmC,KAAKqmC,cAAct/B,EAAG/G,KAAKqmC,cAAcp/B,EAAGjH,KAAKqmC,cAAcl/B,EACnH+M,GAAuBoC,eAAekwB,EAAUxmC,KAAKsmC,UAAUv/B,EAAG/G,KAAKsmC,UAAUr/B,EAAGjH,KAAKsmC,UAAUn/B,IAtDvF8pB,GAAAO,qBAAsC,CAGtCP,GAAAS,iBAAkC,CAsDjD,OAAAT,IA5DuC2U,EA8DL9lC,GAAAJ,QAAzBuxB,ItDm3LN5X,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAYgqB,iEAAiE,SAASh0B,EAAQkB,EAAOJ,GAChZ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuDv8LtB,IAAOomC,GAAU7nC,EAAgB,kCACjC,IAAO4B,GAAQ5B,EAAiB,gCAEhC,IAAO8nC,GAAa9nC,EAAe,qCAUnC,IAAOgnC,GAAiBhnC,EAAc,2DvDm8LtC,IuD77LMyzB,GAAsB,SAAAhxB,GAAStB,EAA/BsyB,EAAsBhxB,EAY3B,SAZKgxB,GAYO5B,EAA2BkW,GAEtCtlC,EAAA1B,KAAAK,KAAMywB,EAAUkW,EATT3mC,MAAA4mC,QAAmB,GAAIpmC,EAW9BR,MAAK6mC,eAAiBF,EAAanU,gBAG7BH,EAAA9xB,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAI6gC,EACJ,IAAI9mC,KAAK6mC,eAAgB,CACxB,GAAIE,GAAephC,EAAWqhC,aAAaC,eAAexN,QAC1D,IAAIyN,GAAgBjhC,EAAOghC,eAAexN,SAASyI,SAAS6E,EAC5D,IAAII,GAAiBD,EAAKE,aAAapnC,KAAK6mC,eAC5CM,GAAM3L,WACN0L,GAAOlnC,KAAKuyB,cAAc6U,aAAaD,EACvCD,GAAK1L,WAGLx7B,MAAK4mC,QAAQngC,SAASd,EAAWqhC,aAAaC,eAC9CH,GAAQ9mC,KAAK4mC,QAAQS,UAAUX,EAAcY,WAC7CtnC,MAAK4mC,QAAQW,eAAe,EAAGJ,EAC/BnnC,MAAK4mC,QAAQW,eAAe,EAAGvnC,KAAKuyB,cACpCvyB,MAAK4mC,QAAQW,eAAe,EAAGL,EAC/BlnC,MAAK4mC,QAAQW,eAAe,EAAGR,EAC/B/mC,MAAK4mC,QAAQY,gBAAgBV,EAAM,GAAGh/B,EAAE2+B,EAAWgB,mBAAoBX,EAAM,QACvE,CAEN9mC,KAAK4mC,QAAQngC,SAASd,EAAWqhC,aAAaC,eAC9CjnC,MAAK4mC,QAAQc,OAAOzhC,EAAO0hC,sBAG3Bb,GAAQ9mC,KAAK4mC,QAAQS,UAAUX,EAAcY,WAG7CtnC,MAAK4mC,QAAQgB,UACb5nC,MAAK4mC,QAAQY,gBAAgBV,EAAM,GAAGh/B,EAAE2+B,EAAWgB,mBAAoBX,EAAM,IAI9E5yB,EAAuBmX,yBAAyBnX,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBlT,EAAuBK,cAAe1yB,KAAK4mC,SAM1JzkC,QAAAC,eAAWiwB,EAAA9xB,UAAA,iBvDg7LJ8B,IuDh7LP,WAEC,MAAOrC,MAAKuyB,evDi7LNhwB,IuD96LP,SAAyBC,GAExBxC,KAAKuyB,cAAgB/vB,EAAOA,EAAMkF,QAAU,IAC5C,IAAI1H,KAAKuyB,cACRvyB,KAAKuyB,cAAciJ,avD+6Ld94B,WAAY,KACZC,aAAc,MuDh/LP0vB,GAAAK,aAA8B,CAmE7C,OAAAL,IAtEqCuT,EAwEL9lC,GAAAJ,QAAvB2yB,IvDo7LNwV,kCAAkCj/B,UAAUD,gCAAgCC,UAAUk/B,qCAAqCl/B,UAAUs9B,2DAA2D,6DAA6D1Q,6DAA6D,SAAS52B,EAAQkB,EAAOJ,GACrV,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwDnhMtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DxDihMtC,IwD1gMMm0B,GAAkB,SAAA1xB,GAAStB,EAA3BgzB,EAAkB1xB,EA4FvB,SA5FK0xB,GA4FOtC,EAA2BsX,GAEtC1mC,EAAA1B,KAAAK,KAAMywB,EAAUsX,EAEhB/nC,MAAKgoC,mBAAqBD,CAC1B/nC,MAAKioC,gBAAkBjoC,KAAKgoC,mBAAmBvU,gBAC/CzzB,MAAKkoC,YAAcloC,KAAKgoC,mBAAmBtU,YAC3C1zB,MAAKmoC,WAAanoC,KAAKgoC,mBAAmBrU,WAC1C3zB,MAAKooC,WAAapoC,KAAKgoC,mBAAmBpU,WAC1C5zB,MAAKqoC,YAAcroC,KAAKgoC,mBAAmBnU,YAC3C7zB,MAAKsoC,UAAYtoC,KAAKgoC,mBAAmBlU,UACzC9zB,MAAKuoC,eAAiBvoC,KAAKgoC,mBAAmBjU,eAC9C/zB,MAAKwoC,YAAcxoC,KAAKgoC,mBAAmBhU,YAE3Ch0B,MAAKyoC,kBAvENtmC,OAAAC,eAAW2wB,EAAAxyB,UAAA,cxD0/LJ8B,IwD1/LP,WAEC,MAAOrC,MAAKqoC,axD2/LN9lC,IwDx/LP,SAAsBC,GAErBxC,KAAKqoC,YAAc7lC,CAEnBxC,MAAKyoC,mBxDw/LC/lC,WAAY,KACZC,aAAc,MwDn/LrBR,QAAAC,eAAW2wB,EAAAxyB,UAAA,YxDy/LJ8B,IwDz/LP,WAEC,MAAOrC,MAAKsoC,WxD0/LN/lC,IwDv/LP,SAAoBC,GAEnBxC,KAAKsoC,UAAY9lC,CAEjBxC,MAAKyoC,mBxDu/LC/lC,WAAY,KACZC,aAAc,MwDl/LrBR,QAAAC,eAAW2wB,EAAAxyB,UAAA,iBxDw/LJ8B,IwDx/LP,WAEC,MAAOrC,MAAKuoC,gBxDy/LNhmC,IwDt/LP,SAAyBC,GAExBxC,KAAKuoC,eAAiB/lC,CAEtBxC,MAAKyoC,mBxDs/LC/lC,WAAY,KACZC,aAAc,MwDj/LrBR,QAAAC,eAAW2wB,EAAAxyB,UAAA,cxDu/LJ8B,IwDv/LP,WAEC,MAAOrC,MAAKwoC,axDw/LNjmC,IwDr/LP,SAAsBC,GAErBxC,KAAKwoC,YAAchmC,CAEnBxC,MAAKyoC,mBxDq/LC/lC,WAAY,KACZC,aAAc,MwDl+LdowB,GAAAxyB,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIiO,EAAuBgB,sBAAuB,CACjD,GAAIwzB,GAA6B1oC,KAAKgoC,mBAAmBn0B,YACzD,IAAI7T,KAAKmoC,WACRj0B,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmBmB,aAAcl0B,KAAK2oC,WAAW5hC,EAAG/G,KAAK2oC,WAAW1hC,EAAGjH,KAAK2oC,WAAWxhC,EAAGnH,KAAK2oC,WAAW7gC,EAE/M,IAAI9H,KAAKioC,gBAAiB,CACzB,GAAIjoC,KAAKgoC,mBAAmBr0B,MAAQb,EAAuBc,aAAc,CACxEiD,EAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmBwB,wBAAyBmU,EAAYnnC,EAAOwI,EAA4B6+B,QACnMF,IAAc,CACd7xB,GAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmByB,wBAAyBkU,EAAYnnC,EAAOwI,EAA4B6+B,QACnMF,IAAc,MACR,CACNx0B,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmBwB,wBAAyBv0B,KAAK6oC,qBAAqB9hC,EAAG/G,KAAK6oC,qBAAqB5hC,EAAGjH,KAAK6oC,qBAAqB1hC,EAAGnH,KAAK6oC,qBAAqB/gC,EACjQoM,GAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmByB,wBAAyBx0B,KAAK8oC,qBAAqB/hC,EAAG/G,KAAK8oC,qBAAqB7hC,EAAGjH,KAAK8oC,qBAAqB3hC,EAAGnH,KAAK8oC,qBAAqBhhC,IAGnQ,GAAI9H,KAAKkoC,YAAa,CACrB,GAAIloC,KAAKgoC,mBAAmBr0B,MAAQb,EAAuBc,aAAc,CACxEiD,EAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmB4B,oBAAqB+T,EAAYnnC,EAAOwI,EAA4B6+B,QAC/LF,IAAc,CACd7xB,GAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmB6B,oBAAqB8T,EAAYnnC,EAAOwI,EAA4B6+B,QAC/LF,IAAc,MACR,CACNx0B,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmB4B,oBAAqB30B,KAAK+oC,iBAAiBhiC,EAAG/G,KAAK+oC,iBAAiB9hC,EAAGjH,KAAK+oC,iBAAiB5hC,EAAGnH,KAAK+oC,iBAAiBjhC,EAC7OoM,GAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxS,EAAmB6B,oBAAqB50B,KAAKgpC,iBAAiBjiC,EAAG/G,KAAKgpC,iBAAiB/hC,EAAGjH,KAAKgpC,iBAAiB7hC,EAAGnH,KAAKgpC,iBAAiBlhC,MAMzOirB,GAAAxyB,UAAAkoC,gBAAR,WAEC,GAAIzoC,KAAKmoC,WAAY,CACpB,GAAInoC,KAAKuoC,gBAAkB,EAC1B,KAAK,IAAKhpC,OAAM,+CACjBS,MAAK2oC,WAAa,GAAIloC,GAAS4G,KAAKoxB,GAAG,EAAEz4B,KAAKuoC,eAAgBvoC,KAAKwoC,YAAYnhC,KAAKoxB,GAAG,IAAK,EAAG,GAEhG,GAAIz4B,KAAKgoC,mBAAmBr0B,MAAQb,EAAuBgb,OAAQ,CAClE,GAAI9tB,KAAKmoC,WAAY,CACpB,GAAInoC,KAAKioC,gBAAiB,CACzBjoC,KAAK6oC,qBAAuB,GAAIpoC,IAAUT,KAAKqoC,YAAYtT,cAAgB/0B,KAAKsoC,UAAUvT,eAAe,GAAI/0B,KAAKqoC,YAAYrT,gBAAkBh1B,KAAKsoC,UAAUtT,iBAAiB,GAAIh1B,KAAKqoC,YAAYpT,eAAiBj1B,KAAKsoC,UAAUrT,gBAAgB,GAAIj1B,KAAKqoC,YAAYnT,gBAAkBl1B,KAAKsoC,UAAUpT,iBAAiB,EAC5Tl1B,MAAK8oC,qBAAuB,GAAIroC,IAAUT,KAAKsoC,UAAUvT,cAAgB/0B,KAAKqoC,YAAYtT,eAAe,GAAI/0B,KAAKsoC,UAAUtT,gBAAkBh1B,KAAKqoC,YAAYrT,iBAAiB,GAAIh1B,KAAKsoC,UAAUrT,eAAiBj1B,KAAKqoC,YAAYpT,gBAAgB,GAAIj1B,KAAKsoC,UAAUpT,gBAAkBl1B,KAAKqoC,YAAYnT,iBAAiB,GAG7T,GAAIl1B,KAAKkoC,YAAa,CACrBloC,KAAK+oC,iBAAmB,GAAItoC,IAAUT,KAAKqoC,YAAYlT,UAAYn1B,KAAKsoC,UAAUnT,YAAY,IAAI,IAAKn1B,KAAKqoC,YAAYjT,YAAcp1B,KAAKsoC,UAAUlT,cAAc,IAAI,IAAKp1B,KAAKqoC,YAAYhT,WAAar1B,KAAKsoC,UAAUjT,aAAa,IAAI,IAAKr1B,KAAKqoC,YAAY/S,YAAct1B,KAAKsoC,UAAUhT,cAAc,IAAI,GAC/St1B,MAAKgpC,iBAAmB,GAAIvoC,IAAUT,KAAKsoC,UAAUnT,UAAYn1B,KAAKqoC,YAAYlT,YAAY,IAAI,IAAKn1B,KAAKsoC,UAAUlT,YAAcp1B,KAAKqoC,YAAYjT,cAAc,IAAI,IAAKp1B,KAAKsoC,UAAUjT,WAAar1B,KAAKqoC,YAAYhT,aAAa,IAAI,IAAKr1B,KAAKsoC,UAAUhT,YAAct1B,KAAKqoC,YAAY/S,cAAc,IAAI,SAE1S,CACN,GAAIt1B,KAAKioC,gBAAiB,CACzBjoC,KAAK6oC,qBAAuB,GAAIpoC,GAAST,KAAKqoC,YAAYtT,cAAe/0B,KAAKqoC,YAAYrT,gBAAiBh1B,KAAKqoC,YAAYpT,eAAgBj1B,KAAKqoC,YAAYnT,gBAC7Jl1B,MAAK8oC,qBAAuB,GAAIroC,GAAUT,KAAKsoC,UAAUvT,cAAgB/0B,KAAKqoC,YAAYtT,cAAiB/0B,KAAKsoC,UAAUtT,gBAAkBh1B,KAAKqoC,YAAYrT,gBAAmBh1B,KAAKsoC,UAAUrT,eAAiBj1B,KAAKqoC,YAAYpT,eAAkBj1B,KAAKsoC,UAAUpT,gBAAkBl1B,KAAKqoC,YAAYnT,iBAGtS,GAAIl1B,KAAKkoC,YAAa,CACrBloC,KAAK+oC,iBAAmB,GAAItoC,GAAST,KAAKqoC,YAAYlT,UAAU,IAAKn1B,KAAKqoC,YAAYjT,YAAY,IAAKp1B,KAAKqoC,YAAYhT,WAAW,IAAKr1B,KAAKqoC,YAAY/S,YAAY,IACrKt1B,MAAKgpC,iBAAmB,GAAIvoC,IAAUT,KAAKsoC,UAAUnT,UAAYn1B,KAAKqoC,YAAYlT,WAAW,KAAMn1B,KAAKsoC,UAAUlT,YAAcp1B,KAAKqoC,YAAYjT,aAAa,KAAMp1B,KAAKsoC,UAAUjT,WAAar1B,KAAKqoC,YAAYhT,YAAa,KAAMr1B,KAAKsoC,UAAUhT,YAAct1B,KAAKqoC,YAAY/S,aAAa,QApKrRvC,GAAAwB,uBAAyC,CAGzCxB,GAAAyB,uBAAyC,CAGzCzB,GAAA4B,mBAAqC,CAGrC5B,GAAA6B,mBAAqC,CAGrC7B,GAAAmB,YAA8B,CA6J7C,OAAAnB,IA5KiC6S,EA8KjC9lC,GAA4BJ,QAAnBqzB,IxD8+LNlqB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY2tB,8DAA8D,SAAS33B,EAAQkB,EAAOJ,GACvb,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyDrrMtB,IAAOomC,GAAU7nC,EAAgB,kCACjC,IAAO6B,GAAQ7B,EAAiB,gCAMhC,IAAOmL,GAA2BnL,EAAY,sDAO9C,IAAOgnC,GAAiBhnC,EAAc,2DzDgrMtC,IyD1qMM82B,GAAmB,SAAAr0B,GAAStB,EAA5B21B,EAAmBr0B,EAoBxB,SApBKq0B,GAoBOjF,EAA2BwY,GAEtC5nC,EAAA1B,KAAAK,KAAMywB,EAAUwY,EAAoB,KAX7BjpC,MAAAkpC,WAAsB,GAAIzoC,EAC1BT,MAAAmpC,aAAwB,GAAI1oC,EAM5BT,MAAAopC,MAAiB,GAAI3oC,EAM5BT,MAAKqpC,oBAAsBJ,CAC3BjpC,MAAKspC,QAAUL,EAAmBhT,SAGnC9zB,OAAAC,eAAWszB,EAAAn1B,UAAA,gBzD0pMJ8B,IyD1pMP,WAEC,MAAOrC,MAAKupC,ezD2pMNhnC,IyDxpMP,SAAwBC,GAEvBxC,KAAKupC,cAAgB/mC,GzDypMfE,WAAY,KACZC,aAAc,MyDvpMrBR,QAAAC,eAAWszB,EAAAn1B,UAAA,UzD0pMJ8B,IyD1pMP,WAEC,MAAOrC,MAAKspC,SzD2pMN/mC,IyDxpMP,SAAkBC,GAEjBxC,KAAKspC,QAAU9mC,GzDypMTE,WAAY,KACZC,aAAc,MyDppMd+yB,GAAAn1B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIjG,KAAKupC,cAAe,CACvB,GAAIvpC,KAAKqpC,oBAAoBtT,eAAgB,CAC5C/1B,KAAKkpC,WAAWniC,EAAI/G,KAAKupC,cAAcC,UAAU/P,SAAS1yB,EAAEpB,EAAWqhC,aAAayC,MACpFzpC,MAAKkpC,WAAWjiC,EAAIjH,KAAKupC,cAAcC,UAAU/P,SAASxyB,EAAEtB,EAAWqhC,aAAa0C,MACpF1pC,MAAKkpC,WAAW/hC,EAAInH,KAAKupC,cAAcC,UAAU/P,SAAStyB,EAAExB,EAAWqhC,aAAa2C,OAErF,GAAI3pC,KAAKqpC,oBAAoBrT,eAAgB,CAC5Ch2B,KAAKmpC,aAAapiC,EAAI/G,KAAKupC,cAAcK,SACzC5pC,MAAKmpC,aAAaliC,EAAIjH,KAAKupC,cAAcM,SACzC7pC,MAAKmpC,aAAahiC,EAAInH,KAAKupC,cAAcO,SACzC9pC,MAAKmpC,aAAaY,QAAQtD,EAAWuD,qBAIvC,IAAKhqC,KAAKiqC,QACTjqC,KAAKiqC,QAAUjqC,KAAKkpC,WAAWxhC,OAChC,KAAK1H,KAAKkqC,UACTlqC,KAAKkqC,UAAYlqC,KAAKmpC,aAAazhC,OAEpC,IAAIyiC,GAAqBnqC,KAAKwkC,OAAO,GACrC,IAAI1Y,GAAsBjV,EAAqBiV,YAC/C,IAAIse,GAAmBD,EAAcre,CAErC,IAAIue,GAAsBve,GAAgBqe,CAE1C,IAAInqC,KAAKqpC,oBAAoBtT,gBAAkB/1B,KAAKqpC,oBAAoBrT,eAAgB,CACvF,GAAIqU,EACHrqC,KAAKsqC,2BAA2BH,EAAaC,EAAWvzB,EAEzDA,GAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB7P,EAAoBY,uBAAwBt2B,KAAKqpC,oBAAoBx1B,aAActS,EAAOwI,EAA4Bi8B,QAC9NnvB,GAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB7P,EAAoBS,uBAAwBn2B,KAAKqpC,oBAAoBx1B,aAAe,EAAGtS,EAAOwI,EAA4Bi8B,aAC5N,IAAIhmC,KAAKqpC,oBAAoBtT,eAAgB,CACnD,GAAIsU,EACHrqC,KAAKuqC,gBAAgBJ,EAAaC,EAAWvzB,EAE9CA,GAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB7P,EAAoBY,uBAAwBt2B,KAAKqpC,oBAAoBx1B,aAActS,EAAOwI,EAA4Bi8B,aACxN,IAAIhmC,KAAKqpC,oBAAoBrT,eAAgB,CACnD,GAAIqU,EACHrqC,KAAKwqC,gBAAgBL,EAAaC,EAAWvzB,EAE9CA,GAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB7P,EAAoBS,uBAAwBn2B,KAAKqpC,oBAAoBx1B,aAActS,EAAOwI,EAA4Bi8B,SAG/NhmC,KAAKiqC,QAAQxjC,SAASzG,KAAKkpC,WAC3BlpC,MAAKmpC,aAAa1iC,SAASzG,KAAKmpC,aAChCtyB,GAAqBiV,aAAeqe,EAG7BzU,GAAAn1B,UAAAgqC,gBAAR,SAAwBJ,EAAoBC,EAAkBvzB,GAE7D,GAAIuU,GAAoCvU,EAAqBmC,kBAC7D,IAAIZ,GAA2BvB,EAAqBuB,UAEpD,IAAIqyB,GAAkB,KACtB,IAAI7lC,GAAsBwmB,EAAKxrB,MAC/B,IAAI8qC,EACJ,IAAIC,EACJ,IAAI3qC,KAAKspC,QAAS,CACjBqB,EAAc3qC,KAAKiqC,QAAQ/H,SAASliC,KAAKkpC,WACzCyB,GAAYZ,QAAQ,EAAEK,OAEtBM,GAAkB1qC,KAAKkpC,UACxB,KAAK,GAAI7pC,GAAoB,EAAGA,EAAIuF,EAAKvF,IAAK,CAC7C,GAAI8X,IAAYgzB,EAAc/e,EAAK/rB,GAAGoZ,WAAW2S,EAAK/rB,GAAGquB,SACzD,IAAI5uB,IAAYqY,EAAI9P,KAAKw9B,MAAM1tB,IAAIiU,EAAK/rB,GAAGquB,SAC3C,IAAI5uB,EAAIsrC,GAAa,EAAG,CACvB,GAAIQ,GAAqBxf,EAAK/rB,GAAGsuB,iBAAiB9W,EAAqBsV,oBAAsBnsB,KAAKqpC,oBAAoBx1B,YAEtH,IAAI7T,KAAKspC,QAAS,CACjBtpC,KAAKopC,MAAM3iC,SAASkkC,EACpB3qC,MAAKopC,MAAMW,QAAQjrC,EACnB4rC,GAAkB1qC,KAAKkpC,WAAW2B,IAAI7qC,KAAKopC,OAG5C,GAAIhxB,EAAWwyB,IAAQF,EAAgB3jC,GAAKqR,EAAWwyB,EAAM,IAAMF,EAAgBzjC,GAAKmR,EAAWwyB,EAAM,IAAMF,EAAgBvjC,EAAG,CACjIsjC,EAAU,IACV,KAAK,GAAIvzB,GAAoB,EAAGA,EAAIkU,EAAK/rB,GAAGoY,YAAaP,IAAK,CAC7DkB,EAAWwyB,KAASF,EAAgB3jC,CACpCqR,GAAWwyB,KAASF,EAAgBzjC,CACpCmR,GAAWwyB,KAASF,EAAgBvjC,KAKxC,GAAIsjC,EACH5zB,EAAqBkW,mBAIf2I,GAAAn1B,UAAAiqC,gBAAR,SAAwBL,EAAoBC,EAAkBvzB,GAE7D,GAAIuU,GAAoCvU,EAAqBmC,kBAC7D,IAAIZ,GAA2BvB,EAAqBuB,UAEpD,IAAIqyB,GAAkB,KACtB,IAAI7lC,GAAsBwmB,EAAKxrB,MAE/B,IAAIkrC,EACJ,IAAIC,EAEJ,IAAI/qC,KAAKspC,QAAS,CACjByB,EAAmB/qC,KAAKkqC,UAAUhI,SAASliC,KAAKmpC,aAChD4B,GAAiBhB,QAAQ,EAAEK,OAE3BU,GAAuB9qC,KAAKmpC,YAE7B,KAAK,GAAI9pC,GAAoB,EAAGA,EAAIuF,EAAKvF,IAAK,CAC7C,GAAI8X,IAAYgzB,EAAc/e,EAAK/rB,GAAGoZ,WAAW2S,EAAK/rB,GAAGquB,SACzD,IAAI5uB,IAAYqY,EAAI9P,KAAKw9B,MAAM1tB,IAAIiU,EAAK/rB,GAAGquB,SAC3C,IAAI5uB,EAAIsrC,GAAa,EAAG,CACvB,GAAIQ,GAAqBxf,EAAK/rB,GAAGsuB,iBAAiB9W,EAAqBsV,oBAAsBnsB,KAAKqpC,oBAAoBx1B,YAEtH,IAAI7T,KAAKspC,QAAS,CACjBtpC,KAAKopC,MAAM3iC,SAASskC,EACpB/qC,MAAKopC,MAAMW,QAAQjrC,EACnBgsC,GAAuB9qC,KAAKmpC,aAAa0B,IAAI7qC,KAAKopC,OAGnD,GAAIhxB,EAAWwyB,IAAQE,EAAqB/jC,GAAKqR,EAAWwyB,EAAM,IAAME,EAAqB7jC,GAAKmR,EAAWwyB,EAAM,IAAME,EAAqB3jC,EAAG,CAChJsjC,EAAU,IACV,KAAK,GAAIvzB,GAAoB,EAAGA,EAAIkU,EAAK/rB,GAAGoY,YAAaP,IAAK,CAC7DkB,EAAWwyB,KAASE,EAAqB/jC,CACzCqR,GAAWwyB,KAASE,EAAqB7jC,CACzCmR,GAAWwyB,KAASE,EAAqB3jC,KAK7C,GAAIsjC,EACH5zB,EAAqBkW,mBAIf2I,GAAAn1B,UAAA+pC,2BAAR,SAAmCH,EAAoBC,EAAkBvzB,GAExE,GAAIuU,GAAoCvU,EAAqBmC,kBAC7D,IAAIZ,GAA2BvB,EAAqBuB,UAEpD,IAAIqyB,GAAkB,KACtB,IAAI7lC,GAAsBwmB,EAAKxrB,MAE/B,IAAI8qC,EACJ,IAAII,EAEJ,IAAIH,EACJ,IAAII,EACJ,IAAI/qC,KAAKspC,QAAS,CACjBqB,EAAc3qC,KAAKiqC,QAAQ/H,SAASliC,KAAKkpC,WACzCyB,GAAYZ,QAAQ,EAAEK,EACtBW,GAAmB/qC,KAAKkqC,UAAUhI,SAASliC,KAAKmpC,aAChD4B,GAAiBhB,QAAQ,EAAEK,OACrB,CACNM,EAAkB1qC,KAAKkpC,UACvB4B,GAAuB9qC,KAAKmpC,aAG7B,IAAK,GAAI9pC,GAAoB,EAAGA,EAAIuF,EAAKvF,IAAK,CAC7C,GAAI8X,IAAYgzB,EAAc/e,EAAK/rB,GAAGoZ,WAAW2S,EAAK/rB,GAAGquB,SACzD,IAAI5uB,IAAYqY,EAAI9P,KAAKw9B,MAAM1tB,IAAIiU,EAAK/rB,GAAGquB,SAC3C,IAAI5uB,EAAIsrC,GAAa,EAAG,CACvB,GAAIQ,GAAqBxf,EAAK/rB,GAAGsuB,iBAAiB9W,EAAqBsV,oBAAsBnsB,KAAKqpC,oBAAoBx1B,YACtH,IAAI7T,KAAKspC,QAAS,CACjBtpC,KAAKopC,MAAM3iC,SAASkkC,EACpB3qC,MAAKopC,MAAMW,QAAQjrC,EACnB4rC,GAAkB1qC,KAAKkpC,WAAW2B,IAAI7qC,KAAKopC,MAE3CppC,MAAKopC,MAAM3iC,SAASskC,EACpB/qC,MAAKopC,MAAMW,QAAQjrC,EACnBgsC,GAAuB9qC,KAAKmpC,aAAa0B,IAAI7qC,KAAKopC,OAGnD,GAAIhxB,EAAWwyB,IAAQF,EAAgB3jC,GAAKqR,EAAWwyB,EAAM,IAAMF,EAAgBzjC,GAAKmR,EAAWwyB,EAAM,IAAMF,EAAgBvjC,GAAKiR,EAAWwyB,EAAM,IAAME,EAAqB/jC,GAAKqR,EAAWwyB,EAAM,IAAME,EAAqB7jC,GAAKmR,EAAWwyB,EAAM,IAAME,EAAqB3jC,EAAG,CACpRsjC,EAAU,IACV,KAAK,GAAIvzB,GAAoB,EAAGA,EAAIkU,EAAK/rB,GAAGoY,YAAaP,IAAK,CAC7DkB,EAAWwyB,KAASF,EAAgB3jC,CACpCqR,GAAWwyB,KAASF,EAAgBzjC,CACpCmR,GAAWwyB,KAASF,EAAgBvjC,CACpCiR,GAAWwyB,KAASE,EAAqB/jC,CACzCqR,GAAWwyB,KAASE,EAAqB7jC,CACzCmR,GAAWwyB,KAASE,EAAqB3jC,KAK7C,GAAIsjC,EACH5zB,EAAqBkW,mBA3OT2I,GAAAY,sBAAwC,CAGxCZ,GAAAS,sBAAwC,CA2OvD,OAAAT,IAjPkCkQ,EAmPlC9lC,GAA6BJ,QAApBg2B,IzDqoMNmS,kCAAkCj/B,UAAUC,gCAAgCD,UAAUs9B,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAYsuB,oEAAoE,SAASt4B,EAAQkB,EAAOJ,GAC7W,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Dh5MtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2D1D64MtC,I0Dv4MM63B,GAAyB,SAAAp1B,GAAStB,EAAlC02B,EAAyBp1B,EAc9B,SAdKo1B,GAcOhG,EAA2Bua,GAEtC3pC,EAAA1B,KAAAK,KAAMywB,EAAUua,EAEhBhrC,MAAKirC,0BAA4BD,CACjChrC,MAAKioC,gBAAkB+C,EAAyBvX,gBAChDzzB,MAAKkoC,YAAc8C,EAAyBtX,YAC5C1zB,MAAKkrC,cAAgBF,EAAyBpU,cAE9C52B,MAAKyoC,kBAMNtmC,OAAAC,eAAWq0B,EAAAl2B,UAAA,gB1Dw3MJ8B,I0Dx3MP,WAEC,MAAOrC,MAAKkrC,e1Dy3MN3oC,I0Dt3MP,SAAwBC,GAEvBxC,KAAKkrC,cAAgB1oC,G1Du3MfE,WAAY,KACZC,aAAc,M0Dl3Md8zB,GAAAl2B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAGvJN,EAAaA,CACbM,GAASA,CAET,IAAIiO,EAAuBgB,sBAAuB,CACjD,GAAIlV,KAAKirC,0BAA0Bt3B,MAAQb,EAAuBc,aAAc,CAC/E,GAAI80B,GAA6B1oC,KAAKirC,0BAA0Bp3B,YAChE,IAAI7T,KAAKioC,gBAAiB,CACzBpxB,EAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9O,EAA0BK,kBAAmB4R,EAAYnnC,EAAOwI,EAA4B6+B,QACpMF,IAAc,EAEf,GAAI1oC,KAAKkoC,YACRrxB,EAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9O,EAA0BO,cAAe0R,EAAYnnC,EAAOwI,EAA4B6+B,aAC3L,CACN,GAAI5oC,KAAKioC,gBACR/zB,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9O,EAA0BK,kBAAmB92B,KAAKmrC,gBAAgBpkC,EAAG/G,KAAKmrC,gBAAgBlkC,EAAGjH,KAAKmrC,gBAAgBhkC,EAAGnH,KAAKmrC,gBAAgBrjC,EAC/O,IAAI9H,KAAKkoC,YACRh0B,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9O,EAA0BO,cAAeh3B,KAAKorC,YAAYrkC,EAAG/G,KAAKorC,YAAYnkC,EAAGjH,KAAKorC,YAAYjkC,EAAGnH,KAAKorC,YAAYtjC,KAKtN2uB,GAAAl2B,UAAAkoC,gBAAR,WAEC,GAAIzoC,KAAKirC,0BAA0Bt3B,MAAQb,EAAuBgb,OAAQ,CACzE,GAAI9tB,KAAKioC,gBACRjoC,KAAKmrC,gBAAkB,GAAI1qC,GAAST,KAAKkrC,cAAcnW,cAAe/0B,KAAKkrC,cAAclW,gBAAiBh1B,KAAKkrC,cAAcjW,eAAgBj1B,KAAKkrC,cAAchW,gBACjK,IAAIl1B,KAAKkoC,YACRloC,KAAKorC,YAAc,GAAI3qC,GAAST,KAAKkrC,cAAc/V,UAAU,IAAKn1B,KAAKkrC,cAAc9V,YAAY,IAAKp1B,KAAKkrC,cAAc7V,WAAW,IAAKr1B,KAAKkrC,cAAc5V,YAAY,MArE7JmB,GAAAK,iBAAmC,CAEnCL,GAAAO,aAA+B,CAuE9C,OAAAP,IA5EwCmP,EA8ExC9lC,GAAmCJ,QAA1B+2B,I1D03MN5tB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY8vB,6DAA6D,SAAS95B,EAAQkB,EAAOJ,GACtb,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Dh+MtB,IAAOG,GAAQ5B,EAAiB,gCAChC,IAAO6B,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2D3D69MtC,I2Dv9MM64B,GAAkB,SAAAp2B,GAAStB,EAA3B03B,EAAkBp2B,EAgFvB,SAhFKo2B,GAgFOhH,EAA2B4a,GAEtChqC,EAAA1B,KAAAK,KAAMywB,EAAU4a,EAEhBrrC,MAAKsrC,mBAAqBD,CAC1BrrC,MAAKurC,YAAcvrC,KAAKsrC,mBAAmBxT,YAC3C93B,MAAKmoC,WAAanoC,KAAKsrC,mBAAmB3X,WAC1C3zB,MAAKooC,WAAapoC,KAAKsrC,mBAAmB1X,WAC1C5zB,MAAKwrC,QAAUxrC,KAAKsrC,mBAAmBtT,QACvCh4B,MAAKyrC,QAAUzrC,KAAKsrC,mBAAmBvT,QACvC/3B,MAAKuoC,eAAiBvoC,KAAKsrC,mBAAmBvX,eAC9C/zB,MAAKwoC,YAAcxoC,KAAKsrC,mBAAmBtX,YAC3Ch0B,MAAK0rC,kBAtENvpC,OAAAC,eAAWq1B,EAAAl3B,UAAA,U3Dm9MJ8B,I2Dn9MP,WAEC,MAAOrC,MAAKyrC,S3Do9MNlpC,I2Dj9MP,SAAkBC,GAEjBxC,KAAKyrC,QAAUjpC,CAEfxC,MAAK0rC,mB3Di9MChpC,WAAY,KACZC,aAAc,M2D58MrBR,QAAAC,eAAWq1B,EAAAl3B,UAAA,iB3Dk9MJ8B,I2Dl9MP,WAEC,MAAOrC,MAAKuoC,gB3Dm9MNhmC,I2Dh9MP,SAAyBC,GAExBxC,KAAKuoC,eAAiB/lC,CAEtBxC,MAAK0rC,mB3Dg9MChpC,WAAY,KACZC,aAAc,M2D38MrBR,QAAAC,eAAWq1B,EAAAl3B,UAAA,c3Di9MJ8B,I2Dj9MP,WAEC,MAAOrC,MAAKwoC,a3Dk9MNjmC,I2D/8MP,SAAsBC,GAErBxC,KAAKwoC,YAAchmC,CAEnBxC,MAAK0rC,mB3D+8MChpC,WAAY,KACZC,aAAc,M2D18MrBR,QAAAC,eAAWq1B,EAAAl3B,UAAA,U3Dg9MJ8B,I2Dh9MP,WAEC,MAAOrC,MAAKwrC,S3Di9MNjpC,I2D98MP,SAAkBC,GAEjBxC,KAAKwrC,QAAUhpC,CAEfxC,MAAK0rC,mB3D88MChpC,WAAY,KACZC,aAAc,M2D57Md80B,GAAAl3B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIuQ,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9N,EAAmBS,YAE5G,IAAIl4B,KAAKsrC,mBAAmB33B,MAAQb,EAAuBc,aAAc,CACxE,GAAI5T,KAAKooC,WACRvxB,EAAqByV,qBAAqB9V,EAAOxW,KAAKsrC,mBAAmBz3B,aAActS,EAAOwI,EAA4B6+B,aAE1H/xB,GAAqByV,qBAAqB9V,EAAOxW,KAAKsrC,mBAAmBz3B,aAActS,EAAOwI,EAA4Bi8B,aAE3H9xB,GAAuBoC,eAAeE,EAAOxW,KAAK2rC,WAAW5kC,EAAG/G,KAAK2rC,WAAW1kC,EAAGjH,KAAK2rC,WAAWxkC,EAAGnH,KAAK2rC,WAAW7jC,EAEvH,IAAI9H,KAAKurC,YACRr3B,EAAuBmX,yBAAyBnX,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9N,EAAmBW,cAAep4B,KAAK4rC,eAG/InU,GAAAl3B,UAAAmrC,gBAAR,WAEC,GAAI1rC,KAAKurC,YAAa,CACrBvrC,KAAK4rC,cAAgB,GAAIprC,EACzBR,MAAK4rC,cAAcpE,eAAexnC,KAAKwrC,QAAQzkC,EAAGtG,EAASorC,OAC3D7rC,MAAK4rC,cAAcpE,eAAexnC,KAAKwrC,QAAQvkC,EAAGxG,EAASqrC,OAC3D9rC,MAAK4rC,cAAcpE,eAAexnC,KAAKwrC,QAAQrkC,EAAG1G,EAASsrC,QAE5D,GAAI/rC,KAAKsrC,mBAAmB33B,MAAQb,EAAuBgb,OAAQ,CAClE9tB,KAAK2rC,WAAa,GAAIlrC,GAAST,KAAKyrC,QAAS,EAAGzrC,KAAKyrC,QAAQpkC,KAAKoxB,GAAG,EAAGz4B,KAAKwoC,YAAYnhC,KAAKoxB,GAAG,IACjG,IAAIz4B,KAAKmoC,WAAY,CACpB,GAAInoC,KAAKuoC,gBAAkB,EAC1B,KAAK,IAAKhpC,OAAM,+CACjBS,MAAK2rC,WAAW1kC,EAAII,KAAKoxB,GAAG,EAAEz4B,KAAKuoC,mBAEnCvoC,MAAK2rC,WAAW1kC,EAAII,KAAKoxB,GAAG,GA3HjBhB,GAAAS,YAA8B,CAG9BT,GAAAW,aAA+B,CA2H9C,OAAAX,IAjIiCmO,EAmIjC9lC,GAA4BJ,QAAnB+3B,I3Dk8MN9uB,gCAAgCC,UAAUC,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAYywB,kEAAkE,SAASz6B,EAAQkB,EAAOJ,GACre,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4D7lNtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2D5D0lNtC,I4DplNMg6B,GAAuB,SAAAv3B,GAAStB,EAAhC64B,EAAuBv3B,EAwB5B,SAxBKu3B,GAwBOnI,EAA2Bub,GAEtC3qC,EAAA1B,KAAAK,KAAMywB,EAAUub,EAEhBhsC,MAAKisC,wBAA0BD,CAC/BhsC,MAAKksC,YAAclsC,KAAKisC,wBAAwBlT,YAEhD/4B,MAAKmsC,uBAnBNhqC,OAAAC,eAAWw2B,EAAAr4B,UAAA,c5DolNJ8B,I4DplNP,WAEC,MAAOrC,MAAKksC,a5DqlNN3pC,I4DllNP,SAAsBC,GAErBxC,KAAKksC,YAAc1pC,CAEnBxC,MAAKmsC,wB5DklNCzpC,WAAY,KACZC,aAAc,M4DnkNdi2B,GAAAr4B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIuQ,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB3M,EAAwBK,iBAEjH,IAAIj5B,KAAKisC,wBAAwBt4B,MAAQb,EAAuBc,aAC/DiD,EAAqByV,qBAAqB9V,EAAOxW,KAAKisC,wBAAwBp4B,aAActS,EAAOwI,EAA4B6+B,aAE/H10B,GAAuBoC,eAAeE,EAAOxW,KAAKosC,gBAAgBrlC,EAAG/G,KAAKosC,gBAAgBnlC,EAAGjH,KAAKosC,gBAAgBjlC,EAAGnH,KAAKosC,gBAAgBtkC,GAGpI8wB,GAAAr4B,UAAA4rC,qBAAR,WAEC,GAAInsC,KAAKisC,wBAAwBt4B,MAAQb,EAAuBgb,OAAQ,CACvE,GAAI9tB,KAAKksC,YAAYpkC,GAAK,EACzB,KAAK,IAAKvI,OAAM,4CAEjB,IAAIS,KAAKosC,iBAAmB,KAC3BpsC,KAAKosC,gBAAkB,GAAI3rC,EAE5BT,MAAKosC,gBAAgBrlC,EAAI/G,KAAKksC,YAAYnlC,CAC1C/G,MAAKosC,gBAAgBnlC,EAAIjH,KAAKksC,YAAYjlC,CAC1CjH,MAAKosC,gBAAgBjlC,EAAInH,KAAKksC,YAAY/kC,CAC1CnH,MAAKosC,gBAAgBtkC,EAAIT,KAAKoxB,GAAG,EAAEz4B,KAAKksC,YAAYpkC,GAxDxC8wB,GAAAK,iBAAmC,CA2DlD,OAAAL,IA9DsCgN,EAgEtC9lC,GAAiCJ,QAAxBk5B,I5DukNN/vB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAYixB,gEAAgE,SAASj7B,EAAQkB,EAAOJ,GACzb,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6DzpNtB,IAAO0J,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2D7D2pNtC,I6DppNM26B,GAAqB,SAAAl4B,GAAStB,EAA9Bw5B,EAAqBl4B,EAoC1B,SApCKk4B,GAoCO9I,EAA2B4b,GAEtChrC,EAAA1B,KAAAK,KAAMywB,EAAU4b,EAEhBrsC,MAAKssC,sBAAwBD,CAC7BrsC,MAAKusC,UAAYvsC,KAAKssC,sBAAsB5S,WA9B7Cv3B,OAAAC,eAAWm3B,EAAAh5B,UAAA,Y7DopNJ8B,I6DppNP,WAEC,MAAOrC,MAAKusC,W7DqpNNhqC,I6DlpNP,SAAoBC,GAEnBxC,KAAKusC,UAAY/pC,G7DmpNXE,WAAY,KACZC,aAAc,M6D9oNd42B,GAAAh5B,UAAAisC,aAAP,WAEC,MAAOxsC,MAAKysC,oBAGNlT,GAAAh5B,UAAAmsC,aAAP,SAAoBlqC,GAEnBxC,KAAKysC,oBAAsBjqC,CAE3BxC,MAAK2sC,yBAA2B,GAAIxqC,QAc9Bo3B,GAAAh5B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIjG,KAAKssC,sBAAsB34B,MAAQb,EAAuBiB,gBAAkB/T,KAAK2sC,yBAAyB91B,EAAqBoV,YAClIjsB,KAAK4sC,0BAA0B/1B,EAEhC;GAAIL,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBhM,EAAsBI,eAE/G,IAAI35B,KAAKssC,sBAAsB34B,MAAQb,EAAuBgb,OAC7D5Z,EAAuBoC,eAAeE,EAAOxW,KAAKusC,UAAUxlC,EAAG/G,KAAKusC,UAAUtlC,EAAGjH,KAAKusC,UAAUplC,OAEhG0P,GAAqByV,qBAAqB9V,EAAOxW,KAAKssC,sBAAsBz4B,aAActS,EAAOwI,EAA4Bi8B,SAtDjHzM,GAAAI,eAAiC,CAwDhD,OAAAJ,IA3DoCqM,EA6DL9lC,GAAAJ,QAAtB65B,I7DwoNNlgB,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY2xB,uEAAuE,SAAS37B,EAAQkB,EAAOJ,GACtZ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8D7tNtB,IAAOG,GAAQ5B,EAAiB,gCAWhC,IAAOgnC,GAAiBhnC,EAAc,2D9DytNtC,I8DntNMm7B,GAA4B,SAAA14B,GAAStB,EAArCg6B,EAA4B14B,EAOjC,SAPK04B,GAOOtJ,EAA2BkW,GAEtCtlC,EAAA1B,KAAAK,KAAMywB,EAAUkW,EAJT3mC,MAAA4mC,QAAmB,GAAIpmC,GAOxBu5B,EAAAx5B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIiO,EAAuBW,aAAc,CACxC7U,KAAK4mC,QAAQngC,SAASd,EAAWqhC,aAAaC,eAC9CjnC,MAAK4mC,QAAQc,OAAOzhC,EAAO0hC,sBAC3BzzB,GAAuBmX,yBAAyBnX,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxL,EAA6BrH,cAAe1yB,KAAK4mC,UAdnJ7M,GAAArH,aAA8B,CAkB7C,OAAAqH,IArB2C6L,EAuB3C9lC,GAAsCJ,QAA7Bq6B,I9DgtNNpxB,gCAAgCC,UAAUs9B,2DAA2D,6DAA6DrL,wEAAwE,SAASj8B,EAAQkB,EAAOJ,GACrQ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+D7vNtB,IAAOG,GAAQ5B,EAAiB,gCAMhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2D/DyvNtC,I+DnvNM67B,GAA6B,SAAAp5B,GAAStB,EAAtC06B,EAA6Bp5B,EAyBlC,SAzBKo5B,GAyBOhK,EAA2Boc,GAEtCxrC,EAAA1B,KAAAK,KAAMywB,EAAUoc,EAlBT7sC,MAAA4mC,QAAmB,GAAIpmC,EAoB9BR,MAAK8sC,8BAAgCD,CACrC7sC,MAAKusC,UAAYvsC,KAAK8sC,8BAA8BpT,WAfrDv3B,OAAAC,eAAWq4B,EAAAl6B,UAAA,Y/DgvNJ8B,I+DhvNP,WAEC,MAAOrC,MAAKusC,W/DivNNhqC,I+D9uNP,SAAoBC,GAEnBxC,KAAKusC,UAAY/pC,G/D+uNXE,WAAY,KACZC,aAAc,M+DruNd83B,GAAAl6B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIuQ,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9K,EAA8Bd,eAEvH,IAAIzlB,EAAuBW,aAAc,CACxC7U,KAAK4mC,QAAQngC,SAASd,EAAWqhC,aAAaC,eAC9CjnC,MAAK4mC,QAAQc,OAAOzhC,EAAO0hC,sBAC3BzzB,GAAuBmX,yBAAyBnX,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB9K,EAA8B/H,cAAe1yB,KAAK4mC,SAGjK,GAAI5mC,KAAK8sC,8BAA8Bn5B,MAAQb,EAAuBgb,OAAQ,CAC7E9tB,KAAK+sC,QAAUpnC,EAAWqhC,aAAaW,sBAAsB9/B,gBAAgB7H,KAAKusC,UAClFr4B,GAAuBoC,eAAeE,EAAOxW,KAAK+sC,QAAQhmC,EAAG/G,KAAK+sC,QAAQ9lC,EAAGjH,KAAK+sC,QAAQ5lC,OAE1F0P,GAAqByV,qBAAqB9V,EAAOxW,KAAK8sC,8BAA8Bj5B,aAActS,EAAOwI,EAA4Bi8B,SA5CzHvL,GAAA/H,aAA8B,CAE9B+H,GAAAd,eAAgC,CA8C/C,OAAAc,IAnD4CmL,EAqD5C9lC,GAAuCJ,QAA9B+6B,I/D0uNN9xB,gCAAgCC,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY6yB,0EAA0E,SAAS78B,EAAQkB,EAAOJ,GACnc,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgEvzNtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DhEozNtC,IgE9yNMm8B,GAA+B,SAAA15B,GAAStB,EAAxCg7B,EAA+B15B,EAuCpC,SAvCK05B,GAuCOtK,EAA2Buc,GAEtC3rC,EAAA1B,KAAAK,KAAMywB,EAAUuc,EAEhBhtC,MAAKitC,gCAAkCD,CACvChtC,MAAKktC,oBAAsBltC,KAAKitC,gCAAgC/R,oBAEhEl7B,MAAKmtC,+BAlCNhrC,OAAAC,eAAW24B,EAAAx6B,UAAA,sBhE8yNJ8B,IgE9yNP,WAEC,MAAOrC,MAAKktC,qBhE+yNN3qC,IgE5yNP,SAA8BC,GAE7BxC,KAAKktC,oBAAsB1qC,CAE3BxC,MAAKmtC,gChE4yNCzqC,WAAY,KACZC,aAAc,MgEvyNdo4B,GAAAx6B,UAAA6sC,wBAAP,WAEC,MAAOptC,MAAKysC,oBAGN1R,GAAAx6B,UAAA8sC,wBAAP,SAA+B7qC,GAE9BxC,KAAKysC,oBAAsBjqC,CAE3BxC,MAAK2sC,yBAA2B,GAAIxqC,QAgB9B44B,GAAAx6B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIjG,KAAKitC,gCAAgCt5B,MAAQb,EAAuBiB,gBAAkB/T,KAAK2sC,yBAAyB91B,EAAqBoV,YAC5IjsB,KAAK4sC,0BAA0B/1B,EAEhC,IAAIL,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBxK,EAAgCK,yBAEzH,IAAIp7B,KAAKitC,gCAAgCt5B,MAAQb,EAAuBgb,OACvE5Z,EAAuBoC,eAAeE,EAAOxW,KAAKstC,wBAAwBvmC,EAAG/G,KAAKstC,wBAAwBrmC,EAAGjH,KAAKstC,wBAAwBnmC,EAAGnH,KAAKstC,wBAAwBxlC,OAE1K+O,GAAqByV,qBAAqB9V,EAAOxW,KAAKitC,gCAAgCp5B,aAActS,EAAOwI,EAA4B6+B,SAGjI7N,GAAAx6B,UAAA4sC,6BAAR,WAEC,GAAIntC,KAAKitC,gCAAgCt5B,MAAQb,EAAuBgb,OAAQ,CAC/E,GAAI9tB,KAAKktC,oBAAoBplC,GAAK,EACjC,KAAK,IAAKvI,OAAM,4CACjB,IAAIguC,GAAoBvtC,KAAKktC,oBAAoBxlC,OAEjD,IAAI6lC,EAAS3tC,QAAU,EACtB2tC,EAASpmC,EAAI,MAEbomC,GAAS/R,WAEVx7B,MAAKstC,wBAA0B,GAAI7sC,GAAS8sC,EAASxmC,EAAGwmC,EAAStmC,EAAGsmC,EAASpmC,EAAGE,KAAKoxB,GAAG8U,EAASzlC,IA1ErFizB,GAAAK,yBAA2C,CA6E1D,OAAAL,IAhF8C6K,EAkF9C9lC,GAAyCJ,QAAhCq7B,IhE4xNNlyB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY0zB,6DAA6D,SAAS19B,EAAQkB,EAAOJ,GACtb,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiEr4NtB,IAAOI,GAAQ7B,EAAiB,gCAKhC,IAAOmL,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DjEk4NtC,IiE53NM+8B,GAAkB,SAAAt6B,GAAStB,EAA3B47B,EAAkBt6B,EA0EvB,SA1EKs6B,GA0EOlL,EAA2B+c,GAEtCnsC,EAAA1B,KAAAK,KAAMywB,EAAU+c,EAEhBxtC,MAAKytC,mBAAqBD,CAC1BxtC,MAAKmoC,WAAanoC,KAAKytC,mBAAmB9Z,WAC1C3zB,MAAKooC,WAAapoC,KAAKytC,mBAAmB7Z,WAC1C5zB,MAAK0tC,UAAY1tC,KAAKytC,mBAAmB1R,UACzC/7B,MAAK2tC,UAAY3tC,KAAKytC,mBAAmBzR,UACzCh8B,MAAKuoC,eAAiBvoC,KAAKytC,mBAAmB1Z,eAC9C/zB,MAAKwoC,YAAcxoC,KAAKytC,mBAAmBzZ,YAE3Ch0B,MAAK4tC,kBArENzrC,OAAAC,eAAWu5B,EAAAp7B,UAAA,YjE43NJ8B,IiE53NP,WAEC,MAAOrC,MAAK0tC,WjE63NNnrC,IiE13NP,SAAoBC,GAEnBxC,KAAK0tC,UAAYlrC,CAEjBxC,MAAK4tC,mBjE03NClrC,WAAY,KACZC,aAAc,MiEr3NrBR,QAAAC,eAAWu5B,EAAAp7B,UAAA,YjE23NJ8B,IiE33NP,WAEC,MAAOrC,MAAK2tC,WjE43NNprC,IiEz3NP,SAAoBC,GAEnBxC,KAAK2tC,UAAYnrC,CAEjBxC,MAAK4tC,mBjEy3NClrC,WAAY,KACZC,aAAc,MiEp3NrBR,QAAAC,eAAWu5B,EAAAp7B,UAAA,iBjE03NJ8B,IiE13NP,WAEC,MAAOrC,MAAKuoC,gBjE23NNhmC,IiEx3NP,SAAyBC,GAExBxC,KAAKuoC,eAAiB/lC,CAEtBxC,MAAK4tC,mBjEw3NClrC,WAAY,KACZC,aAAc,MiEn3NrBR,QAAAC,eAAWu5B,EAAAp7B,UAAA,cjEy3NJ8B,IiEz3NP,WAEC,MAAOrC,MAAKwoC,ajE03NNjmC,IiEv3NP,SAAsBC,GAErBxC,KAAKwoC,YAAchmC,CAEnBxC,MAAK4tC,mBjEu3NClrC,WAAY,KACZC,aAAc,MiEt2Ndg5B,GAAAp7B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIuQ,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB5J,EAAmBO,YAE5G,IAAIl8B,KAAKytC,mBAAmB95B,MAAQb,EAAuBc,aAAc,CACxE,GAAI5T,KAAKmoC,WAAY,CACpB,GAAInoC,KAAKooC,WACRvxB,EAAqByV,qBAAqB9V,EAAOxW,KAAKytC,mBAAmB55B,aAActS,EAAOwI,EAA4B6+B,aAE1H/xB,GAAqByV,qBAAqB9V,EAAOxW,KAAKytC,mBAAmB55B,aAActS,EAAOwI,EAA4Bi8B,aAE3HnvB,GAAqByV,qBAAqB9V,EAAOxW,KAAKytC,mBAAmB55B,aAActS,EAAOwI,EAA4B8B,aAE3HqI,GAAuBoC,eAAeE,EAAOxW,KAAK6tC,WAAW9mC,EAAG/G,KAAK6tC,WAAW5mC,EAAGjH,KAAK6tC,WAAW1mC,EAAGnH,KAAK6tC,WAAW/lC,GAGhH6zB,GAAAp7B,UAAAqtC,gBAAR,WAEC,GAAI5tC,KAAKytC,mBAAmB95B,MAAQb,EAAuBgb,OAAQ,CAClE,GAAI9tB,KAAKmoC,WAAY,CACpB,GAAInoC,KAAKuoC,gBAAkB,EAC1B,KAAK,IAAKhpC,OAAM,+CACjBS,MAAK6tC,WAAa,GAAIptC,IAAUT,KAAK0tC,UAAY1tC,KAAK2tC,WAAW,EAAGtmC,KAAKg1B,IAAIr8B,KAAK0tC,UAAY1tC,KAAK2tC,WAAW,EAAGtmC,KAAKoxB,GAAG,EAAEz4B,KAAKuoC,eAAgBvoC,KAAKwoC,YAAYnhC,KAAKoxB,GAAG,SAEzKz4B,MAAK6tC,WAAa,GAAIptC,GAAST,KAAK0tC,UAAW1tC,KAAK2tC,UAAY3tC,KAAK0tC,UAAW,EAAG,IA9GxE/R,GAAAO,YAA8B,CAiH7C,OAAAP,IApHiCiK,EAsHjC9lC,GAA4BJ,QAAnBi8B,IjE42NN9yB,gCAAgCD,UAAUyQ,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY00B,sEAAsE,SAAS1+B,EAAQkB,EAAOJ,GAC/b,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkE3+NtB,IAAOulC,GAAiBhnC,EAAc,2DlEi/NtC,IkE3+NM49B,GAA2B,SAAAn7B,GAAStB,EAApCy8B,EAA2Bn7B,EAmFhC,SAnFKm7B,GAmFO/L,EAA2Bqd,GAEtCzsC,EAAA1B,KAAAK,KAAMywB,EAAUqd,EAEhB9tC,MAAKioC,gBAAkB6F,EAA2Bra,gBAClDzzB,MAAKkoC,YAAc4F,EAA2Bpa,YAC9C1zB,MAAKqoC,YAAcyF,EAA2Bja,YAC9C7zB,MAAKsoC,UAAYwF,EAA2Bha,UAC5C9zB,MAAK+tC,eAAiBD,EAA2BjR,eACjD78B,MAAKguC,iBAAmBF,EAA2BlR,iBACnD58B,MAAKyoC,kBApENtmC,OAAAC,eAAWo6B,EAAAj8B,UAAA,clEk+NJ8B,IkEl+NP,WAEC,MAAOrC,MAAKqoC,alEm+NN9lC,IkEh+NP,SAAsBC,GAErBxC,KAAKqoC,YAAc7lC,CAEnBxC,MAAKyoC,mBlEg+NC/lC,WAAY,KACZC,aAAc,MkE39NrBR,QAAAC,eAAWo6B,EAAAj8B,UAAA,YlEi+NJ8B,IkEj+NP,WAEC,MAAOrC,MAAKsoC,WlEk+NN/lC,IkE/9NP,SAAoBC,GAEnBxC,KAAKsoC,UAAY9lC,CACjBxC,MAAKyoC,mBlEg+NC/lC,WAAY,KACZC,aAAc,MkE39NrBR,QAAAC,eAAWo6B,EAAAj8B,UAAA,mBlEi+NJ8B,IkEj+NP,WAEC,MAAOrC,MAAKguC,kBlEk+NNtrC,WAAY,KACZC,aAAc,MkE79NrBR,QAAAC,eAAWo6B,EAAAj8B,UAAA,iBlEm+NJ8B,IkEn+NP,WAEC,MAAOrC,MAAK+tC,gBlEo+NNxrC,IkEj+NP,SAAyBC,GAExBxC,KAAK+tC,eAAiBvrC,CACtBxC,MAAKyoC,mBlEk+NC/lC,WAAY,KACZC,aAAc,MkEh+NrBR,QAAAC,eAAWo6B,EAAAj8B,UAAA,kBlEm+NJ8B,IkEn+NP,WAEC,MAAOrC,MAAKioC,iBlEo+NNvlC,WAAY,KACZC,aAAc,MkEl+NrBR,QAAAC,eAAWo6B,EAAAj8B,UAAA,clEq+NJ8B,IkEr+NP,WAEC,MAAOrC,MAAKkoC,alEs+NNxlC,WAAY,KACZC,aAAc,MkEv9Nd65B,GAAAj8B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIiO,EAAuBgB,sBAAuB,CACjD,GAAIlV,KAAKguC,iBAAmB,EAC3B95B,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB/I,EAA4BU,iBAAkBl9B,KAAKiuC,cAAc,GAAIjuC,KAAKiuC,cAAc,GAAIjuC,KAAKiuC,cAAc,GAAIjuC,KAAKiuC,cAAc,GAC3O,IAAIjuC,KAAKioC,gBACR/zB,EAAuBiX,wBAAwBjX,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB/I,EAA4BjI,wBAAyBv0B,KAAKmrC,gBACxK,IAAInrC,KAAKkoC,YACRh0B,EAAuBiX,wBAAwBjX,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB/I,EAA4B7H,oBAAqB30B,KAAKorC,cAI9J5O,GAAAj8B,UAAAkoC,gBAAR,WAECzoC,KAAKiuC,cAAgB,GAAIhjC,MACzBjL,MAAKmrC,gBAAkB,GAAIlgC,MAC3BjL,MAAKorC,YAAc,GAAIngC,MACvB,IAAI5L,EACJ,KAAKA,EAAI,EAAGA,EAAIW,KAAKguC,iBAAkB3uC,IAAK,CAC3C,GAAIA,GAAK,EACRW,KAAKiuC,cAAcz/B,KAAKxO,KAAK+tC,eAAe1uC,GAAG6tB,UAE/CltB,MAAKiuC,cAAcz/B,KAAKxO,KAAK+tC,eAAe1uC,GAAG6tB,KAAOltB,KAAK+tC,eAAe1uC,EAAI,GAAG6tB,MAEnF,GAAIltB,KAAKguC,kBAAoB,EAC5BhuC,KAAKiuC,cAAcz/B,KAAK,OAExBxO,MAAKiuC,cAAcz/B,KAAK,EAAIxO,KAAK+tC,eAAe1uC,EAAI,GAAG6tB,KAExD,IAAIltB,KAAKioC,gBAAiB,CACzBjoC,KAAKmrC,gBAAgB38B,KAAKxO,KAAKqoC,YAAYtT,cAAe/0B,KAAKqoC,YAAYrT,gBAAiBh1B,KAAKqoC,YAAYpT,eAAgBj1B,KAAKqoC,YAAYnT,gBAC9I,KAAK71B,EAAI,EAAGA,EAAIW,KAAKguC,iBAAkB3uC,IAAK,CAC3C,GAAIA,GAAK,EACRW,KAAKmrC,gBAAgB38B,MAAMxO,KAAK+tC,eAAe1uC,GAAG8tB,MAAM4H,cAAgB/0B,KAAKqoC,YAAYtT,eAAe/0B,KAAKiuC,cAAc5uC,IAAKW,KAAK+tC,eAAe1uC,GAAG8tB,MAAM6H,gBAAkBh1B,KAAKqoC,YAAYrT,iBAAiBh1B,KAAKiuC,cAAc5uC,IAAKW,KAAK+tC,eAAe1uC,GAAG8tB,MAAM8H,eAAiBj1B,KAAKqoC,YAAYpT,gBAAgBj1B,KAAKiuC,cAAc5uC,IAAKW,KAAK+tC,eAAe1uC,GAAG8tB,MAAM+H,gBAAkBl1B,KAAKqoC,YAAYnT,iBAAiBl1B,KAAKiuC,cAAc5uC,QAEpbW,MAAKmrC,gBAAgB38B,MAAMxO,KAAK+tC,eAAe1uC,GAAG8tB,MAAM4H,cAAgB/0B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM4H,eAAe/0B,KAAKiuC,cAAc5uC,IAAKW,KAAK+tC,eAAe1uC,GAAG8tB,MAAM6H,gBAAkBh1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM6H,iBAAiBh1B,KAAKiuC,cAAc5uC,IAAKW,KAAK+tC,eAAe1uC,GAAG8tB,MAAM8H,eAAiBj1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM8H,gBAAgBj1B,KAAKiuC,cAAc5uC,IAAKW,KAAK+tC,eAAe1uC,GAAG8tB,MAAM+H,gBAAkBl1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM+H,iBAAiBl1B,KAAKiuC,cAAc5uC,IAEtf,GAAIW,KAAKguC,kBAAoB,EAC5BhuC,KAAKmrC,gBAAgB38B,KAAKxO,KAAKsoC,UAAUvT,cAAgB/0B,KAAKqoC,YAAYtT,cAAe/0B,KAAKsoC,UAAUtT,gBAAkBh1B,KAAKqoC,YAAYrT,gBAAiBh1B,KAAKsoC,UAAUrT,eAAiBj1B,KAAKqoC,YAAYpT,eAAgBj1B,KAAKsoC,UAAUpT,gBAAkBl1B,KAAKqoC,YAAYnT,qBAE/Ql1B,MAAKmrC,gBAAgB38B,MAAMxO,KAAKsoC,UAAUvT,cAAgB/0B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM4H,eAAe/0B,KAAKiuC,cAAc5uC,IAAKW,KAAKsoC,UAAUtT,gBAAkBh1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM6H,iBAAiBh1B,KAAKiuC,cAAc5uC,IAAKW,KAAKsoC,UAAUrT,eAAiBj1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM8H,gBAAgBj1B,KAAKiuC,cAAc5uC,IAAKW,KAAKsoC,UAAUpT,gBAAkBl1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAM+H,iBAAiBl1B,KAAKiuC,cAAc5uC,IAG9b,GAAIW,KAAKkoC,YAAa,CACrBloC,KAAKorC,YAAY58B,KAAKxO,KAAKqoC,YAAYlT,UAAU,IAAKn1B,KAAKqoC,YAAYjT,YAAY,IAAKp1B,KAAKqoC,YAAYhT,WAAW,IAAKr1B,KAAKqoC,YAAY/S,YAAY,IACtJ,KAAKj2B,EAAI,EAAGA,EAAIW,KAAKguC,iBAAkB3uC,IAAK,CAC3C,GAAIA,GAAK,EACRW,KAAKorC,YAAY58B,MAAMxO,KAAK+tC,eAAe1uC,GAAG8tB,MAAMgI,UAAYn1B,KAAKqoC,YAAYlT,WAAWn1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAK+tC,eAAe1uC,GAAG8tB,MAAMiI,YAAcp1B,KAAKqoC,YAAYjT,aAAap1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAK+tC,eAAe1uC,GAAG8tB,MAAMkI,WAAar1B,KAAKqoC,YAAYhT,YAAYr1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAK+tC,eAAe1uC,GAAG8tB,MAAMmI,YAAct1B,KAAKqoC,YAAY/S,aAAat1B,KAAKiuC,cAAc5uC,GAAG,SAE/ZW,MAAKorC,YAAY58B,MAAMxO,KAAK+tC,eAAe1uC,GAAG8tB,MAAMgI,UAAYn1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMgI,WAAWn1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAK+tC,eAAe1uC,GAAG8tB,MAAMiI,YAAcp1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMiI,aAAap1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAK+tC,eAAe1uC,GAAG8tB,MAAMkI,WAAar1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMkI,YAAYr1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAK+tC,eAAe1uC,GAAG8tB,MAAMmI,YAAct1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMmI,aAAat1B,KAAKiuC,cAAc5uC,GAAG,KAEje,GAAIW,KAAKguC,kBAAoB,EAC5BhuC,KAAKorC,YAAY58B,MAAMxO,KAAKsoC,UAAUnT,UAAYn1B,KAAKqoC,YAAYlT,WAAW,KAAMn1B,KAAKsoC,UAAUlT,YAAcp1B,KAAKqoC,YAAYjT,aAAa,KAAMp1B,KAAKsoC,UAAUjT,WAAar1B,KAAKqoC,YAAYhT,YAAY,KAAMr1B,KAAKsoC,UAAUhT,YAAct1B,KAAKqoC,YAAY/S,aAAa,SAE/Qt1B,MAAKorC,YAAY58B,MAAMxO,KAAKsoC,UAAUnT,UAAYn1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMgI,WAAWn1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAKsoC,UAAUlT,YAAcp1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMiI,aAAap1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAKsoC,UAAUjT,WAAar1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMkI,YAAYr1B,KAAKiuC,cAAc5uC,GAAG,KAAMW,KAAKsoC,UAAUhT,YAAct1B,KAAK+tC,eAAe1uC,EAAI,GAAG8tB,MAAMmI,aAAat1B,KAAKiuC,cAAc5uC,GAAG,KAGzaW,KAAKiuC,cAAcruC,OAAS,EAtJf48B,GAAAjI,uBAAyC,CAGzCiI,GAAA7H,mBAAqC,CAGrC6H,GAAAU,gBAAkC,CAkJjD,OAAAV,IA3J0CoJ,EA6J1C9lC,GAAqCJ,QAA5B88B,IlE69NN0J,2DAA2D,6DAA6DlH,mEAAmE,SAASpgC,EAAQkB,EAAOJ,GACtN,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmE9oOtB,IAAO0J,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DnE+oOtC,ImEzoOM4+B,GAAwB,SAAAn8B,GAAStB,EAAjCy9B,EAAwBn8B,EAgD7B,SAhDKm8B,GAgDO/M,EAA2Byd,GAEtC7sC,EAAA1B,KAAAK,KAAMywB,EAAUyd,EAEhBluC,MAAKmuC,yBAA2BD,CAEhCluC,MAAKmoC,WAAanoC,KAAKmuC,yBAAyBxa,WAChD3zB,MAAKooC,WAAapoC,KAAKmuC,yBAAyBxa,WAChD3zB,MAAKouC,aAAepuC,KAAKmuC,yBAAyBnQ,aAClDh+B,MAAKquC,YAAcruC,KAAKmuC,yBAAyBrQ,YACjD99B,MAAKsuC,SAAWtuC,KAAKmuC,yBAAyBpQ,SAC9C/9B,MAAKuoC,eAAiBvoC,KAAKmuC,yBAAyBpa,eACpD/zB,MAAKwoC,YAAcxoC,KAAKmuC,yBAAyBna,YAEjDh0B,MAAKuuC,wBAzCNpsC,OAAAC,eAAWo7B,EAAAj9B,UAAA,cnEsoOJ8B,ImEtoOP,WAEC,MAAOrC,MAAKwoC,anEuoONjmC,ImEpoOP,SAAsBC,GAErBxC,KAAKwoC,YAAchmC,CAEnBxC,MAAKuuC,yBnEooOC7rC,WAAY,KACZC,aAAc,MmE/nOrBR,QAAAC,eAAWo7B,EAAAj9B,UAAA,iBnEqoOJ8B,ImEroOP,WAEC,MAAOrC,MAAKuoC,gBnEsoONhmC,ImEnoOP,SAAyBC,GAExBxC,KAAKuoC,eAAiB/lC,CAEtBxC,MAAKuuC,yBnEmoOC7rC,WAAY,KACZC,aAAc,MmEhnOd66B,GAAAj9B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIiO,EAAuBkB,gBAAiB,CAC3ClB,EAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB/H,EAAyBY,YAAap+B,KAAKwuC,iBAAiB,GAAIxuC,KAAKwuC,iBAAiB,GAAIxuC,KAAKwuC,iBAAiB,GAAIxuC,KAAKwuC,iBAAiB,GAC9O,IAAIxuC,KAAKmoC,WAAY,CACpB,GAAI3xB,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB/H,EAAyBa,WAClH,IAAIr+B,KAAKmuC,yBAAyBx6B,MAAQb,EAAuBc,aAAc,CAC9E,GAAI5T,KAAKooC,WACRvxB,EAAqByV,qBAAqB9V,EAAOxW,KAAKmuC,yBAAyBt6B,aAActS,EAAOwI,EAA4Bi8B,aAEhInvB,GAAqByV,qBAAqB9V,EAAOxW,KAAKmuC,yBAAyBt6B,aAActS,EAAOwI,EAA4B8B,aAEjIqI,GAAuBoC,eAAeE,EAAOxW,KAAKwuC,iBAAiB,GAAIxuC,KAAKwuC,iBAAiB,MAKzFhR,GAAAj9B,UAAAguC,sBAAR,WAECvuC,KAAKwuC,iBAAmB,GAAIvjC,OAAc,EAE1C,IAAIqzB,GAAgBt+B,KAAKouC,aAAapuC,KAAKquC,WAE3CruC,MAAKwuC,iBAAiB,GAAKlQ,CAC3Bt+B,MAAKwuC,iBAAiB,GAAK,EAAExuC,KAAKquC,WAClCruC,MAAKwuC,iBAAiB,GAAK,EAAExuC,KAAKsuC,QAElC,IAAItuC,KAAKmoC,WAAY,CACpB,GAAInoC,KAAKuoC,gBAAkB,EAC1B,KAAK,IAAKhpC,OAAM,+CACjBS,MAAKwuC,iBAAiB,GAAKlQ,EAAOt+B,KAAKuoC,cACvCvoC,MAAKwuC,iBAAiB,GAAKxuC,KAAKuoC,cAChC,IAAIvoC,KAAKooC,WACRpoC,KAAKwuC,iBAAiB,GAAKxuC,KAAKwoC,aA/FrBhL,GAAAY,WAA6B,CAG7BZ,GAAAa,WAA6B,CA+F5C,OAAAb,IArGuCoI,EAuGvC9lC,GAAkCJ,QAAzB89B,InEonONnkB,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAYs9B,4DAA4D,SAAStnC,EAAQkB,EAAOJ,GAC3Y,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoEvuOtB,IAAOujC,GAAkBhlC,EAAc,4DpE6uOvC,IoEvuOMgnC,GAAiB,SAAAvkC,GAAStB,EAA1B6lC,EAAiBvkC,EAStB,SATKukC,GASOnV,EAA2BkW,EAA+BzsB,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,MAErE7Y,EAAA1B,KAAAK,KAAMywB,EAAUkW,EAPV3mC,MAAAysC,oBAAsC,GAAIxhC,MAC1CjL,MAAA2sC,yBAAkC,GAAIxqC,OAQ5CnC,MAAKyuC,cAAgB9H,CACrB3mC,MAAK0uC,iBAAmBx0B,EAGzB/X,OAAAC,eAAWwjC,EAAArlC,UAAA,kBpEiuOJ8B,IoEjuOP,WAEC,MAAOrC,MAAK0uC,kBpEkuONhsC,WAAY,KACZC,aAAc,MoEhuOdijC,GAAArlC,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,IAKjJ2/B,GAAArlC,UAAAqsC,0BAAP,SAAiC/1B,GAEhC7W,KAAK2sC,yBAAyB91B,EAAqBoV,YAAc,IAEjE,IAAIjT,GAAkDnC,EAAqBmC,kBAC3E,IAAIZ,GAA2BvB,EAAqBuB,UACpD,IAAI+T,GAAsCtV,EAAqBsV,mBAC/D,IAAIrY,GAA6B9T,KAAKyuC,cAAc36B,UACpD,IAAI40B,GAA6B1oC,KAAKyuC,cAAc56B,YACpD,IAAIwE,EpE+tOE,IoE7tOFC,EACJ,IAAIC,EACJ,IAAI6S,EACJ,IAAIujB,EpE+tOE,IoE5tOF/2B,GAA+B5X,KAAKysC,oBAAoB7sC,MAC5D,IAAIP,GAAoB,CACxB,IAAI6X,GAAoB,CACxB,IAAIC,GAAoB,CAGxB,OAAO9X,EAAIuY,EAAc,CAExB,MAAOV,EAAIU,IAAiB+2B,EAAoB31B,EAAmB9B,IAAIV,OAASnX,EAAG,CAClF+rB,EAAOprB,KAAKysC,oBAAoBptC,EAChCgZ,GAAes2B,EAAkBl3B,YAAY0U,CAC7C7T,GAAiBq2B,EAAkBhhB,iBAAiBxB,EAAsBuc,CAE1E,KAAKvxB,EAAI,EAAGA,EAAIkB,EAAclB,GAAKgV,EAAqB,CACvD5T,EAAeD,EAAiBnB,CAGhC,KAAKA,EAAI,EAAGA,EAAIkB,EAAclB,GAAKgV,EAAqB,CACvD5T,EAAeD,EAAiBnB,CAChCiB,GAAWG,KAAkB6S,EAAKrkB,CAClCqR,GAAWG,KAAkB6S,EAAKnkB,CAClCmR,GAAWG,KAAkB6S,EAAKjkB,CAElC,IAAI2M,GAAc,EACjBsE,EAAWG,KAAkB6S,EAAKtjB,GAcrCoP,IAED7X,IAGDwX,EAAqBkW,mBAGvB,OAAA6Y,IA1FgChC,EA4FL9jC,GAAAJ,QAAlBkmC,IpE2sONR,4DAA4D,8DAA8DzF,4DAA4D,SAAS/gC,EAAQkB,EAAOJ,GACjN,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqE1zOtB,IAAO0J,GAA2BnL,EAAY,sDAO9C,IAAOgnC,GAAiBhnC,EAAc,2DrE0zOtC,IqEpzOMqgC,GAAiB,SAAA59B,GAAStB,EAA1Bk/B,EAAiB59B,EAUtB,SAVK49B,GAUOxO,EAA2Bme,GAEtCvtC,EAAA1B,KAAAK,KAAMywB,EAAUme,EAAkB,KAElC5uC,MAAK6uC,kBAAoBD,EAGnB3P,EAAA1+B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ4Q,EAAqByV,qBAAqBpY,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBtG,EAAkBK,mBAAoBt/B,KAAK6uC,kBAAkBh7B,aAActS,EAAOwI,EAA4B6+B,QAEtN,IAAIkG,GAAsB9uC,KAAKwkC,OAAO,GACtCtwB,GAAuBoC,eAAepC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiBtG,EAAkBO,qBAAsBsP,EAAcA,EAAcA,EAAcA,GAnBzK7P,GAAAK,kBAAoC,CAGpCL,GAAAO,oBAAsC,CAmBrD,OAAAP,IAzBgC2G,EA2BhC9lC,GAA2BJ,QAAlBu/B,IrE6yONiH,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY83B,0DAA0D,SAAS9hC,EAAQkB,EAAOJ,GAC7Q,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsEn1OtB,IAAOulC,GAAiBhnC,EAAc,2DtEy1OtC,IsEn1OMihC,GAAe,SAAAx+B,GAAStB,EAAxB8/B,EAAex+B,EAOpB,SAPKw+B,GAOOpP,EAA2Bse,GAEtC1tC,EAAA1B,KAAAK,KAAMywB,EAAUse,EAEhB/uC,MAAKgvC,gBAAkBD,EAGjBlP,EAAAt/B,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIiO,EAAuBkB,gBAAiB,CAC3C,GAAIoB,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB1F,EAAgBQ,SACzG,IAAIjV,GAAgBprB,KAAKgvC,gBAAgBzO,QACzCrsB,GAAuBoC,eAAeE,EAAO4U,EAAKrkB,EAAGqkB,EAAKnkB,IAhB9C44B,GAAAQ,SAA2B,CAoB1C,OAAAR,IAvB8B+F,EAyB9B9lC,GAAyBJ,QAAhBmgC,ItE80ONqG,2DAA2D,6DAA6D9E,gEAAgE,SAASxiC,EAAQkB,EAAOJ,GACnN,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuEv3OtB,IAAO0J,GAA2BnL,EAAY,sDAK9C,IAAOkU,GAAsBlU,EAAa,8DAE1C,IAAOgnC,GAAiBhnC,EAAc,2DvEw3OtC,IuEl3OMgiC,GAAqB,SAAAv/B,GAAStB,EAA9B6gC,EAAqBv/B,EAoC1B,SApCKu/B,GAoCOnQ,EAA2Bwe,GAEtC5tC,EAAA1B,KAAAK,KAAMywB,EAAUwe,EAEhBjvC,MAAKkvC,sBAAwBD,CAC7BjvC,MAAKmvC,UAAYnvC,KAAKkvC,sBAAsBnO,WA9B7C5+B,OAAAC,eAAWw+B,EAAArgC,UAAA,YvEk3OJ8B,IuEl3OP,WAEC,MAAOrC,MAAKmvC,WvEm3ON5sC,IuEh3OP,SAAoBC,GAEnBxC,KAAKmvC,UAAY3sC,GvEi3OXE,WAAY,KACZC,aAAc,MuE52Odi+B,GAAArgC,UAAA6uC,cAAP,WAEC,MAAOpvC,MAAKysC,oBAGN7L,GAAArgC,UAAA8uC,cAAP,SAAqB7sC,GAEpBxC,KAAKysC,oBAAsBjqC,CAE3BxC,MAAK2sC,yBAA2B,GAAIxqC,QAW9By+B,GAAArgC,UAAAgQ,eAAP,SAAsBhP,EAAaoE,EAA2BkR,EAA2C3C,EAA+CjO,GAEvJ,GAAIjG,KAAKkvC,sBAAsBv7B,MAAQb,EAAuBiB,gBAAkB/T,KAAK2sC,yBAAyB91B,EAAqBoV,YAClIjsB,KAAK4sC,0BAA0B/1B,EAEhC,IAAIL,GAAuBtC,EAAuBmW,iBAAiBrqB,KAAKulC,gBAAiB3E,EAAsBK,eAE/G,IAAIjhC,KAAKkvC,sBAAsBv7B,MAAQb,EAAuBgb,OAC7D5Z,EAAuBoC,eAAeE,EAAOxW,KAAKmvC,UAAUpoC,EAAG/G,KAAKmvC,UAAUloC,EAAGjH,KAAKmvC,UAAUhoC,OAEhG0P,GAAqByV,qBAAqB9V,EAAOxW,KAAKkvC,sBAAsBr7B,aAActS,EAAOwI,EAA4Bi8B,SAnDjHpF,GAAAK,eAAgC,CAqD/C,OAAAL,IAxDoCgF,EA0DpC9lC,GAA+BJ,QAAtBkhC,IvEs2ONvnB,8DAA8D,8DAA8D6sB,2DAA2D,2DAA2Dv5B,sDAAsD/D,YAAY44B,kEAAkE,SAAS5iC,EAAQkB,EAAOJ,GACjZ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwEp7OtB,IAAO2b,GAASpd,EAAgB,iDAEhC,IAAOqd,GAAYrd,EAAgB,oDAEnC,IAAOglC,GAAkBhlC,EAAc,4DxEw7OvC,IwEl7OM0iC,GAAuB,SAAAjgC,GAAStB,EAAhCuhC,EAAuBjgC,EA6B5B,SA7BKigC,GA6BO7Q,EAAuB6e,GAElCjuC,EAAA1B,KAAAK,KAAMywB,EAAU6e,EA7BTtvC,MAAAuvC,aAAsB,CAEtBvvC,MAAAwvC,cAA6B,GAAIvzB,EACjCjc,MAAAyvC,mBAA6B,IA4BpCzvC,MAAK0vC,uBAAyBJ,CAE9BtvC,MAAK2vC,QAAoClf,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBE,OAChG5vC,MAAK6vC,QAAoCpf,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBI,QApBjG3tC,OAAAC,eAAWk/B,EAAA/gC,UAAA,exEq7OJ8B,IwEr7OP,WAEC,MAAOrC,MAAKuvC,cxEs7ONhtC,IwEn7OP,SAAuBC,GAEtBxC,KAAKuvC,aAAe/sC,CAEpBxC,MAAKslC,qBAAuB,IAC5BtlC,MAAKyvC,mBAAqB,MxEm7OpB/sC,WAAY,KACZC,aAAc,MwEp6Od2+B,GAAA/gC,UAAA+P,MAAP,SAAa9N,GAEZxC,KAAKyvC,mBAAqB,IAE1BzvC,MAAKslC,qBAAuB,IAE5BtlC,MAAK2vC,QAAQr/B,MAAM9N,EACnBxC,MAAK6vC,QAAQv/B,MAAM9N,GAMb8+B,GAAA/gC,UAAAkkC,aAAP,SAAoBxzB,GAEnBjR,KAAKyvC,mBAAqB,IAE1BzvC,MAAK2vC,QAAQhkC,OAAOsF,EACpBjR,MAAK6vC,QAAQlkC,OAAOsF,EAEpB5P,GAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAMbqwB,GAAA/gC,UAAAwe,gBAAP,SAAuB3C,GAEtB,GAAIpc,KAAKyvC,mBACRzvC,KAAK+vC,mBAAmB3zB,EAEzB,OAAOpc,MAAKwvC,cAMNlO,GAAA/gC,UAAAilC,sBAAP,WAECxlC,KAAKslC,qBAAuB,KAE5B,IAAI0K,GAAiBhwC,KAAK2vC,QAAQ99B,aAClC,IAAIo+B,GAAiBjwC,KAAK6vC,QAAQh+B,aAElC7R,MAAKqlC,YAAYt+B,EAAIipC,EAAMjpC,EAAI/G,KAAKuvC,cAAcU,EAAMlpC,EAAIipC,EAAMjpC,EAClE/G,MAAKqlC,YAAYp+B,EAAI+oC,EAAM/oC,EAAIjH,KAAKuvC,cAAcU,EAAMhpC,EAAI+oC,EAAM/oC,EAClEjH,MAAKqlC,YAAYl+B,EAAI6oC,EAAM7oC,EAAInH,KAAKuvC,cAAcU,EAAM9oC,EAAI6oC,EAAM7oC,GAQ3Dm6B,GAAA/gC,UAAAwvC,mBAAR,SAA2B3zB,GAE1Bpc,KAAKyvC,mBAAqB,KAE1B,IAAIS,EACJ,IAAIC,GAA4BnwC,KAAKwvC,cAActwB,UACnD,IAAIkxB,GAA0BpwC,KAAK2vC,QAAQ5wB,gBAAgB3C,GAAU8C,UACrE,IAAImxB,GAA0BrwC,KAAK6vC,QAAQ9wB,gBAAgB3C,GAAU8C,UACrE,IAAIoxB,GAAiBC,CACrB,IAAIvO,GAAaC,CACjB,IAAIxd,EACJ,IAAI7H,GAA4BR,EAASQ,SAGzC,IAAIuzB,EAASvwC,QAAUgd,EACtBuzB,EAASvwC,OAASgd,CAEnB,KAAK,GAAIvd,GAAoB,EAAGA,EAAIud,IAAavd,EAAG,CACnD6wC,EAAUC,EAAS9wC,EAEnB,IAAI6wC,GAAW,KACdA,EAAUC,EAAS9wC,GAAK,GAAI2c,EAE7Bs0B,GAAQF,EAAO/wC,EACfkxC,GAAQF,EAAOhxC,EACf2iC,GAAKsO,EAAM9uB,WACXygB,GAAKsO,EAAM/uB,WAEX0uB,GAAQ3uB,YAAYivB,KAAKF,EAAM/uB,YAAagvB,EAAMhvB,YAAavhB,KAAKuvC,aAEpE9qB,GAAKyrB,EAAQ1uB,WACbiD,GAAG1d,EAAIi7B,EAAGj7B,EAAI/G,KAAKuvC,cAActN,EAAGl7B,EAAIi7B,EAAGj7B,EAC3C0d,GAAGxd,EAAI+6B,EAAG/6B,EAAIjH,KAAKuvC,cAActN,EAAGh7B,EAAI+6B,EAAG/6B,EAC3Cwd,GAAGtd,EAAI66B,EAAG76B,EAAInH,KAAKuvC,cAActN,EAAG96B,EAAI66B,EAAG76B,IAG9C,OAAAm6B,IApIsCsC,EAsItC9jC,GAAiCJ,QAAxB4hC,IxEq5ONpb,iDAAiD,iDAAiDC,oDAAoD,oDAAoDif,4DAA4D,8DAA8DjD,4DAA4D,SAASvjC,EAAQkB,EAAOJ,GAC3Z,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyE7iPtB,IAAOI,GAAQ7B,EAAiB,gCAIhC,IAAOod,GAASpd,EAAgB,iDAEhC,IAAOqd,GAAYrd,EAAgB,oDAEnC,IAAOilC,GAAkBjlC,EAAc,4DzE8iPvC,IyExiPM8iC,GAAiB,SAAArgC,GAAStB,EAA1B2hC,EAAiBrgC,EAgCtB,SAhCKqgC,GAgCOjR,EAAuBggB,GAElCpvC,EAAA1B,KAAAK,KAAMywB,EAAUggB,EAhCTzwC,MAAA0wC,SAAoB,GAAIjwC,EAGxBT,MAAAwvC,cAA6B,GAAIvzB,EACjCjc,MAAAyvC,mBAA6B,IA8BpCzvC,MAAK2wC,kBAAoBF,CACzBzwC,MAAK4hC,QAAU5hC,KAAK2wC,kBAAkBC,OAxBvCzuC,OAAAC,eAAWs/B,EAAAnhC,UAAA,ezEyiPJ8B,IyEziPP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAK6wC,czEyiPNnuC,WAAY,KACZC,aAAc,MyEpiPrBR,QAAAC,eAAWs/B,EAAAnhC,UAAA,YzE0iPJ8B,IyE1iPP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAK8wC,WzE0iPNpuC,WAAY,KACZC,aAAc,MyE7hPd++B,GAAAnhC,UAAAwe,gBAAP,SAAuB3C,GAEtB,GAAIpc,KAAKyvC,mBACRzvC,KAAK+vC,mBAAmB3zB,EAEzB,OAAOpc,MAAKwvC,cAMN9N,GAAAnhC,UAAAkkC,aAAP,SAAoBxzB,GAEnBjR,KAAKyvC,mBAAqB,IAE1BpuC,GAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAMbywB,GAAAnhC,UAAA0jC,eAAP,WAEC5iC,EAAAd,UAAM0jC,eAActkC,KAAAK,KAEpBA,MAAK6wC,aAAe7wC,KAAK4hC,QAAQ5hC,KAAKmkC,eAEtC,IAAInkC,KAAK2wC,kBAAkBtM,SAAWrkC,KAAKokC,aAAepkC,KAAK2wC,kBAAkBhM,UAAW,CAC3F3kC,KAAK8wC,UAAY9wC,KAAK4hC,QAAQ,EACV5hC,MAAKmlC,WAAYnzB,yBAErChS,MAAK8wC,UAAY9wC,KAAK4hC,QAAQ5hC,KAAKokC,aAQ7B1C,GAAAnhC,UAAAwvC,mBAAR,SAA2B3zB,GAE1Bpc,KAAKyvC,mBAAqB,KAE1B,KAAKzvC,KAAK2wC,kBAAkBpM,cAC3B,MAED,IAAIvkC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,IAAI8M,GAA+B/wC,KAAK6wC,aAAa3xB,UACrD,IAAI8xB,GAA4BhxC,KAAK8wC,UAAU5xB,UAC/C,IAAItC,GAA4BR,EAASQ,SACzC,IAAIolB,GAAaC,CACjB,IAAIqO,GAAiBC,CACrB,IAAIJ,GAA4BnwC,KAAKwvC,cAActwB,UACnD,IAAIgxB,EACJ,IAAIzrB,EAGJ,IAAI0rB,EAASvwC,QAAUgd,EACtBuzB,EAASvwC,OAASgd,CAEnB,IAAKA,GAAam0B,EAAYnxC,QAAYgd,GAAao0B,EAASpxC,OAC/D,KAAM,IAAIL,OAAM,4BAEjB,KAAK,GAAIF,GAAoB,EAAGA,EAAIud,IAAavd,EAAG,CACnD6wC,EAAUC,EAAS9wC,EAEnB,IAAI6wC,GAAW,KACdA,EAAUC,EAAS9wC,GAAK,GAAI2c,EAE7Bs0B,GAAQS,EAAY1xC,EACpBkxC,GAAQS,EAAS3xC,EACjB2iC,GAAKsO,EAAM9uB,WACXygB,GAAKsO,EAAM/uB,WAEX,IAAIxhB,KAAK2wC,kBAAkB9O,YAC1BqO,EAAQ3uB,YAAY0vB,MAAMX,EAAM/uB,YAAagvB,EAAMhvB,YAAavhB,KAAKkkC,mBACrEgM,GAAQ3uB,YAAYivB,KAAKF,EAAM/uB,YAAagvB,EAAMhvB,YAAavhB,KAAKkkC,cAErE,IAAI7kC,EAAI,EAAG,CACVolB,EAAKyrB,EAAQ1uB,WACbiD,GAAG1d,EAAIi7B,EAAGj7B,EAAI/G,KAAKkkC,eAAejC,EAAGl7B,EAAIi7B,EAAGj7B,EAC5C0d,GAAGxd,EAAI+6B,EAAG/6B,EAAIjH,KAAKkkC,eAAejC,EAAGh7B,EAAI+6B,EAAG/6B,EAC5Cwd,GAAGtd,EAAI66B,EAAG76B,EAAInH,KAAKkkC,eAAejC,EAAG96B,EAAI66B,EAAG76B,KAQxCu6B,GAAAnhC,UAAAilC,sBAAP,WAECxlC,KAAKslC,qBAAuB,KAE5B,IAAItlC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,IAAIjC,GAAaC,EAAaiP,CAC9B,IAAIC,GAAsBnxC,KAAK2wC,kBAAkBQ,UAGjD,IAAKnxC,KAAK0kC,UAAY,GAAK1kC,KAAKokC,YAAcpkC,KAAKoxC,YAAgBpxC,KAAK0kC,UAAY,GAAK1kC,KAAKokC,YAAcpkC,KAAKoxC,WAAa,CAC7HpxC,KAAK0wC,SAAS3pC,GAAKoqC,EAAWpqC,EAAE/G,KAAK0kC,SACrC1kC,MAAK0wC,SAASzpC,GAAKkqC,EAAWlqC,EAAEjH,KAAK0kC,SACrC1kC,MAAK0wC,SAASvpC,GAAKgqC,EAAWhqC,EAAEnH,KAAK0kC,UAGtC,GAAI2M,GAAYrxC,KAAK0wC,SAAS3pC,CAC9B,IAAIuqC,GAAYtxC,KAAK0wC,SAASzpC,CAC9B,IAAIsqC,GAAYvxC,KAAK0wC,SAASvpC,CAE9B,IAAInH,KAAK2wC,kBAAkBa,kBAAoBxxC,KAAKokC,aAAepkC,KAAK2wC,kBAAkBhM,UAAW,CACpG3C,EAAKhiC,KAAK4hC,QAAQ,GAAG1iB,WAAW,GAAGsC,WACnCygB,GAAKjiC,KAAK4hC,QAAQ,GAAG1iB,WAAW,GAAGsC,WACnC0vB,GAAKlxC,KAAK6wC,aAAa3xB,WAAW,GAAGsC,WAErCxhB,MAAK0wC,SAAS3pC,EAAImqC,EAAGnqC,EAAIi7B,EAAGj7B,EAAI/G,KAAKkkC,eAAejC,EAAGl7B,EAAIi7B,EAAGj7B,EAC9D/G,MAAK0wC,SAASzpC,EAAIiqC,EAAGjqC,EAAI+6B,EAAG/6B,EAAIjH,KAAKkkC,eAAejC,EAAGh7B,EAAI+6B,EAAG/6B,EAC9DjH,MAAK0wC,SAASvpC,EAAI+pC,EAAG/pC,EAAI66B,EAAG76B,EAAInH,KAAKkkC,eAAejC,EAAG96B,EAAI66B,EAAG76B,OACxD,CACN66B,EAAKhiC,KAAK6wC,aAAa3xB,WAAW,GAAGsC,WACrCygB,GAAKjiC,KAAK4hC,QAAQ5hC,KAAKokC,aAAallB,WAAW,GAAGsC,WAClDxhB,MAAK0wC,SAAS3pC,EAAIi7B,EAAGj7B,EAAI/G,KAAKkkC,eAAejC,EAAGl7B,EAAIi7B,EAAGj7B,EACvD/G,MAAK0wC,SAASzpC,EAAI+6B,EAAG/6B,EAAIjH,KAAKkkC,eAAejC,EAAGh7B,EAAI+6B,EAAG/6B,EACvDjH,MAAK0wC,SAASvpC,EAAI66B,EAAG76B,EAAInH,KAAKkkC,eAAejC,EAAG96B,EAAI66B,EAAG76B,GAGxDnH,KAAKqlC,YAAYt+B,EAAI/G,KAAK0wC,SAAS3pC,EAAIsqC,CACvCrxC,MAAKqlC,YAAYp+B,EAAIjH,KAAK0wC,SAASzpC,EAAIqqC,CACvCtxC,MAAKqlC,YAAYl+B,EAAInH,KAAK0wC,SAASvpC,EAAIoqC,CAEvCvxC,MAAKoxC,WAAapxC,KAAKokC,YAEzB,OAAA1C,IAlLgCmC,EAoLL/jC,GAAAJ,QAAlBgiC,IzEygPN74B,gCAAgCD,UAAUsd,iDAAiD,iDAAiDC,oDAAoD,oDAAoDwd,4DAA4D,8DAA8DpB,kEAAkE,SAAS3jC,EAAQkB,EAAOJ,GAC3c,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0EhtPtB,IAAOitB,GAAU1uB,EAAgB,kCAIjC,IAAOod,GAASpd,EAAgB,iDAEhC,IAAOqd,GAAYrd,EAAgB,oDAEnC,IAAOglC,GAAkBhlC,EAAc,4D1EitPvC,I0E3sPMyjC,GAAuB,SAAAhhC,GAAStB,EAAhCsiC,EAAuBhhC,EA8B5B,SA9BKghC,GA8BO5R,EAAuB6e,GAElCjuC,EAAA1B,KAAAK,KAAMywB,EAAU6e,EA9BTtvC,MAAAuvC,aAAsB,CAGtBvvC,MAAAwvC,cAA6B,GAAIvzB,EACjCjc,MAAAyvC,mBAA6B,IA4BpCzvC,MAAK0vC,uBAAyBJ,CAE9BtvC,MAAKyxC,WAAuChhB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBgC,UACnG1xC,MAAK2xC,iBAA6ClhB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBkC,iBApB1GzvC,OAAAC,eAAWigC,EAAA9hC,UAAA,e1E6sPJ8B,I0E7sPP,WAEC,MAAOrC,MAAKuvC,c1E8sPNhtC,I0E3sPP,SAAuBC,GAEtBxC,KAAKuvC,aAAe/sC,CAEpBxC,MAAKslC,qBAAuB,IAC5BtlC,MAAKyvC,mBAAqB,M1E2sPpB/sC,WAAY,KACZC,aAAc,M0E5rPd0/B,GAAA9hC,UAAA+P,MAAP,SAAa9N,GAEZxC,KAAKyvC,mBAAqB,IAE1BzvC,MAAKslC,qBAAuB,IAE5BtlC,MAAKyxC,WAAWnhC,MAAM9N,EACtBxC,MAAKyxC,WAAWnhC,MAAM9N,GAMhB6/B,GAAA9hC,UAAAkkC,aAAP,SAAoBxzB,GAEnBjR,KAAKyvC,mBAAqB,IAE1BzvC,MAAKyxC,WAAW9lC,OAAOsF,EACvBjR,MAAK2xC,iBAAiBhmC,OAAOsF,EAE7B5P,GAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAMboxB,GAAA9hC,UAAAwe,gBAAP,SAAuB3C,GAEtB,GAAIpc,KAAKyvC,mBACRzvC,KAAK+vC,mBAAmB3zB,EAEzB,OAAOpc,MAAKwvC,cAMNnN,GAAA9hC,UAAAilC,sBAAP,WAECxlC,KAAKslC,qBAAuB,KAE5B,IAAI0K,GAAiBhwC,KAAKyxC,WAAW5/B,aACrC,IAAIo+B,GAAiBjwC,KAAK2xC,iBAAiB9/B,aAE3C7R,MAAK6R,cAAc9K,EAAIipC,EAAMjpC,EAAI/G,KAAKuvC,aAAaU,EAAMlpC,CACzD/G,MAAK6R,cAAc5K,EAAI+oC,EAAM/oC,EAAIjH,KAAKuvC,aAAaU,EAAMhpC,CACzDjH,MAAK6R,cAAc1K,EAAI6oC,EAAM7oC,EAAInH,KAAKuvC,aAAaU,EAAM9oC,EAQlDk7B,GAAA9hC,UAAAwvC,mBAAR,SAA2B3zB,GAE1Bpc,KAAKyvC,mBAAqB,KAE1B,IAAIS,EACJ,IAAIC,GAA4BnwC,KAAKwvC,cAActwB,UACnD,IAAI2yB,GAA6B7xC,KAAKyxC,WAAW1yB,gBAAgB3C,GAAU8C,UAC3E,IAAI4yB,GAA6B9xC,KAAK2xC,iBAAiB5yB,gBAAgB3C,GAAU8C,UACjF,IAAI6yB,GAAgBC,CACpB,IAAIC,GAAkBC,CACtB,IAAIztB,EACJ,IAAI7H,GAA4BR,EAASQ,SAGzC,IAAIuzB,EAASvwC,QAAUgd,EACtBuzB,EAASvwC,OAASgd,CAEnB,KAAK,GAAIvd,GAAoB,EAAGA,EAAIud,IAAavd,EAAG,CACnD6wC,EAAUC,EAAS9wC,EAEnB,IAAI6wC,GAAW,KACdA,EAAUC,EAAS9wC,GAAK,GAAI2c,EAE7B+1B,GAAOF,EAAUxyC,EACjB2yC,GAAOF,EAAUzyC,EACjB4yC,GAAUF,EAAKvwB,WACf0wB,GAAUF,EAAKxwB,WAEf6gB,GAAwB8P,UAAUC,SAASJ,EAAKzwB,YAAawwB,EAAKxwB,YAClE2uB,GAAQ3uB,YAAYivB,KAAKuB,EAAKxwB,YAAa8gB,EAAwB8P,UAAWnyC,KAAKuvC,aAEnF9qB,GAAKyrB,EAAQ1uB,WACbiD,GAAG1d,EAAIkrC,EAAQlrC,EAAI/G,KAAKuvC,aAAa2C,EAAQnrC,CAC7C0d,GAAGxd,EAAIgrC,EAAQhrC,EAAIjH,KAAKuvC,aAAa2C,EAAQjrC,CAC7Cwd,GAAGtd,EAAI8qC,EAAQ9qC,EAAInH,KAAKuvC,aAAa2C,EAAQ/qC,GAhIhCk7B,GAAA8P,UAAuB,GAAI7kB,EAmI3C,OAAA+U,IAtIsCuB,EAwIL9jC,GAAAJ,QAAxB2iC,I1E8qPN5U,kCAAkC7kB,UAAUsd,iDAAiD,iDAAiDC,oDAAoD,oDAAoDif,4DAA4D,8DAA8DzC,mEAAmE,SAAS/jC,EAAQkB,EAAOJ,GAC9c,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Et0PtB,IAAO2b,GAASpd,EAAgB,iDAEhC,IAAOqd,GAAYrd,EAAgB,oDAEnC,IAAOglC,GAAkBhlC,EAAc,4D3E00PvC,I2Ep0PM6jC,GAAwB,SAAAphC,GAAStB,EAAjC0iC,EAAwBphC,EAqC7B,SArCKohC,GAqCOhS,EAAuB6e,GAElCjuC,EAAA1B,KAAAK,KAAMywB,EAAU6e,EApCTtvC,MAAAwvC,cAA6B,GAAIvzB,EACjCjc,MAAAyvC,mBAA6B,IAG7BzvC,MAAAuvC,aAAsB,CACtBvvC,MAAAqyC,WAAoB,CACpBryC,MAAAsyC,YAAsB,IAgC7BtyC,MAAK0vC,uBAAyBJ,CAE9BtvC,MAAKuyC,SAAqC9hB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuB8C,QACjGxyC,MAAKyyC,UAAsChiB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBgD,SAClG1yC,MAAK2yC,MAAkCliB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBkD,KAC9F5yC,MAAK6yC,OAAmCpiB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuBvI,OA3BhGhlC,OAAAC,eAAWqgC,EAAAliC,UAAA,a3Ei0PJ8B,I2EpzPP,WAEC,MAAOrC,MAAKqyC,Y3EyzPN9vC,I2Ex0PP,SAAqBC,GAEpB,GAAIxC,KAAKqyC,YAAc7vC,EACtB,MAEDxC,MAAKqyC,WAAa7vC,CAElBxC,MAAKsyC,YAAc,IAEnBtyC,MAAKyvC,mBAAqB,IAC1BzvC,MAAKslC,qBAAuB,M3Es0PtB5iC,WAAY,KACZC,aAAc,M2EhzPd8/B,GAAAliC,UAAA+P,MAAP,SAAa9N,GAEZ,GAAIxC,KAAKsyC,YACRtyC,KAAK8yC,aAEN9yC,MAAKyvC,mBAAqB,IAE1BzvC,MAAKslC,qBAAuB,IAE5BtlC,MAAK2vC,QAAQr/B,MAAM9N,EACnBxC,MAAK6vC,QAAQv/B,MAAM9N,GAMbigC,GAAAliC,UAAAwyC,YAAP,SAAmB9hC,GAElB,GAAIjR,KAAKsyC,YACRtyC,KAAK8yC,aAEN9yC,MAAKyvC,mBAAqB,IAE1BzvC,MAAK2vC,QAAQhkC,OAAOsF,EACpBjR,MAAK6vC,QAAQlkC,OAAOsF,EAEpB5P,GAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAMbwxB,GAAAliC,UAAAwe,gBAAP,SAAuB3C,GAEtB,GAAIpc,KAAKyvC,mBACRzvC,KAAK+vC,mBAAmB3zB,EAEzB,OAAOpc,MAAKwvC,cAMN/M,GAAAliC,UAAAilC,sBAAP,WAECxlC,KAAKslC,qBAAuB,KAE5B,IAAItlC,KAAKsyC,YACRtyC,KAAK8yC,aAEN,IAAI9C,GAAiBhwC,KAAK2vC,QAAQ99B,aAClC,IAAIo+B,GAAiBjwC,KAAK6vC,QAAQh+B,aAElC7R,MAAK6R,cAAc9K,EAAIipC,EAAMjpC,EAAI/G,KAAKuvC,cAAcU,EAAMlpC,EAAIipC,EAAMjpC,EACpE/G,MAAK6R,cAAc5K,EAAI+oC,EAAM/oC,EAAIjH,KAAKuvC,cAAcU,EAAMhpC,EAAI+oC,EAAM/oC,EACpEjH,MAAK6R,cAAc1K,EAAI6oC,EAAM7oC,EAAInH,KAAKuvC,cAAcU,EAAM9oC,EAAI6oC,EAAM7oC,GAQ7Ds7B,GAAAliC,UAAAwvC,mBAAR,SAA2B3zB,GAE1Bpc,KAAKyvC,mBAAqB,KAE1B,IAAIzvC,KAAKsyC,YACRtyC,KAAK8yC,aAEN,IAAI5C,EACJ,IAAIC,GAA4BnwC,KAAKwvC,cAActwB,UACnD,IAAIkxB,GAA0BpwC,KAAK2vC,QAAQ5wB,gBAAgB3C,GAAU8C,UACrE,IAAImxB,GAA0BrwC,KAAK6vC,QAAQ9wB,gBAAgB3C,GAAU8C,UACrE,IAAIoxB,GAAiBC,CACrB,IAAIvO,GAAaC,CACjB,IAAIxd,EACJ,IAAI7H,GAA4BR,EAASQ,SAGzC,IAAIuzB,EAASvwC,QAAUgd,EACtBuzB,EAASvwC,OAASgd,CAEnB,KAAK,GAAIvd,GAAoB,EAAGA,EAAIud,IAAavd,EAAG,CACnD6wC,EAAUC,EAAS9wC,EAEnB,IAAI6wC,GAAW,KACdA,EAAUC,EAAS9wC,GAAK,GAAI2c,EAE7Bs0B,GAAQF,EAAO/wC,EACfkxC,GAAQF,EAAOhxC,EACf2iC,GAAKsO,EAAM9uB,WACXygB,GAAKsO,EAAM/uB,WAEX0uB,GAAQ3uB,YAAYivB,KAAKF,EAAM/uB,YAAagvB,EAAMhvB,YAAavhB,KAAKuvC,aAEpE9qB,GAAKyrB,EAAQ1uB,WACbiD,GAAG1d,EAAIi7B,EAAGj7B,EAAI/G,KAAKuvC,cAActN,EAAGl7B,EAAIi7B,EAAGj7B,EAC3C0d,GAAGxd,EAAI+6B,EAAG/6B,EAAIjH,KAAKuvC,cAActN,EAAGh7B,EAAI+6B,EAAG/6B,EAC3Cwd,GAAGtd,EAAI66B,EAAG76B,EAAInH,KAAKuvC,cAActN,EAAG96B,EAAI66B,EAAG76B,IASrCs7B,GAAAliC,UAAAuyC,YAAR,WAEC9yC,KAAKsyC,YAAc,KAEnB,IAAItyC,KAAKqyC,WAAa,GAAKryC,KAAKqyC,WAAa,IAAK,CACjDryC,KAAKqyC,YAAc,GACnB,IAAIryC,KAAKqyC,WAAa,EACrBryC,KAAKqyC,YAAc,IAGrB,GAAIryC,KAAKqyC,WAAa,GAAI,CACzBryC,KAAK2vC,QAAU3vC,KAAKuyC,QACpBvyC,MAAK6vC,QAAU7vC,KAAK6yC,MACpB7yC,MAAKuvC,aAAevvC,KAAKqyC,WAAW,OAC9B,IAAIryC,KAAKqyC,WAAa,IAAK,CACjCryC,KAAK2vC,QAAU3vC,KAAK6yC,MACpB7yC,MAAK6vC,QAAU7vC,KAAKyyC,SACpBzyC,MAAKuvC,cAAgBvvC,KAAKqyC,WAAa,IAAI,OACrC,IAAIryC,KAAKqyC,WAAa,IAAK,CACjCryC,KAAK2vC,QAAU3vC,KAAKyyC,SACpBzyC,MAAK6vC,QAAU7vC,KAAK2yC,KACpB3yC,MAAKuvC,cAAgBvvC,KAAKqyC,WAAa,KAAK,OACtC,CACNryC,KAAK2vC,QAAU3vC,KAAK2yC,KACpB3yC,MAAK6vC,QAAU7vC,KAAKuyC,QACpBvyC,MAAKuvC,cAAgBvvC,KAAKqyC,WAAa,KAAK,IAG/C,OAAA5P,IA5LuCmB,EA8LvC9jC,GAAkCJ,QAAzB+iC,I3E4xPNvc,iDAAiD,iDAAiDC,oDAAoD,oDAAoDif,4DAA4D,8DAA8D/B,gEAAgE,SAASzkC,EAAQkB,EAAOJ,GAC/Z,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Ex+PtB,IAAO2b,GAASpd,EAAgB,iDAEhC,IAAOqd,GAAYrd,EAAgB,oDAEnC,IAAOglC,GAAkBhlC,EAAc,4D5E4+PvC,I4Et+PMikC,GAAqB,SAAAxhC,GAAStB,EAA9B8iC,EAAqBxhC,EAQ1B,SARKwhC,GAQOpS,EAAuB6e,GAElCjuC,EAAA1B,KAAAK,KAAMywB,EAAU6e,EAPTtvC,MAAAwvC,cAA6B,GAAIvzB,EACjCjc,MAAAyvC,mBAA6B,IAC7BzvC,MAAAgzC,cAA8B,GAAI/nC,MAClCjL,MAAAizC,QAAyC,GAAIhoC,MAMpDjL,MAAK0vC,uBAAyBJ,CAE9B,IAAIjwC,GAAoBW,KAAK0vC,uBAAuBwD,SAEpD,OAAO7zC,IACNW,KAAKizC,QAAQ5zC,GAA+BoxB,EAAS7gB,kBAAkB5P,KAAK0vC,uBAAuB3M,SAAS1jC,IAMvGwjC,EAAAtiC,UAAA+P,MAAP,SAAa9N,GAEZxC,KAAKyvC,mBAAqB,IAE1BzvC,MAAKslC,qBAAuB,IAE5B,KAAK,GAAIpuB,GAAoB,EAAGA,EAAIlX,KAAK0vC,uBAAuBwD,YAAah8B,EAAG,CAC/E,GAAIlX,KAAKgzC,cAAc97B,GACtBlX,KAAKizC,QAAQ/7B,GAAGvL,OAAOnJ,IAOnBqgC,GAAAtiC,UAAAwyC,YAAP,SAAmB9hC,GAElB,IAAK,GAAIiG,GAAoB,EAAGA,EAAIlX,KAAK0vC,uBAAuBwD,YAAah8B,EAAG,CAC/E,GAAIlX,KAAKgzC,cAAc97B,GACtBlX,KAAKizC,QAAQ/7B,GAAGvL,OAAOsF,GAGzB5P,EAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAMb4xB,GAAAtiC,UAAAwe,gBAAP,SAAuB3C,GAEtB,GAAIpc,KAAKyvC,mBACRzvC,KAAK+vC,mBAAmB3zB,EAEzB,OAAOpc,MAAKwvC,cAQN3M,GAAAtiC,UAAA4yC,iBAAP,SAAwB38B,GAEvB,MAAOxW,MAAKgzC,cAAcx8B,GASpBqsB,GAAAtiC,UAAA6yC,iBAAP,SAAwB58B,EAAuByR,GAE9CjoB,KAAKgzC,cAAcx8B,GAASyR,CAE5BjoB,MAAKslC,qBAAuB,IAC5BtlC,MAAKyvC,mBAAqB,KAMpB5M,GAAAtiC,UAAAilC,sBAAP,WAECxlC,KAAKslC,qBAAuB,KAE5B,IAAI1zB,EACJ,IAAIwR,EAEJpjB,MAAK6R,cAAc9K,EAAI,CACvB/G,MAAK6R,cAAc5K,EAAI,CACvBjH,MAAK6R,cAAc1K,EAAI,CAEvB,KAAK,GAAI+P,GAAoB,EAAGA,EAAIlX,KAAK0vC,uBAAuBwD,YAAah8B,EAAG,CAC/EkM,EAASpjB,KAAKgzC,cAAc97B,EAE5B,IAAIkM,EAAQ,CACXxR,EAAQ5R,KAAKizC,QAAQ/7B,GAAGrF,aACxB7R,MAAK6R,cAAc9K,GAAKqc,EAAOxR,EAAM7K,CACrC/G,MAAK6R,cAAc5K,GAAKmc,EAAOxR,EAAM3K,CACrCjH,MAAK6R,cAAc1K,GAAKic,EAAOxR,EAAMzK,IAUhC07B,GAAAtiC,UAAAwvC,mBAAR,SAA2B3zB,GAE1Bpc,KAAKyvC,mBAAqB,KAE1B,IAAIrsB,EACJ,IAAI+sB,GAA4BnwC,KAAKwvC,cAActwB,UACnD,IAAIm0B,EACJ,IAAInD,GAAmB9uB,CACvB,IAAIkyB,GAAgB7uB,CACpB,IAAI8uB,GAAoB3rC,CACxB,IAAI4rC,EACJ,IAAIn0C,EACJ,IAAIo0C,GAAWC,EAAWC,EAAWC,CACrC,IAAI/uB,GAAWH,EAAWC,EAAWC,CACrC,IAAIhI,GAA4BR,EAASQ,SAGzC,IAAIuzB,EAASvwC,QAAUgd,EACtBuzB,EAASvwC,OAASgd,CAEnB,KAAK,GAAI1F,GAAoB,EAAGA,EAAIlX,KAAK0vC,uBAAuBwD,YAAah8B,EAAG,CAC/EkM,EAASpjB,KAAKgzC,cAAc97B,EAE5B,KAAKkM,EACJ,QAEDiwB,GAAQrzC,KAAKizC,QAAQ/7B,GAAG6H,gBAAgB3C,GAAU8C,UAElD,KAAKs0B,EAAW,CACfA,EAAYH,CACZ,KAAKh0C,EAAI,EAAGA,EAAIud,IAAavd,EAAG,CAC/B6wC,EAAUC,EAAS9wC,EAEnB,IAAI6wC,GAAW,KACdA,EAAUC,EAAS9wC,GAAK,GAAI2c,EAE7BoF,GAAOiyB,EAAMh0C,EACbuI,GAAIwZ,EAAKG,WACTkD,GAAKrD,EAAKI,WAEV+xB,GAAUrD,EAAQ3uB,WAElBgyB,GAAQxsC,EAAIqc,EAAOxb,EAAEb,CACrBwsC,GAAQtsC,EAAImc,EAAOxb,EAAEX,CACrBssC,GAAQpsC,EAAIic,EAAOxb,EAAET,CACrBosC,GAAQzrC,EAAIsb,EAAOxb,EAAEE,CAErBwrC,GAAQpD,EAAQ1uB,WAChB8xB,GAAMvsC,EAAIqc,EAAOqB,EAAG1d,CACpBusC,GAAMrsC,EAAImc,EAAOqB,EAAGxd,CACpBqsC,GAAMnsC,EAAIic,EAAOqB,EAAGtd,OAEf,CACN,IAAK9H,EAAI,EAAGA,EAAI+c,EAASQ,YAAavd,EAAG,CACxC6wC,EAAUC,EAAS9wC,EACnB+hB,GAAOiyB,EAAMh0C,EAEbuI,GAAI4rC,EAAUn0C,GAAGkiB,WACjBmyB,GAAK9rC,EAAEb,CACP4sC,GAAK/rC,EAAEX,CACP2sC,GAAKhsC,EAAET,CACPssC,GAAK7rC,EAAEE,CAEPF,GAAIwZ,EAAKG,WACTkD,GAAKrD,EAAKI,WAEVkD,GAAK9c,EAAEb,CACP4d,GAAK/c,EAAEX,CACP2d,GAAKhd,EAAET,CACP0d,GAAKjd,EAAEE,CAEP,IAAI4rC,EAAGhvB,EAAKivB,EAAGhvB,EAAKivB,EAAGhvB,EAAK6uB,EAAG5uB,EAAK,EAAG,CACtCH,GAAMA,CACNC,IAAMA,CACNC,IAAMA,CACNC,IAAMA,EAEP0uB,EAAUrD,EAAQ3uB,WAClBgyB,GAAQxsC,GAAKqc,EAAOsB,CACpB6uB,GAAQtsC,GAAKmc,EAAOuB,CACpB4uB,GAAQpsC,GAAKic,EAAOwB,CACpB2uB,GAAQzrC,GAAKsb,EAAOyB,CAEpByuB,GAAQpD,EAAQ1uB,WAChB8xB,GAAMvsC,GAAKqc,EAAOqB,EAAG1d,CACrBusC,GAAMrsC,GAAKmc,EAAOqB,EAAGxd,CACrBqsC,GAAMnsC,GAAKic,EAAOqB,EAAGtd,IAKxB,IAAK9H,EAAI,EAAGA,EAAI+c,EAASQ,YAAavd,EACrC8wC,EAAS9wC,GAAGkiB,YAAYia,YAE3B,OAAAqH,IAhNoCe,EAkNpC9jC,GAA+BJ,QAAtBmjC,I5E67PN3c,iDAAiD,iDAAiDC,oDAAoD,oDAAoDif,4DAA4D,8DAA8D1B,0DAA0D,SAAS9kC,EAAQkB,EAAOJ,GACzZ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6E7pQtB,IAAOwjC,GAAkBjlC,EAAc,4D7EmqQvC,I6E7pQM2kC,GAAe,SAAAliC,GAAStB,EAAxBwjC,EAAeliC,EA6BpB,SA7BKkiC,GA6BO9S,EAAuBojB,GAElCxyC,EAAA1B,KAAAK,KAAMywB,EAAUojB,EAEhB7zC,MAAK8zC,gBAAkBD,CACvB7zC,MAAK4hC,QAAU5hC,KAAK8zC,gBAAgBlD,OAxBrCzuC,OAAAC,eAAWmhC,EAAAhjC,UAAA,mB7E8pQJ8B,I6E9pQP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAK+zC,kB7E8pQNrxC,WAAY,KACZC,aAAc,M6EzpQrBR,QAAAC,eAAWmhC,EAAAhjC,UAAA,gB7E+pQJ8B,I6E/pQP,WAEC,GAAIrC,KAAK+jC,cACR/jC,KAAKikC,gBAEN,OAAOjkC,MAAKg0C,e7E+pQNtxC,WAAY,KACZC,aAAc,M6ElpQd4gC,GAAAhjC,UAAA0jC,eAAP,WAEC5iC,EAAAd,UAAM0jC,eAActkC,KAAAK,KAEpBA,MAAK+zC,iBAAmB/zC,KAAK4hC,QAAQ5hC,KAAKmkC,eAE1C,IAAInkC,KAAK8zC,gBAAgBzP,SAAWrkC,KAAKokC,aAAepkC,KAAK8zC,gBAAgBnP,UAAW,CACvF3kC,KAAKg0C,cAAgBh0C,KAAK4hC,QAAQ,EAChB5hC,MAAKmlC,WAAYnzB,yBAEnChS,MAAKg0C,cAAgBh0C,KAAK4hC,QAAQ5hC,KAAKokC,aAMlCb,GAAAhjC,UAAAilC,sBAAP,YAID,OAAAjC,IA5D8BM,EA8DL/jC,GAAAJ,QAAhB6jC,I7EspQNI,4DAA4D,8DAA8DsQ,uEAAuE,SAASr1C,EAAQkB,EAAOJ,GAC5N,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8EpuQtB,IAAOkhC,GAAsB3iC,EAAa,+DAC1C,IAAOs1C,GAAwBt1C,EAAa,uE9E0uQ5C,I8EruQMu1C,GAAuB,SAAA9yC,GAAStB,EAAhCo0C,EAAuB9yC,EAS5B,SATK8yC,KAWJ9yC,EAAA1B,KAAAK,KAEAA,MAAKiwB,aAAeikB,EAEtB,MAAAC,IAfsC5S,EAiBtCzhC,GAAiCJ,QAAxBy0C,I9EkuQN9S,+DAA+D,+DAA+D+S,uEAAuE,yEAAyEA,wEAAwE,SAASx1C,EAAQkB,EAAOJ,GACjX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+E5vQtB,IAAOihC,GAAuB1iC,EAAa,iEAE3C,IAAOsd,GAAmBtd,EAAc,mD/EiwQxC,I+E5vQMs1C,GAAwB,SAAA7yC,GAAStB,EAAjCm0C,EAAwB7yC,EAK7B,SALK6yC,GAKOzjB,EAAuB6e,GAElCjuC,EAAA1B,KAAAK,KAAMywB,EAAmC6e,EAEzCtvC,MAAKq0C,yBAA2B/E,EAM1B4E,EAAA3zC,UAAAkkC,aAAP,SAAoBxzB,GAEnBjR,KAAKioB,YAAc5gB,KAAKg1B,IAAIprB,EAAOjR,KAAKq0C,yBAAyBC,aAAa,IAAKt0C,KAAKq0C,yBAAyBE,WAEjH,IAAIv0C,KAAKioB,aAAe,EAAG,CAC1BjoB,KAAKioB,YAAc,CAEnB,IAAIjoB,KAAKw0C,mCAAqC,KAC7Cx0C,KAAKw0C,kCAAoC,GAAIt4B,GAAoBA,EAAoB0B,oBAAqB5d,KAAKmlC,WAAYnlC,KAAMA,KAAKq0C,yBAEvIr0C,MAAKq0C,yBAAyBvjC,cAAc9Q,KAAKw0C,mCAGlDnzC,EAAAd,UAAMkkC,aAAY9kC,KAAAK,KAACiR,GAErB,OAAAijC,IA9BuC5S,EAgCLxhC,GAAAJ,QAAzBw0C,I/EovQN1S,iEAAiE,iEAAiEpb,mDAAmD,qDAAqDquB,mEAAmE,SAAS71C,EAAQkB,EAAOJ,GgF1xQxU,GAAOy0C,GAAuBv1C,EAAa,sEhF+xQ3C,IgFzxQM81C,GAAmB,WAIxB,QAJKA,GAIOH,GAFLv0C,KAAAu0C,WAAoB,EAI1Bv0C,MAAKu0C,WAAaA,EAGZG,EAAAn0C,UAAAod,iBAAP,SAAwB8S,EAAuBkkB,EAA6BC,EAA2BN,GAEtG,GAAIO,GAAkD,GAAIV,EAC1DU,GAAwBjF,OAAS+E,CACjCE,GAAwB/E,OAAS8E,CACjCC,GAAwBN,WAAav0C,KAAKu0C,UAC1CM,GAAwBP,WAAaA,CAErC,OAA2BO,GAE7B,OAAAH,KAE6B50C,GAAAJ,QAApBg1C,IhFsxQNT,sEAAsE,wEAAwEa,oEAAoE,SAASl2C,EAAQkB,EAAOJ,SAIvOq1C,+CAA+C,SAASn2C,EAAQkB,EAAOJ,GAC7E,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiF7zQtB,IAAO20C,GAAQp2C,EAAiB,gCjFm0QhC,IiF5zQMq2C,GAAgB,SAAA5zC,GAAStB,EAAzBk1C,EAAgB5zC,EAAtB,SAAM4zC,KAAyB5zC,EAAA6zC,MAAAl1C,KAAAm1C,WAM/B,MAAAF,IAN+BD,EAQ/Bl1C,GAA0BJ,QAAjBu1C,IjF8zQNG,gCAAgCxsC,YAAYM,2CAA2C,SAAStK,EAAQkB,EAAOJ,GAClH,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkFj1QtB,IAAOG,GAAQ5B,EAAgB,gCAE/B,IAAOy2C,GAAKz2C,EAAgB,6BAC5B,IAAO02C,GAAS12C,EAAe,iCAE/B,IAAOkO,GAAmBlO,EAAa,6CACvC,IAAO22C,GAAe32C,EAAc,yCASpC,IAAO42C,GAAmB52C,EAAa,8CAMvC,IAAO62C,GAAa72C,EAAc,0CAClC,IAAO82C,GAAU92C,EAAe,uCAEhC,IAAO+2C,GAAe/2C,EAAc,8CAGpC,IAAOg3C,GAAsBh3C,EAAY,qDAEzC,IAAOi3C,GAAiBj3C,EAAa,uDACrC,IAAOkL,GAAoBlL,EAAa,+CACxC,IAAO+B,GAAoB/B,EAAa,+CAGxC,IAAOk3C,GAAYl3C,EAAe,2CAUlC,IAAOm3C,GAAgBn3C,EAAc,8ClF4zQrC,IkFnzQMoC,GAAY,SAAAK,GAAStB,EAArBiB,EAAYK,EAuMjB,SAvMKL,GAuMOM,EAA6CC,GAvM1D,GAAAyI,GAAAhK,IAuMa,IAAAsB,QAAA,GAA2C,CAA3CA,EAAA,KAA6C,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAExDF,EAAA1B,KAAAK,KAvMOA,MAAAg2C,gBAAyB,CACzBh2C,MAAAi2C,iBAA0B,CAa1Bj2C,MAAAk2C,UAAsB,GAAIZ,EAI3Bt1C,MAAAyC,oBAA8B,IAC9BzC,MAAAiI,sBAAgC,IAChCjI,MAAA4C,cAAwB,KACvB5C,MAAAm2C,aAAsB,CACtBn2C,MAAAo2C,aAAsB,CACtBp2C,MAAAq2C,aAAsB,CACtBr2C,MAAAs2C,iBAA0B,CAC3Bt2C,MAAAwD,cAAwB,KAMxBxD,MAAA4D,cAAuB,CACvB5D,MAAA6D,cAAuB,CAKvB7D,MAAA0G,0BAAqC,GAAIlG,EAExCR,MAAAu2C,UAAkB,GAAIlB,EACtBr1C,MAAAw2C,WAAmB,GAAInB,EACxBr1C,MAAAiE,cAA0B,GAAIqxC,EAQ9Bt1C,MAAAy2C,eAAwB,CAIxBz2C,MAAA02C,cAAwB,KACxB12C,MAAA22C,eAAyB,IAmJ/B32C,MAAKuI,oBAAsBjH,CAE3BtB,MAAK42C,2BAA6B,SAACzsC,GAAqB,MAAAH,GAAK6sC,kBAAkB1sC,GAC/EnK,MAAK82C,yBAA2B,SAAC3sC,GAAgB,MAAAH,GAAK+sC,gBAAgB5sC,GAGtEnK,MAAKg3C,iBAAmB,GAAIxB,EAE5Bx1C,MAAKi3C,cAAgB,EAAqB,GAAIj3C,MAAKuI,oBAAoBvI,MAAQ,GAAI+1C,GAAiB/1C,KAEpGA,MAAKuB,MAAQA,GAASu0C,EAAaxtC,cAAc4uC,eA1JlD/0C,OAAAC,eAAWpB,EAAAT,UAAA,iBlF+xQJ8B,IkF/xQP,WAEC,MAAOrC,MAAK22C,gBlFgyQNp0C,IkF7xQP,SAAyBC,GAExBxC,KAAK22C,eAAiBn0C,GlF8xQhBE,WAAY,KACZC,aAAc,MkF3xQrBR,QAAAC,eAAWpB,EAAAT,UAAA,gBlF8xQJ8B,IkF9xQP,WAEC,MAAOrC,MAAK02C,elF+xQNn0C,IkF5xQP,SAAwBC,GAEvBxC,KAAK02C,cAAgBl0C,GlF6xQfE,WAAY,KACZC,aAAc,MkFxxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,gBlF8xQJ8B,IkF9xQP,WAEC,MAAOrC,MAAKy2C,gBlF+xQN/zC,WAAY,KACZC,aAAc,MkFpxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,YlF0xQJ8B,IkF1xQP,WAEC,MAAOrC,MAAKk2C,WlF2xQNxzC,WAAY,KACZC,aAAc,MkFtxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,elF4xQJ8B,IkF5xQP,WAEC,MAAOrC,MAAKiE,elF6xQNvB,WAAY,KACZC,aAAc,MkFxxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,KlF8xQJ8B,IkF9xQP,WAEC,MAAOrC,MAAKu2C,UAAUxvC,GlF+xQhBxE,IkF5xQP,SAAaC,GAEZ,GAAIxC,KAAK+G,GAAKvE,EACb,MAEDxC,MAAKw2C,WAAWzvC,EAAI/G,KAAKu2C,UAAUxvC,EAAIvE,CAEvCxC,MAAKm3C,mBlF2xQCz0C,WAAY,KACZC,aAAc,MkFtxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,KlF4xQJ8B,IkF5xQP,WAEC,MAAOrC,MAAKu2C,UAAUtvC,GlF6xQhB1E,IkF1xQP,SAAaC,GAEZ,GAAIxC,KAAKiH,GAAKzE,EACb,MAEDxC,MAAKw2C,WAAWvvC,EAAIjH,KAAKu2C,UAAUtvC,EAAIzE,CAEvCxC,MAAKm3C,mBlFyxQCz0C,WAAY,KACZC,aAAc,MkFpxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,SlF0xQJ8B,IkF1xQP,WAEC,MAAOrC,MAAKyB,QlF2xQNc,IkFxxQP,SAAiBC,GAEhB,GAAIxC,KAAKyB,QAAUe,EAClB,MAEDxC,MAAKyB,OAASe,CACdxC,MAAKiE,cAAcvC,MAAQc,CAE3B,IAAIxC,KAAK6B,mBACR7B,KAAK6B,mBAAmBC,UAAYU,CAErCxC,MAAKyC,oBAAsB,IAC3BzC,MAAKiI,sBAAwB,IAE7BjI,MAAKo3C,uBlFqxQC10C,WAAY,KACZC,aAAc,MkFhxQrBR,QAAAC,eAAWpB,EAAAT,UAAA,UlFsxQJ8B,IkFtxQP,WAEC,MAAOrC,MAAK+B,SlFuxQNQ,IkFpxQP,SAAkBC,GAEjB,GAAIxC,KAAK+B,SAAWS,EACnB,MAEDxC,MAAK+B,QAAUS,CACfxC,MAAKiE,cAAcjC,OAASQ,CAE5B,IAAIxC,KAAK6B,mBACR7B,KAAK6B,mBAAmBK,WAAaM,CAEtCxC,MAAKyC,oBAAsB,IAC3BzC,MAAKiI,sBAAwB,IAE7BjI,MAAKo3C,uBlFixQC10C,WAAY,KACZC,aAAc,MkF3vQd3B,GAAAT,UAAA+F,aAAP,SAAoBX,EAA2BS,EAAqBH,GAGnE,IAAK,GAAI5G,GAAI+G,EAAKixC,OAAO/iC,eAAgBjV,EAAIW,KAAKg2C,gBAAiB32C,IAClEW,KAAKyD,UAAUmI,kBAAkBvM,EAAG,KAGrC,KAAK,GAAIA,GAAI+G,EAAKixC,OAAOC,gBAAiBj4C,EAAIW,KAAKi2C,iBAAkB52C,IACpEW,KAAKyD,UAAUsI,aAAa1M,EAAG,KlF2vQ1B,IkFxvQFk4C,GAA0BnxC,EAAKixC,OAAOE,WAE1C,KAAKA,EAAYC,QAAS,CACzBD,EAAYC,QAAUx3C,KAAKyD,UAAUg0C,eACrC,IAAIC,IAA4B,GAAI7B,IAAoB8B,SAAS,kBAAoBJ,EAAYK,aAAe,WAAY,UAAUxsB,IACtI,IAAIysB,IAA8B,GAAIhC,IAAoB8B,SAAS,oBAAsBJ,EAAYO,eAAiB,WAAY,YAAY1sB,IAC9ImsB,GAAYC,QAAQO,OAAOL,EAAgBG,GAI5C73C,KAAKyD,UAAUuI,WAAWurC,EAAYC,QAGtC7xC,GAAWqyC,WAAW5xC,EAAMH,GAGtBjF,GAAAT,UAAAgG,eAAP,SAAsBZ,EAA2BS,GAGhDT,EAAWsyC,aAAa7xC,EAExBpG,MAAKg2C,gBAAkB5vC,EAAKixC,OAAO/iC,cACnCtU,MAAKi2C,iBAAmB7vC,EAAKixC,OAAOC,gBAG9Bt2C,GAAAT,UAAA23C,wBAAP,WAEC,MAAO,IAAIvC,GAQZxzC,QAAAC,eAAWpB,EAAAT,UAAA,iBlFgvQJ8B,IkFhvQP,WAEC,MAAOrC,MAAKm2C,clFivQN5zC,IkF9uQP,SAAyBC,GAExB,GAAIxC,KAAKm2C,cAAgB3zC,EACxB,MAEDxC,MAAKm2C,aAAe3zC,CAEpBxC,MAAKyC,oBAAsB,MlF6uQrBC,WAAY,KACZC,aAAc,MkFtuQrBR,QAAAC,eAAWpB,EAAAT,UAAA,iBlF8uQJ8B,IkF9uQP,WAEC,MAAOrC,MAAKo2C,clF+uQN7zC,IkF5uQP,SAAyBC,GAExB,GAAIxC,KAAKo2C,cAAgB5zC,EACxB,MAEDxC,MAAKo2C,aAAe5zC,CAEpBxC,MAAKyC,oBAAsB,MlF2uQrBC,WAAY,KACZC,aAAc,MkFpuQrBR,QAAAC,eAAWpB,EAAAT,UAAA,iBlF4uQJ8B,IkF5uQP,WAEC,MAAOrC,MAAKq2C,clF6uQN9zC,IkF1uQP,SAAyBC,GAExB,GAAIxC,KAAKq2C,cAAgB7zC,EACxB,MAEDxC,MAAKq2C,aAAe7zC,CAEpBxC,MAAKyC,oBAAsB,MlFyuQrBC,WAAY,KACZC,aAAc,MkFvuQrBR,QAAAC,eAAWpB,EAAAT,UAAA,WlF0uQJ8B,IkF1uQP,WAEC,MAAOrC,MAAKyD,WlF2uQNf,WAAY,KACZC,aAAc,MkFtuQrBR,QAAAC,eAAWpB,EAAAT,UAAA,SlF4uQJ8B,IkF5uQP,WAEC,MAAOrC,MAAKgD,SlF6uQNT,IkF1uQP,SAAiBC,GAEhB,GAAIxC,KAAKgD,SAAWR,EACnB,MAEDxC,MAAKqI,UAAU7F,IlF0uQTE,WAAY,KACZC,aAAc,MkFxuQd3B,GAAAT,UAAA8H,UAAP,SAAiB7F,GAEhB,GAAIxC,KAAKgD,QACRhD,KAAK+C,SAEN,IAAIP,EAAO,CACVxC,KAAKgD,QAAUR,CAEfxC,MAAKi3C,cAAc11C,MAAQvB,KAAKgD,OAEhChD,MAAKgD,QAAQuH,iBAAiBmrC,EAAWyC,gBAAiBn4C,KAAK82C,yBAC/D92C,MAAKgD,QAAQuH,iBAAiBmrC,EAAW0C,kBAAmBp4C,KAAK82C,yBACjE92C,MAAKgD,QAAQuH,iBAAiBmrC,EAAW2C,iBAAkBr4C,KAAK42C,2BAMhE,IAAI52C,KAAKgD,QAAQmF,QAChBnI,KAAKyD,UAAyBzD,KAAKgD,QAAQmF,QAG7CnI,KAAKyC,oBAAsB,IAE3BzC,MAAKm3C,kBAONh1C,QAAAC,eAAWpB,EAAAT,UAAA,gBlFmuQJ8B,IkFnuQP,WAEC,MAAOrC,MAAKwD,elFouQNjB,IkFjuQP,SAAwBC,GAEvB,GAAIxC,KAAKwD,eAAiBhB,EACzB,MAEDxC,MAAKwD,cAAgBhB,CAErBxC,MAAKm3C,mBlFguQCz0C,WAAY,KACZC,aAAc,MkF3tQd3B,GAAAT,UAAAwC,QAAP,WAEC/C,KAAKi3C,cAAcl0C,SAEnB/C,MAAKgD,QAAQwJ,oBAAoBkpC,EAAWyC,gBAAiBn4C,KAAK82C,yBAClE92C,MAAKgD,QAAQwJ,oBAAoBkpC,EAAW0C,kBAAmBp4C,KAAK82C,yBACpE92C,MAAKgD,QAAQwJ,oBAAoBkpC,EAAW2C,iBAAkBr4C,KAAK42C,2BAEnE52C,MAAKgD,QAAU,IACfhD,MAAKyD,UAAY,KASXzC,GAAAT,UAAA6C,OAAP,SAAcC,GAEbrD,KAAKs4C,eAAiB,KACtBt4C,MAAKu4C,cAAgB,MAUfv3C,GAAAT,UAAAyD,SAAP,SAAgBX,EAA+BgB,EAA2BC,EAA8BC,GAAzD,GAAAF,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAGvG,IAAKvE,KAAKgD,UAAYhD,KAAKyD,UAC1B,MAEDzD,MAAK0G,0BAA0BD,SAASpD,EAAgB4C,OAAOuyC,eAC/Dx4C,MAAK0G,0BAA0B+xC,YAAYz4C,KAAK4D,cAAe5D,KAAK6D,cAAe,EAEnF7D,MAAKoE,eAAef,EAAiBgB,EAAQC,EAAaC,EAO1D,KAAK,GAAIlF,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCW,KAAKyD,UAAUmI,kBAAkBvM,EAAG,KACpCW,MAAKyD,UAAUsI,aAAa1M,EAAG,OAI1B2B,GAAAT,UAAAm4C,iBAAP,SAAwBr1C,EAAuCgB,EAAoBs0C,EAAoBC,EAA+BC,GAErI74C,KAAK84C,oBAAoBz1C,EAEzBrD,MAAKgD,QAAQ+1C,gBAAgB10C,EAAQ,KAAM,EAC3CrE,MAAKyD,UAAUC,MAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAEpC1D,MAAKyD,UAAU0I,gBAAgBrC,EAAqBsC,IAAKtC,EAAqBuC,KAC9ErM,MAAKyD,UAAU8B,aAAa,KAAM5E,EAAqBq4C,KAEvD,IAAIC,GAAsBj5C,KAAKk5C,sBAE/B,IAAIC,GAAgB,IAGpB,KAAK,GAAI95C,GAAWs5C,EAAc,EAAGt5C,GAAK,IAAKA,EAAG,CACjDW,KAAKgD,QAAQsB,YAAcs0C,EAAav5C,EAExC85C,GAAQ,MAITn5C,KAAKyD,UAAU8B,aAAa,MAAO5E,EAAqBy4C,WAExDp5C,MAAKgD,QAAQsB,YAAc,KAGrBtD,GAAAT,UAAAu4C,oBAAP,SAA2Bz1C,GAG1BrD,KAAKq5C,wBAA0B,IAC/Br5C,MAAKk5C,uBAAyB,IAC9Bl5C,MAAKy2C,eAAiB,ClF0sQhB,IkFvsQF6C,GAAsBj2C,EAAgBk2C,UAG1Cv5C,MAAKw5C,SAAWn2C,EAAgB4C,MAChCjG,MAAKy5C,aAAez5C,KAAKw5C,SAAS3yC,aAClC7G,MAAK05C,gBAAkB15C,KAAKw5C,SAAShQ,UAAUmQ,aAG/C,OAAOL,EAAM,CACZA,EAAKM,OAAOC,qBAAqB75C,KAAKi3C,cACtCqC,GAAOA,EAAKQ,KAIb95C,KAAKk5C,uBAA0Cl5C,KAAKg3C,iBAAiB+C,sBAAsB/5C,KAAKk5C,uBAChGl5C,MAAKq5C,wBAA2Cr5C,KAAKg3C,iBAAiBgD,uBAAuBh6C,KAAKq5C,yBAW5Fr4C,GAAAT,UAAA6D,eAAP,SAAsBf,EAA+BgB,EAA2BC,EAA8BC,GAAzD,GAAAF,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,EAE7GvE,KAAKgD,QAAQ+1C,gBAAgB10C,EAAQ,KAAME,EAE3C,KAAKF,IAAWrE,KAAKwD,iBAAmBxD,KAAK4C,cAC5C5C,KAAKyD,UAAUC,MAAM1D,KAAKm2C,aAAcn2C,KAAKo2C,aAAcp2C,KAAKq2C,aAAcr2C,KAAKs2C,iBAAkB,EAAG,EAEzGt2C,MAAKgD,QAAQsB,YAAcA,CAM3BtE,MAAK84C,oBAAoBz1C,EAEzBrD,MAAKyD,UAAU0I,gBAAgBrC,EAAqBsC,IAAKtC,EAAqBuC,KAE9ErM,MAAKqF,MAAMhC,EAKX,KAAKrD,KAAKwD,cAAe,CACxB,GAAIxD,KAAKi6C,mBAAqBj6C,KAAKk6C,oBAAqB,CACvDl6C,KAAKyD,UAAU02C,iBAAiBn6C,KAAKk6C,oBACrCl6C,MAAKi6C,kBAAoB,OAI3Bj6C,KAAKgD,QAAQsB,YAAc,KAMrBtD,GAAAT,UAAA65C,cAAP,SAAqBC,GAEpBr6C,KAAKi6C,kBAAoB,IACzBj6C,MAAKk6C,oBAAsBG,EAOrBr5C,GAAAT,UAAA8E,MAAP,SAAahC,GAEZrD,KAAKyD,UAAU8B,aAAa,KAAM5E,EAAqBy4C,WAEvD,IAAIp5C,KAAK02C,cACR12C,KAAKyD,UAAU62C,aAAa,MAAO,MAAO,MAAO,MAElDt6C,MAAKu6C,gBAAgBv6C,KAAKk5C,uBAAwB71C,EAElD,IAAIrD,KAAK22C,eACR32C,KAAKu6C,gBAAgBv6C,KAAKq5C,wBAAyBh2C,EAEpD,IAAIrD,KAAK02C,cACR12C,KAAKyD,UAAU62C,aAAa,KAAM,KAAM,KAAM,MAyCzCt5C,GAAAT,UAAAg6C,gBAAP,SAAuB50C,EAA2BtC,GAEjD,GAAIhE,EACJ,IAAIuF,EACJ,IAAI41C,EACJ,IAAIr0C,EACJ,IAAIE,EACJ,IAAID,EACJ,IAAIH,GAAgB5C,EAAgB4C,MAGpC,OAAON,EAAY,CAClBQ,EAAeR,EAAWQ,YAC1BE,GAASF,EAAaE,MAGtB,IAAIrG,KAAK02C,eAAiBvwC,EAAas0C,mBAAmBC,gBAAkB,EAAG,CAC9EF,EAAc70C,CAEd,GAAG,CACF60C,EAAcA,EAAYV,WAElBU,GAAeA,EAAYr0C,cAAgBA,OAC9C,CAENvB,EAAMyB,EAAOzG,MACb,KAAKP,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CACzBm7C,EAAc70C,CACdS,GAAOC,EAAOhH,EAEdW,MAAKsG,aAAaX,EAAYS,EAAMH,EAEpC,GAAG,CACFu0C,EAAYx2C,SAASoC,EAAMH,EAAQjG,KAAK0G,0BAExC8zC,GAAcA,EAAYV,WAElBU,GAAeA,EAAYr0C,cAAgBA,EAEpDnG,MAAKuG,eAAeZ,EAAYS,IAIlCT,EAAa60C,GAOPx5C,GAAAT,UAAAw2C,gBAAR,SAAwB5sC,GAEvBnK,KAAKyD,UAAyBzD,KAAKgD,QAAQmF,QAG5ChG,QAAAC,eAAWpB,EAAAT,UAAA,qBlFqqQJ8B,IkFrqQP,WAEC,MAAOrC,MAAKs2C,kBlFsqQN/zC,IkFnqQP,SAA6BC,GAE5B,GAAIxC,KAAKs2C,kBAAoB9zC,EAC5B,MAEDxC,MAAKs2C,iBAAmB9zC,CAExBxC,MAAKyC,oBAAsB,MlFkqQrBC,WAAY,KACZC,aAAc,MkFxnQb3B,GAAAT,UAAA62C,oBAAR,WAEC,GAAIp3C,KAAKu4C,cACR,MAEDv4C,MAAKu4C,cAAgB,IAErB,KAAKv4C,KAAK26C,gBACT36C,KAAK26C,gBAAkB,GAAIlF,GAAcA,EAAcmF,gBAExD56C,MAAK8Q,cAAc9Q,KAAK26C,iBAOjB35C,GAAAT,UAAAs6C,qBAAR,WAEC,GAAI76C,KAAKs4C,eACR,MAEDt4C,MAAKs4C,eAAiB,IAEtB,KAAKt4C,KAAK86C,iBACT96C,KAAK86C,iBAAmB,GAAIrF,GAAcA,EAAc4C,iBAEzDr4C,MAAK8Q,cAAc9Q,KAAK86C,kBAMlB95C,GAAAT,UAAAs2C,kBAAP,SAAyB1sC,GAExBnK,KAAKk2C,UAAYl2C,KAAKgD,QAAQ+3C,QAG9B,IAAI/6C,KAAKwD,cAAe,CACvBxD,KAAKiE,cAAc8C,EAAI/G,KAAKw2C,WAAWzvC,EAAI/G,KAAKgD,QAAQ+D,CACxD/G,MAAKiE,cAAcgD,EAAIjH,KAAKw2C,WAAWvvC,EAAIjH,KAAKgD,QAAQiE,CACxDjH,MAAKo3C,sBAGNp3C,KAAK66C,uBAMC75C,GAAAT,UAAA42C,gBAAP,WAEC,GAAIn3C,KAAKwD,cAAe,CACvBxD,KAAKiE,cAAc8C,EAAI/G,KAAKw2C,WAAWzvC,EAAI/G,KAAKk2C,UAAUnvC,CAC1D/G,MAAKiE,cAAcgD,EAAIjH,KAAKw2C,WAAWvvC,EAAIjH,KAAKk2C,UAAUjvC,MACpD,CACNjH,KAAKiE,cAAc8C,EAAI,CACvB/G,MAAKiE,cAAcgD,EAAI,CACvBjH,MAAKk2C,UAAUnvC,EAAI/G,KAAKw2C,WAAWzvC,CACnC/G,MAAKk2C,UAAUjvC,EAAIjH,KAAKw2C,WAAWvvC,EAGpCjH,KAAKo3C,sBAQCp2C,GAAAT,UAAAy6C,gBAAP,SAAuBr1C,GlFgpQhB,GkF7oQFQ,GAAgCnG,KAAK0F,kBAAkBC,EAAYA,EAAWC,mBAAqBgwC,EAAuBqF,mBAAmBt1C,EAAWu1C,iBAE5Jv1C,GAAWQ,aAAeA,CAC1BR,GAAWw1C,eAAiBh1C,EAAag1C,cACzCx1C,GAAWy1C,cAAgBj1C,EAAai1C,aAExCz1C,GAAW01C,SAAW,KAEtB,IAAIzB,GAAiBj0C,EAAWqhC,YAChC,IAAIvN,GAAoBmgB,EAAO/yC,aAG/B4yB,GAAWz5B,KAAKy5C,aAAavX,SAASzI,EACtC9zB,GAAW21C,OAAS1B,EAAO2B,QAAU9hB,EAAS+hB,WAAWx7C,KAAK05C,gBAG9D/zC,GAAW81C,qBAAuB91C,EAAWqhC,aAAa0U,wBAAwB17C,KAAKw5C,SAEvF,IAAIrzC,EAAaw1C,iBAAkB,CAClCh2C,EAAWm0C,KAAO95C,KAAKq5C,uBACvBr5C,MAAKq5C,wBAA0B1zC,MACzB,CACNA,EAAWm0C,KAAO95C,KAAKk5C,sBACvBl5C,MAAKk5C,uBAAyBvzC,EAG/B3F,KAAKy2C,gBAAkB9wC,EAAWi2C,YAGlC,IAAIj2C,EAAWk2C,SACd77C,KAAKg7C,gBAAgBr1C,EAAWk2C,UAG3B76C,GAAAT,UAAAmF,kBAAP,SAAyBC,EAA2BC,GAEnD,KAAM,IAAIkH,GAEZ,OAAA9L,IApzB2Bu0C,EAszB3Bz1C,GAAsBJ,QAAbsB,IlFuoQNyN,6CAA6C7F,UAAUkzC,yCAAyClzC,UAAUD,gCAAgCC,UAAUmzC,6BAA6BnzC,UAAUozC,iCAAiCpzC,UAAUqzC,0CAA0CrzC,UAAUszC,qDAAqDtzC,UAAUuzC,8CAA8CvzC,UAAUwzC,8CAA8CxzC,UAAUyzC,8CAA8C,8CAA8CC,uDAAuD1zC,UAAU8D,+CAA+C9D,UAAUW,+CAA+CX,UAAU2zC,uCAAuC3zC,UAAU4zC,2CAA2C5zC,YAAY6zC,uDAAuD,SAAS79C,EAAQkB,EAAOJ,GACl5B,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmFp/RtB,IAAOq8C,GAAgB99C,EAAc,qDAGrC,IAAO+9C,GAAS/9C,EAAe,yCnFy/R/B,ImFn/RMg+C,GAAiB,SAAAv7C,GAAStB,EAA1B68C,EAAiBv7C,EAOtB,SAPKu7C,GAOOC,EAAuBj3C,EAAsCk3C,EAAkCv7C,GAE1GF,EAAA1B,KAAAK,KAAM68C,EAAMj3C,EAAmBk3C,EAAiBv7C,EAEhDvB,MAAK+8C,gBAAgB,GAAIJ,GAAU38C,KAAM4F,EAAmBk3C,EAAiB98C,KAAKqK,SANrEuyC,EAAA5sC,GAAY,OAQ3B,OAAA4sC,IAbgCF,EAeL58C,GAAAJ,QAAlBk9C,InFm/RNI,qDAAqD,qDAAqDC,yCAAyC,2CAA2CC,0DAA0D,SAASt+C,EAAQkB,EAAOJ,GACnR,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoF/gStB,IAAOq8C,GAAgB99C,EAAc,qDAErC,IAAOu+C,GAAYv+C,EAAe,4CpFqhSlC,IoF/gSMw+C,GAAoB,SAAA/7C,GAAStB,EAA7Bq9C,EAAoB/7C,EAYzB,SAZK+7C,GAYOP,EAAuBj3C,EAAsCk3C,EAAkCv7C,GAE1GF,EAAA1B,KAAAK,KAAM68C,EAAMj3C,EAAmBk3C,EAAiBv7C,EAEhDvB,MAAK+8C,gBAAgB,GAAII,GAAan9C,KAAM4F,EAAmBk3C,EAAiB98C,KAAKqK,SAXxE+yC,EAAAptC,GAAY,UAa3B,OAAAotC,IAlBmCV,EAoBnC58C,GAA8BJ,QAArB09C,IpF+gSNJ,qDAAqD,qDAAqDK,4CAA4C,8CAA8CC,wDAAwD,SAAS1+C,EAAQkB,EAAOJ,SAIjR69C,kDAAkD,SAAS3+C,EAAQkB,EAAOJ,GqFpjShF,GAAOqpB,GAAqBnqB,EAAY,0DrF8jSxC,IqFpjSM4+C,GAAY,WAqBjB,QArBKA,GAqBOl0B,EAAgBm0B,EAAiBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,KAE5C19C,KAAK29C,SAAWr0B,CAChBtpB,MAAK49C,UAAYH,CACjBz9C,MAAK69C,YAAcH,CACnB19C,MAAK89C,cAAcx0B,EAASm0B,GAMtBD,EAAAj9C,UAAAw9C,qBAAP,WAEC,IAAK,GAAI1+C,GAAW,EAAGA,EAAIW,KAAK49C,YAAav+C,EAAG,CAC/C,IAAKW,KAAKg+C,eAAe3+C,GAAI,CAC5B,GAAIW,KAAK69C,YACR79C,KAAKi+C,iBAAiB5+C,IAEvB,OAAOW,MAAKk+C,iBAAiB7+C,IAI/B,KAAM,IAAIE,OAAM,sBAMVi+C,GAAAj9C,UAAA49C,wBAAP,WAEC,IAAK,GAAI9+C,GAAW,EAAGA,EAAIW,KAAK49C,YAAav+C,EAAG,CAC/C,GAAIW,KAAKi+C,iBAAiB5+C,GAAK,EAC9B,QAED,KAAK,GAAI6X,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIlX,KAAKo+C,iBAAiBlnC,GAAG7X,IAAM,EAAG,CACrC,GAAIW,KAAK69C,YACR79C,KAAKo+C,iBAAiBlnC,GAAG7X,IAE1B,OAAOW,MAAKq+C,oBAAoBnnC,GAAG7X,KAKtC,KAAM,IAAIE,OAAM,sBASVi+C,GAAAj9C,UAAA+9C,SAAP,SAAgBC,EAAgCC,GAE/C,GAAID,EAASE,YAAc,EAC1Bz+C,KAAKo+C,iBAAiBG,EAASE,YAAYF,EAAS/nC,QAAUgoC,MAE9Dx+C,MAAKi+C,iBAAiBM,EAAS/nC,QAAUgoC,EAOpChB,GAAAj9C,UAAAm+C,YAAP,SAAmBH,GAElB,GAAIA,EAASE,YAAc,EAAG,CAC7B,KAAMz+C,KAAKo+C,iBAAiBG,EAASE,YAAYF,EAAS/nC,OAAS,EAClE,KAAM,IAAIjX,OAAM,uCACX,CACN,KAAMS,KAAKi+C,iBAAiBM,EAAS/nC,OAAS,EAC7C,KAAM,IAAIjX,OAAM,oCAOZi+C,GAAAj9C,UAAAwC,QAAP,WAEC/C,KAAKk+C,iBAAmB,IACxBl+C,MAAKq+C,oBAAsB,IAC3Br+C,MAAKo+C,iBAAmB,IACxBp+C,MAAKi+C,iBAAmB,KAMlBT,GAAAj9C,UAAAo+C,kBAAP,WAEC,IAAK,GAAIt/C,GAAW,EAAGA,EAAIW,KAAK49C,YAAav+C,EAC5C,GAAIW,KAAKg+C,eAAe3+C,GACvB,MAAO,KAET,OAAO,OAMAm+C,GAAAj9C,UAAAu9C,cAAR,SAAsBx0B,EAAgBm0B,GAErC,GAAImB,GAAcpB,EAAaqB,UAAUv1B,EAASm0B,EAElDz9C,MAAKk+C,iBAAmBV,EAAasB,SAASF,EAC9C5+C,MAAKq+C,oBAAsBb,EAAauB,cAAcH,EAEtD5+C,MAAKi+C,iBAAmBj+C,KAAKg/C,WAAW/zC,MAAcwyC,GAAW,EAEjEz9C,MAAKo+C,iBAAmB,GAAInzC,OAAqB,EACjDjL,MAAKo+C,iBAAiB,GAAKp+C,KAAKg/C,WAAW,GAAI/zC,OAAcwyC,GAAW,EACxEz9C,MAAKo+C,iBAAiB,GAAKp+C,KAAKg/C,WAAW,GAAI/zC,OAAcwyC,GAAW,EACxEz9C,MAAKo+C,iBAAiB,GAAKp+C,KAAKg/C,WAAW,GAAI/zC,OAAcwyC,GAAW,EACxEz9C,MAAKo+C,iBAAiB,GAAKp+C,KAAKg/C,WAAW,GAAI/zC,OAAcwyC,GAAW,GAG1DD,GAAAqB,UAAf,SAAyBv1B,EAAgBm0B,GAExC,GAAImB,GAAct1B,EAAUm0B,CAE5B,IAAID,EAAasB,SAASF,IAASh2C,UAClC,MAAOg2C,EAER,IAAIK,GAA+C,GAAIh0C,OAA6BwyC,EACpFD,GAAasB,SAASF,GAAQK,CAE9B,IAAIC,gBAMJ1B,GAAauB,cAAcH,GAAQM,CAEnC,KAAK,GAAI7/C,GAAW,EAAGA,EAAIo+C,IAAYp+C,EAAG,CAEzC4/C,EAAgB5/C,GAAK,GAAI0pB,GAAsBO,EAASjqB,EAExD,KAAK,GAAI6X,GAAW,EAAGA,EAAI,IAAKA,EAC/BgoC,EAAmBhoC,GAAG7X,GAAK,GAAI0pB,GAAsBO,EAASjqB,EAAG6X,GAGnE,MAAO0nC,GAOApB,GAAAj9C,UAAAy9C,eAAR,SAAuBxnC,GAEtB,GAAIxW,KAAKi+C,iBAAiBznC,GAAS,EAClC,MAAO,KAER,KAAK,GAAInX,GAAW,EAAGA,EAAI,IAAKA,EAC/B,GAAIW,KAAKo+C,iBAAiB/+C,GAAGmX,GAAS,EACrC,MAAO,KAET,OAAO,OAIAgnC,GAAAj9C,UAAAy+C,WAAR,SAAmB5/C,EAAc+/C,GAEhC,GAAI1/C,GAAWL,EAAEQ,MAEjB,KAAK,GAAIw/C,GAAW,EAAGA,EAAI3/C,EAAG2/C,IAC7BhgD,EAAEggD,GAAKD,CAER,OAAO//C,GA9LOo+C,GAAAsB,SAAkB,GAAI38C,OACtBq7C,GAAAuB,cAAuB,GAAI58C,OA+L3C,OAAAq7C,KAEA19C,GAAsBJ,QAAb89C,IrFkgSN9xB,0DAA0D,4DAA4D2zB,+DAA+D,SAASzgD,EAAQkB,EAAOJ,GAChN,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsFrtStB,IAAOi/C,GAAS1gD,EAAe,iCAM/B,IAAO89C,GAAgB99C,EAAc,qDAGrC,IAAO2gD,GAAiB3gD,EAAa,iDtFqtSrC,IsF/sSM4gD,GAAyB,SAAAn+C,GAAStB,EAAlCy/C,EAAyBn+C,EAW9B,SAXKm+C,GAWO3C,EAAuB4C,EAAwB3C,EAAkCv7C,GAE5FF,EAAA1B,KAAAK,KAAM68C,EAAM4C,EAAU3C,EAAiBv7C,EAEvCvB,MAAK0/C,UAAYD,CAEjBz/C,MAAK+8C,gBAAgB/8C,KAAK2/C,YAAc,GAAIJ,GAAkBv/C,KAAMy/C,EAAU3C,EAAiB98C,KAAKqK,SAM9Fm1C,EAAAj/C,UAAAq/C,qBAAP,WAECv+C,EAAAd,UAAMq/C,qBAAoBjgD,KAAAK,KAE1BA,MAAK6/C,mBAAsB7/C,KAAK0/C,UAAUj5B,WAAa64B,EAAUQ,QAAU9/C,KAAK0/C,UAAUK,eAAkB//C,KAAK0/C,UAAUM,gBAAkBhgD,KAAK0/C,UAAUM,eAAe9qB,gBAAkB,CAC7Ll1B,MAAK2/C,YAAYM,cAAgBjgD,KAAK0/C,UAAUO,aAChDjgD,MAAK2/C,YAAYO,aAAclgD,KAAKy6C,mBAAmBh0B,WAAa64B,EAAUQ,QAAU9/C,KAAK6/C,mBAAqBP,EAAUa,MAAQngD,KAAK0/C,UAAUj5B,WAxBtI+4B,GAAAxvC,GAAY,OA2B3B,OAAAwvC,IAhCwC9C,EAkCxC58C,GAAmCJ,QAA1B8/C,ItFusSNY,iCAAiCx3C,UAAUo0C,qDAAqD,qDAAqDqD,iDAAiD,mDAAmDrD,sDAAsD,SAASp+C,EAAQkB,EAAOJ,GuFvvS1U,GAAOmK,GAAKjL,EAAgB,+BAM5B,IAAO0hD,GAAY1hD,EAAe,4CvFwvSlC,IuFvuSM89C,GAAgB,WA8CrB,QA9CKA,GA8COG,EAAuBj3C,EAAsCk3C,EAAkCv7C,GA9C5G,GAAAyI,GAAAhK,IAEQA,MAAAugD,kBAA4B,KAQ3BvgD,MAAAwgD,kBAA4B,IAC5BxgD,MAAAygD,qBAA+B,IAC/BzgD,MAAA0gD,QAAgC,GAAIz1C,MAIrCjL,MAAA6/C,mBAA6B,KAgCnC7/C,MAAK8F,MAAQ+2C,CACb78C,MAAKm7C,eAAiBv1C,EAAkBoK,EACxChQ,MAAKy6C,mBAAqB70C,CAC1B5F,MAAK2gD,iBAAmB7D,CACxB98C,MAAKqK,OAAS9I,CAGdvB,MAAK4gD,sBAAwB,SAACz2C,GAAgB,MAAAH,GAAK62C,aAAa12C,IA9BjEhI,OAAAC,eAAWs6C,EAAAn8C,UAAA,oBvFiuSJ8B,IuFjuSP,WAEC,MAAOrC,MAAK6/C,oBvFkuSNn9C,WAAY,KACZC,aAAc,MuFhuSrBR,QAAAC,eAAWs6C,EAAAn8C,UAAA,iBvFmuSJ8B,IuFnuSP,WAEC,GAAIrC,KAAKwgD,kBACRxgD,KAAK8gD,kBAEN,OAAO9gD,MAAK+gD,gBvFmuSNr+C,WAAY,KACZC,aAAc,MuFjuSrBR,QAAAC,eAAWs6C,EAAAn8C,UAAA,UvFouSJ8B,IuFpuSP,WAEC,GAAIrC,KAAKwgD,kBACRxgD,KAAK8gD,kBAEN,OAAO9gD,MAAK0gD,SvFouSNh+C,WAAY,KACZC,aAAc,MuFttSd+5C,GAAAn8C,UAAAygD,sBAAP,SAA6BnzC,GAE5B7N,KAAK2gD,iBAAiBK,sBAAsBnzC,EAE5CA,GAAa6sC,eAAiB16C,KAAKy6C,mBAAmBC,cACtD7sC,GAAaozC,cAAgBjhD,KAAKy6C,mBAAmByG,MACrDrzC,GAAaszC,kBAAoBnhD,KAAKy6C,mBAAmB3kB,MAEzD,IAAI91B,KAAKy6C,mBAAmB2G,QAAQd,GAAe,CAClD,GAAIb,GAAuCz/C,KAAKy6C,kBAChD5sC,GAAawzC,sBAAwB5B,EAAS6B,kBAC9CzzC,GAAa0zC,aAAe9B,EAAS+B,SACrC3zC,GAAa4zC,eAAiBhC,EAASiC,MACvC7zC,GAAawH,gBAAkBoqC,EAASkC,UACxC9zC,GAAa+zC,QAAUnC,EAASmC,OAChC/zC,GAAasf,MAAQsyB,EAAStyB,OAOzBuvB,GAAAn8C,UAAAwC,QAAP,WAEC/C,KAAK6hD,qBAEL,IAAIj9C,GAAa5E,KAAK0gD,QAAQ9gD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,EAAKvF,IAC/BW,KAAK0gD,QAAQrhD,GAAG0D,SAEjB/C,MAAK0gD,QAAU,IAEf1gD,MAAK8F,MAAMg8C,YAAY9hD,KAAKy6C,oBAMtBiC,GAAAn8C,UAAAwhD,uBAAP,WAEC/hD,KAAKygD,qBAAuB,IAC5BzgD,MAAKwgD,kBAAoB,KAMnB9D,GAAAn8C,UAAAyhD,iBAAP,WAEC,GAAIp9C,GAAa5E,KAAK0gD,QAAQ9gD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,EAAKvF,IAC/BW,KAAK0gD,QAAQrhD,GAAG4iD,gBAEjBjiD,MAAKwgD,kBAAoB,KAMnB9D,GAAAn8C,UAAA2hD,oBAAP,WAECliD,KAAKwgD,kBAAoB,KAOlB9D,GAAAn8C,UAAAugD,iBAAR,WAEC,GAAI9gD,KAAKygD,qBACRzgD,KAAK4/C,sBAEN5/C,MAAKwgD,kBAAoB,KAEzB,IAAI2B,GAA8BniD,KAAKoiD,yBAEvC,IAAIhH,GAAgB,CACpB,IAAIiH,GAAc,CAClB,IAAIx0C,EACJ,IAAIjJ,GAAa5E,KAAK0gD,QAAQ9gD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,EAAKvF,IAAK,CACpCwO,EAAe7N,KAAK0gD,QAAQrhD,GAAGg4C,MAE/B,IAAIxpC,EAAay0C,eAAiBH,EAAqB,CACtDt0C,EAAay0C,cAAgBH,CAC7Bt0C,GAAa00C,oBAGdnH,GAAiBvtC,EAAa0pC,YAAYvnC,GAAGqyC,CAC7CA,IAAQ,IAGTriD,KAAK+gD,eAAiB3F,EAQhBsB,GAAAn8C,UAAAq/C,qBAAP,WAEC5/C,KAAKygD,qBAAuB,MAStB/D,GAAAn8C,UAAAiiD,mBAAP,SAA0Bp8C,GAEzBA,EAAKoG,oBAAoB3C,EAAM44C,OAAQziD,KAAK4gD,sBAC5C5gD,MAAK0gD,QAAQhvC,OAAO1R,KAAK0gD,QAAQlzC,QAAQpH,GAAO,GAM1Cs2C,GAAAn8C,UAAAshD,oBAAP,WAEC,GAAIj9C,GAAa5E,KAAK0gD,QAAQ9gD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,IAAOvF,EACjCW,KAAK0gD,QAAQrhD,GAAGmN,oBAAoB3C,EAAM44C,OAAQziD,KAAK4gD,sBAExD5gD,MAAK0gD,QAAQ9gD,OAAS,EAOhB88C,GAAAn8C,UAAAw8C,gBAAP,SAAuB32C,GAEtBpG,KAAK0gD,QAAQlyC,KAAKpI,EAClBA,GAAKmE,iBAAiBV,EAAM44C,OAAQziD,KAAK4gD,uBAMlClE,GAAAn8C,UAAAsgD,aAAR,SAAqB12C,GAEpBnK,KAAKkiD,sBAUExF,GAAAn8C,UAAA6hD,wBAAR,WAEC,GAAIpiD,KAAKy6C,mBAAmBxrC,aAAc,CACzCjP,KAAKy6C,mBAAmBxrC,aAAavB,uBAErC,IAAIg1C,GAAiC1iD,KAAKy6C,mBAAmBkI,OAC7D,IAAIC,GAAmBF,EAAO9iD,MAE9B,IAAIgF,GAAa5E,KAAK0gD,QAAQ9gD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,EAAKvF,IAC/B,IAAK,GAAI6X,GAAW,EAAGA,EAAI0rC,EAAW1rC,IACrC,GAAIwrC,EAAOxrC,GAAGuZ,SACGiyB,EAAOxrC,GAAGuZ,SAAUte,qBAAqBnS,KAAK0gD,QAAQrhD,GAAGg4C,OAE5E,QAAQr3C,KAAKy6C,mBAAmBxrC,aAAamP,QAG9C,MAAO;CAET,OAAAs+B,KAEA58C,GAA0BJ,QAAjBg9C,IvFirSNjwC,+BAA+B7D,UAAUi6C,4CAA4Cj6C,YAAYk6C,sDAAsD,SAASlkD,EAAQkB,EAAOJ,GAIlL,GwF36SMqjD,GAAgB,WAYrB,QAZKA,GAYOC,EAAsClG,EAAkCv7C,GAV5EvB,KAAAijD,kBAA2B,GAAI9gD,OAYtCnC,MAAKkjD,mBAAqBF,CAC1BhjD,MAAK2gD,iBAAmB7D,CACxB98C,MAAKqK,OAAS9I,EASRwhD,EAAAxiD,UAAAyF,QAAP,SAAeJ,GAEd,MAAQ5F,MAAKijD,kBAAkBr9C,EAAkBoK,MAAQhQ,KAAKijD,kBAAkBr9C,EAAkBoK,IAAMpK,EAAkBu9C,kBAAkB,GAAInjD,MAAKkjD,mBAAmBljD,KAAM4F,EAAmB5F,KAAK2gD,iBAAkB3gD,KAAKqK,UAQvN04C,GAAAxiD,UAAAuhD,YAAP,SAAmBl8C,GAElBA,EAAkBw9C,qBAAqBpjD,KAAKijD,kBAAkBr9C,EAAkBoK,IAEhFhQ,MAAKijD,kBAAkBr9C,EAAkBoK,IAAM,KAEjD,OAAA+yC,KAE0BjjD,GAAAJ,QAAjBqjD,OxFm6SHM,wDAAwD,SAASzkD,EAAQkB,EAAOJ,GyFv9StF,GAAOopB,GAAmBlqB,EAAa,wDACvC,IAAO0kD,GAAkB1kD,EAAa,uDzF+9StC,IyFp9SM2kD,GAAkB,WA4BvB,QA5BKA,GA4BOzG,EAAkC0G,EAA4B31C,GApBnE7N,KAAAyjD,aAAsB,EACtBzjD,MAAA0jD,eAAwB,EACxB1jD,MAAA2jD,4BAAqC,EAoB3C3jD,MAAK4jD,kBAAoB9G,CACzB98C,MAAK6jD,aAAeL,CACpBxjD,MAAK8jD,eAAiBj2C,CAEtB7N,MAAK+jD,kBAAoB,GAAIT,EAE7BtjD,MAAKgkD,gBAAkB,GAAIl7B,GAAoBjb,EAAasG,QAC5DnU,MAAKgkD,gBAAgB3vC,uBAAyByoC,EAAgBzoC,sBAC9DrU,MAAKgkD,gBAAgB3yC,QAMfkyC,EAAAhjD,UAAA0jD,QAAP,WAECjkD,KAAK8jD,eAAezyC,OAEpBrR,MAAKkkD,sBAELlkD,MAAKmkD,sBAELnkD,MAAKokD,sBAGLpkD,MAAKyjD,cAAgBzjD,KAAK6jD,aAAaQ,gBAAgBrkD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBACvG/jD,MAAK2jD,6BAA+B3jD,KAAK6jD,aAAaS,kBAAkBtkD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAGxH/jD,MAAK2jD,6BAA+B,OAAS3jD,KAAKgkD,gBAAgBO,uBAAyB,KAAOvkD,KAAK+jD,kBAAkBh2C,aAAe,IACxI/N,MAAKgkD,gBAAgBQ,wBAAwBxkD,KAAK+jD,kBAAkBh2C,aAGpE/N,MAAK8jD,eAAeW,iBAAiBzkD,KAAKgkD,gBAAiBhkD,KAAK0kD,uBAAwB1kD,KAAK2kD,2BAA4B3kD,KAAK4kD,UAAW5kD,KAAK6kD,UAC9I7kD,MAAK6jD,aAAaiB,mBAAmB9kD,KAAK8jD,gBAGpCP,GAAAhjD,UAAA2jD,qBAAP,WAEClkD,KAAK8jD,eAAe9C,uBAEpBhhD,MAAK8jD,eAAe38B,eAAiBnnB,KAAK6jD,aAAakB,iBAAiB/kD,KAAK8jD,eAC7E9jD,MAAK8jD,eAAekB,sBAAwBhlD,KAAK8jD,eAAe38B,gBAAkBnnB,KAAK6jD,aAAaoB,wBAAwBjlD,KAAK8jD,eACjI9jD,MAAK8jD,eAAeoB,iBAAmBllD,KAAK8jD,eAAekB,uBAAyBhlD,KAAK6jD,aAAasB,mBAAmBnlD,KAAK8jD,eAE9H,KAAK9jD,KAAK8jD,eAAeoB,kBAAoBllD,KAAK8jD,eAAesB,oBAAsB,EACtFplD,KAAK8jD,eAAeuB,wBAMf9B,GAAAhjD,UAAA6jD,qBAAP,WAECpkD,KAAK+jD,kBAAkBh2C,aAAe/N,KAAKgkD,gBAAgBsB,2BAC3DtlD,MAAKgkD,gBAAgBp5B,sBAAsB5qB,KAAK+jD,kBAAkBh2C,aAAc,EAGhF,IAAI/N,KAAK8jD,eAAeuB,sBAAwB,EAC/CrlD,KAAKulD,2BAGA,IAAIvlD,KAAK8jD,eAAe0B,qBAAuB,EAC3CxlD,KAAKylD,0BAGf,IAAIzlD,KAAK8jD,eAAe4B,eAAiB,EACxC1lD,KAAK2lD,eAEN,IAAI3lD,KAAK8jD,eAAe8B,wBAA0B,EACjD5lD,KAAK6lD,wBAEN,IAAI7lD,KAAK8jD,eAAe18B,mBAAqB,EAC5CpnB,KAAK8lD,mBAEN,IAAI9lD,KAAK8jD,eAAesB,oBAAsB,EAC7CplD,KAAK+lD,oBAGN/lD,MAAKyjD,cAAgBzjD,KAAK4jD,kBAAkBS,gBAAgBrkD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAC5G/jD,MAAK0jD,gBAAkB1jD,KAAK4jD,kBAAkBU,kBAAkBtkD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAGhH/jD,MAAKyjD,cAAgBzjD,KAAK6jD,aAAamC,2BAA2BhmD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAClH/jD,MAAK0jD,gBAAkB1jD,KAAK6jD,aAAaoC,6BAA6BjmD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,mBAG/GR,GAAAhjD,UAAAglD,0BAAR,WAECvlD,KAAKgkD,gBAAgB36B,oBAAoBrpB,KAAK+jD,kBAAkBmC,qBAAuBlmD,KAAKgkD,gBAAgBr6B,0BAA2B3pB,KAAK8jD,eAAeuB,sBAE3J,IAAIc,GAAuCnmD,KAAKgkD,gBAAgBz6B,uBAChEvpB,MAAKgkD,gBAAgBz6B,uBACrBvpB,MAAKgkD,gBAAgBz6B,uBACrBvpB,MAAKgkD,gBAAgBz6B,uBAErBvpB,MAAK8jD,eAAesC,iBAAmBD,EAAe3vC,MAAM,CAE5DxW,MAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkBmC,qBAAuB,KAAOlmD,KAAK+jD,kBAAkBsC,cAAgB,KAAOF,EAAiB,IAElJ,IAAInmD,KAAK8jD,eAAewC,sBAAuB,CAC9CtmD,KAAK+jD,kBAAkBwC,sBAAwBvmD,KAAKgkD,gBAAgBx5B,gBACpExqB,MAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkBwC,sBAAwB,KAAOvmD,KAAK+jD,kBAAkBmC,qBAAuB,MAGzH3C,GAAAhjD,UAAAklD,yBAAR,WAEIzlD,KAAK+jD,kBAAkByC,qBAAuBxmD,KAAKgkD,gBAAgBx5B,gBACnExqB,MAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkByC,qBAAuB,KAAOxmD,KAAK+jD,kBAAkBsC,cAAgB,KAKzH9C,GAAAhjD,UAAAolD,cAAR,WAEC,GAAIc,GAAuCzmD,KAAKgkD,gBAAgB1zB,wBAChEtwB,MAAK8jD,eAAe4C,cAAgBD,EAAejwC,KAEnD,IAAImwC,GAAgC3mD,KAAKgkD,gBAAgBx5B,gBAEzDxqB,MAAK+jD,kBAAkB6C,UAAYD,CAEnC,IAAI3mD,KAAK8jD,eAAezuC,gBAAiB,CzF+5S/B,GyF55SLwxC,GAAqC7mD,KAAKgkD,gBAAgBz6B,uBAC9D,IAAIu9B,GAAqC9mD,KAAKgkD,gBAAgBz6B,uBAC9DvpB,MAAK8jD,eAAeiD,iBAAmBF,EAAarwC,MAAM,CAE1DxW,MAAKyjD,cAAgB,OAASkD,EAAU,OAASF,EAAiB,KAAOI,EAAe,KAClF,OAASF,EAAU,OAASF,EAAiB,KAAOK,EAAe,KACnE,OAASH,EAAU,QAAUF,EAAiB,aAC9C,CACNzmD,KAAK8jD,eAAeiD,kBAAoB,CACxC/mD,MAAK6kD,UAAY8B,EAAQzwC,UACzBlW,MAAK4kD,UAAY6B,EAAevwC,YAO1BqtC,GAAAhjD,UAAAslD,uBAAR,WAEC,GAAIY,GAAuCzmD,KAAKgkD,gBAAgB1zB,wBAChEtwB,MAAK8jD,eAAekD,uBAAyBP,EAAejwC,KAC5DxW,MAAK+jD,kBAAkBkD,mBAAqBjnD,KAAKgkD,gBAAgBx5B,gBACjExqB,MAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkBkD,mBAAqB,KAAOR,EAAiB,KAM5FlD,GAAAhjD,UAAAwlD,mBAAP,WAEC,GAAImB,GAA0ClnD,KAAKgkD,gBAAgBz6B,uBACnEvpB,MAAK+jD,kBAAkBoD,eAAiBnnD,KAAKgkD,gBAAgBx5B,gBAC7DxqB,MAAK+jD,kBAAkBqD,gBAAkBpnD,KAAKgkD,gBAAgBsB,2BAC9DtlD,MAAKgkD,gBAAgBp5B,sBAAsB5qB,KAAK+jD,kBAAkBqD,gBAAiBpnD,KAAK8jD,eAAesB,oBAEvGplD,MAAK8jD,eAAeuD,oBAAsBH,EAAkB1wC,MAAM,CAElE,IAAIxW,KAAK8jD,eAAeoB,iBAAkB,CACzC,GAAIr6B,GAA6B7qB,KAAKgkD,gBAAgBr6B,yBACtD3pB,MAAKyjD,cAAgB,OAAS54B,EAAO,KAAOq8B,EAAoB,KAAOlnD,KAAK+jD,kBAAkBsC,cAAgB,KAC7G,OAASrmD,KAAK+jD,kBAAkBoD,eAAiB,SAAWt8B,EAAO,KAAO7qB,KAAK+jD,kBAAkBuD,gBAAkB,KACnH,OAAStnD,KAAK+jD,kBAAkBoD,eAAiB,OAASnnD,KAAK+jD,kBAAkBsC,cAAgB,WAC5F,CACNrmD,KAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkBoD,eAAiB,KAAOD,EAAoB,KAAOlnD,KAAK+jD,kBAAkBmC,qBAAuB,IACtJlmD,MAAKgkD,gBAAgBxzB,sBAAsBxwB,KAAK+jD,kBAAkBmC,sBAInElmD,KAAK0jD,gBAAkB,OAAS1jD,KAAK+jD,kBAAkBqD,gBAAkB,SAAWpnD,KAAK+jD,kBAAkBoD,eAAiB,KAC3H,OAASnnD,KAAK+jD,kBAAkBqD,gBAAkB,SAAWpnD,KAAK+jD,kBAAkBoD,eAAiB,OAMhG5D,GAAAhjD,UAAAulD,kBAAP,WAEC9lD,KAAK+jD,kBAAkBwD,eAAiBvnD,KAAKgkD,gBAAgBsB,2BAC7DtlD,MAAKgkD,gBAAgBp5B,sBAAsB5qB,KAAK+jD,kBAAkBwD,eAAgBvnD,KAAK8jD,eAAe18B,mBAGtG,IAAIpnB,KAAK8jD,eAAe38B,iBAAmBnnB,KAAK8jD,eAAekB,sBAAuB,CACrFhlD,KAAKyjD,cAAgBzjD,KAAK6jD,aAAa2D,sBAAsBxnD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAC7G/jD,MAAK0jD,gBAAkB1jD,KAAK6jD,aAAa4D,wBAAwBznD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAEjH,QAGD,GAAI2D,EAEJ,KAAK1nD,KAAK8jD,eAAe38B,iBAAmBnnB,KAAK8jD,eAAeoB,iBAAkB,CACjFwC,EAAe,GAAIz8C,OAA6B,EAChDy8C,GAAa,GAAK1nD,KAAKgkD,gBAAgBz6B,uBACvCm+B,GAAa,GAAK1nD,KAAKgkD,gBAAgBz6B,uBACvCm+B,GAAa,GAAK1nD,KAAKgkD,gBAAgBz6B,uBAEvCvpB,MAAKgkD,gBAAgBz6B,uBAErBvpB,MAAK8jD,eAAe6D,uBAAyBD,EAAa,GAAGlxC,MAAM,CAEnExW,MAAK+jD,kBAAkB6D,cAAgB5nD,KAAKgkD,gBAAgBx5B,iBAG7D,GAAIxqB,KAAK8jD,eAAe38B,eAAgB,CACvC,GAAInnB,KAAK8jD,eAAeoB,iBAAkB,CAEzCllD,KAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkB8D,eAAiB,SAAW7nD,KAAK+jD,kBAAkB8D,eAAiB,KACxH,OAAS7nD,KAAK+jD,kBAAkBuD,gBAAkB,SAAWtnD,KAAK+jD,kBAAkBuD,gBAAkB,KACtG,OAAStnD,KAAK+jD,kBAAkB+D,UAAY,SAAW9nD,KAAK+jD,kBAAkB8D,eAAiB,KAAO7nD,KAAK+jD,kBAAkBuD,gBAAkB,IAEhJtnD,MAAK0jD,gBAAkB1jD,KAAK6jD,aAAa4D,wBAAwBznD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,uBAC3G,CAEN/jD,KAAK+jD,kBAAkBgE,eAAiB/nD,KAAKgkD,gBAAgBx5B,gBAC7DxqB,MAAK+jD,kBAAkBiE,iBAAmBhoD,KAAKgkD,gBAAgBx5B,gBAC/D,IAAIK,GAA6B7qB,KAAKgkD,gBAAgBr6B,yBAEtD3pB,MAAKyjD,cAAgB,OAAS54B,EAAO,SAAW7qB,KAAK+jD,kBAAkB8D,eAAiB,KAAOH,EAAa,GAAK,KAChH,OAAS1nD,KAAK+jD,kBAAkB8D,eAAiB,SAAWh9B,EAAO,KACnE,OAASA,EAAO,SAAW7qB,KAAK+jD,kBAAkBuD,gBAAkB,KAAOI,EAAa,GAAK,KAC7F,OAAS1nD,KAAK+jD,kBAAkBuD,gBAAkB,SAAWz8B,EAAO,KACpE,OAAS7qB,KAAK+jD,kBAAkBgE,eAAiB,OAAS/nD,KAAK+jD,kBAAkBuD,gBAAkB,SACnG,OAAStnD,KAAK+jD,kBAAkBgE,eAAiB,OAAS/nD,KAAK+jD,kBAAkB8D,eAAiB,SAClG,OAAS7nD,KAAK+jD,kBAAkBgE,eAAiB,OAAS/nD,KAAK+jD,kBAAkBkE,YAAc,SAC/F,OAASjoD,KAAK+jD,kBAAkBiE,iBAAmB,OAAShoD,KAAK+jD,kBAAkBuD,gBAAkB,SACrG,OAAStnD,KAAK+jD,kBAAkBiE,iBAAmB,OAAShoD,KAAK+jD,kBAAkB8D,eAAiB,SACpG,OAAS7nD,KAAK+jD,kBAAkBiE,iBAAmB,OAAShoD,KAAK+jD,kBAAkBkE,YAAc,SACjG,OAASjoD,KAAK+jD,kBAAkB6D,cAAgB,OAAS5nD,KAAK+jD,kBAAkBuD,gBAAkB,SAClG,OAAStnD,KAAK+jD,kBAAkB6D,cAAgB,OAAS5nD,KAAK+jD,kBAAkB8D,eAAiB,SACjG,OAAS7nD,KAAK+jD,kBAAkB6D,cAAgB,OAAS5nD,KAAK+jD,kBAAkBkE,YAAc,SAC9F,OAASp9B,EAAO,SAAW7qB,KAAK+jD,kBAAkB8D,eAAiB,KAAO7nD,KAAK+jD,kBAAkBuD,gBAAkB,KACnH,OAAStnD,KAAK+jD,kBAAkBgE,eAAiB,OAASl9B,EAAO,WACjE,OAAS7qB,KAAK+jD,kBAAkBiE,iBAAmB,OAASn9B,EAAO,SACnE,OAAS7qB,KAAK+jD,kBAAkB6D,cAAgB,OAAS/8B,EAAO,UAEjE7qB,MAAKgkD,gBAAgBxzB,sBAAsBxwB,KAAK+jD,kBAAkBuD,gBzFq3StD,IyFl3SRxoD,EACJ,IAAIoB,EACJ,IAAInB,EAEJD,GAAIkB,KAAKgkD,gBAAgBsB,2BACzBtlD,MAAKgkD,gBAAgBp5B,sBAAsB9rB,EAAG,EAC9CoB,GAAIF,KAAKgkD,gBAAgBsB,2BACzBtlD,MAAKgkD,gBAAgBp5B,sBAAsB1qB,EAAG,EAC9CnB,GAAIiB,KAAKgkD,gBAAgBsB,2BACzBtlD,MAAKgkD,gBAAgBp5B,sBAAsB7rB,EAAG,EAE9CiB,MAAK0jD,gBAAkB,OAAS5kD,EAAI,SAAWkB,KAAK+jD,kBAAkBgE,eAAiB,KACtF,OAASjpD,EAAI,OAASkB,KAAK+jD,kBAAkBgE,eAAiB,QAC9D,OAAS7nD,EAAI,SAAWF,KAAK+jD,kBAAkBiE,iBAAmB,KAClE,OAASjpD,EAAI,SAAWiB,KAAK+jD,kBAAkB6D,cAAgB,IAGhE5nD,MAAK0jD,gBAAkB1jD,KAAK6jD,aAAa4D,wBAAwBznD,KAAK8jD,eAAgB9jD,KAAKgkD,gBAAiBhkD,KAAK+jD,mBAChH,OAAS/jD,KAAK+jD,kBAAkBwD,eAAiB,SAAWvnD,KAAK+jD,kBAAkBwD,eAAiB,KAAOzoD,EAAI,KAC/G,OAASkB,KAAK+jD,kBAAkBwD,eAAiB,OAASvnD,KAAK+jD,kBAAkB6D,cAAgB,MAElG5nD,MAAKgkD,gBAAgBQ,wBAAwBtkD,EAC7CF,MAAKgkD,gBAAgBQ,wBAAwB1lD,EAC7CkB,MAAKgkD,gBAAgBQ,wBAAwBzlD,QAExC,CAENiB,KAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkB6D,cAAgB,SAAW5nD,KAAK+jD,kBAAkB8D,eAAiB,KAAOH,EAAa,GAAK,KAChJ,OAAS1nD,KAAK+jD,kBAAkB6D,cAAgB,OAAS5nD,KAAK+jD,kBAAkB8D,eAAiB,MAElG7nD,MAAK0jD,gBAAkB,OAAS1jD,KAAK+jD,kBAAkBwD,eAAiB,SAAWvnD,KAAK+jD,kBAAkB6D,cAAgB,KACzH,OAAS5nD,KAAK+jD,kBAAkBwD,eAAiB,OAASvnD,KAAK+jD,kBAAkB6D,cAAgB,MAElG,IAAI5nD,KAAK8jD,eAAe58B,oBAAsB,EAAG,CAChDlnB,KAAK+jD,kBAAkBgE,eAAiB/nD,KAAKgkD,gBAAgBx5B,gBAE7DxqB,MAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkBgE,eAAiB,SAAW/nD,KAAK+jD,kBAAkBuD,gBAAkB,KAAOI,EAAa,GAAK,KAClJ,OAAS1nD,KAAK+jD,kBAAkBgE,eAAiB,OAAS/nD,KAAK+jD,kBAAkBuD,gBAAkB,QAItG,IAAKtnD,KAAK8jD,eAAeoB,iBACxBllD,KAAKgkD,gBAAgBxzB,sBAAsBxwB,KAAK+jD,kBAAkB8D,gBAM7DtE,GAAAhjD,UAAA4jD,qBAAP,WAECnkD,KAAK8jD,eAAeK,sBAEpBnkD,MAAK0kD,uBAAyB,GAAIz5C,OAAc,MAChDjL,MAAK2kD,2BAA6B,GAAI15C,OAAc,MACpDjL,MAAKyjD,aAAe,EACpBzjD,MAAK0jD,eAAiB,EACtB1jD,MAAK2jD,4BAA8B,EAEnC3jD,MAAKgkD,gBAAgB36B,oBAAoBrpB,KAAK+jD,kBAAkBsC,cAAgBrmD,KAAKgkD,gBAAgBr6B,0BAA2B,EAGhI3pB,MAAK+jD,kBAAkBmE,QAAUloD,KAAKgkD,gBAAgBmE,yBACtDnoD,MAAK8jD,eAAesE,iBAAmBpoD,KAAK+jD,kBAAkBmE,QAAQ1xC,MAAM,CAI5E,IAAIxW,KAAK8jD,eAAe58B,oBAAsB,GAAKlnB,KAAK8jD,eAAe38B,eAAgB,CACtFnnB,KAAK+jD,kBAAkBsE,aAAeroD,KAAKgkD,gBAAgB1zB,wBAC3DtwB,MAAK8jD,eAAewE,mBAAqBtoD,KAAK+jD,kBAAkBsE,aAAa7xC,KAE7ExW,MAAK+jD,kBAAkBuD,gBAAkBtnD,KAAKgkD,gBAAgBr6B,yBAC9D3pB,MAAKgkD,gBAAgB36B,oBAAoBrpB,KAAK+jD,kBAAkBuD,gBAAiB,EAEjF,IAAItnD,KAAK8jD,eAAeoB,iBAAkB,CACzCllD,KAAK+jD,kBAAkB+D,UAAY9nD,KAAKgkD,gBAAgBr6B,yBACxD3pB,MAAKgkD,gBAAgB36B,oBAAoBrpB,KAAK+jD,kBAAkB+D,UAAW,GAG5E9nD,KAAK0kD,uBAAuBl2C,KAAKxO,KAAK+jD,kBAAkBsE,aAAanyC,WACrElW,MAAK2kD,2BAA2Bn2C,KAAKxO,KAAK+jD,kBAAkBuD,gBAAgBpxC,YAG7E,GAAIlW,KAAK8jD,eAAe18B,mBAAqB,EAAG,CAC/CpnB,KAAK+jD,kBAAkBkE,YAAcjoD,KAAKgkD,gBAAgB1zB,wBAC1DtwB,MAAK8jD,eAAeyE,kBAAoBvoD,KAAK+jD,kBAAkBkE,YAAYzxC,KAE3ExW,MAAK+jD,kBAAkB8D,eAAiB7nD,KAAKgkD,gBAAgBr6B,yBAC7D3pB,MAAKgkD,gBAAgB36B,oBAAoBrpB,KAAK+jD,kBAAkB8D,eAAgB,EAEhF7nD,MAAK0kD,uBAAuBl2C,KAAKxO,KAAK+jD,kBAAkBkE,YAAY/xC,WACpElW,MAAK2kD,2BAA2Bn2C,KAAKxO,KAAK+jD,kBAAkB8D,eAAe3xC,YAG5E,GAAIlW,KAAK8jD,eAAe0E,kBAAoB,EAAG,CAC9CxoD,KAAK+jD,kBAAkB0E,WAAazoD,KAAKgkD,gBAAgB1zB,wBACzDtwB,MAAK8jD,eAAe4E,iBAAmB1oD,KAAK+jD,kBAAkB0E,WAAWjyC,KAEzExW,MAAK+jD,kBAAkB4E,aAAe3oD,KAAKgkD,gBAAgBx5B,gBAC3DxqB,MAAKyjD,cAAgB,OAASzjD,KAAK+jD,kBAAkB4E,aAAe,KAAO3oD,KAAK+jD,kBAAkB0E,WAAa,MAO1GlF,GAAAhjD,UAAAwC,QAAP,WAEC/C,KAAKgkD,gBAAgBjhD,SACrB/C,MAAKgkD,gBAAkB,IACvBhkD,MAAK+jD,kBAAoB,KAM1B5hD,QAAAC,eAAWmhD,EAAAhjD,UAAA,czFm1SJ8B,IyFn1SP,WAEC,MAAOrC,MAAKyjD,czFo1SN/gD,WAAY,KACZC,aAAc,MyF/0SrBR,QAAAC,eAAWmhD,EAAAhjD,UAAA,gBzFq1SJ8B,IyFr1SP,WAEC,MAAOrC,MAAK0jD,gBzFs1SNhhD,WAAY,KACZC,aAAc,MyFj1SrBR,QAAAC,eAAWmhD,EAAAhjD,UAAA,6BzFu1SJ8B,IyFv1SP,WAEC,MAAOrC,MAAK2jD,6BzFw1SNjhD,WAAY,KACZC,aAAc,MyFn1SrBR,QAAAC,eAAWmhD,EAAAhjD,UAAA,gBzFy1SJ8B,IyFz1SP,WAEC,MAAOrC,MAAK+jD,kBAAkBh2C,aAAamI,YzF01SrCxT,WAAY,KACZC,aAAc,MyFz1StB,OAAA4gD,KAEAzjD,GAA4BJ,QAAnB6jD,IzF81SN93B,wDAAwD,wDAAwDm9B,uDAAuD,yDAAyDC,4DAA4D,SAASjqD,EAAQkB,EAAOJ,GACvT,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0FjxTtB,IAAOkjD,GAAkB3kD,EAAa,uD1F0xTtC,I0F/wTMkqD,GAAsB,SAAAznD,GAAStB,EAA/B+oD,EAAsBznD,EAe3B,SAfKynD,GAeOhM,EAAkCiM,EAAwCC,GAErF3nD,EAAA1B,KAAAK,KAAM88C,EAAiBiM,EAAoBC,EAE3ChpD,MAAKipD,sBAAwBD,CAC7BhpD,MAAKkpD,oBAAsBH,EAMrBD,EAAAvoD,UAAA6jD,qBAAP,WAEC/iD,EAAAd,UAAM6jD,qBAAoBzkD,KAAAK,KAG1B,IAAIA,KAAKipD,sBAAsBE,YAC9BnpD,KAAKopD,oBAEN,IAAIppD,KAAKipD,sBAAsBI,WAAY,CAC1CrpD,KAAKspD,oBACLtpD,MAAKupD,mBAGN,GAAIvpD,KAAKipD,sBAAsBO,WAC9BxpD,KAAKypD,uBAENzpD,MAAKyjD,cAAgBzjD,KAAKkpD,oBAAoBQ,4BAA4B1pD,KAAKipD,sBAAuBjpD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBACjI/jD,MAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoBS,8BAA8B3pD,KAAKipD,sBAAuBjpD,KAAKgkD,gBAAiBhkD,KAAK+jD,mBAM/H+E,GAAAvoD,UAAA6oD,mBAAP,WAEC,GAAIppD,KAAKipD,sBAAsB7hC,mBAAqB,EAAG,CACtDpnB,KAAK+jD,kBAAkB6F,aAAe5pD,KAAK+jD,kBAAkBwD,mBACvD,CACNvnD,KAAK+jD,kBAAkB6F,aAAe5pD,KAAKgkD,gBAAgBsB,2BAC3DtlD,MAAKgkD,gBAAgBp5B,sBAAsB5qB,KAAK+jD,kBAAkB6F,aAAc,IAO1Ed,GAAAvoD,UAAA+oD,mBAAR,W1F8vTO,G0F3vTFjqD,GAAUuF,CAEd,IAAI5E,KAAK6pD,yBAA0B,CAClCjlD,EAAM5E,KAAK6pD,yBAAyBjqD,MACpC,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBW,KAAK6pD,yBAAyBxqD,GAAKW,KAAKgkD,gBAAgBz6B,uBAExD,IAAIvpB,KAAKipD,sBAAsBa,2BAA6B,EAC3D9pD,KAAKipD,sBAAsBa,yBAA2B9pD,KAAK6pD,yBAAyBxqD,GAAGmX,MAAM,GAIhG,GAAIxW,KAAK+pD,2BAA4B,CACpCnlD,EAAM5E,KAAK+pD,2BAA2BnqD,MACtC,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBW,KAAK+pD,2BAA2B1qD,GAAKW,KAAKgkD,gBAAgBz6B,uBAE1D,IAAIvpB,KAAKipD,sBAAsBa,2BAA6B,EAC3D9pD,KAAKipD,sBAAsBa,yBAA2B9pD,KAAK+pD,2BAA2B1qD,GAAGmX,MAAM,GAIlG5R,EAAM5E,KAAKgqD,2BAA2BpqD,MACtC,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBW,KAAKgqD,2BAA2B3qD,GAAKW,KAAKgkD,gBAAgBmE,yBAE1D,IAAInoD,KAAKipD,sBAAsBgB,6BAA+B,EAC7DjqD,KAAKipD,sBAAsBgB,2BAA6BjqD,KAAKgqD,2BAA2B3qD,GAAGmX,MAAM,EAGnG5R,EAAM5E,KAAKkqD,6BAA6BtqD,MACxC,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBW,KAAKkqD,6BAA6B7qD,GAAKW,KAAKgkD,gBAAgBmE,yBAE5D,IAAInoD,KAAKipD,sBAAsBgB,6BAA+B,EAC7DjqD,KAAKipD,sBAAsBgB,2BAA6BjqD,KAAKkqD,6BAA6B7qD,GAAGmX,MAAM,GAO9FsyC,GAAAvoD,UAAAgpD,iBAAR,WAEC,GAAIY,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAwB,CAC5B,IAAIC,GAA0B,CAC9B,IAAIC,GAAkBzqD,KAAKipD,sBAAsByB,qBACjD,IAAIC,GAAkB3qD,KAAKipD,sBAAsB2B,oBAGjD,KAAK,GAAIvrD,GAAW,EAAGA,EAAIW,KAAKipD,sBAAsB4B,uBAAwBxrD,EAAG,CAChF,GAAIW,KAAKipD,sBAAsB/D,iBAAkB,CAChDoF,EAActqD,KAAK6pD,yBAAyBU,IAE5C,IAAIO,GAAqC9qD,KAAKgkD,gBAAgBx5B,gBAE9DxqB,MAAKyjD,cAAgB,OAASqH,EAAe,SAAWR,EAAc,KAAOtqD,KAAK+jD,kBAAkBuD,gBAAkB,KACrH,OAASwD,EAAe,OAASR,EAAc,MAEhDA,GAActqD,KAAKgkD,gBAAgBsB,2BACnCtlD,MAAKgkD,gBAAgB36B,oBAAoBihC,EAAa,EAEtDtqD,MAAK0jD,gBAAkB,OAAS4G,EAAc,SAAWQ,EAAe,KACvE,OAASR,EAAc,OAASQ,EAAe,WAE1C,CACNR,EAActqD,KAAKgqD,2BAA2BQ,KAG/CL,EAAkBnqD,KAAKgqD,2BAA2BQ,IAClDJ,GAAmBpqD,KAAKgqD,2BAA2BQ,IAEnD,IAAIG,EACH3qD,KAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoB6B,iCAAiC/qD,KAAKipD,sBAAuBqB,EAAaH,EAAiBnqD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAEvK,IAAI0G,EACHzqD,KAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoB8B,kCAAkChrD,KAAKipD,sBAAuBqB,EAAaF,EAAkBpqD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAEzK,IAAI/jD,KAAKipD,sBAAsB/D,iBAC9BllD,KAAKgkD,gBAAgBxzB,sBAAsB85B,GAG7CC,EAAiB,CACjBC,GAAmB,CAGnB,KAAK,GAAInrD,GAAW,EAAGA,EAAIW,KAAKipD,sBAAsBgC,iBAAkB5rD,EAAG,CAE1E,GAAIW,KAAKipD,sBAAsB/D,mBAAqBllD,KAAKipD,sBAAsB3C,sBAC9E+D,EAAcrqD,KAAK+pD,2BAA2BQ,SAE9CF,GAAcrqD,KAAKkqD,6BAA6BM,IAEjDL,GAAkBnqD,KAAKkqD,6BAA6BM,IACpDJ,GAAmBpqD,KAAKkqD,6BAA6BM,IAErDF,GAActqD,KAAKgkD,gBAAgBsB,2BACnCtlD,MAAKgkD,gBAAgBp5B,sBAAsB0/B,EAAa,EAExD,IAAIQ,EAEJ,IAAI9qD,KAAKipD,sBAAsB/D,iBAAkB,CAChD4F,EAAe9qD,KAAKgkD,gBAAgBx5B,gBACpC,IAAIK,GAA6B7qB,KAAKgkD,gBAAgBr6B,yBACtD3pB,MAAKyjD,cAAgB,OAAS54B,EAAO,KAAOw/B,EAAc,KAAOrqD,KAAK+jD,kBAAkBsC,cAAgB,KACvG,OAASyE,EAAe,SAAWjgC,EAAO,KAAO7qB,KAAK+jD,kBAAkBuD,gBAAkB,KAC1F,OAASwD,EAAe,OAAS9qD,KAAK+jD,kBAAkBsC,cAAgB,WACnE,KAAKrmD,KAAKipD,sBAAsB3C,sBAAuB,CAC7DwE,EAAe9qD,KAAKgkD,gBAAgBx5B,gBACpCxqB,MAAKyjD,cAAgB,OAASqH,EAAe,KAAOT,EAAc,KAAOrqD,KAAK+jD,kBAAkBmC,qBAAuB,SACjH,CACN4E,EAAeR,CACftqD,MAAK0jD,gBAAkB,OAAS4G,EAAc,KAAOD,EAAc,KAAOrqD,KAAK+jD,kBAAkBwC,sBAAwB,KAG1H,GAAIvmD,KAAKipD,sBAAsBiC,iBAAkB,CAEhDlrD,KAAK0jD,gBACJ,OAAS4G,EAAc,OAASQ,EAAe,KAAOA,EAAe,KACrE,OAASR,EAAc,OAASA,EAAc,OAASH,EAAkB,OACzE,OAASG,EAAc,OAASA,EAAc,OAASF,EAAmB,OAC1E,OAASE,EAAc,OAASA,EAAc,OAC9C,OAASA,EAAc,OAAStqD,KAAK+jD,kBAAkBmE,QAAU,OAASoC,EAAc,OACxF,OAASA,EAAc,SAAWQ,EAAe,SAC5C,CACN9qD,KAAK0jD,gBAAkB,OAAS4G,EAAc,SAAWQ,EAAe,KACvE,OAASR,EAAc,OAASQ,EAAe,OAGjD,GAAI9qD,KAAKipD,sBAAsBgB,6BAA+B,EAC7DjqD,KAAKipD,sBAAsBgB,2BAA6BI,EAAY7zC,MAAM,CAE3E,IAAIm0C,EACH3qD,KAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoB6B,iCAAiC/qD,KAAKipD,sBAAuBqB,EAAaH,EAAiBnqD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAEvK,IAAI0G,EACHzqD,KAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoB8B,kCAAkChrD,KAAKipD,sBAAuBqB,EAAaF,EAAkBpqD,KAAKgkD,gBAAiBhkD,KAAK+jD,kBAEzK/jD,MAAKgkD,gBAAgBQ,wBAAwB8F,IAOvCxB,GAAAvoD,UAAAkpD,sBAAR,WAEC,GAAI0B,EACJ,IAAIC,IAAqB,KAAM,KAAM,KAAM,KAC3C,IAAIC,GAA+C,GAAIpgD,MACvD,IAAI5L,EACJ,IAAIisD,EACJ,IAAIb,GAAkBzqD,KAAKipD,sBAAsBsC,qBACjD,IAAIZ,GAAkB3qD,KAAKipD,sBAAsBuC,oBAEjD,IAAIb,EACH3qD,KAAKipD,sBAAsBwC,yBAA2B,GAAIxgD,MAE3D,IAAIw/C,EACHzqD,KAAKipD,sBAAsByC,0BAA4B,GAAIzgD,MAE5D,KAAK5L,EAAI,EAAGA,EAAIW,KAAK2rD,sBAAuBtsD,EAAG,CAC9CgsD,EAAgBhsD,GAAKW,KAAKgkD,gBAAgBmE,yBAE1C,IAAI9oD,GAAK,EACRW,KAAKipD,sBAAsB2C,kBAAoBP,EAAgBhsD,GAAGmX,MAAM,EAG1E,IAAKnX,EAAI,EAAGA,EAAIW,KAAKipD,sBAAsB4C,iBAAkBxsD,EAAG,CAC/D8rD,EAAYE,EAAgBhkD,KAAKw9B,MAAMxlC,EAAE,IAAI6W,WAAak1C,EAAiB/rD,EAAE,EAE7E,IAAIsrD,EAAS,CACZW,EAAStrD,KAAKgkD,gBAAgB8H,mBAC9B9rD,MAAKipD,sBAAsBwC,yBAAyBpsD,GAAKisD,EAAO90C,KAChExW,MAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoB6C,iCAAiC/rD,KAAKipD,sBAAuBqC,EAAQH,EAAWnrD,KAAKgkD,gBAAiBhkD,KAAK+jD,mBAG5J,GAAI0G,EAAS,CACZa,EAAStrD,KAAKgkD,gBAAgB8H,mBAC9B9rD,MAAKipD,sBAAsByC,0BAA0BrsD,GAAKisD,EAAO90C,KACjExW,MAAK0jD,gBAAkB1jD,KAAKkpD,oBAAoB8C,kCAAkChsD,KAAKipD,sBAAuBqC,EAAQH,EAAWnrD,KAAKgkD,gBAAiBhkD,KAAK+jD,qBAQxJ+E,GAAAvoD,UAAA4jD,qBAAP,WAEC9iD,EAAAd,UAAM4jD,qBAAoBxkD,KAAAK,KAE1BA,MAAKipD,sBAAsBa,0BAA4B,CACvD9pD,MAAKipD,sBAAsBgB,4BAA8B,CACzDjqD,MAAKipD,sBAAsB2C,mBAAqB,CAEhD5rD,MAAK2rD,oBAAsBtkD,KAAK4kD,KAAKjsD,KAAKipD,sBAAsB4C,eAAe,EAG/E,IAAI7rD,KAAKipD,sBAAsB/D,mBAAqBllD,KAAKipD,sBAAsB3C,sBAAuB,CACrGtmD,KAAK+pD,2BAA6B,GAAI9+C,OAA6BjL,KAAKipD,sBAAsBgC,eAC9FjrD,MAAKkqD,6BAA+B,GAAIj/C,OAA6BjL,KAAKipD,sBAAsBgC,eAAe,OACzG,CACNjrD,KAAKkqD,6BAA+B,GAAIj/C,OAA6BjL,KAAKipD,sBAAsBgC,eAAe,GAGhH,GAAIjrD,KAAKipD,sBAAsB/D,iBAAkB,CAChDllD,KAAK6pD,yBAA2B,GAAI5+C,OAA6BjL,KAAKipD,sBAAsB4B,qBAC5F7qD,MAAKgqD,2BAA6B,GAAI/+C,OAA6BjL,KAAKipD,sBAAsB4B,qBAAqB,OAC7G,CACN7qD,KAAKgqD,2BAA6B,GAAI/+C,OAA6BjL,KAAKipD,sBAAsB4B,qBAAqB,IAGtH,OAAA/B,IA1RqCvF,EA4RrCzjD,GAAgCJ,QAAvBopD,I1FwsTNzF,uDAAuD,yDAAyD6I,0DAA0D,SAASttD,EAAQkB,EAAOJ,GACrM,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2F9+TtB,IAAO8rD,GAAYvtD,EAAe,4CAElC,IAAOwtD,GAAgBxtD,EAAc,2CAKrC,IAAOkqD,GAAsBlqD,EAAY,2DAIzC,IAAOytD,GAAgBztD,EAAc,qD3Fi/TrC,I2Ft+TM0tD,GAAoB,SAAAjrD,GAAStB,EAA7BusD,EAAoBjrD,EAyEzB,SAzEKirD,GAyEOxP,EAAkCiM,EAAwCxnD,GAErFF,EAAA1B,KAAAK,KAAM88C,EAAiBiM,EAAoBxnD,EAvEpCvB,MAAAusD,gBAA0B,IAyEjCvsD,MAAKkpD,oBAAsBH,EAGrBuD,EAAA/rD,UAAAygD,sBAAP,WAEChhD,KAAKirD,eAAiBjrD,KAAKkpD,oBAAoB+B,cAC/CjrD,MAAK6qD,qBAAuB7qD,KAAKkpD,oBAAoB2B,oBACrD7qD,MAAK6rD,eAAiB7rD,KAAKkpD,oBAAoB2C,cAE/C,IAAIW,GAAsBxsD,KAAKkpD,oBAAoB+B,eAAiBjrD,KAAKkpD,oBAAoB2B,oBAC7F,IAAIgB,GAAwB7rD,KAAKkpD,oBAAoB2C,cACrD,IAAIY,GAA6BzsD,KAAKkpD,oBAAoBwD,cAAc1sD,MAAOA,KAAKkpD,oBAAoBuD,oBAAsB,CAC9H,IAAIE,GAA8B3sD,KAAKkpD,oBAAoB0D,eAAe5sD,MAAOA,KAAKkpD,oBAAoByD,qBAAuB,CACjI,IAAIE,GAA8BJ,EAAsBE,CAExD3sD,MAAKkrD,iBAAmBlrD,KAAKkpD,oBAAoB4D,oBAAsB9sD,KAAKmU,SAAWi4C,EAAiBW,oBACxG/sD,MAAKgtD,UAAYR,EAAeX,CAChC7rD,MAAKqpD,WAAamD,EAAe,IAAMK,EAAuBV,EAAac,SAAW,CACtFjtD,MAAKwpD,WAAaqC,EAAiB,IAAMgB,EAAuBV,EAAae,SAAW,CACxFltD,MAAK0qD,sBAAwB8B,EAAe,IAAMG,EAAuBR,EAAac,SAAW,CACjGjtD,MAAKurD,sBAAwBM,EAAiB,IAAMc,EAAuBR,EAAae,SAAW,CACnGltD,MAAK4qD,qBAAuB4B,EAAe,IAAMC,EAAsBN,EAAac,SAAW,CAC/FjtD,MAAKwrD,qBAAuBK,EAAiB,IAAMY,EAAsBN,EAAae,SAAW,CACjGltD,MAAKmpD,YAAcnpD,KAAKkpD,oBAAoBiE,cAAcntD,KAG1DqB,GAAAd,UAAMygD,sBAAqBrhD,KAAAK,MASrBssD,GAAA/rD,UAAA6sD,eAAP,SAAsBtQ,EAAkC0G,GAEvD,MAAO,IAAIsF,GAAuBhM,EAAiB0G,EAAYxjD,MAMzDssD,GAAA/rD,UAAA8Q,MAAP,WAEChQ,EAAAd,UAAM8Q,MAAK1R,KAAAK,KAEXA,MAAKgtD,UAAY,CACjBhtD,MAAKkrD,iBAAmB,KAWlBoB,GAAA/rD,UAAAyD,SAAP,SAAgB2B,EAA2BM,EAAeuyC,GAEzDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAAC2F,EAAYM,EAAQuyC,EAEnC,IAAIx4C,KAAKkpD,oBAAoBmE,YAC5BrtD,KAAKkpD,oBAAoBmE,YAAYC,cAAc3nD,EAEpD,IAAI3F,KAAKqpD,WACRrpD,KAAKwE,cAEN,IAAIxE,KAAKwpD,WACRxpD,KAAKutD,eAMCjB,GAAA/rD,UAAAiE,aAAR,WAEC,GAAIgpD,EACJ,IAAIC,EACJ,IAAIpuD,GAAW,CACf,IAAI8X,GAAW,CACf,IAAIvS,EACJ,IAAI8oD,EACJ,IAAIl1C,GAAe,CACnB,IAAIm1C,GAAuB3tD,KAAKmpD,YAAa,EAAI,CACjD,IAAI1pD,EACJ,IAAI6R,EAEJtR,MAAK4tD,SAAW5tD,KAAK6tD,SAAW7tD,KAAK8tD,SAAW,CAEhDruD,GAAIO,KAAK8pD,wBACT3yC,GAAInX,KAAKiqD,0BAET,IAAI8D,GAAc,CAClB,IAAItpD,GAAoCzE,KAAKkpD,oBAAoBmE,YAAY3oD,iBAC7E4M,GAAStR,KAAKkpD,oBAAoB8E,uBAClCppD,GAAM5E,KAAKkpD,oBAAoBmE,YAAY3oD,kBAAkB9E,MAE7D,IAAI0R,EAAS1M,EAAK,CACjBmpD,EAAO,CACPz8C,IAAU1M,EAGX,KAAOmpD,EAAOJ,IAAiBI,EAAM,CACpC,GAAIA,EACHtpD,EAAYzE,KAAKkpD,oBAAoBmE,YAAYY,wBAElDrpD,GAAMH,EAAU7E,MAEhB,IAAIgF,EAAM5E,KAAK6qD,qBACdjmD,EAAM5E,KAAK6qD,oBAEZ,KAAKxrD,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBmuD,EAAW/oD,EAAU6M,EAASjS,EAC9BquD,GAASF,EAASU,cAElBluD,MAAK4tD,UAAYJ,EAASW,UAC1BnuD,MAAK6tD,UAAYL,EAASY,UAC1BpuD,MAAK8tD,UAAYN,EAASa,UAE1B,IAAIruD,KAAKklD,iBAAkB,CAC1B,GAAIn+C,IAAY2mD,EAAO3mD,CACvB,IAAIE,IAAYymD,EAAOzmD,CACvB,IAAIE,IAAYumD,EAAOvmD,CAEvBnH,MAAKua,mBAAmB9a,KAAOO,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,GAAGnnD,CAC9HnH,MAAKua,mBAAmB9a,KAAOO,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,GAAGnnD,CAC9HnH,MAAKua,mBAAmB9a,KAAOO,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,IAAInnD,CAC/HnH,MAAKua,mBAAmB9a,KAAO,MACzB,CACNO,KAAK2a,qBAAqBxD,MAAQu2C,EAAO3mD,CACzC/G,MAAK2a,qBAAqBxD,MAAQu2C,EAAOzmD,CACzCjH,MAAK2a,qBAAqBxD,MAAQu2C,EAAOvmD,CACzCnH,MAAK2a,qBAAqBxD,KAAO,EAGlCnX,KAAK2a,qBAAqBxD,KAAOq2C,EAASe,UAC1CvuD,MAAK2a,qBAAqBxD,KAAOq2C,EAASgB,UAC1CxuD,MAAK2a,qBAAqBxD,KAAOq2C,EAASiB,UAC1CzuD,MAAK2a,qBAAqBxD,KAAO,CAEjCnX,MAAK2a,qBAAqBxD,KAAOq2C,EAASkB,WAC1C1uD,MAAK2a,qBAAqBxD,KAAOq2C,EAASmB,WAC1C3uD,MAAK2a,qBAAqBxD,KAAOq2C,EAASoB,WAC1C5uD,MAAK2a,qBAAqBxD,KAAO,CAEjC,MAAMqB,GAASxY,KAAK6qD,qBAAsB,CAEzCxrD,EAAIuF,CACJmpD,GAAOJ,IAMV,GAAI3tD,KAAK6qD,qBAAuBryC,EAAO,CACtCnZ,EAAI8X,GAAKnX,KAAK6qD,qBAAuBryC,GAAO,EAE5C,OAAOrB,EAAI9X,EACVW,KAAK2a,qBAAqBxD,KAAO,EAGnCqB,EAAQ,CAER,IAAI7T,GAAgC3E,KAAKkpD,oBAAoBmE,YAAY1oD,WACzE2M,GAAStR,KAAKkpD,oBAAoB2F,iBAClCjqD,GAAM5E,KAAKkpD,oBAAoBmE,YAAY1oD,YAAY/E,MAEvD,IAAI0R,EAAS1M,EAAK,CACjBmpD,EAAO,CACPz8C,IAAU1M,MACJ,CACNmpD,EAAO,EAGR,KAAOA,EAAOJ,IAAiBI,EAAM,CACpC,GAAIA,EACHppD,EAAc3E,KAAKkpD,oBAAoBmE,YAAYyB,kBAEpDlqD,GAAMD,EAAY/E,MAElB,KAAKP,EAAI,EAAGA,EAAIuF,IAAOvF,EAAG,CACzBouD,EAAa9oD,EAAY2M,EAASjS,EAClCquD,GAASD,EAAW5mD,aAEpB7G,MAAK4tD,UAAYH,EAAWU,UAC5BnuD,MAAK6tD,UAAYJ,EAAWW,UAC5BpuD,MAAK8tD,UAAYL,EAAWY,UAE5B,IAAIruD,KAAKklD,iBAAkB,CAC1Bn+C,EAAI2mD,EAAO3mD,CACXE,GAAIymD,EAAOzmD,CACXE,GAAIumD,EAAOvmD,CAEXnH,MAAKua,mBAAmB9a,KAAOO,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,GAAGnnD,EAAInH,KAAKsuD,qBAAqB,GAC5JtuD,MAAKua,mBAAmB9a,KAAOO,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,GAAGnnD,EAAInH,KAAKsuD,qBAAqB,GAC5JtuD,MAAKua,mBAAmB9a,KAAOO,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,IAAInnD,EAAInH,KAAKsuD,qBAAqB,GAC7JtuD,MAAKua,mBAAmB9a,KAAO,MACzB,KAAKO,KAAKsmD,sBAAuB,CACvCtmD,KAAKua,mBAAmB9a,KAAOiuD,EAAO3mD,CACtC/G,MAAKua,mBAAmB9a,KAAOiuD,EAAOzmD,CACtCjH,MAAKua,mBAAmB9a,KAAOiuD,EAAOvmD,CACtCnH,MAAKua,mBAAmB9a,KAAO,MACzB,CACNO,KAAK2a,qBAAqBxD,KAAOu2C,EAAO3mD,CACxC/G,MAAK2a,qBAAqBxD,KAAOu2C,EAAOzmD,CACxCjH,MAAK2a,qBAAqBxD,KAAOu2C,EAAOvmD,CACxCnH,MAAK2a,qBAAqBxD,KAAO,EAGlCnX,KAAK2a,qBAAqBxD,KAAOs2C,EAAWc,UAC5CvuD,MAAK2a,qBAAqBxD,KAAOs2C,EAAWe,UAC5CxuD,MAAK2a,qBAAqBxD,KAAOs2C,EAAWgB,UAE5C,IAAI72B,GAAgB61B,EAAWsB,QAC/B/uD,MAAK2a,qBAAqBxD,KAAOygB,EAAOA,CAExC53B,MAAK2a,qBAAqBxD,KAAOs2C,EAAWiB,WAC5C1uD,MAAK2a,qBAAqBxD,KAAOs2C,EAAWkB,WAC5C3uD,MAAK2a,qBAAqBxD,KAAOs2C,EAAWmB,WAC5C5uD,MAAK2a,qBAAqBxD,KAAOs2C,EAAWuB,eAE5C,MAAMx2C,GAASxY,KAAKirD,eAAgB,CAEnC5rD,EAAIuF,CACJmpD,GAAOJ,IAMV,GAAI3tD,KAAKirD,eAAiBzyC,EAAO,CAChCnZ,EAAI8X,GAAKqB,EAAQxY,KAAKirD,gBAAgB,EAEtC,MAAO9zC,EAAI9X,IAAK8X,EACfnX,KAAK2a,qBAAqBxD,GAAK,GAO1Bm1C,GAAA/rD,UAAAgtD,aAAR,WAEC,GAAI0B,EACJ,IAAIC,GAAgClvD,KAAKkpD,oBAAoBmE,YAAY6B,WACzE,IAAI1zC,GAAwBxb,KAAKkpD,oBAAoBmE,YAAY8B,iBACjE,IAAIvqD,GAAasqD,EAAYtvD,OAASI,KAAKkpD,oBAAoBkG,iBAC/D,IAAIzE,GAAkB3qD,KAAKwrD,oBAC3B,IAAIf,GAAkBzqD,KAAKurD,qBAE3B,MAAMZ,GAAWF,GAChB,MAED,IAAI7lD,EAAM5E,KAAK6rD,eACdjnD,EAAM5E,KAAK6rD,cAEZ,KAAK,GAAIxsD,GAAW,EAAGA,EAAIuF,IAAOvF,EAAG,CACpC4vD,EAAQC,EAAalvD,KAAKkpD,oBAAoBkG,kBAAoB/vD,EAElE,IAAIsrD,EACH3qD,KAAKqK,OAAOglD,oBAAoBrvD,KAAKyrD,yBAAyBpsD,GAAI4vD,EAAMK,WAAYtvD,KAAKmhD,kBAAmBnhD,KAAKihD,cAElH,IAAIwJ,EACHzqD,KAAKqK,OAAOglD,oBAAoBrvD,KAAK0rD,0BAA0BrsD,GAAI4vD,EAAMM,YAAavvD,KAAKmhD,kBAAmBnhD,KAAKihD,eAGrH,IAAK5hD,EAAI,EAAGA,EAAIuF,IAAOvF,EACtBW,KAAK2a,qBAAqB3a,KAAK4rD,kBAAoBvsD,GAAKmc,EAAQxb,KAAKkpD,oBAAoBkG,kBAAoB/vD,GAEhH,OAAAitD,IA5VmCD,EA8VnCvsD,GAA8BJ,QAArB4sD,I3F+2TNkD,4CAA4C5mD,UAAUigD,2DAA2D,2DAA2D4G,qDAAqD,qDAAqDC,2CAA2C9mD,YAAY6mD,sDAAsD,SAAS7wD,EAAQkB,EAAOJ,G4FluU9Z,GAAOiwD,GAAe/wD,EAAc,uCACpC,IAAOkd,GAAmBld,EAAa,2CAKvC,IAAOgxD,GAAqBhxD,EAAY,gDAUxC,IAAO2kD,GAAkB3kD,EAAa,uD5F+tUtC,I4FltUMytD,GAAgB,WAuNrB,QAvNKA,GAuNOvP,EAAkC0G,EAA4BjiD,GAhNlEvB,KAAA6vD,eAAyB,IACzB7vD,MAAA8vD,gBAA0B,IAC1B9vD,MAAA+vD,qBAA8B,EAC9B/vD,MAAAgwD,uBAAgC,EAchChwD,MAAAiwD,gBAAyBL,EAAsBM,IAEhDlwD,MAAAsuD,qBAAqC,GAAIrjD,MA8CzCjL,MAAA4tD,SAAkB,GAClB5tD,MAAA6tD,SAAkB,GAClB7tD,MAAA8tD,SAAkB,GA8ElB9tD,MAAAsmD,sBAAgC,KAEhCtmD,MAAAua,mBAAmC,GAAItP,MACvCjL,MAAA2a,qBAAqC,GAAI1P,MA8D/CjL,MAAK2gD,iBAAmB7D,CACxB98C,MAAKmwD,YAAc3M,CACnBxjD,MAAKqK,OAAS9I,CACdvB,MAAKmU,QAAUnU,KAAKqK,OAAO8J,QAhN5BhS,OAAAC,eAAWiqD,EAAA9rD,UAAA,e5FiuUJ8B,I4FjuUP,WAEC,GAAIrC,KAAK8vD,gBACR9vD,KAAKowD,gBAEN,OAAOpwD,MAAKqwD,c5FiuUN3tD,WAAY,KACZC,aAAc,M4FphUd0pD,GAAA9rD,UAAAygD,sBAAP,WAEChhD,KAAKmwD,YAAYnP,sBAAsBhhD,MAWjCqsD,GAAA9rD,UAAA6sD,eAAP,SAAsBtQ,EAAkC0G,GAEvD,MAAO,IAAID,GAAmBzG,EAAiB0G,EAAYxjD,MAMrDqsD,GAAA9rD,UAAA8Q,MAAP,WAECrR,KAAKswD,uBAAyB,CAC9BtwD,MAAKonB,mBAAqB,CAC1BpnB,MAAKwoD,kBAAoB,CACzBxoD,MAAKolD,oBAAsB,CAC3BplD,MAAK0lD,eAAiB,CACtB1lD,MAAK4lD,wBAA0B,CAC/B5lD,MAAKqlD,sBAAwB,CAC7BrlD,MAAKwlD,qBAAuB,CAC5BxlD,MAAKknB,oBAAsB,CAC3BlnB,MAAKsmD,sBAAwB,KAC7BtmD,MAAKmV,sBAAwB,KAC7BnV,MAAKklD,iBAAmB,KACxBllD,MAAKmnB,eAAiB,KACtBnnB,MAAKglD,sBAAwB,MAGvBqH,GAAA9rD,UAAA4jD,qBAAP,WAECnkD,KAAKooD,kBAAoB,CACzBpoD;KAAKqnD,qBAAuB,CAC5BrnD,MAAK0mD,eAAiB,CACtB1mD,MAAK+mD,kBAAoB,CACzB/mD,MAAKgnD,wBAA0B,CAC/BhnD,MAAKuoD,mBAAqB,CAC1BvoD,MAAK0oD,kBAAoB,CACzB1oD,MAAKsoD,oBAAsB,CAC3BtoD,MAAKomD,kBAAoB,CACzBpmD,MAAK2nD,wBAA0B,EAMzB0E,GAAA9rD,UAAAkkD,iBAAP,SAAwB8L,EAAmCx7C,EAAoCE,EAAwCc,EAAiBC,GAGvJhW,KAAKoU,uBAAyBm8C,EAAcn8C,sBAC5CpU,MAAK0U,yBAA2B67C,EAAc77C,wBAC9C1U,MAAKsU,eAAiBi8C,EAAcj8C,cACpCtU,MAAKs3C,gBAAkBiZ,EAAcjZ,eACrCt3C,MAAKwU,gBAAkB+7C,EAAc/7C,eACrCxU,MAAK0U,yBAA2B67C,EAAc77C,wBAE9C1U,MAAK+U,qBAAuBA,CAC5B/U,MAAKiV,yBAA2BA,CAChCjV,MAAK+V,SAAWA,CAChB/V,MAAKgW,SAAWA,CAEhBhW,MAAKua,mBAAmB3a,OAASI,KAAKoU,uBAAuB,CAC7DpU,MAAK2a,qBAAqB/a,OAASI,KAAK0U,yBAAyB,CAGjE1U,MAAK2a,qBAAqB3a,KAAKooD,kBAAoB,EACnDpoD,MAAK2a,qBAAqB3a,KAAKooD,iBAAmB,GAAK,CACvDpoD,MAAK2a,qBAAqB3a,KAAKooD,iBAAmB,GAAK,EAAE,GACzDpoD,MAAK2a,qBAAqB3a,KAAKooD,iBAAmB,GAAK,CAGvD,IAAIpoD,KAAK+mD,kBAAoB,EAAG,CAC/B/mD,KAAKua,mBAAmBva,KAAK+mD,kBAAoB,CACjD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,EAGtD,GAAI/mD,KAAKqnD,qBAAuB,EAC/BrnD,KAAKua,mBAAmBva,KAAKqnD,oBAAsB,GAAK,EAOnDgF,GAAA9rD,UAAAy3C,WAAP,SAAkB/xC,GAEjB,GAAIjG,KAAKsiD,cACYtiD,KAAKmwD,YAAYlhD,aAAc/C,SAASlM,KAAMA,KAAKqK,OAExErK,MAAKqK,OAAOlC,QAAQqoD,WAAWxwD,KAAKuhD,aAAcqO,EAAsBa,KAAOzwD,KAAKiwD,gBAAiBhqD,EAAOyqD,WAAWC,iBAEvH,KAAK3wD,KAAKklD,kBAAoBllD,KAAKqnD,qBAAuB,EAAG,CAC5D,GAAItgB,GAAe9gC,EAAOY,aAE1B7G,MAAKua,mBAAmBva,KAAKqnD,qBAAuBtgB,EAAIhgC,CACxD/G,MAAKua,mBAAmBva,KAAKqnD,oBAAsB,GAAKtgB,EAAI9/B,CAC5DjH,MAAKua,mBAAmBva,KAAKqnD,oBAAsB,GAAKtgB,EAAI5/B,GAOvDklD,GAAA9rD,UAAA03C,aAAP,WAEC,GAAIj4C,KAAKsiD,cACYtiD,KAAKmwD,YAAYlhD,aAAc1C,WAAWvM,KAAMA,KAAKqK,QAYpEgiD,GAAA9rD,UAAAyD,SAAP,SAAgB2B,EAA2BM,EAAeuyC,GAEzD,GAAI7yC,EAAWu1C,gBAAgBzqB,SACd9qB,EAAWu1C,gBAAgBzqB,SAAUlgB,eAAevQ,KAAM2F,EAAY3F,KAAKqK,OAAQpE,EAAQjG,KAAKoU,uBAAwBpU,KAAKsU,eAE9I,IAAItU,KAAK0mD,eAAiB,EACzB1mD,KAAKqK,OAAOiU,eAAete,KAAK0mD,cAAe/gD,EAAW4Y,cAAczC,EAAoB6J,SAAUhgB,EAAW8Y,gBAAgB3C,EAAoB6J,SAAU7J,EAAoB80C,UAEpL,IAAI5wD,KAAKgnD,wBAA0B,EAClChnD,KAAKqK,OAAOiU,eAAete,KAAKgnD,uBAAwBrhD,EAAW4Y,cAAczC,EAAoBgK,mBAAoBngB,EAAW8Y,gBAAgB3C,EAAoBgK,mBAAoBhK,EAAoB+0C,oBAEjN,IAAI7wD,KAAKuoD,mBAAqB,EAC7BvoD,KAAKqK,OAAOiU,eAAete,KAAKuoD,kBAAmB5iD,EAAW4Y,cAAczC,EAAoB6M,aAAchjB,EAAW8Y,gBAAgB3C,EAAoB6M,aAAc7M,EAAoB8M,cAEhM,IAAI5oB,KAAKsoD,oBAAsB,EAC9BtoD,KAAKqK,OAAOiU,eAAete,KAAKsoD,mBAAoB3iD,EAAW4Y,cAAczC,EAAoBg1C,cAAenrD,EAAW8Y,gBAAgB3C,EAAoBg1C,cAAeh1C,EAAoBi1C,eAEnM,IAAI/wD,KAAK0oD,kBAAoB,EAC5B1oD,KAAKqK,OAAOiU,eAAete,KAAK0oD,iBAAkB/iD,EAAW4Y,cAAcoxC,EAAgBqB,YAAarrD,EAAW8Y,gBAAgBkxC,EAAgBqB,YAAarB,EAAgBsB,aAGjL,IAAIjxD,KAAKqV,gBAAiB,CACzB,GAAI67C,GAAqBvrD,EAAWu1C,gBAAgBgW,YAAY5lC,MAEhE,IAAI4lC,EAAa,CAChBlxD,KAAKua,mBAAmBva,KAAK+mD,kBAAoBmK,EAAY9xD,CAC7DY,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAKmK,EAAYhxD,CACjEF,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAKmK,EAAYjuC,EACjEjjB,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAKmK,EAAY9R,CACjEp/C,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAKmK,EAAYjxD,CACjED,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAKmK,EAAYhuC,OAC3D,CACNljB,KAAKua,mBAAmBva,KAAK+mD,kBAAoB,CACjD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,CACrD/mD,MAAKua,mBAAmBva,KAAK+mD,iBAAmB,GAAK,GAIvD,GAAI/mD,KAAK2nD,wBAA0B,EAClChiD,EAAWqhC,aAAaW,sBAAsBwpB,cAAcnxD,KAAKua,mBAAoBva,KAAK2nD,uBAAwB,MAEnH,IAAI3nD,KAAKklD,kBAAoBllD,KAAKqnD,qBAAuB,EAAG,CAE3D1hD,EAAWqhC,aAAaW,sBAAsBwpB,cAAcnxD,KAAKsuD,qBACjE,IAAIvnB,GAAe9gC,EAAOY,aAC1B,IAAIE,GAAWggC,EAAIhgC,CACnB,IAAIE,GAAW8/B,EAAI9/B,CACnB,IAAIE,GAAW4/B,EAAI5/B,CAEnBnH,MAAKua,mBAAmBva,KAAKqnD,qBAAuBrnD,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,GAAGnnD,EAAInH,KAAKsuD,qBAAqB,GACjLtuD,MAAKua,mBAAmBva,KAAKqnD,oBAAsB,GAAKrnD,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,GAAGnnD,EAAInH,KAAKsuD,qBAAqB,GACrLtuD,MAAKua,mBAAmBva,KAAKqnD,oBAAsB,GAAKrnD,KAAKsuD,qBAAqB,GAAGvnD,EAAI/G,KAAKsuD,qBAAqB,GAAGrnD,EAAIjH,KAAKsuD,qBAAqB,IAAInnD,EAAInH,KAAKsuD,qBAAqB,KAIjLjC,GAAA9rD,UAAAgiD,kBAAP,WAECviD,KAAK8vD,gBAAkB,KAGjBzD,GAAA9rD,UAAA6wD,iBAAP,WAECpxD,KAAK6vD,eAAiB,IACtB7vD,MAAK8vD,gBAAkB,KAGjBzD,GAAA9rD,UAAAwC,QAAP,WAEC/C,KAAKqwD,aAAattD,SAClB/C,MAAKqwD,aAAe,KAGbhE,GAAA9rD,UAAA6vD,eAAR,WAECpwD,KAAK8vD,gBAAkB,KAEvB,IAAIuB,EAEJ,IAAIrxD,KAAK6vD,eAAgB,CACxB7vD,KAAK6vD,eAAiB,KAEtBwB,GAAWrxD,KAAKotD,eAAeptD,KAAK2gD,iBAAkB3gD,KAAKmwD,YAC3DkB,GAASpN,UAGVjkD,KAAKsxD,mBAAmBD,EAAStjD,aAEjC,IAAIwpC,GAA0Bv3C,KAAKqK,OAAOknD,eAAevxD,KAAK+vD,qBAAuBsB,EAASG,WAAYH,EAASI,aAAezxD,KAAKgwD,uBAAyBqB,EAASK,0BAGzK,IAAI1xD,KAAKqwD,cAAgB9Y,EAAa,CACrC,GAAIv3C,KAAKqwD,aACRrwD,KAAKqwD,aAAattD,SAEnB/C,MAAKqwD,aAAe9Y,CAEpBA,GAAYoa,UAINtF,GAAA9rD,UAAA+wD,mBAAR,SAA2BvjD,GAG1B/N,KAAK+vD,qBAAuB,EAC5B/vD,MAAKgwD,uBAAyB,EAG9B,IAAIhwD,KAAKsiD,cAAe,CAEvB,GAAIrzC,GAAmDjP,KAAKmwD,YAAYlhD,YAExEjP,MAAK+vD,sBAAwB9gD,EAAarB,kBAAkB5N,KAE5D,IAAIA,KAAK0lD,eAAiB,IAAM1lD,KAAKqV,gBACpCrV,KAAK+vD,sBAAwB9gD,EAAajB,cAAchO,KAEzD,IAAIA,KAAKmV,sBACRnV,KAAKgwD,wBAA0B/gD,EAAanB,oBAAoB9N,KAAM+N,EAEvEkB,GAAahB,aAAajO,UAEpB,C5F49TG,G4Fz9TL4E,GAAa5E,KAAK+U,qBAAqBnV,MAC3C,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,IAAOvF,EACjCW,KAAK+vD,sBAAwB,OAAS/vD,KAAKiV,yBAAyB5V,GAAK,KAAOW,KAAK+U,qBAAqB1V,GAAK,IAEhH,IAAIW,KAAK0lD,eAAiB,IAAM1lD,KAAKqV,gBACpCrV,KAAK+vD,sBAAwB,OAAS/vD,KAAKgW,SAAW,IAAMhW,KAAK+V,SAAW,MAGhF,OAAAs2C,KAE0BvsD,GAAAJ,QAAjB2sD,I5F29TNuF,uCAAuChpD,UAAUod,2CAA2Cpd,UAAUy6C,uDAAuD,uDAAuDwO,gDAAgDjpD,YAAY6iB,yDAAyD,SAAS7sB,EAAQkB,EAAOJ,G6Fh/UpW,GAAO89C,GAAY5+C,EAAe,iDAClC,IAAOmqB,GAAqBnqB,EAAY,0D7Fq/UxC,I6Fh/UMkqB,GAAmB,WA4BxB,QA5BKA,GA4BO3U,GAZJnU,KAAA8xD,wBAAiC,CACjC9xD,MAAA+xD,0BAAmC,CACnC/xD,MAAAg2C,gBAAyB,CACzBh2C,MAAAi2C,iBAA0B,CAC1Bj2C,MAAAgyD,iBAA0B,CAUjChyD,MAAKiyD,SAAW99C,EAMV2U,EAAAvoB,UAAA8Q,MAAP,WAECrR,KAAKkyD,mBAAqB,GAAI1U,GAAa,KAAM,EAAG,MACpDx9C,MAAKmyD,iBAAmB,GAAI3U,GAAa,KAAM,EAAG,MAClDx9C,MAAKoyD,cAAgB,GAAI5U,GAAa,IAAK,EAC3Cx9C,MAAKqyD,cAAgB,GAAI7U,GAAa,KAAM,EAC5Cx9C,MAAKsyD,uBAAyB,GAAI9U,GAAa,KAAM,EACrDx9C,MAAKuyD,wBAA0B,GAAI/U,GAAa,KAAM,GACtDx9C,MAAKwyD,sBAAwB,GAAIhV,GAAa,KAAM,IACpDx9C,MAAKyyD,wBAA0B,GAAI1pC,GAAsB,MAAO,EAChE/oB,MAAK0yD,sBAAwB,GAAI3pC,GAAsB,MAAO,EAC9D/oB,MAAK8xD,wBAA0B,CAC/B9xD,MAAKg2C,gBAAkB,CACvBh2C,MAAKi2C,iBAAmB,CACxBj2C,MAAKgyD,iBAAmB,CACxBhyD,MAAK+xD,0BAA4B,CAEjC,IAAI1yD,EAEJ,KAAKA,EAAI,EAAGA,EAAIW,KAAK2yD,0BAA2BtzD,EAC/CW,KAAKswB,wBAEN,KAAKjxB,EAAI,EAAGA,EAAIW,KAAK4yD,wBAAyBvzD,EAC7CW,KAAKupB,uBAEN,KAAKlqB,EAAI,EAAGA,EAAIW,KAAK6yD,kBAAmBxzD,EACvCW,KAAKwqB,gBAEN,KAAKnrB,EAAI,EAAGA,EAAIW,KAAK8yD,0BAA2BzzD,EAC/CW,KAAKmoD,0BAMAr/B,GAAAvoB,UAAAwC,QAAP,WAEC/C,KAAKkyD,mBAAmBnvD,SACxB/C,MAAKmyD,iBAAiBpvD,SACtB/C,MAAKoyD,cAAcrvD,SACnB/C,MAAKuyD,wBAAwBxvD,SAC7B/C,MAAKsyD,uBAAuBvvD,SAE5B/C,MAAKkyD,mBAAqB,IAC1BlyD,MAAKmyD,iBAAmB,IACxBnyD,MAAKoyD,cAAgB,IACrBpyD,MAAKuyD,wBAA0B,IAC/BvyD,MAAKsyD,uBAAyB,IAC9BtyD,MAAKyyD,wBAA0B,IAC/BzyD,MAAK0yD,sBAAwB,KASvB5pC,GAAAvoB,UAAAqqB,sBAAP,SAA6B2zB,EAAgCC,GAE5Dx+C,KAAKkyD,mBAAmB5T,SAASC,EAAUC,GAOrC11B,GAAAvoB,UAAAikD,wBAAP,SAA+BjG,GAE9Bv+C,KAAKkyD,mBAAmBxT,YAAYH,GAS9Bz1B,GAAAvoB,UAAA8oB,oBAAP,SAA2Bk1B,EAAgCC,GAE1Dx+C,KAAKmyD,iBAAiB7T,SAASC,EAAUC,GAOnC11B,GAAAvoB,UAAAiwB,sBAAP,SAA6B+tB,GAE5Bv+C,KAAKmyD,iBAAiBzT,YAAYH,GAO5Bz1B,GAAAvoB,UAAA+kD,0BAAP,WAEC,MAAOtlD,MAAKkyD,mBAAmBnU,uBAMzBj1B,GAAAvoB,UAAAwyD,0BAAP,WAEC,MAAO/yD,MAAKkyD,mBAAmB/T,0BAMzBr1B,GAAAvoB,UAAAiqB,eAAP,aAEGxqB,KAAKgyD,gBACP,OAAOhyD,MAAKoyD,cAAcrU,uBAMpBj1B,GAAAvoB,UAAA4nD,wBAAP,aAEGnoD,KAAK+xD,yBACP,OAAO/xD,MAAKuyD,wBAAwBxU,uBAM9Bj1B,GAAAvoB,UAAAgpB,sBAAP,aAEGvpB,KAAK8xD,uBACP,OAAO9xD,MAAKwyD,sBAAsBzU,uBAM5Bj1B,GAAAvoB,UAAAopB,wBAAP,WAEC,MAAO3pB,MAAKmyD,iBAAiBpU,uBAMvBj1B,GAAAvoB,UAAA6zB,wBAAP,WAEC,MAAOp0B,MAAKmyD,iBAAiBhU,0BAMvBr1B,GAAAvoB,UAAA+vB,uBAAP,aAEGtwB,KAAKg2C,eACP,OAAOh2C,MAAKsyD,uBAAuBvU,uBAM7Bj1B,GAAAvoB,UAAAurD,kBAAP,aAEG9rD,KAAKi2C,gBACP,OAAOj2C,MAAKqyD,cAActU,uBAM3B57C,QAAAC,eAAW0mB,EAAAvoB,UAAA,wB7F07UJ8B,I6F17UP,WAEC,MAAOrC,MAAK4yD,uB7F27UNrwD,I6Fx7UP,SAAgCiO,GAE/BxQ,KAAK4yD,sBAAwBpiD,G7Fy7UvB9N,WAAY,KACZC,aAAc,M6Fp7UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,0B7F07UJ8B,I6F17UP,WAEC,MAAOrC,MAAK2yD,yB7F27UNpwD,I6Fx7UP,SAAkCC,GAEjCxC,KAAK2yD,wBAA0BnwD,G7Fy7UzBE,WAAY,KACZC,aAAc,M6Fp7UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,kB7F07UJ8B,I6F17UP,WAEC,MAAOrC,MAAK6yD,iB7F27UNtwD,I6Fx7UP,SAA0BC,GAEzBxC,KAAK6yD,gBAAkBrwD,G7Fy7UjBE,WAAY,KACZC,aAAc,M6Fp7UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,0B7F07UJ8B,I6F17UP,WAEC,MAAOrC,MAAK8yD,yB7F27UNvwD,I6Fx7UP,SAAkCC,GAEjCxC,KAAK8yD,wBAA0BtwD,G7Fy7UzBE,WAAY,KACZC,aAAc,M6Fp7UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,0B7F07UJ8B,I6F17UP,WAEC,MAAOrC,MAAKyyD,yB7F27UN/vD,WAAY,KACZC,aAAc,M6Ft7UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,0B7F47UJ8B,I6F57UP,WAEC,MAAOrC,MAAK8xD,yB7F67UNpvD,WAAY,KACZC,aAAc,M6Fx7UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,4B7F87UJ8B,I6F97UP,WAEC,MAAOrC,MAAK+xD,2B7F+7UNrvD,WAAY,KACZC,aAAc,M6F17UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,kB7Fg8UJ8B,I6Fh8UP,WAEC,MAAOrC,MAAKg2C,iB7Fi8UNtzC,WAAY,KACZC,aAAc,M6F57UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,mB7Fk8UJ8B,I6Fl8UP,WAEC,MAAOrC,MAAKi2C,kB7Fm8UNvzC,WAAY,KACZC,aAAc,M6F97UrBR,QAAAC,eAAW0mB,EAAAvoB,UAAA,mB7Fo8UJ8B,I6Fp8UP,WAEC,MAAOrC,MAAKgyD,kB7Fq8UNtvD,WAAY,KACZC,aAAc,M6Fp8UtB,OAAAmmB,KAEAhpB,GAA6BJ,QAApBopB,I7Fy8UNy0B,iDAAiD,iDAAiD7xB,0DAA0D,4DAA4Dk9B,wDAAwD,SAAShqD,EAAQkB,EAAOJ,GAI3S,G8FjwVM4jD,GAAkB,WA0BvB,QA1BKA,MA8BN,MAAAA,KAE4BxjD,GAAAJ,QAAnB4jD,O9FyuVH53B,2DAA2D,SAAS9sB,EAAQkB,EAAOJ,GAIzF,G+F/wVMqpB,GAAqB,WAiB1B,QAjBKA,GAiBOO,EAAgB9S,EAAcw8C,GAAA,GAAAA,QAAA,GAAqB,CAArBA,GAAoB,EAE7DhzD,KAAKy+C,WAAauU,CAClBhzD,MAAK29C,SAAWr0B,CAChBtpB,MAAKkrB,OAAS1U,CAEdxW,MAAKizD,OAASjzD,KAAK29C,QAEnB,IAAI39C,KAAKkrB,QAAU,EAClBlrB,KAAKizD,QAAUjzD,KAAKkrB,MAErB,IAAI8nC,GAAa,EAChBhzD,KAAKizD,QAAU,IAAMlqC,EAAsBmqC,WAAWF,GAMjDjqC,EAAAxoB,UAAA2V,SAAP,WAEC,MAAOlW,MAAKizD,OAMb9wD,QAAAC,eAAW2mB,EAAAxoB,UAAA,W/FiwVJ8B,I+FjwVP,WAEC,MAAOrC,MAAK29C,U/FkwVNj7C,WAAY,KACZC,aAAc,M+F7vVrBR,QAAAC,eAAW2mB,EAAAxoB,UAAA,S/FmwVJ8B,I+FnwVP,WAEC,MAAOrC,MAAKkrB,Q/FowVNxoB,WAAY,KACZC,aAAc,M+FpzVNomB,GAAAmqC,YAAc,IAAK,IAAK,IAAK,IAiD7C,OAAAnqC,KAE+BjpB,GAAAJ,QAAtBqpB,O/FywVHoqC,wDAAwD,SAASv0D,EAAQkB,EAAOJ,GACtF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgG10VtB,IAAOi/C,GAAS1gD,EAAe,iCAK/B,IAAO89C,GAAgB99C,EAAc,qDAGrC,IAAOw0D,GAAUx0D,EAAe,0ChG20VhC,IgGr0VMy0D,GAAkB,SAAAhyD,GAAStB,EAA3BszD,EAAkBhyD,EASvB,SATKgyD,GASOxW,EAAuBj3C,EAAsCk3C,EAAkCv7C,GAE1GF,EAAA1B,KAAAK,KAAM68C,EAAMj3C,EAAmBk3C,EAAiBv7C,EAEhDvB,MAAK2/C,YAAc,GAAIyT,GAAWpzD,KAAM4F,EAAmBk3C,EAAiB98C,KAAKqK,OAEjFrK,MAAK+8C,gBAAgB/8C,KAAK2/C,aAMpB0T,EAAA9yD,UAAAq/C,qBAAP,WAECv+C,EAAAd,UAAMq/C,qBAAoBjgD,KAAAK,KAE1BA,MAAK6/C,mBAAsB7/C,KAAKy6C,mBAAmBh0B,WAAa64B,EAAUQ,MAE1E9/C,MAAK2/C,YAAYO,aAAclgD,KAAKy6C,mBAAmBh0B,WAAa64B,EAAUQ,QAAU9/C,KAAK6/C,mBAAqBP,EAAUa,MAAQngD,KAAKy6C,mBAAmBh0B,WAtB/I4sC,GAAArjD,GAAY,QAwB3B,OAAAqjD,IA7BiC3W,EA+BjC58C,GAA4BJ,QAAnB2zD,IhG8zVNjT,iCAAiCx3C,UAAUo0C,qDAAqD,qDAAqDsW,0CAA0C,4CAA4C3kD,kDAAkD,SAAS/P,EAAQkB,EAAOJ,GACxT,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiGh3VtB,IAAOd,GAAKX,EAAgB,+BAE5B,IAAMmO,GAAiB,SAAA1L,GAAStB,EAA1BgN,EAAiB1L,EAEtB,SAFK0L,GAEOwmD,GAEXlyD,EAAA1B,KAAAK,KAAMuzD,GAER,MAAAxmD,IANgCxN,EAQLO,GAAAJ,QAAlBqN,IjGm3VNymD,+BAA+B5qD,YAAYwd,oDAAoD,SAASxnB,EAAQkB,EAAOJ,GAC1H,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkGh4VtB,IAAOwJ,GAAKjL,EAAiB,+BlGs4V7B,IkG93VMsd,GAAmB,SAAA7a,GAAStB,EAA5Bmc,EAAmB7a,EAoBxB,SApBK6a,GAoBOmJ,EAAaoL,EAAuBlL,EAAgCD,GAE/EjkB,EAAA1B,KAAAK,KAAMqlB,EAENrlB,MAAKyzD,UAAYhjC,CACjBzwB,MAAK0zD,gBAAkBnuC,CACvBvlB,MAAK2zD,eAAiBruC,EAMvBnjB,OAAAC,eAAW8Z,EAAA3b,UAAA,YlGi3VJ8B,IkGj3VP,WAEC,MAAOrC,MAAKyzD,WlGk3VN/wD,WAAY,KACZC,aAAc,MkG72VrBR,QAAAC,eAAW8Z,EAAA3b,UAAA,kBlGm3VJ8B,IkGn3VP,WAEC,MAAOrC,MAAK0zD,iBlGo3VNhxD,WAAY,KACZC,aAAc,MkG/2VrBR,QAAAC,eAAW8Z,EAAA3b,UAAA,iBlGq3VJ8B,IkGr3VP,WAEC,MAAOrC,MAAK2zD,gBlGs3VNjxD,WAAY,KACZC,aAAc,MkG/2VduZ,GAAA3b,UAAAmH,MAAP,WAEC,MAAO,IAAIwU,GAAoBlc,KAAKqlB,KAAMrlB,KAAKyzD,UAAWzzD,KAAK0zD,gBAAiB1zD,KAAK2zD,gBAvDxEz3C,GAAAgpB,kBAA2B,kBAE3BhpB,GAAA0B,oBAA6B,oBAuD5C,OAAA1B,IA9DkCrS,EAgElC/J,GAA6BJ,QAApBwc,IlG63VNzP,+BAA+B7D,YAAY4J,8CAA8C,SAAS5T,EAAQkB,EAAOJ,GACpH,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmG58VtB,IAAOwJ,GAAKjL,EAAgB,+BnGk9V5B,ImG38VMmQ,GAAa,SAAA1N,GAAStB,EAAtBgP,EAAa1N,EAyBlB,SAzBK0N,GAyBOsW,EAAaoL,GAExBpvB,EAAA1B,KAAAK,KAAMqlB,EACNrlB,MAAKyzD,UAAYhjC,EAGlBtuB,OAAAC,eAAW2M,EAAAxO,UAAA,YnGy7VJ8B,ImGz7VP,WAEC,MAAOrC,MAAKyzD,WnG07VN/wD,WAAY,KACZC,aAAc,MmGn7VdoM,GAAAxO,UAAAmH,MAAP,WAEC,MAAO,IAAIqH,GAAc/O,KAAKqlB,KAAMrlB,KAAKyzD,WAtC5B1kD,GAAA6B,MAAe,OAKf7B,GAAAgC,KAAc,MAKdhC,GAAAkD,eAAwB,gBA8BvC,OAAAlD,IA7C4BlF,EA+C5B/J,GAAuBJ,QAAdqP,InGw8VNtC,+BAA+B7D,YAAYgrD,mDAAmD,SAASh1D,EAAQkB,EAAOJ,GACzH,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoGngWtB,IAAOwJ,GAAKjL,EAAgB,+BAE5B,IAAMi1D,GAAkB,SAAAxyD,GAAStB,EAA3B8zD,EAAkBxyD,EAIvB,SAJKwyD,GAIOxuC,GAGXhkB,EAAA1B,KAAAK,KAAMqlB,GALOwuC,EAAAC,mBAA4B,mBAQ3C,OAAAD,IAViChqD,EAYjC/J,GAA4BJ,QAAnBm0D,IpGmgWNpnD,+BAA+B7D,YAAYmrD,8CAA8C,SAASn1D,EAAQkB,EAAOJ,GqG1gWpH,GAAMs0D,GAAY,WAOjB,QAPKA,KASJh0D,KAAKgL,OAAS,GAAIC,OAGnB9I,OAAAC,eAAW4xD,EAAAzzD,UAAA,sBrGogWJ8B,IqGpgWP,WAEC,MAAOrC,MAAKyK,qBrGqgWN/H,WAAY,KACZC,aAAc,MqGngWdqxD,GAAAzzD,UAAA0zD,SAAP,SAAgB/oD,GAEflL,KAAKgL,OAAOwD,KAAKtD,EAEjB,IAAIlL,KAAKyK,qBAAuB,KAC/BzK,KAAKyK,oBAAsBS,EAAOhI,mBAGpCf,QAAAC,eAAW4xD,EAAAzzD,UAAA,SrGmgWJ8B,IqGngWP,WAEC,MAAOrC,MAAKgL,QrGogWNtI,WAAY,KACZC,aAAc,MqGlgWdqxD,GAAAzzD,UAAAmK,oBAAP,SAA2BnJ,GAE1B,MAAOvB,MAAKgL,OAAO,GAAGN,oBAAoBnJ,GAG3CY,QAAAC,eAAW4xD,EAAAzzD,UAAA,gBrGmgWJ8B,IqGngWP,WAEC,MAAOrC,MAAKk0D,erGogWN3xD,IqGjgWP,SAAwBC,GAEvBxC,KAAKk0D,cAAgB1xD,CAErB,KAAK,GAAInD,GAAW,EAAGA,EAAIW,KAAKgL,OAAOpL,SAAUP,EAChDW,KAAKgL,OAAO3L,GAAGoJ,aAAejG,GrGigWzBE,WAAY,KACZC,aAAc,MqG//VrBR,QAAAC,eAAW4xD,EAAAzzD,UAAA,iBrGkgWJ8B,IqGlgWP,WAEC,MAAOrC,MAAKm0D,gBrGmgWN5xD,IqGhgWP,SAAyBC,GAExBxC,KAAKm0D,eAAiB3xD,CAEtB,KAAK,GAAInD,GAAW,EAAGA,EAAIW,KAAKgL,OAAOpL,SAAUP,EAChDW,KAAKgL,OAAO3L,GAAGqJ,cAAgBlG,GrGggW1BE,WAAY,KACZC,aAAc,MqG7/VdqxD,GAAAzzD,UAAA4K,iBAAP,SAAwBipD,EAAqB7yD,GAE5CvB,KAAKgL,OAAOhL,KAAKgL,OAAOpL,OAAS,GAAGyE,OAAS+vD,EAGvCJ,GAAAzzD,UAAAwC,QAAP,WAEC,IAAK,GAAI1D,GAAW,EAAGA,EAAIW,KAAKgL,OAAOpL,SAAUP,EAChDW,KAAKgL,OAAO3L,GAAG0D,UAGVixD,GAAAzzD,UAAAoL,OAAP,SAAcpK,EAAa0E,IAI5B,OAAA+tD,KAEsBl0D,GAAAJ,QAAbs0D,OrG6/VHK,wDAAwD,SAASz1D,EAAQkB,EAAOJ,GsGnlWtF,GAAOoN,GAAmBlO,EAAa,6CAMvC,IAAOi3C,GAAiBj3C,EAAa,uDACrC,IAAO01D,GAAsB11D,EAAY,iDAKzC,IAAM21D,GAAgB,WAerB,QAfKA,GAeOrxD,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,MAXJlD,KAAAw0D,qBAA8B,CAC9Bx0D,MAAAy0D,sBAA+B,CAC/Bz0D,MAAAk0D,eAAwB,CACxBl0D,MAAAm0D,gBAAyB,CACzBn0D,MAAA00D,0BAAoC,IACpC10D,MAAA20D,kBAA4B,IAI5B30D,MAAA40D,cAAuB,CAK9B50D,MAAKyK,oBAAsBvH,EAO5Bf,OAAAC,eAAWmyD,EAAAh0D,UAAA,gBtGkkWJ8B,IsGlkWP,WAEC,MAAOrC,MAAK40D,etGmkWNryD,IsGhkWP,SAAwBC,GAEvB,GAAIxC,KAAK40D,eAAiBpyD,EACzB,MAEDxC,MAAK40D,cAAgBpyD,CACrBxC,MAAKw0D,oBAAsBx0D,KAAKk0D,eAAiBl0D,KAAK40D,aACtD50D,MAAKy0D,qBAAuBz0D,KAAKm0D,gBAAkBn0D,KAAK40D,aACxD50D,MAAK00D,0BAA4B,MtGgkW3BhyD,WAAY,KACZC,aAAc,MsG9jWrBR,QAAAC,eAAWmyD,EAAAh0D,UAAA,UtGikWJ8B,IsGjkWP,WAEC,MAAOrC,MAAK60D,StGkkWNtyD,IsG/jWP,SAAkBC,GAEjBxC,KAAK60D,QAAUryD,GtGgkWTE,WAAY,KACZC,aAAc,MsG9jWrBR,QAAAC,eAAWmyD,EAAAh0D,UAAA,gBtGikWJ8B,IsGjkWP,WAEC,MAAOrC,MAAKk0D,etGkkWN3xD,IsG/jWP,SAAwBC,GAEvB,GAAIxC,KAAKk0D,eAAiB1xD,EACzB,MAEDxC,MAAKk0D,cAAgB1xD,CACrBxC,MAAKw0D,oBAAsBx0D,KAAKk0D,eAAiBl0D,KAAK40D,aACtD50D,MAAK00D,0BAA4B,MtG+jW3BhyD,WAAY,KACZC,aAAc,MsG7jWrBR,QAAAC,eAAWmyD,EAAAh0D,UAAA,iBtGgkWJ8B,IsGhkWP,WAEC,MAAOrC,MAAKm0D,gBtGikWN5xD,IsG9jWP,SAAyBC,GAExB,GAAIxC,KAAKm0D,gBAAkB3xD,EAC1B,MAEDxC,MAAKm0D,eAAiB3xD,CACtBxC,MAAKy0D,qBAAuBz0D,KAAKm0D,gBAAkBn0D,KAAK40D,aACxD50D,MAAK00D,0BAA4B,MtG8jW3BhyD,WAAY,KACZC,aAAc,MsG5jWd4xD,GAAAh0D,UAAAmK,oBAAP,SAA2BnJ,GAE1B,GAAIvB,KAAK00D,0BACR10D,KAAK80D,gBAAgBvzD,EAEtB,OAAOvB,MAAK6K,kBAGN0pD,GAAAh0D,UAAAwC,QAAP,WAEC,GAAI/C,KAAK6K,kBACR7K,KAAK6K,kBAAkB9H,SAExB,IAAI/C,KAAK+0D,WACR/0D,KAAK+0D,WAAWhyD,UAGXwxD,GAAAh0D,UAAAy0D,mBAAP,WAECh1D,KAAK20D,kBAAoB,KAGnBJ,GAAAh0D,UAAA00D,eAAP,SAAsB1zD,GAErB,GAAIvB,KAAK+0D,WACR/0D,KAAK+0D,WAAWhyD,SAEjB/C,MAAK+0D,WAAaxzD,EAAM4G,QAAQsvC,eAEhC,IAAIC,IAA4B,GAAI7B,IAAoB8B,SAAS,kBAAoB33C,KAAKk1D,iBAAmB,WAAY,UAAU9pC,IACnI,IAAIysB,IAA8B,GAAIhC,IAAoB8B,SAAS,oBAAsB33C,KAAKm1D,mBAAqB,WAAY,YAAY/pC,IAC3IprB,MAAK+0D,WAAWhd,OAAOL,EAAgBG,EACvC73C,MAAK20D,kBAAoB,MAGnBJ,GAAAh0D,UAAA20D,eAAP,WAIC,MAAO,gBAAkB,gBAGnBX,GAAAh0D,UAAA40D,iBAAP,WAEC,KAAM,IAAIroD,EAEV,OAAO,MAGDynD,GAAAh0D,UAAAu0D,gBAAP,SAAuBvzD,GAEtB,GAAIvB,KAAK6K,kBACR7K,KAAK6K,kBAAkB9H,SAExB/C,MAAK6K,kBAAoBtJ,EAAM4G,QAAQitD,cAAcp1D,KAAKw0D,oBAAqBx0D,KAAKy0D,qBAAsBH,EAAuBe,KAAM,KAEvIr1D,MAAK00D,0BAA4B,MAG3BH,GAAAh0D,UAAA0L,WAAP,SAAkB1K,GAEjB,GAAIvB,KAAK20D,kBACR30D,KAAKi1D,eAAe1zD,EAErB,OAAOvB,MAAK+0D,WAGNR,GAAAh0D,UAAA2L,SAAP,SAAgB3K,EAAa0E,EAAeqF,IAIrCipD,GAAAh0D,UAAAgM,WAAP,SAAkBhL,IAIlBY,QAAAC,eAAWmyD,EAAAh0D,UAAA,sBtGkiWJ8B,IsGliWP,WAEC,MAAOrC,MAAKyK,qBtGmiWN/H,WAAY,KACZC,aAAc,MsGjiWtB,OAAA4xD,KAEAz0D,GAA0BJ,QAAjB60D,ItGsiWN9lD,6CAA6C7F,UAAU0zC,uDAAuD1zC,UAAU0sD,iDAAiD1sD,YAAYO,mDAAmD,SAASvK,EAAQkB,EAAOJ,GACnQ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuG1tWtB,IAAOi1C,GAAS12C,EAAe,iCAC/B,IAAOiL,GAAKjL,EAAgB,+BAC5B,IAAO22C,GAAe32C,EAAc,yCACpC,IAAO22D,GAAY32D,EAAe,qCAOlC,IAAMuC,GAAgB,SAAAE,GAAStB,EAAzBoB,EAAgBE,EAmBrB,SAnBKF,GAmBOI,GAEXF,EAAA1B,KAAAK,KAZOA,MAAAw1D,YAAqB,CACrBx1D,MAAAy1D,aAAsB,CACtBz1D,MAAAk0D,eAAwB,CACxBl0D,MAAAm0D,gBAAyB,CAEzBn0D,MAAA01D,gBAA0B,IASjC11D,MAAK21D,qBAAuB,GAAIrgB,EAEhCt1C,MAAKqK,OAAS9I,EAIDJ,EAAAmH,YAAd,SAA0B/G,GAEzB,IAAKA,EACJ,KAAM,IAAIhC,OAAM,4BAEjB,IAAI4B,EAAiBy0D,YAAc,KAClCz0D,EAAiBy0D,WAAa,GAAI3qD,MAEnC,IAAI4qD,GAAoC10D,EAAiB20D,6BAA6Bv0D,EAEtF,IAAIs0D,GAAoB,KAAM,CAC7BA,EAAmB,GAAI10D,GAAiBI,EAExC,IAAIw0D,GAAwB,GAAIC,EAEhCD,GAAGE,QAAU10D,CACbw0D,GAAGG,OAASL,CAEZ10D,GAAiBy0D,WAAWpnD,KAAKunD,GAGlC,MAAOF,GAIO10D,GAAA20D,6BAAf,SAA4Cv0D,GAG3C,GAAI9B,GAAW0B,EAAiBy0D,WAAWh2D,MAC3C,IAAIZ,EAEJ,KAAK,GAAIogD,GAAW,EAAGA,EAAI3/C,EAAG2/C,IAAK,CAClCpgD,EAAImC,EAAiBy0D,WAAYxW,EAEjC,IAAIpgD,EAAEi3D,UAAY10D,EACjB,MAAOvC,GAAEk3D,OAGX,MAAO,MAGO/0D,GAAAg1D,uBAAf,SAAsC50D,GAErC,GAAI9B,GAAW0B,EAAiBy0D,WAAWh2D,MAC3C,IAAIZ,EAEJ,KAAK,GAAIogD,GAAW,EAAGA,EAAI3/C,EAAG2/C,IAAK,CAClCpgD,EAAImC,EAAiBy0D,WAAYxW,EAEjC,IAAIpgD,EAAEi3D,UAAY10D,EAAO,CACxBJ,EAAiBy0D,WAAWlkD,OAAO0tC,EAAG,EACtC,UAKHj9C,QAAAC,eAAWjB,EAAAZ,UAAA,iBvGkrWJ8B,IuGlrWP,WAEC,GAAIrC,KAAK01D,gBACR11D,KAAKo2D,kBAEN,OAAOp2D,MAAKq2D,gBvGkrWN3zD,WAAY,KACZC,aAAc,MuGhrWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,iBvGmrWJ8B,IuGnrWP,WAEC,GAAIrC,KAAK01D,gBACR11D,KAAKo2D,kBAEN,OAAOp2D,MAAKs2D,gBvGmrWN5zD,WAAY,KACZC,aAAc,MuGjrWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,avGorWJ8B,IuGprWP,WAEC,MAAOrC,MAAKw1D,YvGqrWNjzD,IuGlrWP,SAAqBC,GAEpB,GAAIA,GAASxC,KAAKw1D,WACjB,MAEDx1D,MAAKw1D,WAAahzD,CAElBxC,MAAK01D,gBAAkB,IAEvB11D,MAAKk0D,cAAgBqB,EAAagB,gBAAgBv2D,KAAKw1D,WAEvD,IAAIx1D,KAAKk0D,cAAgBl0D,KAAKw1D,WAAY,CACzCx1D,KAAK21D,qBAAqB5uD,EAAIM,KAAKw9B,OAAO7kC,KAAKk0D,cAAgBl0D,KAAKw1D,YAAY,GAChFx1D,MAAK21D,qBAAqBj0D,MAAQ1B,KAAKw1D,eACjC,CACNx1D,KAAK21D,qBAAqB5uD,EAAI,CAC9B/G,MAAK21D,qBAAqBj0D,MAAQ1B,KAAKk0D,cAGxCl0D,KAAK8Q,cAAc,GAAIjH,GAAMA,EAAMW,UvG+qW7B9H,WAAY,KACZC,aAAc,MuG7qWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,cvGgrWJ8B,IuGhrWP,WAEC,MAAOrC,MAAKy1D,avGirWNlzD,IuG9qWP,SAAsBC,GAErB,GAAIA,GAASxC,KAAKy1D,YACjB,MAEDz1D,MAAKy1D,YAAcjzD,CAEnBxC,MAAK01D,gBAAkB,IAEvB11D,MAAKm0D,eAAiBoB,EAAagB,gBAAgBv2D,KAAKy1D,YAExD,IAAIz1D,KAAKm0D,eAAiBn0D,KAAKy1D,YAAa,CAC3Cz1D,KAAK21D,qBAAqB1uD,EAAII,KAAKw9B,OAAO7kC,KAAKm0D,eAAiBn0D,KAAKy1D,aAAa,GAClFz1D,MAAK21D,qBAAqB3zD,OAAShC,KAAKy1D,gBAClC,CACNz1D,KAAK21D,qBAAqB1uD,EAAI,CAC9BjH,MAAK21D,qBAAqB3zD,OAAShC,KAAKm0D,eAGzCn0D,KAAK8Q,cAAc,GAAIjH,GAAMA,EAAMW,UvG2qW7B9H,WAAY,KACZC,aAAc,MuGzqWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,+BvG4qWJ8B,IuG5qWP,WAEC,GAAIrC,KAAK01D,gBACR11D,KAAKo2D,kBAEN,OAAOp2D,MAAKw2D,8BvG4qWN9zD,WAAY,KACZC,aAAc,MuG1qWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,8BvG6qWJ8B,IuG7qWP,WAEC,GAAIrC,KAAK01D,gBACR11D,KAAKo2D,kBAEN,OAAOp2D,MAAKy2D,6BvG6qWN/zD,WAAY,KACZC,aAAc,MuG1qWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,evG6qWJ8B,IuG7qWP,WAEC,MAAOrC,MAAK02D,cvG8qWNh0D,WAAY,KACZC,aAAc,MuG5qWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,uBvG+qWJ8B,IuG/qWP,WAEC,GAAIrC,KAAK01D,gBACR11D,KAAKo2D,kBAEN,OAAOp2D,MAAK21D,sBvG+qWNjzD,WAAY,KACZC,aAAc,MuG7qWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,gBvGgrWJ8B,IuGhrWP,WAEC,MAAOrC,MAAKk0D,evGirWNxxD,WAAY,KACZC,aAAc,MuG/qWrBR,QAAAC,eAAWjB,EAAAZ,UAAA,iBvGkrWJ8B,IuGlrWP,WAEC,MAAOrC,MAAKm0D,gBvGmrWNzxD,WAAY,KACZC,aAAc,MuGjrWdxB,GAAAZ,UAAAwC,QAAP,WAEC5B,EAAiBg1D,uBAAuBn2D,KAAKqK,OAE7C,IAAIrK,KAAK02D,aAAc,CACtB12D,KAAK02D,aAAa3zD,SAClB/C,MAAKy2D,4BAA4B1zD,SACjC/C,MAAKw2D,6BAA6BzzD,SAClC/C,MAAKy2D,4BAA8B,IACnCz2D,MAAKw2D,6BAA+B,IACpCx2D,MAAK02D,aAAe,MAOdv1D,GAAAZ,UAAA61D,iBAAR,WAEC,GAAIjuD,GAAqBnI,KAAKqK,OAAOlC,OACrC,IAAIwuD,EACJ,IAAIC,EAEJ,IAAI7vD,EACJ,IAAIE,EAEJ,IAAIjH,KAAKw2D,8BAAgC,KACxCx2D,KAAKw2D,6BAA+BruD,EAAQykB,mBAAmB,EAAG,EAEnE,IAAI5sB,KAAKy2D,6BAA+B,KACvCz2D,KAAKy2D,4BAA8BtuD,EAAQykB,mBAAmB,EAAG,EAElE,KAAK5sB,KAAK02D,aAAc,CACvB12D,KAAK02D,aAAevuD,EAAQ0uD,kBAAkB,EAE9C72D,MAAK02D,aAAa7pC,iBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAG1D7sB,KAAKq2D,eAAiBtvD,EAAIM,KAAK42B,IAAIj+B,KAAKw1D,WAAWx1D,KAAKk0D,cAAe,EACvEl0D,MAAKs2D,eAAiBrvD,EAAII,KAAK42B,IAAIj+B,KAAKy1D,YAAYz1D,KAAKm0D,eAAgB,EAEzE,IAAI2C,IAAa,EAAI/vD,GAAG,EACxB,IAAIgwD,IAAahwD,EAAI,GAAG,EACxB,IAAIiwD,IAAa/vD,EAAI,GAAG,EACxB,IAAIgwD,IAAa,EAAIhwD,GAAG,EAGxB0vD,KAAqB5vD,GAAIE,EAAG6vD,EAAIE,EAAI,EAAGjwD,GAAIE,EAAG8vD,EAAIC,EAAI,EAAGjwD,EAAGE,EAAG8vD,EAAIE,EAAI,GAAIlwD,EAAGE,EAAG6vD,EAAIG,EAAI,EAEzFL,KAAqB,GAAI,EAAGE,EAAIE,EAAI,EAAG,GAAI,EAAGD,EAAIC,EAAI,EAAG,EAAG,EAAGD,EAAIE,EAAI,GAAI,EAAG,EAAGH,EAAIG,EAAI,EAEzFj3D,MAAKw2D,6BAA6B3pC,gBAAgB8pC,EAAc,EAAG,EACnE32D,MAAKy2D,4BAA4B5pC,gBAAgB+pC,EAAa,EAAG,EAEjE52D,MAAK01D,gBAAkB,MAEzB,OAAAv0D,IA3P+Bo0C,EA+P/B,IAAMygB,GAAkB,WAAxB,QAAMA,MAKN,MAAAA,KAPAl2D,GAAAJ,QAASyB,IvG4qWNsL,+BAA+B7D,UAAUkzC,yCAAyClzC,UAAUozC,iCAAiCpzC,UAAUsuD,qCAAqCtuD,YAAYy3C,kDAAkD,SAASzhD,EAAQkB,EAAOJ,GACrQ,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwGn6WtB,IAAOgsD,GAAgBztD,EAAc,qDAIrC,IAAOu4D,GAAoBv4D,EAAa,mDAExC,IAAOw4D,GAAcx4D,EAAc,8CxGs6WnC,IwG/5WM2gD,GAAiB,SAAAl+C,GAAStB,EAA1Bw/C,EAAiBl+C,EAUtB,SAVKk+C,GAUOp5C,EAA+BP,EAAsCk3C,EAAkCv7C,GAElHF,EAAA1B,KAAAK,KAAMmG,EAAcP,EAAmBk3C,EAAiBv7C,EAVjDvB,MAAAq3D,UAAmB,CACnBr3D,MAAAs3D,UAAmB,CACnBt3D,MAAAu3D,UAAmB,CACnBv3D,MAAAw3D,UAAmB,CAS1Bx3D,MAAKy3D,QAAU,GAAIpL,GAAiBvP,EAAiB98C,KAAMA,KAAKqK,QAG1Dk1C,EAAAh/C,UAAAygD,sBAAP,SAA6BnzC,GAE5BxM,EAAAd,UAAMygD,sBAAqBrhD,KAAAK,KAAC6N,EAE5B,IAAIA,EAAa+zC,SAAW,KAC3B/zC,EAAa63C,iBAORnG,GAAAh/C,UAAA+jD,kBAAP,SAAyBz2C,EAA+B6pD,EAA8BC,GAErF,GAAIn4D,GAAc,EAEZ,IAAIo4D,EAEJ,IAAI53D,KAAKigD,cAAe,CACpB2X,EAAWF,EAAS3E,2BACpB2E,GAAS9sC,sBAAsBgtC,EAAU,EACzCp4D,IAAQ,OAASo4D,EAAW,KAAOD,EAAU5pD,aAAe,OAGtE,GAAI8pD,GAAkCF,EAAU5pD,YAChD,IAAI+pD,EAEJ,IAAIjqD,EAAa+zC,SAAW,KAAM,CACjCkW,EAAkBJ,EAAS5L,mBAE3B9rD,MAAK+3D,eAAiBD,EAAgBthD,KAEtChX,IAAQ23D,EAAqBa,mBAAmBH,EAAWF,EAAWG,EAAiBjqD,EAAa+zC,QAAS/zC,EAAaszC,kBAAmBtzC,EAAa4zC,eAAgB5zC,EAAaozC,cAEvL,IAAIpzC,EAAa6sC,eAAiB,EAAG,CACpC,GAAIud,GAAkCP,EAASvP,yBAC/CnoD,MAAKk4D,wBAA0BD,EAAUzhD,MAAM,CAE/ChX,IAAQ,OAASq4D,EAAY,OAASA,EAAY,OAASI,EAAY,OAAS,OAASJ,EAAY,OAAS,OAASA,EAAY,OAASA,EAAY,OAASI,EAAY,YAExK,IAAIpqD,EAAa66C,mBAAqB,EAAG,CAE/ClpD,GAAQ,OAASq4D,EAAY,KAAOF,EAAUhP,aAAe,SACvD,CACNmP,EAAkBJ,EAASvP,yBAE3BnoD,MAAKk4D,wBAA0BJ,EAAgBthD,MAAM,CAErDhX,IAAQ,OAASq4D,EAAY,KAAOC,EAAkB,KAGjD,GAAI93D,KAAKigD,cAAe,CACpBzgD,GAAQ,OAASm4D,EAAU5pD,aAAe,OAAS4pD,EAAU5pD,aAAe,OAAS6pD,EAAW,IAChGF,GAASlT,wBAAwBoT,GAG3C,MAAOp4D,GAMD+/C,GAAAh/C,UAAAy3C,WAAP,SAAkB/xC,GAEjB5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACiG,EAEjB,IAAIjG,KAAKy3D,QAAQ7V,SAAW,KAAM,CACjC5hD,KAAKqK,OAAO8tD,gBAAgBn4D,KAAK+3D,eAAgB/3D,KAAKy3D,QAAQ7V,QAAS5hD,KAAKy3D,QAAQhW,eAAgBzhD,KAAKy3D,QAAQtW,kBAAmBnhD,KAAKy3D,QAAQxW,cAEjJ,IAAIjhD,KAAKy3D,QAAQ/c,eAAiB,EACjC16C,KAAKy3D,QAAQ98C,qBAAqB3a,KAAKk4D,yBAA2Bl4D,KAAKy3D,QAAQ/c,mBAC1E,IAAI16C,KAAKy3D,QAAQ/O,mBAAqB,EAAG,CAC/C,GAAIlyC,GAAexW,KAAKk4D,uBACxB,IAAI9sC,GAAqBprB,KAAKy3D,QAAQ98C,oBACtCyQ,GAAK5U,GAASxW,KAAKq3D,SACnBjsC,GAAK5U,EAAQ,GAAKxW,KAAKs3D,SACvBlsC,GAAK5U,EAAQ,GAAKxW,KAAKu3D,SACvBnsC,GAAK5U,EAAQ,GAAKxW,KAAKw3D,WAG1B,OAAAjY,IAjGgC6X,EAmGhCt3D,GAA2BJ,QAAlB6/C,IxGw4WNkQ,qDAAqD,qDAAqD2I,8CAA8C,8CAA8CC,mDAAmD,qDAAqDpb,0CAA0C,SAASr+C,EAAQkB,EAAOJ,GACnX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyG5/WtB,IAAOgsD,GAAgBztD,EAAc,qDAIrC,IAAOu4D,GAAoBv4D,EAAa,mDAExC,IAAOw4D,GAAcx4D,EAAc,8CzG+/WnC,IyGz/WM+9C,GAAS,SAAAt7C,GAAStB,EAAlB48C,EAASt7C,EAMd,SANKs7C,GAMOx2C,EAA+BP,EAAsCk3C,EAAkCv7C,GAElHF,EAAA1B,KAAAK,KAAMmG,EAAcP,EAAmBk3C,EAAiBv7C,EAExDvB,MAAKy3D,QAAU,GAAIpL,GAAiBvP,EAAiB98C,KAAMA,KAAKqK,QAG1DsyC,EAAAp8C,UAAAygD,sBAAP,SAA6BnzC,GAE5BxM,EAAAd,UAAMygD,sBAAqBrhD,KAAAK,KAAC6N,EAE5BA,GAAayiD,wBAEb,IAAIziD,EAAa6sC,eAAiB,EACjC7sC,EAAa63C,iBAIR/I,GAAAp8C,UAAAukD,mBAAP,SAA0Bj3C,GAEzBxM,EAAAd,UAAMukD,mBAAkBnlD,KAAAK,KAAC6N,EAEzB,IAAI2I,GAAexW,KAAKk4D,uBACxB,IAAI9sC,GAAqBvd,EAAa8M,oBACtCyQ,GAAK5U,GAAS,CACd4U,GAAK5U,EAAQ,GAAK,GAClB4U,GAAK5U,EAAQ,GAAK,KAClB4U,GAAK5U,EAAQ,GAAK,QAClB4U,GAAK5U,EAAQ,GAAK,EAAI,GACtB4U,GAAK5U,EAAQ,GAAK,EAAI,GACtB4U,GAAK5U,EAAQ,GAAK,EAAI,GACtB4U,GAAK5U,EAAQ,GAAK,EAMZmmC,GAAAp8C,UAAA+jD,kBAAP,SAAyBz2C,EAA+B0iD,EAAmC+H,GAE1F,GAAI94D,GAAc,EAClB,IAAIq4D,GAAkCS,EAAgBvqD,YACtD,IAAI+pD,GAAwCvH,EAAczE,mBAC1D,IAAIyM,GAAiChI,EAAcpI,yBACnD,IAAIqQ,GAAiCjI,EAAcpI,yBAEnDnoD,MAAKk4D,wBAA0BK,EAAS/hD,MAAM,CAE9C,IAAIiF,GAA8B80C,EAAcjL,2BAChDiL,GAAc3lC,sBAAsBnP,EAAO,EAC3C,IAAIC,GAA8B60C,EAAcjL,2BAChDiL,GAAc3lC,sBAAsBlP,EAAO,EAE3Clc,IAAQ,OAASic,EAAQ,KAAO68C,EAAgBG,mBAAqB,KAAOH,EAAgBG,mBAAqB,OACjH,OAASh9C,EAAQ,KAAO88C,EAAW,KAAO98C,EAAQ,OAClD,OAASA,EAAQ,KAAOA,EAAQ,KAChC,OAASC,EAAQ,KAAOD,EAAQ,UAAY+8C,EAAW,IAKvD,IAAI3qD,EAAa+zC,SAAW/zC,EAAa6sC,eAAiB,EAAG,CAC5Dod,EAAkBvH,EAAczE,mBAEhC9rD,MAAK+3D,eAAiBD,EAAgBthD,KAEtC,IAAIkiD,GAA+BnI,EAAcjL,2BACjD9lD,IAAQ23D,EAAqBa,mBAAmBU,EAAQJ,EAAiBR,EAAiBjqD,EAAa+zC,QAAS/zC,EAAaszC,kBAAmBtzC,EAAa4zC,eAAgB5zC,EAAaozC,cAE1L,IAAIgX,GAAkC1H,EAAcpI,yBAEpD3oD,IAAQ,OAASk5D,EAAS,OAASA,EAAS,OAAST,EAAY,OACjE,OAASS,EAAS,OAGnBl5D,GAAQ,OAASq4D,EAAY,KAAOp8C,EAAQ,KAAOC,EAAQ,IAE3D60C,GAAc/L,wBAAwB/oC,EACtC80C,GAAc/L,wBAAwB9oC,EAEtC,OAAOlc,GAMDm9C,GAAAp8C,UAAAy3C,WAAP,SAAkB/xC,GAEjB5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACiG,EAEjB,IAAIkC,GAAqBnI,KAAKqK,OAAOlC,OAErC,IAAInI,KAAKy3D,QAAQ7V,SAAW5hD,KAAKy3D,QAAQ/c,eAAiB,EAAG,CAC5D16C,KAAKqK,OAAO8tD,gBAAgBn4D,KAAK+3D,eAAgB/3D,KAAKy3D,QAAQ7V,QAAS5hD,KAAKy3D,QAAQhW,eAAgBzhD,KAAKy3D,QAAQtW,kBAAmBnhD,KAAKy3D,QAAQxW,cAEjJjhD,MAAKy3D,QAAQ98C,qBAAqB3a,KAAKk4D,wBAA0B,GAAKl4D,KAAKy3D,QAAQ/c,gBAItF,OAAAiC,IAxGwBya,EA0GxBt3D,GAAmBJ,QAAVi9C,IzGs9WN8S,qDAAqD,qDAAqD2I,8CAA8C,8CAA8CC,mDAAmD,qDAAqDhb,6CAA6C,SAASz+C,EAAQkB,EAAOJ,GACtX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0GvlXtB,IAAOgsD,GAAgBztD,EAAc,qDAIrC,IAAOu4D,GAAoBv4D,EAAa,mDAExC,IAAOw4D,GAAcx4D,EAAc,8C1G0lXnC,I0GplXMu+C,GAAY,SAAA97C,GAAStB,EAArBo9C,EAAY97C,EAUjB,SAVK87C,GAUOh3C,EAA+BP,EAAsCk3C,EAAkCv7C,GAElHF,EAAA1B,KAAAK,KAAMmG,EAAcP,EAAmBk3C,EAAiBv7C,EAExDvB,MAAKy3D,QAAU,GAAIpL,GAAiBvP,EAAiB98C,KAAMA,KAAKqK,QAM1D8yC,EAAA58C,UAAAukD,mBAAP,SAA0Bj3C,GAEzBxM,EAAAd,UAAMukD,mBAAkBnlD,KAAAK,KAAC6N,EAEzB,IAAI2I,GAAexW,KAAKk4D,uBACxB,IAAI9sC,GAAqBvd,EAAa8M,oBACtCyQ,GAAK5U,EAAQ,GAAK,EAAI,GACtB4U,GAAK5U,EAAQ,GAAK,EAAI,GACtB4U,GAAK5U,EAAQ,GAAK,EAAI,GACtB4U,GAAK5U,EAAQ,GAAK,EAGZ2mC,GAAA58C,UAAAygD,sBAAP,SAA6BnzC,GAE5BxM,EAAAd,UAAMygD,sBAAqBrhD,KAAAK,KAAC6N,EAE5BA,GAAayiD,wBACbziD,GAAau3C,qBAEb,IAAIv3C,EAAa6sC,eAAiB,EACjC7sC,EAAa63C,gBAEd,IAAI73C,EAAau3C,oBAAsB,EACtCv3C,EAAaw3C,wBAMRlI,GAAA58C,UAAA+jD,kBAAP,SAAyBz2C,EAA+B0iD,EAAmC+H,GAE1F,GAAI94D,EACJ,IAAIq4D,GAAkCS,EAAgBvqD,YACtD,IAAI+pD,GAAwCvH,EAAczE,mBAC1D,IAAIyM,GAAiChI,EAAcpI,yBACnD,IAAIqQ,GAAiCjI,EAAcpI,yBAEnDnoD,MAAKk4D,wBAA0BK,EAAS/hD,MAAM,CAE9C,IAAIiF,GAA8B80C,EAAcjL,2BAChDiL,GAAc3lC,sBAAsBnP,EAAO,EAC3C,IAAIC,GAA8B60C,EAAcjL,2BAChDiL,GAAc3lC,sBAAsBlP,EAAO,EAG3Clc,GAAO,OAASic,EAAQ,OAAS68C,EAAgBnR,eAAiB,SAAWmR,EAAgBnR,eAAiB,SAC1G,OAAS1rC,EAAQ,KAAO88C,EAAW,KAAO98C,EAAQ,OAClD,OAASA,EAAQ,KAAOA,EAAQ,KAChC,OAASC,EAAQ,KAAOD,EAAQ,UAAY+8C,EAAW,IAE3D,IAAI3qD,EAAa6sC,eAAiB,EAAG,CACpCod,EAAkBvH,EAAczE,mBAEhC9rD,MAAK+3D,eAAiBD,EAAgBthD,KAEtC,IAAIkiD,GAA+BnI,EAAcjL,2BACjD9lD,IAAQ23D,EAAqBa,mBAAmBU,EAAQJ,EAAiBR,EAAiBjqD,EAAa+zC,QAAS/zC,EAAaszC,kBAAmBtzC,EAAa4zC,eAAgB5zC,EAAaozC,cAE1L,IAAIgX,GAAkC1H,EAAcpI,yBAEpD3oD,IAAQ,OAASk5D,EAAS,OAASA,EAAS,OAAST,EAAY,OAChE,OAASS,EAAS,OAGpBl5D,GAAQ,OAASq4D,EAAY,KAAOp8C,EAAQ,KAAOC,EAAQ,IAE3D;MAAOlc,GAMD29C,GAAA58C,UAAAy3C,WAAP,SAAkB/xC,GAEjB5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACiG,EAEjB,IAAIkC,GAAqBnI,KAAKqK,OAAOlC,OAErC,IAAI7I,GAAW2G,EAAOyqD,WAAWiI,GAEjCr5D,GAAI,GAAG,EAAEA,EAAEA,E1GojXL,I0GljXFkX,GAAexW,KAAKk4D,uBACxB,IAAI9sC,GAAqBprB,KAAKy3D,QAAQ98C,oBACtCyQ,GAAK5U,GAAS,EAAIlX,CAClB8rB,GAAK5U,EAAQ,GAAK,IAAMlX,CACxB8rB,GAAK5U,EAAQ,GAAK,MAAQlX,CAC1B8rB,GAAK5U,EAAQ,GAAK,SAAWlX,CAE7B,IAAIU,KAAKy3D,QAAQ/c,eAAiB,EAAG,CACpC16C,KAAKqK,OAAO8tD,gBAAgBn4D,KAAK+3D,eAAgB/3D,KAAKy3D,QAAQ7V,QAAS5hD,KAAKy3D,QAAQhW,eAAgBzhD,KAAKy3D,QAAQtW,kBAAmBnhD,KAAKy3D,QAAQxW,cAEjJ71B,GAAK5U,EAAQ,GAAKxW,KAAKy3D,QAAQ/c,gBAGlC,OAAAyC,IAnH2Bia,EAqH3Bt3D,GAAsBJ,QAAby9C,I1GmjXNsS,qDAAqD,qDAAqD2I,8CAA8C,8CAA8CC,mDAAmD,qDAAqDO,oDAAoD,SAASh6D,EAAQkB,EAAOJ,SAIvXm5D,gDAAgD,SAASj6D,EAAQkB,EAAOJ,SAIxE04D,+CAA+C,SAASx5D,EAAQkB,EAAOJ,GAC7E,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2GjtXtB,IAAOi/C,GAAS1gD,EAAe,iCAI/B,IAAOk6D,GAAal6D,EAAc,uCAClC,IAAOiL,GAAKjL,EAAgB,+BAC5B,IAAO22C,GAAe32C,EAAc,yCAOpC,IAAOkL,GAAoBlL,EAAa,+CACxC,IAAO+B,GAAoB/B,EAAa,+C3G+sXxC,I2G/rXMw4D,GAAc,SAAA/1D,GAAStB,EAAvBq3D,EAAc/1D,EAwEnB,SAxEK+1D,GAwEOjxD,EAA+BP,EAAsCk3C,EAAkCv7C,GAElHF,EAAA1B,KAAAK,KAjEOA,MAAA+4D,eAAyB,IACzB/4D,MAAAugD,kBAA4B,KAE5BvgD,MAAAg5D,kBAA2Br4D,EAAqBy4C,UAEhDp5C,MAAAi5D,mBAA4BnvD,EAAqBsC,GACjDpM,MAAAk5D,iBAA0BpvD,EAAqBuC,IAEhDrM,MAAAm5D,iBAA2B,KAE1Bn5D,MAAAo5D,YAAsB,IAyD7Bp5D,MAAKq5D,cAAgBlzD,CACrBnG,MAAKy6C,mBAAqB70C,CAC1B5F,MAAK2gD,iBAAmB7D,CACxB98C,MAAKqK,OAAS9I,EA1DfY,OAAAC,eAAWg1D,EAAA72D,UAAA,U3G8rXJ8B,I2G9rXP,WAEC,MAAOrC,MAAKy3D,S3G+rXN/0D,WAAY,KACZC,aAAc,M2G7rXrBR,QAAAC,eAAWg1D,EAAA72D,UAAA,gB3GgsXJ8B,I2GhsXP,WAEC,MAA0BrC,MAAKy6C,mBAAmBxrC,c3GisX5CvM,WAAY,KACZC,aAAc,M2G5rXrBR,QAAAC,eAAWg1D,EAAA72D,UAAA,iB3GksXJ8B,I2GlsXP,WAEC,MAAOrC,MAAK+4D,gB3GmsXNx2D,I2GhsXP,SAAyBC,GAExB,GAAIxC,KAAK+4D,gBAAkBv2D,EAC1B,MAEDxC,MAAK+4D,eAAiBv2D,CAEtBxC,MAAKiiD,kB3G+rXCv/C,WAAY,KACZC,aAAc,M2GxrXrBR,QAAAC,eAAWg1D,EAAA72D,UAAA,oB3GgsXJ8B,I2GhsXP,WAEC,MAAOrC,MAAKugD,mB3GisXNh+C,I2G9rXP,SAA4BC,GAE3B,GAAIxC,KAAKugD,mBAAqB/9C,EAC7B,MAEDxC,MAAKugD,kBAAoB/9C,CAEzBxC,MAAKiiD,kB3G6rXCv/C,WAAY,KACZC,aAAc,M2G1qXrBR,QAAAC,eAAWg1D,EAAA72D,UAAA,c3GgrXJ8B,I2GhrXP,WAEC,MAAOrC,MAAKo5D,a3GirXN72D,I2G9qXP,SAAsBC,GAErBxC,KAAKo5D,YAAc52D,G3G+qXbE,WAAY,KACZC,aAAc,M2GxqXrBR,QAAAC,eAAWg1D,EAAA72D,UAAA,oB3GgrXJ8B,I2GhrXP,WAEC,MAAOrC,MAAKg5D,mB3GirXNz2D,I2G9qXP,SAA4BC,GAE3BxC,KAAKg5D,kBAAoBx2D,G3G+qXnBE,WAAY,KACZC,aAAc,M2GzqXdy0D,GAAA72D,UAAAwC,QAAP,WAEC/C,KAAKy3D,QAAQ10D,SAEb/C,MAAKy3D,QAAU,KAcTL,GAAA72D,UAAAyD,SAAP,SAAgB2B,EAA2BM,EAAeuyC,GAEzDx4C,KAAKy3D,QAAQzzD,SAAS2B,EAAYM,EAAQuyC,GAYpC4e,GAAA72D,UAAA2/C,aAAP,SAAoB19C,GAEnB,OAAQA,GACP,IAAK88C,GAAUQ,OACd9/C,KAAKi5D,mBAAqBnvD,EAAqBsC,GAC/CpM,MAAKk5D,iBAAmBpvD,EAAqBuC,IAC7CrM,MAAKm5D,iBAAmB,KACxB,MAED,KAAK7Z,GAAUa,MACdngD,KAAKi5D,mBAAqBnvD,EAAqBwvD,YAC/Ct5D,MAAKk5D,iBAAmBpvD,EAAqByvD,sBAC7Cv5D,MAAKm5D,iBAAmB,IACxB,MAED,KAAK7Z,GAAUka,SACdx5D,KAAKi5D,mBAAqBnvD,EAAqBuC,IAC/CrM,MAAKk5D,iBAAmBpvD,EAAqB2vD,YAC7Cz5D,MAAKm5D,iBAAmB,IACxB,MAED,KAAK7Z,GAAUoa,IACd15D,KAAKi5D,mBAAqBnvD,EAAqBwvD,YAC/Ct5D,MAAKk5D,iBAAmBpvD,EAAqBsC,GAC7CpM,MAAKm5D,iBAAmB,IACxB,MAED,KAAK7Z,GAAUqa,MACd35D,KAAKi5D,mBAAqBnvD,EAAqBuC,IAC/CrM,MAAKk5D,iBAAmBpvD,EAAqBwvD,YAC7Ct5D,MAAKm5D,iBAAmB,IACxB,MAED,SACC,KAAM,IAAIL,GAAc,4BAWpB1B,GAAA72D,UAAAy3C,WAAP,SAAkB/xC,GAEjBjG,KAAKqK,OAAOlC,QAAQ5C,aAAevF,KAAKo5D,cAAgBp5D,KAAKm5D,iBAAoBn5D,KAAKg5D,kBAEtF,IAAIh5D,KAAKm5D,iBACRn5D,KAAKqK,OAAOlC,QAAQgE,gBAAgBnM,KAAKi5D,mBAAoBj5D,KAAKk5D,iBAEnEl5D,MAAKy3D,QAAQzf,WAAW/xC,GASlBmxD,GAAA72D,UAAA03C,aAAP,WAECj4C,KAAKy3D,QAAQxf,cAGbj4C,MAAKqK,OAAOlC,QAAQ5C,aAAa,KAAM5E,EAAqBy4C,YAQtDge,GAAA72D,UAAA0hD,eAAP,WAECjiD,KAAKy3D,QAAQrG,kBAEbpxD,MAAK8Q,cAAc,GAAIjH,GAAMA,EAAM44C,SAG7B2U,GAAA72D,UAAAygD,sBAAP,SAA6BnzC,GAE5B7N,KAAKq5D,cAAcrY,sBAAsBnzC,EAEzC,IAAI7N,KAAKugD,kBACR1yC,EAAaw3C,wBAIR+R,GAAA72D,UAAAukD,mBAAP,SAA0Bj3C,IAKnBupD,GAAA72D,UAAAylD,2BAAP,SAAkCn4C,EAA+B0iD,EAAmC+H,GAEnG,MAAO,GAGDlB,GAAA72D,UAAA0lD,6BAAP,SAAoCp4C,EAA+B0iD,EAAmC+H,GAErG,MAAO,GAGDlB,GAAA72D,UAAA8jD,gBAAP,SAAuBx2C,EAA+B0iD,EAAmC+H,GAExF,MAAO,GAGDlB,GAAA72D,UAAA+jD,kBAAP,SAAyBz2C,EAA+B0iD,EAAmC+H,GAE1F,MAAO,GAGDlB,GAAA72D,UAAAinD,sBAAP,SAA6B35C,EAA+B0iD,EAAmC+H,GAE9F,MAAO,GAGDlB,GAAA72D,UAAAknD,wBAAP,SAA+B55C,EAA+B0iD,EAAmC+H,GAEhG,MAAO,GAMDlB,GAAA72D,UAAAwkD,iBAAP,SAAwBl3C,GAEvB,MAAO,OAMDupD,GAAA72D,UAAA0kD,wBAAP,SAA+Bp3C,GAE9B,MAAO,OAODupD,GAAA72D,UAAA4kD,mBAAP,SAA0Bt3C,GAEzB,MAAO,OAET,OAAAupD,IAxS6B7hB,EA0S7Bz1C,GAAwBJ,QAAf03D,I3GqoXNhX,iCAAiCx3C,UAAUgxD,uCAAuChxD,UAAU6D,+BAA+B7D,UAAUkzC,yCAAyClzC,UAAU8D,+CAA+C9D,UAAUW,+CAA+CX,YAAY0qD,2CAA2C,SAAS10D,EAAQkB,EAAOJ,GAClX,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Gx8XtB,IAAOM,GAAoB/B,EAAa,+CASxC,IAAOw4D,GAAcx4D,EAAc,8CAGnC,IAAOytD,GAAgBztD,EAAc,qDAIrC,IAAOu4D,GAAoBv4D,EAAa,mD5Gk8XxC,I4G37XMw0D,GAAU,SAAA/xD,GAAStB,EAAnBqzD,EAAU/xD,EAIf,SAJK+xD,GAIOjtD,EAA+BP,EAAsCk3C,EAAkCv7C,GAElHF,EAAA1B,KAAAK,KAAMmG,EAAcP,EAAmBk3C,EAAiBv7C,EAExDvB,MAAK65D,QAAmBj0D,CAExB5F,MAAKy3D,QAAU,GAAIpL,GAAiBvP,EAAiB98C,KAAMA,KAAKqK,QAO1D+oD,EAAA7yD,UAAA+jD,kBAAP,SAAyBz2C,EAA+B0iD,EAAmC+H,G5Gw7XpF,G4Gh7XFwB,GAAa,UAEjB,IAAIjsD,EAAaozC,cAChB6Y,EAAM,YAEP,OAAO,0BAA4B3C,EAAqB4C,0BAA0B/5D,KAAK65D,QAAQG,SAAW,eAAiBF,EAAM,MAM3H1G,GAAA7yD,UAAAy3C,WAAP,SAAkB/xC,GAEjB5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACiG,EAEjB,IAAIkC,GAAqBnI,KAAKqK,OAAOlC,OACrCA,GAAQ5C,aAAa,MAAO5E,EAAqBq4C,KACjDh5C,MAAKqK,OAAOglD,oBAAoB,EAAGrvD,KAAK65D,QAAQG,QAASh6D,KAAKy3D,QAAQtW,kBAAmBnhD,KAAKy3D,QAAQxW,eAExG,OAAAmS,IA5CyBgE,EA8CzBt3D,GAAoBJ,QAAX0zD,I5G86XN3D,qDAAqD,qDAAqD2I,8CAA8C,8CAA8CC,mDAAmD,mDAAmD9uD,+CAA+CX,YAAYqxD,gDAAgD,SAASr7D,EAAQkB,EAAOJ,GAClb,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6GlgYtB,IAAOI,GAAQ7B,EAAiB,gCAEhC,IAAOkd,GAAmBld,EAAc,2CAOxC,IAAOs7D,GAAmBt7D,EAAc,iD7GsgYxC,I6G3/XMu7D,GAAiB,SAAA94D,GAAStB,EAA1Bo6D,EAAiB94D,EAStB,SATK84D,GASO54D,EAAa64D,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAExB/4D,EAAA1B,KAAAK,KAAMuB,EAENvB,MAAKq6D,sBAAwBD,EAMvBD,EAAA55D,UAAA+5D,0BAAP,SAAiC30D,EAA2B40D,EAAuCC,GAElG,GAAI17D,EACJ,IAAI27D,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIh4C,GAAWC,EAAWC,CAC1B,IAAIlc,GAAWE,EAAWE,CAC1B,IAAI6zD,GAAc57D,EAAU0/B,EAAU/2B,CACtC,IAAIkzD,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAIC,GAA0B72D,EAAW4iB,eAAe6C,IACxD,IAAIqxC,IAAiC,CACrC,IAAIjb,GAAoC77C,EAAWC,kBAAmB47C,SAEtE,IAAIkb,GAA6B/2D,EAAW4Y,cAAczC,EAAoB0M,eAAe4C,IAC7F,IAAIuxC,GAAwBh3D,EAAW4Y,cAAczC,EAAoB0M,eAAeo0C,aACxF,IAAIC,GAAwBl3D,EAAW8Y,gBAAgB3C,EAAoB0M,cAC3E,IAAIs0C,GAAuBn3D,EAAW4Y,cAAczC,EAAoB6J,SAASyF,IACjF,IAAI2xC,GAAkBp3D,EAAW4Y,cAAczC,EAAoB6J,SAASi3C,aAC5E,IAAII,IAAkBr3D,EAAW8Y,gBAAgB3C,EAAoB6J,QACrE,IAAIs3C,IAAoBT,EAAU58D,MAElC,KAAK,GAAI4W,IAAe,EAAGA,GAAQymD,GAAYzmD,IAAS,EAAG,CAE1DikD,EAAKoC,EAAiBL,EAAWhmD,IAAQmmD,CACzCjC,GAAKmC,EAAiBL,EAAYhmD,GAAQ,GAAKmmD,CAC/ChC,GAAKkC,EAAiBL,EAAYhmD,GAAQ,GAAKmmD,CAG/C3B,GAAM0B,EAAcjC,EACpBQ,GAAMyB,EAAejC,EAAK,EAC1BS,GAAMwB,EAAejC,EAAK,EAC1BU,GAAMuB,EAAchC,EACpBU,GAAMsB,EAAehC,EAAK,EAC1BW,GAAMqB,EAAehC,EAAK,EAC1BY,GAAMoB,EAAc/B,EACpBY,GAAMmB,EAAe/B,EAAK,EAC1Ba,GAAMkB,EAAe/B,EAAK,EAG1Bc,GAAMN,EAAMH,CACZU,GAAMN,EAAMH,CACZU,GAAMN,EAAMH,CACZU,GAAMN,EAAMN,CACZa,GAAMN,EAAMN,CACZa,GAAMN,EAAMN,CACZp4C,GAAK44C,EAAII,EAAMH,EAAIE,CACnB94C,GAAK44C,EAAIC,EAAMH,EAAIK,CACnB94C,GAAKy4C,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAE10D,KAAKC,KAAKwb,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EACpCF,IAAMi5C,CACNh5C,IAAMg5C,CACN/4C,IAAM+4C,CAGNC,GAAQl5C,EAAG9iB,KAAKk9D,aAAan2D,EAAIgc,GAAK/iB,KAAKk9D,aAAaj2D,EAAI+b,EAAGhjB,KAAKk9D,aAAa/1D,CACjF,KAAOq6C,GAAawa,EAAQ,GAAWxa,GAAawa,GAAS,EAAO,CAEnEC,IAAOn5C,EAAGk4C,EAAMj4C,EAAGk4C,EAAMj4C,EAAGk4C,EAC5BgB,KAAgBp5C,EAAG9iB,KAAKm9D,YAAYp2D,EAAIgc,EAAG/iB,KAAKm9D,YAAYl2D,EAAI+b,EAAGhjB,KAAKm9D,YAAYh2D,EAAI80D,EACxFn9D,GAAIo9D,EAAWF,CAEfl1D,GAAK9G,KAAKm9D,YAAYp2D,EAAIjI,EAAEkB,KAAKk9D,aAAan2D,CAC9CC,GAAKhH,KAAKm9D,YAAYl2D,EAAInI,EAAEkB,KAAKk9D,aAAaj2D,CAC9CC,GAAKlH,KAAKm9D,YAAYh2D,EAAIrI,EAAEkB,KAAKk9D,aAAa/1D,CAE9Cg1D,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BlB,GAAK9zD,EAAKk0D,CACVH,GAAK7zD,EAAKi0D,CACVH,GAAK5zD,EAAKg0D,CACVoB,GAAM1B,EAAGa,EAAMZ,EAAGa,EAAMZ,EAAGa,CAC3BY,GAAM3B,EAAGgB,EAAMf,EAAGgB,EAAMf,EAAGgB,CAC3Bf,GAAQ,GAAIqB,EAAKC,EAAOF,EAAKA,EAC7Bt9B,GAAIk8B,GAAQsB,EAAKC,EAAMH,EAAKI,EAC5Bz0D,GAAIizD,IAASoB,EAAKG,EAAMF,EAAKG,EAC7B,IAAI19B,EAAI,EACP,QACD,IAAI/2B,EAAI,EACP,QACD3I,GAAI,EAAI0/B,EAAI/2B,CACZ,MAAO3I,EAAI,IAAOL,EAAI,GAAKA,EAAI07D,EAA2B,CACzDA,EAA4B17D,CAC5B29D,GAAyBjmD,GAAM,CAC/B+jD,GAAmB6C,iBAAmBt+D,CACtCy7D,GAAmBlU,cAAgB,GAAI5lD,GAASqG,EAAIE,EAAIE,EACxDqzD,GAAmB8C,YAAc,GAAI58D,GAASqiB,EAAIC,EAAIC,EACtDu3C,GAAmB+C,GAAKt9D,KAAKu9D,iBAAiBf,EAAWM,EAAQtmD,GAAOqoB,EAAG/2B,EAAG3I,EAAG69D,GAAUD,EAC3FxC,GAAmB/jD,MAAQA,EAI3B,KAAKxW,KAAKq6D,sBACT,MAAO,QAMX,GAAIoC,GAA0B,EAC7B,MAAO,KAER,OAAO,OAET,OAAAtC,IAjIgCD,EAmIhCp6D,GAA2BJ,QAAlBy6D,I7Gg/XNn0C,2CAA2Cpd,UAAUC,gCAAgCD,UAAU40D,iDAAiD,mDAAmDA,kDAAkD,SAAS5+D,EAAQkB,EAAOJ,G8GvoYhR,GAAO21C,GAAKz2C,EAAiB,6BAC7B,IAAO6B,GAAQ7B,EAAiB,gCAChC,IAAOkO,GAAmBlO,EAAc,6CASxC,IAAO6+D,GAAmB7+D,EAAc,iDAExC,IAAO8+D,GAAyB9+D,EAAY,uDAC5C,IAAOqC,GAAkBrC,EAAe,gD9GqoYxC,I8G9nYMs7D,GAAmB,WAQxB,QARKA,GAQO34D,GAGXvB,KAAK29D,yBAA2B18D,EAAmBuH,QAAQi1D,EAAqBl8D,EAChFvB,MAAK49D,uBAAyB38D,EAAmBuH,QAAQk1D,EAA2Bn8D,GAG9E24D,EAAA35D,UAAAs9D,qBAAP,SAA4BrB,EAAkCpkD,EAA0B0lD,GAEvF,GAAIC,GAAkB,GAAIt9D,EAC1B,IAAIg6D,GAAY+B,EAAWsB,GAAgB,CAC3C,IAAIpD,GAAY8B,EAAWsB,EAAgB,GAAI,CAC/C,IAAInD,GAAY6B,EAAWsB,EAAgB,GAAI,CAC/C,IAAIE,GAAc,GAAIv9D,GAAS2X,EAAYqiD,GAAMriD,EAAYqiD,EAAK,GAAKriD,EAAYqiD,EAAK,GACxF,IAAIz4B,GAAc,GAAIvhC,GAAS2X,EAAYsiD,GAAMtiD,EAAYsiD,EAAK,GAAKtiD,EAAYsiD,EAAK,GACxF,IAAIz4B,GAAc,GAAIxhC,GAAS2X,EAAYuiD,GAAMviD,EAAYuiD,EAAK,GAAKviD,EAAYuiD,EAAK,GACxF,IAAIsD,GAAiBj8B,EAAGE,SAAS87B,EACjC,IAAIE,GAAiBj8B,EAAGC,SAAS87B,EACjCD,GAASE,EAAM72B,aAAa82B,EAC5BH,GAAOviC,WACP,OAAOuiC,GAGD7D,GAAA35D,UAAAg9D,iBAAP,SAAwBf,EAAkCM,EAAsBgB,EAAsBj/B,EAAU/2B,EAAU3I,EAAU69D,EAAiBD,GAEpJ,GAAIO,GAAW,GAAIjoB,EACnB,IAAI8oB,GAAgB3B,EAAWsB,GAAgBf,EAAWC,CAC1D,IAAIoB,GAAe,GAAI39D,GAASq8D,EAAQqB,GAAUrB,EAAQqB,EAAS,GACnEA,GAAS3B,EAAWsB,EAAgB,GAAIf,EAAWC,CACnD,IAAIqB,GAAe,GAAI59D,GAASq8D,EAAQqB,GAAUrB,EAAQqB,EAAS,GACnEA,GAAS3B,EAAWsB,EAAgB,GAAIf,EAAWC,CACnD,IAAIsB,GAAe,GAAI79D,GAASq8D,EAAQqB,GAAUrB,EAAQqB,EAAS,GACnEb,GAAGv2D,EAAI5H,EAAEi/D,EAAIr3D,EAAI83B,EAAEw/B,EAAIt3D,EAAIe,EAAEw2D,EAAIv3D,CACjCu2D,GAAGr2D,EAAI9H,EAAEi/D,EAAIn3D,EAAI43B,EAAEw/B,EAAIp3D,EAAIa,EAAEw2D,EAAIr3D,CACjC,OAAOq2D,GAMDpD,GAAA35D,UAAA+5D,0BAAP,SAAiC30D,EAA2B40D,EAAuCC,GAElG,KAAM,IAAI1tD,GAMJotD,GAAA35D,UAAAg+D,YAAP,SAAmBlY,EAAwBmY,GAE1Cx+D,KAAKm9D,YAAc9W,CACnBrmD,MAAKk9D,aAAesB,EAWdtE,GAAA35D,UAAAk+D,uBAAP,SAA8BC,EAAqBnE,EAAuCC,GAEzFx6D,KAAKu+D,YAAYhE,EAAmBoE,iBAAkBpE,EAAmBqE,kBACzErE,GAAmBrf,gBAAkB,IAErC,IAAIl7C,KAAKs6D,0BAA2Ct6D,KAAK29D,yBAAyB33D,QAAQ04D,GAAYnE,EAAoBC,GAA4B,CACrJA,EAA4BD,EAAmB6C,gBAE/C7C,GAAmBrf,gBAAkBwjB,CAErC,OAAO,MAGR,MAAO,OAWDxE,GAAA35D,UAAAs+D,kBAAP,SAAyBrtD,EAAW+oD,EAAuCC,EAAkCsE,GAE5G9+D,KAAKu+D,YAAYhE,EAAmBoE,iBAAkBpE,EAAmBqE,kBACzErE,GAAmBrf,gBAAkB,IAErC,IAAIvkC,EAEJ,IAAI/R,GAAa4M,EAAK8F,UAAU1X,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIuF,IAAOvF,EAAG,CACpCsX,EAAUnF,EAAK8F,UAAUjY,EAEzB,IAAIW,KAAKs6D,0BAA2Ct6D,KAAK49D,uBAAuB53D,QAAQ2Q,GAAU4jD,EAAoBC,GAA4B,CACjJA,EAA4BD,EAAmB6C,gBAE/C7C,GAAmBrf,gBAAkBvkC,CAErC,KAAKmoD,EACJ,MAAO,OAIV,MAAOvE,GAAmBrf,iBAAmB,KAE/C,OAAAgf,KAEAp6D,GAA6BJ,QAApBw6D,I9GmmYNzrD,6CAA6C7F,UAAUmzC,6BAA6BnzC,UAAUC,gCAAgCD,UAAUm2D,iDAAiD,iDAAiD31D,gDAAgD,gDAAgD41D,uDAAuD,yDAAyDC,2CAA2C,SAASrgE,EAAQkB,EAAOJ,G+G/uYhgB,GAAOw/D,GAAKtgE,EAAiB,8BAC7B,IAAOugE,GAAUvgE,EAAgB,kCAGjC,IAAOwgE,GAAaxgE,EAAe,qCACnC,IAAOy2C,GAAKz2C,EAAiB,6BAC7B,IAAO02C,GAAS12C,EAAgB,iCAChC,IAAO6B,GAAQ7B,EAAiB,gCAGhC,IAAOkd,GAAmBld,EAAc,2CAUxC,IAAOi3C,GAAiBj3C,EAAc,uDAEtC,IAAOkL,GAAoBlL,EAAc,+CACzC,IAAOgC,GAAkBhC,EAAc,6CACvC,IAAO+B,GAAoB/B,EAAc,+CACzC,IAAO4a,GAAoB5a,EAAc,+CACzC,IAAOgxD,GAAqBhxD,EAAa,gD/G8uYzC,I+G3tYMygE,GAAY,WAyDjB,QAzDKA,GAyDOC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAlDJt/D,KAAAu/D,kBAA4B,IAS5Bv/D,MAAAw/D,cAAsC,GAAIv0D,MAQ1CjL,MAAAy/D,kBAA6B,GAAIh/D,EACjCT,MAAA0/D,OAAe,GAAIrqB,EAInBr1C,MAAA2/D,gBAA2B,GAAIl/D,EAE/BT,MAAA4/D,QAAmB,GAAIn/D,EACvBT,MAAA6/D,QAAmB,GAAIp/D,EA2B9BT,MAAK8/D,sBAAwBR,CAE7Bt/D,MAAK+/D,IAAM,GAAI90D,OAAc,EAC7BjL,MAAKggE,cAAgB,GAAI/0D,OAAc,EACvCjL,MAAKigE,kBAAoB,GAAIh1D,OAAc,EAC3CjL,MAAKigE,kBAAkB,GAAK,CAC5BjgE,MAAKigE,kBAAkB,GAAK,EAxB7B99D,OAAAC,eAAWi9D,EAAA9+D,UAAA,oB/G6sYJ8B,I+G7sYP,WAEC,MAAOrC,MAAKu/D,mB/G8sYNh9D,I+G3sYP,SAA4BC,GAE3BxC,KAAKu/D,kBAAoB/8D,G/G4sYnBE,WAAY,KACZC,aAAc,M+GtrYd08D,GAAA9+D,UAAA2/D,iBAAP,SAAwBn5D,EAAUE,EAAUk5D,GAE3C,GAAIC,GAA8CD,EAAKE,gBAEvDrgE,MAAKqK,OAA4B81D,EAAKG,SAAU/+D,KAEhD,KAAKvB,KAAKqK,OACT,MAAO,KAERrK,MAAKugE,SAAwBvgE,KAAKqK,OAAOlC,OAEzCnI,MAAKggE,cAAc,GAAKG,EAAKz+D,KAC7B1B,MAAKggE,cAAc,GAAKG,EAAKn+D,MAC7BhC,MAAKggE,cAAc,KAAOhgE,KAAKwgE,OAAS,EAAEz5D,EAAEo5D,EAAKz+D,MAAQ,EACzD1B,MAAKggE,cAAc,GAAKhgE,KAAKygE,OAAS,EAAEx5D,EAAEk5D,EAAKn+D,OAAS,CAGxDhC,MAAK0gE,gBAAkB,KAGvB1gE,MAAK2gE,uBAAyB,IAC9B3gE,MAAK4gE,sBAAwB,IAE7B5gE,MAAKqF,MAAM+6D,EAAW,KAGtBpgE,MAAKugE,SAAS30D,kBAAkB,EAAG,KAEnC,KAAK5L,KAAKugE,WAAavgE,KAAK0gE,gBAC3B,MAAO,KAER,KAAK1gE,KAAK6gE,YACT7gE,KAAK6gE,YAAc,GAAI1B,GAAW,EAAG,EAAG,MAAO,EAEhDn/D,MAAKugE,SAASpmB,iBAAiBn6C,KAAK6gE,YACpC7gE,MAAK8gE,UAAY9gE,KAAK6gE,YAAYE,SAAS,EAAG,EAE9C,KAAK/gE,KAAK8gE,UAAW,CACpB9gE,KAAKugE,SAASr8D,SACd,OAAO,MAGRlE,KAAKghE,eAAiBhhE,KAAKw/D,cAAcx/D,KAAK8gE,UAAY,EAC1D9gE,MAAKihE,WAAajhE,KAAKghE,eAAeh6B,YAEtC,IAAIhnC,KAAKu/D,oBAAsBv/D,KAAKihE,WAAWC,mBAC9C,MAAO,KAER,IAAIC,GAAkCnhE,KAAKihE,WAAWG,oBACtD,IAAIphE,KAAK8/D,sBAAuB,CAC/B9/D,KAAKqhE,cAAclB,EAAKl6D,OACxBk7D,GAAa9a,cAAgBrmD,KAAKy/D,iBAClC0B,GAAa9D,YAAcr9D,KAAK2/D,eAChCwB,GAAa7D,GAAKt9D,KAAK0/D,MACvByB,GAAa3qD,MAAQxW,KAAKshE,eAGpB,CACNH,EAAa9a,cAAgB,IAC7B8a,GAAa9D,YAAc,IAC3B8D,GAAa7D,GAAK,IAClB6D,GAAa3qD,MAAQ,EAItB,MAAO2qD,GAOD9B,GAAA9+D,UAAAghE,kBAAP,SAAyB9nC,EAAmB+nC,EAAoBC,GAE/D,MAAO,MAMDpC,GAAA9+D,UAAA8E,MAAP,SAAahC,EAAiCgB,GAG7C,GAAI4B,GAAgB5C,EAAgB4C,MAEpCjG,MAAKugE,SAAS78D,MAAM,EAAG,EAAG,EAAG,EAC7B1D,MAAKqK,OAAO/F,YAAc+6D,EAAaqC,kBAEvC1hE,MAAKw/D,cAAc5/D,OAASI,KAAK2hE,eAAiB,CAElD,KAAK3hE,KAAK4hE,eACT5hE,KAAK6hE,mBAEN7hE,MAAKugE,SAASp0D,gBAAgBrC,EAAqBsC,IAAKtC,EAAqBuC,KAC7ErM,MAAKugE,SAASh7D,aAAa,KAAM5E,EAAqBq4C,KACtDh5C,MAAKugE,SAASv0D,WAAWhM,KAAK4hE,eAC9B5hE,MAAKugE,SAASlmD,6BAA6Bb,EAAqBc,OAAQ,EAAGta,KAAKggE,cAAe,GAWxFX,GAAA9+D,UAAAg6C,gBAAR,SAAwB50C,EAA2BM,GAElD,GAAIqlB,GAAkB8zC,EAAc0C,kBACpC,IAAItpB,GAA0BvyC,EAAOuyC,cAErC,OAAO7yC,EAAY,CAElB,IAAKA,EAAWqhC,aAAay6B,QAAU97D,EAAWqhC,aAAak6B,mBAAoB,CAClFv7D,EAAaA,EAAWm0C,IACxB,UAGD95C,KAAK0gE,gBAAkB,IAEvB1gE,MAAKugE,SAAS/P,WAA2B7qD,EAAWC,kBAAmB47C,UAAWoO,EAAsBa,KAAOb,EAAsBM,KAAMjqD,EAAOyqD,WAAWC,iBAE7J3wD,MAAKw/D,cAAcx/D,KAAK2hE,kBAAoBh8D,CAE5C3F,MAAK+/D,IAAI,IAAM//D,KAAK2hE,gBAAkB,GAAG,GACzC3hE,MAAK+/D,IAAI,IAAM//D,KAAK2hE,eAAiB,KAAM,GAE3Cr2C,GAAO7kB,SAASd,EAAWqhC,aAAa0U,wBAAwBz1C,GAChEqlB,GAAOoc,OAAO8Q,EACdx4C,MAAKugE,SAASwB,8BAA8BvoD,EAAqBc,OAAQ,EAAGgR,EAAQ,KACpFtrB,MAAKugE,SAASlmD,6BAA6Bb,EAAqBkB,SAAU,EAAG1a,KAAK+/D,IAAK,EACvF//D,MAAKqK,OAAOiU,eAAe,EAAG3Y,EAAW4Y,cAAczC,EAAoB0M,eAAgB7iB,EAAW8Y,gBAAgB3C,EAAoB0M,eAAgB1M,EAAoB4M,gBAC9K1oB,MAAKugE,SAASj0D,cAActM,KAAKqK,OAAO23D,eAAer8D,EAAW4iB,gBAAiB,EAAG5iB,EAAWi2C,aAEjGj2C,GAAaA,EAAWm0C,MAKlBulB,GAAA9+D,UAAA0hE,UAAR,SAAkBh8D,GAEjBjG,KAAK4/D,QAAU35D,EAAOY,aAEtB7G,MAAK6/D,QAAU55D,EAAOi8D,OAAOliE,KAAKwgE,OAAQxgE,KAAKygE,OAAQ,EACvDzgE,MAAK6/D,QAAQrkC,YAMN6jC,GAAA9+D,UAAAshE,kBAAR,WAEC,GAAIrQ,EACJ,IAAIC,EAEJzxD,MAAK4hE,eAAiB5hE,KAAKugE,SAAS9oB,eAEpC+Z,GAAa,yBAA2B,+BAAiC,gCAAkC,gCAAkC,gBAC7IC,GAAe,aAEfyN,GAAMiD,SAAS,eAAgB,sBAAuB,iCAQ/C9C,GAAA9+D,UAAA6hE,oBAAR,WAEC,GAAI5Q,EACJ,IAAIC,EAEJzxD,MAAKqiE,iBAAmBriE,KAAKugE,SAAS9oB,eAGtC+Z,GAAa,0BAA4B,0BAA4B,oBAAsB,yBAA2B,+BAAiC,gCAAkC,gCAAkC,gBAC3NC,GAAe,YAEf,IAAI/Z,IAA4B,GAAI7B,IAAoB8B,SAAS,kBAAoB6Z,EAAa,WAAY,UAAUpmC,IACxH,IAAIysB,IAA8B,GAAIhC,IAAoB8B,SAAS,oBAAsB8Z,EAAe,WAAY,YAAYrmC,IAChIprB,MAAKqiE,iBAAiBtqB,OAAOL,EAAgBG,GAOtCwnB,GAAA9+D,UAAA8gE,cAAR,SAAsBp7D,GAErBjG,KAAKsiE,uBAAuBr8D,EAC5BjG,MAAKuiE,kBAAkBt8D,GAQhBo5D,GAAA9+D,UAAA+hE,uBAAR,SAA+Br8D,GAE9B,GAAIu8D,GAAaxiE,KAAKghE,eAAeh6B,aAAay7B,QAClD,IAAIC,EACJ,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAcC,EAAcC,CAChC,IAAIC,GAA+B7D,EAAc0C,kBAEjDmB,GAAoBx8D,SAASzG,KAAKghE,eAAeh6B,aAAa0U,wBAAwBz1C,GACtFg9D,GAAoBv7B,OAAOzhC,EAAOuyC,eAClC,KAAKx4C,KAAKqiE,iBAAkB,CAC3BriE,KAAKoiE,sBAGNpiE,KAAKigE,kBAAkB,GAAK,GAAG0C,EAAMH,EAAO9gE,MAC5C1B,MAAKigE,kBAAkB,GAAK,GAAG2C,EAAMJ,EAAOxgE,OAC5ChC,MAAKigE,kBAAkB,GAAK,GAAG4C,EAAML,EAAOU,MAC5CljE,MAAKigE,kBAAkB,GAAK6C,GAASN,EAAOz7D,CAC5C/G,MAAKigE,kBAAkB,GAAK8C,GAASP,EAAOv7D,CAC5CjH,MAAKigE,kBAAkB,GAAK+C,GAASR,EAAOr7D,CAE5CnH,MAAKugE,SAASv0D,WAAWhM,KAAKqiE,iBAC9BriE,MAAKugE,SAAS78D,MAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG9C,EAAmB+C,MACzD3D,MAAKugE,SAAS4C,oBAAoB9D,EAAaqC,mBAC/C1hE,MAAKugE,SAASwB,8BAA8BvoD,EAAqBc,OAAQ,EAAG2oD,EAAqB,KACjGjjE,MAAKugE,SAASlmD,6BAA6Bb,EAAqBc,OAAQ,EAAGta,KAAKigE,kBAAmB,EAEnGjgE,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKghE,eAAeziD,cAAczC,EAAoB0M,eAAgBxoB,KAAKghE,eAAeviD,gBAAgB3C,EAAoB0M,eAAgB1M,EAAoB4M,gBAChM1oB,MAAKugE,SAASj0D,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKghE,eAAez4C,gBAAiB,EAAGvoB,KAAKghE,eAAeplB,aAEnH57C,MAAKugE,SAASpmB,iBAAiBn6C,KAAK6gE,YAEpC6B,GAAM1iE,KAAK6gE,YAAYE,SAAS,EAAG,EAEnC/gE,MAAKy/D,kBAAkB14D,GAAM27D,GAAO,GAAM,KAAMC,EAAI,IAAMG,CAC1D9iE,MAAKy/D,kBAAkBx4D,GAAMy7D,GAAO,EAAK,KAAME,EAAI,IAAMG,CACzD/iE,MAAKy/D,kBAAkBt4D,GAAKu7D,EAAM,KAAMG,EAAI,IAAMG,EAQ3C3D,GAAA9+D,UAAAgiE,kBAAR,SAA0Bt8D,GAEzB,GAAIrB,GAAa2W,GAAQ3b,MACzB,IAAI8kB,GAAWC,EAAWC,CAC1B,IAAIE,GAAWC,EAAWC,CAC1B,IAAIE,GAAWC,EAAWC,CAC1B,IAAI/lB,GAAW,EAAG6X,EAAW,EAAGC,EAAW,CAC3C,IAAIisD,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAWC,EAAWC,CACrC,IAAIC,GAAcC,EAAcC,EAAcC,EAAcC,CAC5D,IAAI1lE,GAAUH,EAAU8lE,CACxB,IAAI79D,GAAW/G,KAAKy/D,kBAAkB14D,EAAGE,EAAWjH,KAAKy/D,kBAAkBx4D,EAAGE,EAAWnH,KAAKy/D,kBAAkBt4D,CAChH,IAAIhI,GAAU0/B,CACd,IAAIgmC,GAAYC,EAAYC,CAC5B,IAAItJ,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,GAAYC,EAC5B,IAAIC,GACJ,IAAIxgD,IAAwBvb,KAAKghE,eAAez4C,eAAe6C,IAE/D,IAAInJ,IAA0BjiB,KAAKghE,eAAeziD,cAAczC,EAAoB0M,eAAe4C,IACnG,IAAIuxC,IAAwB38D,KAAKghE,eAAeziD,cAAczC,EAAoB0M,eAAeo0C,aACjG,IAAIC,IAAwB78D,KAAKghE,eAAeviD,gBAAgB3C,EAAoB0M,cAEpF,IAAI3C,IAAoB7lB,KAAKghE,eAAeziD,cAAczC,EAAoB6J,SAASyF,IACvF,IAAI2xC,IAAkB/8D,KAAKghE,eAAeziD,cAAczC,EAAoB6J,SAASi3C,aACrF,IAAII,IAAkBh9D,KAAKghE,eAAeviD,gBAAgB3C,EAAoB6J,QAE9E,IAAIq/C,IAAwBhlE,KAAKghE,eAAeziD,cAAczC,EAAoB6M,aAAayC,IAC/F,IAAI65C,IAAsBjlE,KAAKghE,eAAeziD,cAAczC,EAAoB6M,aAAai0C,aAC7F,IAAIsI,IAAsBllE,KAAKghE,eAAeviD,gBAAgB3C,EAAoB6M,YAElF3oB,MAAKiiE,UAAUh8D,EAEf,OAAO5G,EAAIuF,EAAK,CACfw+D,EAAKvG,GAAiBthD,GAAQlc,GAAGs9D,EACjC0G,GAAKxG,GAAiBthD,GAAQrE,GAAGylD,EACjC2G,GAAKzG,GAAiBthD,GAAQpE,GAAGwlD,EACjCj4C,GAAKzC,GAAUmhD,EACfz+C,GAAK1C,GAAUmhD,EAAK,EACpBx+C,GAAK3C,GAAUmhD,EAAK,EACpBt+C,GAAK7C,GAAUohD,EACft+C,GAAK9C,GAAUohD,EAAK,EACpBr+C,GAAK/C,GAAUohD,EAAK,EACpBn+C,GAAKjD,GAAUqhD,EACfn+C,GAAKlD,GAAUqhD,EAAK,EACpBl+C,GAAKnD,GAAUqhD,EAAK,EAGpB,MAAWv8D,EAAI2d,GAAM3d,EAAI+d,GAAM/d,EAAIme,GAAQje,EAAI0d,GAAM1d,EAAI8d,GAAM9d,EAAIke,GAAQhe,EAAIyd,GAAMzd,EAAI6d,GAAM7d,EAAIie,GAAQre,EAAI2d,GAAM3d,EAAI+d,GAAM/d,EAAIme,GAAQje,EAAI0d,GAAM1d,EAAI8d,GAAM9d,EAAIke,GAAQhe,EAAIyd,GAAMzd,EAAI6d,GAAM7d,EAAIie,GAAM,CAGxMm+C,EAAMr+C,EAAKR,CACX8+C,GAAMr+C,EAAKR,CACX8+C,GAAMr+C,EAAKR,CACX8+C,GAAM5+C,EAAKJ,CACXi/C,GAAM5+C,EAAKJ,CACXi/C,GAAM5+C,EAAKJ,CACXi/C,GAAM98D,EAAI2d,CACVo/C,GAAM78D,EAAI0d,CACVo/C,GAAM58D,EAAIyd,CACV2/C,GAAQhB,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAChCe,GAAQjB,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAChCa,GAAQlB,EAAIM,EAAML,EAAIM,EAAML,EAAIM,CAChCW,GAAQhB,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAChCe,GAAQjB,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAChCa,GAAW,GAAGL,EAAMG,EAAQF,EAAMA,EAClCvlE,IAAKylE,EAAMD,EAAQD,EAAMG,GAAOC,CAChC9lE,IAAKylE,EAAMI,EAAQH,EAAMC,GAAOG,CAGhC,IAAI3lE,GAAK,GAAKH,GAAK,GAAMG,EAAIH,GAAM,EAAG,CAErCklE,EAAMkB,GAAe3pD,GAAQlc,GAAG4lE,EAChChB,GAAMiB,GAAe3pD,GAAQrE,GAAG+tD,EAChCf,GAAMgB,GAAe3pD,GAAQpE,GAAG8tD,EAEhCd,GAAK5oD,GAAQyoD,GAAOzoD,GAAQ0oD,GAAO1oD,GAAQ2oD,EAC3CE,GAAK7oD,GAAQyoD,EAAM,GAAKzoD,GAAQ0oD,EAAM,GAAK1oD,GAAQ2oD,EAAM,EACzDG,GAAK9oD,GAAQyoD,EAAM,GAAKzoD,GAAQ0oD,EAAM,GAAK1oD,GAAQ2oD,EAAM,EAEzDI,GAAUj9D,KAAKC,KAAK68D,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEvCF,IAAMG,CACNF,IAAME,CACND,IAAMC,CAGNtkE,MAAKmlE,mBAAmBnlE,KAAKghE,eAAeh6B,aAAaW,sBAAuBw8B,EAAIC,EAAIC,EAAI3/C,EAAIC,EAAIC,EAEpGi/C,GAAM7jE,KAAKy/D,kBAAkB14D,EAAI2d,CACjCo/C,GAAM9jE,KAAKy/D,kBAAkBx4D,EAAI0d,CACjCo/C,GAAM/jE,KAAKy/D,kBAAkBt4D,EAAIyd,CAEjC62C,GAAM32C,EAAKJ,CACXg3C,GAAM32C,EAAKJ,CACXg3C,GAAM32C,EAAKJ,CACXg3C,GAAM12C,EAAKR,CACXm3C,IAAM12C,EAAKR,CACXm3C,IAAM12C,EAAKR,CACX5kB,MAAK2/D,gBAAgB54D,EAAI20D,EAAII,GAAMH,EAAIE,EACvC77D,MAAK2/D,gBAAgB14D,EAAI00D,EAAIC,EAAMH,EAAIK,EACvC97D,MAAK2/D,gBAAgBx4D,EAAIs0D,EAAII,GAAMH,EAAIE,CACvCG,IAAK,EAAE10D,KAAKC,KAAKtH,KAAK2/D,gBAAgB54D,EAAE/G,KAAK2/D,gBAAgB54D,EAAI/G,KAAK2/D,gBAAgB14D,EAAEjH,KAAK2/D,gBAAgB14D,EAAIjH,KAAK2/D,gBAAgBx4D,EAAEnH,KAAK2/D,gBAAgBx4D,EAC7JnH,MAAK2/D,gBAAgB54D,GAAKg1D,EAC1B/7D,MAAK2/D,gBAAgB14D,GAAK80D,EAC1B/7D,MAAK2/D,gBAAgBx4D,GAAK40D,EAE1B0I,GAAQlB,EAAIM,EAAML,EAAIM,EAAML,EAAIM,CAChCY,GAAQjB,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAChC9kE,IAAKylE,EAAMD,EAAQD,EAAMG,GAAOC,CAChC9lE,IAAKylE,EAAMI,EAAQH,EAAMC,GAAOG,CAEhCC,GAAM7H,GAAWzhD,GAAQlc,GAAG09D,EAC5B+H,GAAM9H,GAAWzhD,GAAQrE,GAAG6lD,EAC5BgI,GAAM/H,GAAWzhD,GAAQpE,GAAG4lD,EAE5B59D,GAAI0mB,GAAIg/C,EACRhmC,GAAIhZ,GAAIg/C,EAAM,EACd7kE,MAAK0/D,OAAO34D,EAAI5H,EAAIL,GAAG+mB,GAAIi/C,GAAO3lE,GAAKF,GAAG4mB,GAAIk/C,GAAO5lE,EACrDa,MAAK0/D,OAAOz4D,EAAI43B,EAAI//B,GAAG+mB,GAAIi/C,EAAM,GAAKjmC,GAAK5/B,GAAG4mB,GAAIk/C,EAAM,GAAKlmC,EAE7D7+B,MAAKshE,WAAajiE,CAIlB,SAIFA,GAAK,CACL6X,IAAK,CACLC,IAAK,GAiBCkoD,GAAA9+D,UAAA4kE,mBAAR,SAA2BC,EAA4BtiD,EAAWC,EAAWC,EAAWqiD,EAAWC,EAAWC,G/GsmYvG,G+GnmYF3K,GAAWC,EAAWC,CAC1B,IAAI17C,GAAWC,EAAWC,CAC1B,IAAIxgB,EACJ,IAAIqgB,GAAoBigD,EAAcoG,kBACtC,IAAI1+D,GAAY9G,KAAK4/D,QAAQ74D,EAAGC,EAAYhH,KAAK4/D,QAAQ34D,EAAGC,EAAYlH,KAAK4/D,QAAQz4D,CAGrFiY,GAAKpf,KAAK6/D,QAAQ94D,CAClBsY,GAAKrf,KAAK6/D,QAAQ54D,CAClBqY,GAAKtf,KAAK6/D,QAAQ14D,CAIlBi+D,GAAkBjU,cAAchyC,EAChCy7C,GAAKz7C,EAAI,GAAGC,EAAKD,EAAI,GAAGE,EAAKF,EAAI,GAAGG,CACpCu7C,GAAK17C,EAAI,GAAGC,EAAKD,EAAI,GAAGE,EAAKF,EAAI,GAAGG,CACpCw7C,GAAK37C,EAAI,GAAGC,EAAKD,EAAI,GAAGE,EAAKF,EAAI,IAAIG,CAErCF,GAAKD,EAAI,GAAGrY,EAAKqY,EAAI,GAAGnY,EAAKmY,EAAI,GAAGjY,EAAKiY,EAAI,GAC7CE,GAAKF,EAAI,GAAGrY,EAAKqY,EAAI,GAAGnY,EAAKmY,EAAI,GAAGjY,EAAKiY,EAAI,GAC7CG,GAAKH,EAAI,GAAGrY,EAAKqY,EAAI,GAAGnY,EAAKmY,EAAI,IAAIjY,EAAKiY,EAAI,GAE9CrgB,KAAMumE,EAAKjmD,GAAI0D,GAAMwiD,EAAKjmD,GAAI0D,GAAMwiD,EAAKjmD,GAAI0D,IAAK43C,EAAG93C,EAAK+3C,EAAG93C,EAAK+3C,EAAG93C,EAErEhjB,MAAKy/D,kBAAkB14D,EAAIqY,EAAKw7C,EAAG97D,CACnCkB,MAAKy/D,kBAAkBx4D,EAAIoY,EAAKw7C,EAAG/7D,CACnCkB,MAAKy/D,kBAAkBt4D,EAAImY,EAAKw7C,EAAGh8D,EAG7BugE,GAAA9+D,UAAAwC,QAAP,WAEC/C,KAAK6gE,YAAY99D,SACjB,IAAI/C,KAAKqiE,iBACRriE,KAAKqiE,iBAAiBt/D,SAEvB,IAAI/C,KAAK4hE,eACR5hE,KAAK4hE,eAAe7+D,SAErB/C,MAAKqiE,iBAAmB,IACxBriE,MAAK4hE,eAAiB,IACtB5hE,MAAK6gE,YAAc,IACnB7gE,MAAKghE,eAAiB,IACtBhhE,MAAKihE,WAAa,KA9dJ5B,GAAAqC,mBAA+B,GAAIpsB,GAAU,EAAG,EAAG,EAAG,EAgetE,OAAA+pB,KAEAv/D,GAAsBJ,QAAb2/D,I/G8lYNoG,kCAAkC78D,UAAUod,2CAA2Cpd,UAAU88D,qCAAqC98D,UAAUmzC,6BAA6BnzC,UAAUozC,iCAAiCpzC,UAAUC,gCAAgCD,UAAU+8D,8BAA8B/8D,UAAU0zC,uDAAuD1zC,UAAU8D,+CAA+C9D,UAAUU,6CAA6CV,UAAUW,+CAA+CX,UAAUiS,+CAA+CjS,UAAUipD,gDAAgDjpD,YAAYm2D,kDAAkD,SAASngE,EAAQkB,EAAOJ,GAChuB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgHnpZtB,IAAO++D,GAAaxgE,EAAc,qCAGlC,IAAOkd,GAAmBld,EAAa,2CAOvC,IAAO4a,GAAoB5a,EAAa,+CAMxC,IAAOgnE,GAAchnE,EAAc,4ChH4oZnC,IgHroZM6+D,GAAmB,SAAAp8D,GAAStB,EAA5B09D,EAAmBp8D,EAsBxB,SAtBKo8D,GAsBO5gB,EAAyB6hB,EAAqBn9D,GAEzDF,EAAA1B,KAAAK,KAAM68C,EAAM6hB,EAAWA,EAAWA,EAAUjf,SAAUl+C,EAEtDvB,MAAK6lE,WAAanH,EAQZjB,EAAAl9D,UAAAulE,iBAAP,WAEC,GAAIrmB,GAAwBz/C,KAAK6lE,WAAWpmB,QAE5C,IAAIxoC,GAA+BwmD,EAAoBsI,kBAAkBtmB,EAASzvC,GAElF,KAAKiH,EAAU,CACdA,EAAWwmD,EAAoBsI,kBAAkBtmB,EAASzvC,IAAM,GAAI8L,GAAoB,KACxF7E,GAAS0K,kBAAoB,KAC7B1K,GAAS2K,mBAAqB,KAC9B3K,GAASuO,cAAcva,MAAc,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDgM,GAAS6M,gBAAgB7Y,MAAc,EAAGw0C,EAASz9C,OAAQ,EAAGy9C,EAAS/9C,MAAO+9C,EAASz9C,OAAQ,EAAGy9C,EAAS/9C,MAAO,EAAG,EAAG,EAAG,EAAG,GAC9HuV,GAAS8M,oBAAoB9Y,MAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5EgM,GAAS+M,qBAAqB/Y,MAAc,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GACjFgM,GAAS2O,UAAU3a,MAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,QAChD,CACNgM,EAAS6M,gBAAgB7Y,MAAc,EAAGw0C,EAASz9C,OAAQ,EAAGy9C,EAAS/9C,MAAO+9C,EAASz9C,OAAQ,EAAGy9C,EAAS/9C,MAAO,EAAG,EAAG,EAAG,EAAG,IAG/H1B,KAAKgmE,kBAAkBlqD,EAAoB0M,eAAiB,IAC5DxoB,MAAKgmE,kBAAkBlqD,EAAoB6M,aAAe,IAC1D3oB,MAAKgmE,kBAAkBlqD,EAAoBg1C,cAAgB,IAC3D9wD,MAAKgmE,kBAAkBlqD,EAAoB6J,SAAW,IAEtD,OAAO1O,GAGMwmD,GAAAzc,sBAAd,SAAoCnzC,IAKtB4vD,GAAApZ,gBAAd,SAA8Bx2C,EAA+B0iD,EAAmC+H,GAE/F,GAAI94D,GAAc,EhH6mZZ,IgH1mZFi6B,GAAkC5rB,EAAaw3C,sBAAwB,EAAIiT,EAAgBpS,qBAAuBoS,EAAgBjS,ahH4mZhI,IgHzmZF4f,GAAsC1V,EAAchnC,uBACxDgnC,GAAchnC,uBACdgnC,GAAchnC,uBACdgnC,GAAchnC,uBACd1b,GAAaq4D,gBAAkBD,EAAczvD,MAAM,CAEnD,IAAI3I,EAAayiD,uBAAyB,EAAG,CAC5CgI,EAAgBG,mBAAqBlI,EAAc/lC,gBACnD,IAAIK,GAA6B0lC,EAAc5mC,yBAC/CnqB,IAAQ,OAASqrB,EAAO,KAAO4O,EAAW,KAAOwsC,EAAgB,KACjE,OAAS3N,EAAgBG,mBAAqB,KAAO5tC,EAAO,KAC5D,WAAaA,EAAO,SACd,CACNrrB,GAAQ,WAAai6B,EAAW,KAAOwsC,EAAgB,KAGxD,MAAOzmE,GAGDi+D,GAAAl9D,UAAAy3C,WAAP,SAAkB5xC,EAAqBH,GAEtC5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACoG,EAAMH,EAGvBjG,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAczC,EAAoB0M,eAAgBxoB,KAAKye,gBAAgB3C,EAAoB0M,eAAgB1M,EAAoB4M,iBAM5J+0C,GAAAl9D,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAACoG,EAAMH,EAAQuyC,EAE7B,IAAInB,GAA0BjxC,EAAKixC,MAEnC,IAAIA,EAAO+O,kBAAoB,EAAG,CACjCpmD,KAAKgnC,aAAa0U,wBAAwBz1C,GAAQkrD,cAAc9Z,EAAO98B,mBAAoB88B,EAAO+O,iBAAkB,KACpH5N,GAAe2Y,cAAc9Z,EAAO98B,mBAAoB88B,EAAO6uB,gBAAiB,UAC1E,CACN,GAAIC,GAAoB/G,EAAc0C,kBAEtCqE,GAAS1/D,SAASzG,KAAKgnC,aAAa0U,wBAAwBz1C,GAC5DkgE,GAASz+B,OAAO8Q,EAEhB2tB,GAAShV,cAAc9Z,EAAO98B,mBAAoB88B,EAAO6uB,gBAAiB,MAG3E,GAAI/9D,GAAqBnI,KAAKqK,OAAOlC,OACrCA,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAG+8B,EAAO98B,mBAAoB88B,EAAOjjC,uBACvGjM,GAAQkS,6BAA6Bb,EAAqBkB,SAAU,EAAG28B,EAAO18B,qBAAsB08B,EAAO3iC,yBAE3G1U,MAAKqK,OAAOlC,QAAQmE,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKuoB,gBAAiB,EAAGvoB,KAAK47C,cA5H7E6hB,GAAAsI,kBAA2B,GAAI5jE,OAKhCs7D,GAAAztD,GAAY,WAEZytD,GAAAppD,uBAAgC,CAuH/C,OAAAopD,IAhIkCmI,EAkIL9lE,GAAAJ,QAApB+9D,IhHqmZNz3C,2CAA2Cpd,UAAU88D,qCAAqC98D,UAAUw9D,4CAA4C,4CAA4CvrD,+CAA+CjS,YAAYy9D,qDAAqD,SAASznE,EAAQkB,EAAOJ,GACvU,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiHnwZtB,IAAO++D,GAAaxgE,EAAc,qCAIlC,IAAO0nE,GAAgB1nE,EAAiB,wCAOxC,IAAO4a,GAAoB5a,EAAa,+CAMxC,IAAOgnE,GAAchnE,EAAc,4CjH2vZnC,IiHpvZM2nE,GAAsB,SAAAllE,GAAStB,EAA/BwmE,EAAsBllE,EAuB3B,SAvBKklE,GAuBO1pB,EAAyBlmC,EAAsBpV,EAAailE,EAAkBC,GAAlB,GAAAD,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAEzFplE,EAAA1B,KAAAK,KAAM68C,EAAMlmC,EAAQC,WAAYD,EAASA,EAAQ8oC,SAAUl+C,EAAOilE,EAAOC,EA2J/DzmE,MAAA0mE,WAA2B,GAAIz7D,OAAc,EAAG,EAAG,EAAG,GAzJhEjL,MAAK2W,QAAUA,EAQT4vD,EAAAhmE,UAAAulE,iBAAP,WAEC,GAAIhvD,EAEJ,IAAI9W,KAAK2W,QAAQ8Z,SAChB3Z,EAAiC9W,KAAK2W,QAAQ8Z,SAASre,yBAAyBpS,KAAMA,KAAK2W,QAAQG,iBAEnGA,GAAc9W,KAAK2W,QAAQG,WAE5B9W,MAAKgmE,kBAAkBM,EAAiB99C,eAAiB,IAEzD,IAAI1R,EAAY6vD,OACf3mE,KAAKgmE,kBAAkBM,EAAiBM,YAAc,IAEvD,IAAI9vD,EAAY+O,IACf7lB,KAAKgmE,kBAAkBM,EAAiB3gD,SAAW,IAEpD,OAAO7O,GAIMyvD,GAAAvlB,sBAAd,SAAoCnzC,GAE7BA,EAAa23C,uBAGN+gB,GAAAliB,gBAAd,SAA8Bx2C,EAA+B0iD,EAAmC+H,GAE/F,GAAI94D,GAAc,EjH8tZZ,IiH3tZFi6B,GAAkC5rB,EAAaw3C,sBAAwB,EAAIiT,EAAgBpS,qBAAuBoS,EAAgBjS,ajH6tZhI,IiH1tZF4f,GAAsC1V,EAAchnC,uBACxDgnC,GAAchnC,uBACdgnC,GAAchnC,uBACdgnC,GAAchnC,uBACd1b,GAAaq4D,gBAAkBD,EAAczvD,MAAM,CAGnD,IAAI3I,EAAayiD,uBAAyB,EAAG,CAC5CgI,EAAgBG,mBAAqBlI,EAAc/lC,gBACnD,IAAIK,GAA6B0lC,EAAc5mC,yBAC/CnqB,IAAQ,OAASqrB,EAAO,KAAO4O,EAAW,SAAWwsC,EAAgB,KACrE,OAAS3N,EAAgBG,mBAAqB,KAAO5tC,EAAO,KAC5D,gBACA,WAAaA,EAAO,SAEd,CACNrrB,GAAQ,eACRA,IAAQ,WAAai6B,EAAW,SAAWwsC,EAAgB,KAE5D,MAAOzmE,GAKM+mE,GAAAjiB,kBAAd,SAAgCz2C,EAA+B0iD,EAAmC+H,GAEjG,GAAIuO,GAA4Bh5D,EAAaxD,OAAOlC,QAAS2+D,mBAC7D,IAAI//B,GAA4BuxB,EAAgB9R,oBAChD,IAAIugB,GAA4BzO,EAAgBvqD,YAEhD,IAAIi5D,GAAe,IACnB,IAAIC,GAAgB,MACpB,IAAIC,GAAgB,MACpB,IAAIC,GAAgBpgC,EAAM,IjHqtZpB,IiHjtZFqgC,GAA6B7W,EAAcjL,2BAC/CiL,GAAc3lC,sBAAsBw8C,EAAM,EAC1C,IAAIC,GAA8B9W,EAAcjL,2BAChDiL,GAAc3lC,sBAAsBy8C,EAAO,EAC3C,IAAIC,GAA8B/W,EAAcjL,2BAChDiL,GAAc3lC,sBAAsB08C,EAAO,EjHmtZrC,IiHhtZFrnE,GAAWmnE,EAAO,IACtB,IAAI/1B,GAAY+1B,EAAO,IACvB,IAAI91B,GAAY81B,EAAO,IACvB,IAAItoE,GAAWsoE,EAAO,IACtB,IAAIG,GAAYF,EAAQ,IACxB,IAAIG,GAAcH,EAAQ,IAC1B,IAAII,GAAcJ,EAAQ,IAE1B,IAAIK,GAAa,OACjB,IAAIC,GAAY,OAEhB,IAAI5L,GAAY,IAEhB,IAAIv8D,GAAsB,GAAIyL,MAG9BzL,GAAKgP,KAAK,MAAMvO,EAAGgnE,EAAQA,EAAQlL,EACnCv8D,GAAKgP,KAAK,MAAMvO,EAAGA,EAAGinE,EAAQnL,EAC9Bv8D,GAAKgP,KAAK,MAAMvO,EAAGA,EAAGknE,EAAQpL,EAE9Bv8D,GAAKgP,KAAK,MAAOvO,EAAG87D,EAEpB,IAAG8K,EACH,CAGCrnE,EAAKgP,KAAK,MAAO6iC,EAAIpxC,EAAG87D,EACxBv8D,GAAKgP,KAAK,MAAO8iC,EAAIrxC,EAAG87D,EAGxBv8D,GAAKgP,KAAK,MAAM6iC,EAAIA,EAAIA,EAAI0qB,EAC5Bv8D,GAAKgP,KAAK,MAAM8iC,EAAIA,EAAIA,EAAIyqB,EAC5Bv8D,GAAKgP,KAAK,MAAM1P,EAAGuyC,EAAIC,EAAIyqB,EAC3Bv8D,GAAKgP,KAAK,MAAM1P,EAAGA,EAAGi9D,EAEtBv8D,GAAKgP,KAAK,MAAM1P,EAAGA,EAAG4oE,EAAK3L,EAC3Bv8D,GAAKgP,KAAK,MAAMvO,EAAGA,EAAGnB,EAAGi9D,EAIzBv8D,GAAKgP,KAAK,MAAO+4D,EAAIL,EAAQnL,EAC7Bv8D,GAAKgP,KAAK,MAAO6iC,EAAI61B,EAAQnL,EAC7Bv8D,GAAKgP,KAAK,MAAO8iC,EAAI41B,EAAQnL,EAC7Bv8D,GAAKgP,KAAK,MAAO6iC,EAAIA,EAAIA,EAAI0qB,EAC7Bv8D,GAAKgP,KAAK,MAAO8iC,EAAIA,EAAIA,EAAIyqB,EAC7Bv8D,GAAKgP,KAAK,MAAO1P,EAAGuyC,EAAIC,EAAIyqB,EAC5Bv8D,GAAKgP,KAAK,MAAO1P,EAAGA,EAAGi9D,EACvBv8D,GAAKgP,KAAK,MAAO1P,EAAGA,EAAG4oE,EAAK3L,EAE5Bv8D,GAAKgP,KAAK,MAAO+4D,EAAIA,EAAIzoE,EAAGi9D,EAI5Bv8D,GAAKgP,KAAK,MAAOi5D,EAAMR,EAAQU,EAAI5L,EACnCv8D,GAAKgP,KAAK,MAAOg5D,EAAMG,EAAIF,EAAM1L,EAEjCv8D,GAAKgP,KAAK,MAAO+4D,EAAIA,EAAIC,EAAMzL,EAC/Bv8D,GAAKgP,KAAK,MAAOvO,EAAGA,EAAGwnE,EAAM1L,EAE7Bv8D,GAAKgP,KAAK,MAAOvO,EAAGA,EAAGsnE,EAAIxL,EAC3Bv8D,GAAKgP,KAAK,MAAOvO,EAAGA,EAAG87D,EAEvBv8D,GAAKgP,KAAK,MAAOu4D,EAAI,KAAM9mE,EAAG87D,GAE/B,MAAOv8D,GAAKooE,KAAK,KAMRrB,GAAAhmE,UAAAy3C,WAAP,SAAkB5xC,EAAqBH,GAEnC5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACoG,EAAMH,EAEvB,IAAIkC,GAAqBnI,KAAKqK,OAAOlC,OAErCA,GAAQkS,6BAA6Bb,EAAqBkB,SAAU,EAAG1a,KAAK0mE,WAAY,GAMxFH,GAAAhmE,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAACoG,EAAMH,EAAQuyC,EAE7B,IAAInB,GAA0BjxC,EAAKixC,MAEnC,IAAIA,EAAO+O,kBAAoB,EAAG,CACjCpmD,KAAKgnC,aAAa0U,wBAAwBz1C,GAAQkrD,cAAc9Z,EAAO98B,mBAAoB88B,EAAO+O,iBAAkB,KACpH5N,GAAe2Y,cAAc9Z,EAAO98B,mBAAoB88B,EAAO6uB,gBAAiB,UAC1E,CACN,GAAIC,GAAoB/G,EAAc0C,kBAEtCqE,GAAS1/D,SAASzG,KAAKgnC,aAAa0U,wBAAwBz1C,GAC5DkgE,GAASz+B,OAAO8Q,EAEhB2tB,GAAShV,cAAc9Z,EAAO98B,mBAAoB88B,EAAO6uB,gBAAiB,MAG3E,GAAI/9D,GAAqBnI,KAAKqK,OAAOlC,OACrCA,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAG+8B,EAAO98B,mBAAoB88B,EAAOjjC,uBACvGjM,GAAQkS,6BAA6Bb,EAAqBkB,SAAU,EAAG28B,EAAO18B,qBAAsB08B,EAAO3iC,yBAE3G1U,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAc+nD,EAAiB99C,eAAgBxoB,KAAKye,gBAAgB6nD,EAAiB99C,eAAgB89C,EAAiB59C,gBACnJ1oB,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAc+nD,EAAiBM,YAAa5mE,KAAKye,gBAAgB6nD,EAAiBM,YAAaN,EAAiBuB,aAEnJ7nE,MAAKqK,OAAOlC,QAAQmE,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKuoB,gBAAiB,EAAGvoB,KAAK47C,cAa3F2qB,GAAAhmE,UAAAunE,wBAAP,SAA+BrB,GAE9B,MAAO,IAAIF,GAAuBvmE,KAAK8F,MAAsB9F,KAAKk7C,gBAAiBl7C,KAAKqK,OAAQrK,KAAK+nE,OAAS,EAAGtB,GAvOpGF,GAAAv2D,GAAY,cAEZu2D,GAAAlyD,uBAAgC,CAuO/C,OAAAkyD,IA9OqCX,EAgPrC9lE,GAAgCJ,QAAvB6mE,IjH0rZNyB,wCAAwCp/D,UAAU88D,qCAAqC98D,UAAUw9D,4CAA4C,4CAA4CvrD,+CAA+CjS,YAAYq/D,+CAA+C,SAASrpE,EAAQkB,EAAOJ,SAIxTwoE,iDAAiD,SAAStpE,EAAQkB,EAAOJ,SAIzEyoE,oDAAoD,SAASvpE,EAAQkB,EAAOJ,GAClF,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkHh9ZtB,IAAOG,GAAQ5B,EAAgB,gCAI/B,IAAO+wD,GAAe/wD,EAAc,uCAOpC,IAAO4a,GAAoB5a,EAAa,+CAOxC,IAAOgnE,GAAchnE,EAAc,4ClHu8ZnC,IkHh8ZMwpE,GAAqB,SAAA/mE,GAAStB,EAA9BqoE,EAAqB/mE,EA+B1B,SA/BK+mE,GA+BOvrB,EAAyBwrB,EAAyB9mE,EAAailE,EAAkBC,GAAlB,GAAAD,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAE5FplE,EAAA1B,KAAAK,KAAM68C,EAAMwrB,EAAaA,EAAaA,EAAY5oB,SAAUl+C,EAAOilE,EAAOC,EA1BnEzmE,MAAA0mE,WAA2B,GAAIz7D,OAAc,EAAG,EAAG,EAAG,EAEtDjL,MAAAsoE,WAAoB,IA0B3BtoE,MAAKuoE,aAAeF,CAEpBroE,MAAKwoE,YAAc,GAAIhoE,EAEvBR,MAAK0mE,WAAW,GAAK,EAAE,IASjB0B,EAAA7nE,UAAAulE,iBAAP,WAEC,GAAI7uD,GAA2BmxD,EAAsBK,cAAczoE,KAAKuoE,aAAav4D,MAAQo4D,EAAsBK,cAAczoE,KAAKuoE,aAAav4D,IAAM,GAAI2/C,GAE7J3vD,MAAKgmE,kBAAkBrW,EAAgB+Y,qBAAuB,IAC9D1oE,MAAKgmE,kBAAkBrW,EAAgBgZ,mBAAqB,IAC5D3oE,MAAKgmE,kBAAkBrW,EAAgBiZ,gBAAkB,IACzD5oE,MAAKgmE,kBAAkBrW,EAAgBqB,YAAc,IAErD,IAAI5gD,GAAiBpQ,KAAKuoE,aAAaM,YACvC,IAAIC,GAAe9oE,KAAKuoE,aAAaQ,WAErC,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIjyD,EAASsE,SAAW,KAAM,CAC7BytD,EAAiB/xD,EAAS+xD,cAC1BC,GAAehyD,EAASgyD,YACxBC,GAAYjyD,EAASiyD,cACf,CACNF,EAAiB,GAAI/9D,OAAc,EACnCg+D,GAAe,GAAIh+D,OAAc,EACjCi+D,GAAY,GAAIj+D,OAAc,GAG/B+9D,EAAe,GAAK54D,EAAMrJ,CAC1BiiE,GAAe,GAAK54D,EAAMnJ,CAC1B+hE,GAAe,GAAK54D,EAAMjJ,CAC1B8hE,GAAa,GAAKH,EAAI/hE,CACtBkiE,GAAa,GAAKH,EAAI7hE,CACtBgiE,GAAa,GAAKH,EAAI3hE,CACtB+hE,GAAU,GAAKlpE,KAAKuoE,aAAaW,SAEjCjyD,GAAS6M,gBAAgBklD,EAAgBC,EACzChyD,GAASkyD,gBAAgBD,EAEzB,OAAOjyD,GAGMmxD,GAAApnB,sBAAd,SAAoCnzC,GAEnCA,EAAa26C,oBAMA4f,GAAA/jB,gBAAd,SAA8BhN,EAAyBqgB,EAA8BC,GAEpF,MAAO,yBACN,yBACA,0BAKA,+BACA,+BAQA,+BACA,+BAGA,8BACA,+BAEA,+BAEA,mCACA,mCACA,wBAGA,8BACA,8BACA,0BAGA,0BACA,4BACA,4BACA,yBACA,6BACA,4BAGA,mCACA,wBAIA,2BACA,+BACA,mCAGA,mCAEA,wBAMKyQ,GAAA7nE,UAAAy3C,WAAP,SAAkB5xC,EAAqBH,GAEtC5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACoG,EAAMH,EAEvBjG,MAAK0mE,WAAW,GAAK1mE,KAAKsoE,YAAatoE,KAAKqK,OAAkB,YAAGhD,KAAK42B,IAAIj+B,KAAKqK,OAAO/F,YAAY5C,MAAO1B,KAAKqK,OAAO/F,YAAYtC,QAAUqF,KAAK42B,IAAIj+B,KAAKqK,OAAO3I,MAAO1B,KAAKqK,OAAOrI,QAGnLhC,MAAK0mE,WAAW,GAAKzgE,EAAOyqD,WAAWlqD,IAEvC,IAAI2B,GAAqBnI,KAAKqK,OAAOlC,OAErCA,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAG8tD,EAAsBgB,YAAa,EACxGjhE,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAG8tD,EAAsBiB,cAAe,EAC1GlhE,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAGta,KAAK0mE,WAAY,EAGtFv+D,GAAQ45D,8BAA8BvoD,EAAqBc,OAAQ,EAAGrU,EAAOyqD,WAAWplC,OAAQ,MAM1F88C,GAAA7nE,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAACoG,EAAMH,EAAQuyC,EAE7B,IAAIrwC,GAAqBnI,KAAKqK,OAAOlC,OACrCnI,MAAKwoE,YAAY/hE,SAASzG,KAAKgnC,aAAaC,eAC5CjnC,MAAKwoE,YAAY9gC,OAAOzhC,EAAO0hC,sBAE/Bx/B,GAAQ45D,8BAA8BvoD,EAAqBc,OAAQ,EAAGta,KAAKwoE,YAAa,KAExFxoE,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAcoxC,EAAgB+Y,qBAAsB1oE,KAAKye,gBAAgBkxC,EAAgB+Y,qBAAsB/Y,EAAgBjnC,gBAClK1oB,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAcoxC,EAAgBgZ,mBAAoB3oE,KAAKye,gBAAgBkxC,EAAgBgZ,mBAAoBhZ,EAAgBjnC,gBAC9J1oB;KAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAcoxC,EAAgBiZ,gBAAiB5oE,KAAKye,gBAAgBkxC,EAAgBiZ,gBAAiBjZ,EAAgB2Z,iBAExJnhE,GAAQmE,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKuoB,gBAAiB,EAAGvoB,KAAK47C,cAazEwsB,GAAA7nE,UAAAunE,wBAAP,SAA+BrB,GAE9B,MAAO,IAAI2B,GAAsBpoE,KAAK8F,MAAqB9F,KAAKk7C,gBAAiBl7C,KAAKqK,OAAQrK,KAAK+nE,OAAS,EAAGtB,GAhNjG2B,GAAAK,cAAuB,GAAItmE,OAE5BimE,GAAAgB,YAA4Bn+D,MAAc,EAAG,EAAG,EAAG,EACnDm9D,GAAAiB,cAA8Bp+D,MAAc,EAAG,GAAI,EAAG,EAStDm9D,GAAAp4D,GAAY,aAEZo4D,GAAA/zD,uBAAgC,CAoM/C,OAAA+zD,IApNoCxC,EAsNpC9lE,GAA+BJ,QAAtB0oE,IlHo2ZNxW,uCAAuChpD,UAAUD,gCAAgCC,UAAUw9D,4CAA4C,4CAA4CvrD,+CAA+CjS,YAAY2gE,oDAAoD,SAAS3qE,EAAQkB,EAAOJ,GAC7T,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmHxlatB,IAAOG,GAAQ5B,EAAgB,gCAI/B,IAAO+wD,GAAe/wD,EAAc,uCAMpC,IAAO4a,GAAoB5a,EAAa,+CAOxC,IAAOgnE,GAAchnE,EAAc,4CnHglanC,ImHzkaM4qE,GAAqB,SAAAnoE,GAAStB,EAA9BypE,EAAqBnoE,EA6B1B,SA7BKmoE,GA6BO3sB,EAAyBlmC,EAAqBpV,EAAailE,EAAkBC,GAAlB,GAAAD,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAExFplE,EAAA1B,KAAAK,KAAM68C,EAAMlmC,EAAQC,WAAYD,EAASA,EAAQ8oC,SAAUl+C,EAAOilE,EAAOC,EA1BlEzmE,MAAA0mE,WAA2B,GAAIz7D,OAAc,EAAG,EAAG,EAAG,EAEtDjL,MAAAsoE,WAAoB,IA0B3BtoE,MAAK2W,QAAUA,CAEf3W,MAAKwoE,YAAc,GAAIhoE,EAEvBR,MAAK0mE,WAAW,GAAK,EAAE,IASjB8C,EAAAjpE,UAAAulE,iBAAP,WAEC,GAAIhvD,GAA8B9W,KAAK2W,QAAQG,WAE/C9W,MAAKgmE,kBAAkBrW,EAAgB+Y,qBAAuB,IAC9D1oE,MAAKgmE,kBAAkBrW,EAAgBgZ,mBAAqB,IAE5D,IAAI7xD,EAAYoyD,UACflpE,KAAKgmE,kBAAkBrW,EAAgBiZ,gBAAkB,IAE1D,IAAI9xD,EAAY2yD,YACfzpE,KAAKgmE,kBAAkBrW,EAAgBqB,YAAc,IAEtD,OAAOl6C,GAGM0yD,GAAAxoB,sBAAd,SAAoCnzC,GAEnCA,EAAa26C,oBAMAghB,GAAAnlB,gBAAd,SAA8BhN,EAAyBqgB,EAA8BC,GAEpF,MAAO,yBACN,yBACA,0BAKA,+BACA,+BAQA,+BACA,+BAGA,8BACA,+BAEA,+BAEA,mCACA,mCACA,wBAGA,8BACA,8BACA,0BAGA,0BACA,4BACA,4BACA,yBACA,6BACA,4BAGA,mCACA,wBAIA,2BACA,+BACA,mCAGA,mCAEA,wBAMK6R,GAAAjpE,UAAAy3C,WAAP,SAAkB5xC,EAAqBH,GAEtC5E,EAAAd,UAAMy3C,WAAUr4C,KAAAK,KAACoG,EAAMH,EAEvBjG,MAAK0mE,WAAW,GAAK1mE,KAAKsoE,YAAatoE,KAAKqK,OAAkB,YAAGhD,KAAK42B,IAAIj+B,KAAKqK,OAAO/F,YAAY5C,MAAO1B,KAAKqK,OAAO/F,YAAYtC,QAAUqF,KAAK42B,IAAIj+B,KAAKqK,OAAO3I,MAAO1B,KAAKqK,OAAOrI,QAGnLhC,MAAK0mE,WAAW,GAAKzgE,EAAOyqD,WAAWlqD,IAEvC,IAAI2B,GAAqBnI,KAAKqK,OAAOlC,OAErCA,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAGkvD,EAAsBJ,YAAa,EACxGjhE,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAGkvD,EAAsBH,cAAe,EAC1GlhE,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAGta,KAAK0mE,WAAY,EAGtFv+D,GAAQ45D,8BAA8BvoD,EAAqBc,OAAQ,EAAGrU,EAAOyqD,WAAWplC,OAAQ,MAM1Fk+C,GAAAjpE,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAACoG,EAAMH,EAAQuyC,EAE7B,IAAIrwC,GAAqBnI,KAAKqK,OAAOlC,OACrCnI,MAAKwoE,YAAY/hE,SAASzG,KAAKgnC,aAAaC,eAC5CjnC,MAAKwoE,YAAY9gC,OAAOzhC,EAAO0hC,sBAE/Bx/B,GAAQ45D,8BAA8BvoD,EAAqBc,OAAQ,EAAGta,KAAKwoE,YAAa,KAExFxoE,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAcoxC,EAAgB+Y,qBAAsB1oE,KAAKye,gBAAgBkxC,EAAgB+Y,qBAAsB/Y,EAAgBjnC,gBAClK1oB,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAcoxC,EAAgBgZ,mBAAoB3oE,KAAKye,gBAAgBkxC,EAAgBgZ,mBAAoBhZ,EAAgBjnC,gBAC9J1oB,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAcoxC,EAAgBiZ,gBAAiB5oE,KAAKye,gBAAgBkxC,EAAgBiZ,gBAAiBjZ,EAAgB2Z,iBAExJnhE,GAAQmE,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKuoB,gBAAiB,EAAGvoB,KAAK47C,cAazE4tB,GAAAjpE,UAAAunE,wBAAP,SAA+BrB,GAE9B,MAAO,IAAI+C,GAAsBxpE,KAAK8F,MAAqB9F,KAAKk7C,gBAAiBl7C,KAAKqK,OAAQrK,KAAK+nE,OAAS,EAAGtB,GAtLlG+C,GAAAJ,YAA4Bn+D,MAAc,EAAG,EAAG,EAAG,EACnDu+D,GAAAH,cAA8Bp+D,MAAc,EAAG,GAAI,EAAG,EAStDu+D,GAAAx5D,GAAY,aAEZw5D,GAAAn1D,uBAAgC,CA4K/C,OAAAm1D,IA1LoC5D,EA4LpC9lE,GAA+BJ,QAAtB8pE,InHg/ZN5X,uCAAuChpD,UAAUD,gCAAgCC,UAAUw9D,4CAA4C,4CAA4CvrD,+CAA+CjS,YAAYw9D,6CAA6C,SAASxnE,EAAQkB,EAAOJ,GoHnsatT,GAAOoN,GAAmBlO,EAAa,6CAIvC,IAAO8qE,GAAe9qE,EAAc,uCACpC,IAAOkd,GAAmBld,EAAa,2CAIvC,IAAO+qE,GAAoB/qE,EAAa,iDACxC,IAAOmd,GAAgBnd,EAAc,0CAKrC,IAAOgrE,GAAahrE,EAAc,wCAElC,IAAO2oB,GAAc3oB,EAAc,yCpH6ranC,IoHhraMgnE,GAAc,WAqJnB,QArJKA,GAqJO/oB,EAAyB7V,EAAsBkU,EAAkCt1C,EAAsCrE,EAAailE,EAAkBC,GArJnK,GAAAz8D,GAAAhK,IAqJiJ,IAAAwmE,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EA7I1JzmE,KAAA6pE,eAAyB,IAEzB7pE,MAAA8pE,gBAA0B,IAC1B9pE,MAAA+pE,YAAqB,GAAI5nE,OAC1BnC,MAAAgmE,kBAA2B,GAAI7jE,OAC9BnC,MAAAgqE,cAAuB,GAAI7nE,OA0IlCnC,MAAKiqE,0BAA4B,SAAC9/D,GAA2B,MAAAH,GAAKkgE,kBAAkB//D,GACpFnK,MAAKmqE,2BAA6B,SAAChgE,GAA2B,MAAAH,GAAKogE,mBAAmBjgE,GACtFnK,MAAKqqE,oCAAsC,SAAClgE,GAA+B,MAAAH,GAAKsgE,4BAA4BngE,GAG5GnK,MAAK8F,MAAQ+2C,CACb78C,MAAKqK,OAAS9I,CAGdvB,MAAK+nE,OAASvB,CAGdxmE,MAAKuqE,aAAe9D,CAEpBzmE,MAAKgnC,aAAeA,CAEpBhnC,MAAKk7C,gBAAkBA,CAEvBl7C,MAAKk7C,gBAAgB3wC,iBAAiBo/D,EAAqBa,4BAA6BxqE,KAAKqqE,oCAE7FrqE,MAAK4F,kBAAoBA,EAzI1BzD,OAAAC,eAAWwjE,EAAArlE,UAAA,YpHkraJ8B,IoHlraP,WAEC,GAAIrC,KAAK8pE,gBACR9pE,KAAKyqE,kBAEN,OAAOzqE,MAAK0qE,WpHkraNhoE,WAAY,KACZC,aAAc,MoH7qarBR,QAAAC,eAAWwjE,EAAArlE,UAAA,gBpHmraJ8B,IoHnraP,WAEC,MAAOrC,MAAK2qE,epHoraNjoE,WAAY,KACZC,aAAc,MoH1nadijE,GAAArlE,UAAAgoB,aAAP,WAEC,GAAIvoB,KAAK8pE,gBACR9pE,KAAKyqE,kBAEN,OAAOzqE,MAAK4qE,WAMNhF,GAAArlE,UAAAge,cAAP,SAAqBmH,GAEpB,GAAI1lB,KAAK8pE,gBACR9pE,KAAKyqE,kBAEN,IAAIzqE,KAAKgmE,kBAAkBtgD,GAC1B1lB,KAAK6qE,kBAAkBnlD,EAExB,OAAO1lB,MAAK+pE,YAAY/pE,KAAK8qE,mBAAoBhvD,EAAoBivD,YAAcrlD,GAM7EkgD,GAAArlE,UAAAke,gBAAP,SAAuBiH,GAEtB,GAAI1lB,KAAK8pE,gBACR9pE,KAAKyqE,kBAEN,IAAIzqE,KAAKgmE,kBAAkBtgD,GAC1B1lB,KAAK6qE,kBAAkBnlD,EAExB,OAAO1lB,MAAKgqE,cAActkD,GAmCpBkgD,GAAArlE,UAAAwC,QAAP,WAEC/C,KAAK8F,MAAMg8C,YAAY9hD,KAAKk7C,gBAE5Bl7C,MAAK4qE,WAAW7nE,SAChB/C,MAAK4qE,WAAa,IAElB,KAAK,GAAIllD,KAAY1lB,MAAK+pE,YAAa,CACxB/pE,KAAK+pE,YAAYrkD,GAAW3iB,SAC1C/C,MAAK+pE,YAAYrkD,GAAY,KAG9B,GAAI1lB,KAAK0qE,UAAW,CACnB1qE,KAAK0qE,UAAU3nE,SACf/C,MAAK0qE,UAAY,MAIZ9E,GAAArlE,UAAAyqE,mBAAP,WAEChrE,KAAK6pE,eAAiB,IAGtB,IAAI7pE,KAAK+nE,QAAU,EAClB/nE,KAAK8pE,gBAAkB,IAExB,IAAI9pE,KAAK0qE,UACR1qE,KAAK0qE,UAAUM,qBAMVpF,GAAArlE,UAAA0qE,oBAAP,WAECjrE,KAAK8pE,gBAAkB,KAQjBlE,GAAArlE,UAAA2qE,qBAAP,SAA4BxlD,GAE3B1lB,KAAKgmE,kBAAkBtgD,GAAY,KAG7BkgD,GAAArlE,UAAAulE,iBAAP,WAEC,KAAM,IAAIh5D,GAGG84D,GAAAvhB,gBAAd,SAA8Bx2C,EAA+B0iD,EAAmC+H,GAE/F,MAAO,GAGMsN,GAAAthB,kBAAd,SAAgCz2C,EAA+B0iD,EAAmC+H,GAEjG,MAAO,GAUDsN,GAAArlE,UAAA4qE,gBAAP,SAAuB1E,GAEtB,GAAIzmE,KAAK6pE,eACR7pE,KAAKorE,iBAENprE,MAAK4qE,WAAahB,EAAc5jE,QAAQhG,KAAKqrE,aAAcrrE,KAAK+nE,OAAQtB,EAExEzmE,MAAK2qE,cAAgB3qE,KAAK4qE,WAAWx/C,KAAKxrB,OAAO,CAEjD6mE,GAAczmE,KAAK4qE,WAAWt5D,MAG9B,IAAIm1D,EAAczmE,KAAKqrE,aAAa9vD,QAAQ3b,OAAQ,CACnD,IAAKI,KAAK0qE,UACT1qE,KAAK0qE,UAAY1qE,KAAK8nE,wBAAwBrB,EAE/CzmE,MAAK0qE,UAAUS,gBAAgB1E,OACzB,IAAIzmE,KAAK0qE,UAAW,CAC1B1qE,KAAK0qE,UAAU3nE,SACf/C,MAAK0qE,UAAY,MAIZ9E,GAAArlE,UAAAunE,wBAAP,SAA+BrB,GAE9B,KAAM,IAAI35D,GAUJ84D,GAAArlE,UAAAy3C,WAAP,SAAkB5xC,EAAqBH,GAEtCG,EAAK4xC,WAAW/xC,GAQV2/D,GAAArlE,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDpyC,EAAKpC,SAAShE,KAAMiG,EAAQuyC,GAStBotB,GAAArlE,UAAA03C,aAAP,SAAoB7xC,GAEnBA,EAAK6xC,eAQE2tB,GAAArlE,UAAA6qE,gBAAR,WAEC,GAAIprE,KAAKqrE,aAAc,CACtB,GAAIrrE,KAAK+nE,QAAU,EAClB/nE,KAAKqrE,aAAa7+D,oBAAoBuP,EAAiB+F,gBAAiB9hB,KAAKiqE,0BAC9EjqE,MAAKqrE,aAAa7+D,oBAAoBuP,EAAiBgG,iBAAkB/hB,KAAKmqE,4BAG/EnqE,KAAKqrE,aAAerrE,KAAK8lE,kBAEzB9lE,MAAK8qE,mBAAqB9qE,KAAKqrE,aAAaC,iBAE5C,IAAItrE,KAAKqrE,aAAc,CACtB,GAAIrrE,KAAK+nE,QAAU,EAClB/nE,KAAKqrE,aAAa9gE,iBAAiBwR,EAAiB+F,gBAAiB9hB,KAAKiqE,0BAC3EjqE,MAAKqrE,aAAa9gE,iBAAiBwR,EAAiBgG,iBAAkB/hB,KAAKmqE,4BAc5EnqE,KAAK6pE,eAAiB,MAUfjE,GAAArlE,UAAAkqE,iBAAR,WAECzqE,KAAKmrE,gBAAgBnrE,KAAKuqE,aAE1BvqE,MAAK8pE,gBAAkB,MAShBlE,GAAArlE,UAAAsqE,kBAAR,SAA0BnlD,GAEzB1lB,KAAKgqE,cAActkD,GAAY1lB,KAAKqrE,aAAa5iD,UAAU/C,EAE3D,IAAI1lB,KAAKqrE,aAAaC,kBACrB5lD,EAAWgkD,EAAgBqB,WAE5B/qE,MAAK+pE,YAAYrkD,GAAY6B,EAAevhB,QAAQhG,KAAKqrE,aAAcrrE,KAAKuoB,eAAgB7C,EAE5F1lB,MAAKgmE,kBAAkBtgD,GAAY,MAS5BkgD,GAAArlE,UAAA2pE,kBAAR,SAA0B//D,GAEzBnK,KAAKirE,sBASErF,GAAArlE,UAAA6pE,mBAAR,SAA2BjgE,GAE1BnK,KAAK8qE,mBAAwC3gE,EAAM9F,OAAQinE,iBAE3DtrE,MAAKkrE,qBAAqB/gE,EAAMub,UAGzBkgD,GAAArlE,UAAA+pE,4BAAR,SAAoCngE,GAGnCnK,KAAK4F,kBAAoBuE,EAAMvE,kBAEjC,OAAAggE,KAEA9lE,GAAwBJ,QAAfkmE,IpH+haN2F,uCAAuC3iE,UAAUod,2CAA2Cpd,UAAU6F,6CAA6C7F,UAAUqd,0CAA0Crd,UAAU4iE,iDAAiD5iE,UAAU6iE,wCAAwC7iE,UAAUigB,yCAAyCjgB,YAAYQ,iDAAiD,SAASxK,EAAQkB,EAAOJ,GqHx8a/b,GAAOqjD,GAAgBnkD,EAAc,qDACrC,IAAO4gD,GAAyB5gD,EAAW,8DAC3C,IAAOy0D,GAAkBz0D,EAAa,uDACtC,IAAOg+C,GAAiBh+C,EAAa,sDACrC,IAAOw+C,GAAoBx+C,EAAa,yDrH68axC,IqHv8aMqC,GAAkB,WAkBvB,QAlBKA,GAkBO67C,EAAkCv7C,GAbvCvB,KAAA0rE,gBAAyB,GAAIvpE,OAenCnC,MAAK2gD,iBAAmB7D,CACxB98C,MAAKqK,OAAS9I,CAEdvB,MAAK2rE,0BAA4B,GAAI5oB,GAAiBvD,EAA2Bx/C,KAAK2gD,iBAAkB3gD,KAAKqK,OAC7GrK,MAAK4rE,wBAA0B,GAAI7oB,GAAiBsQ,EAAoBrzD,KAAK2gD,iBAAkB3gD,KAAKqK,OACpGrK,MAAK6rE,uBAAyB,GAAI9oB,GAAiBnG,EAAmB58C,KAAK2gD,iBAAkB3gD,KAAKqK,OAClGrK,MAAK8rE,0BAA4B,GAAI/oB,GAAiB3F,EAAsBp9C,KAAK2gD,iBAAkB3gD,KAAKqK,QASlGpJ,EAAAV,UAAAyF,QAAP,SAAek1C,GAEd,MAAQl7C,MAAK0rE,gBAAgBxwB,EAAgBlrC,MAAQhQ,KAAK0rE,gBAAgBxwB,EAAgBlrC,IAAMkrC,EAAgB6wB,gBAAgB,GAAI/rE,MAAK2gD,iBAAiB3gD,KAAMk7C,EAAiBl7C,KAAKqK,UAQhLpJ,GAAAV,UAAAyrE,wBAAP,SAA+BpmE,GAE9B,MAAO5F,MAAK2rE,0BAA0B3lE,QAAQJ,GAQxC3E,GAAAV,UAAA0rE,sBAAP,SAA6BrmE,GAE5B,MAAO5F,MAAK4rE,wBAAwB5lE,QAAQJ,GAQtC3E,GAAAV,UAAAoJ,qBAAP,SAA4B/D,GAE3B,MAAO5F,MAAK6rE,uBAAuB7lE,QAAQJ,GAQrC3E,GAAAV,UAAAqJ,wBAAP,SAA+BhE,GAE9B,MAAO5F,MAAK8rE,0BAA0B9lE,QAAQJ,GAQxC3E,GAAAV,UAAAuhD,YAAP,SAAmB5G,GAElBA,EAAgBgxB,mBAAmBlsE,KAAK0rE,gBAAgBxwB,EAAgBlrC,IAExEhQ,MAAK0rE,gBAAgBxwB,EAAgBlrC,IAAM,KAGrC/O,GAAAV,UAAAwC,QAAP,WAEC,IAAK,GAAIiN,KAAMhQ,MAAK0rE,gBACnB1rE,KAAK0rE,gBAAgB17D,GAAIjN,SAE1B9B,GAAmBkrE,YAAYnsE,KAAK2gD,iBAAkB3gD,KAAKqK,QAS9CpJ,GAAAuH,QAAd,SAAsBs0C,EAAkCv7C,GAEvD,GAAI6qE,GAAgBnrE,EAAmBorE,OAAO9qE,EAAMmrB,cAAgBzrB,EAAmBorE,OAAO9qE,EAAMmrB,YAAc,GAAIvqB,QAEtH,OAAQiqE,GAAMtvB,EAAgB9sC,MAAQo8D,EAAMtvB,EAAgB9sC,IAAM,GAAI/O,GAAmB67C,EAAiBv7C,IAQ7FN,GAAAkrE,YAAd,SAA0BrvB,EAAkCv7C,GAE3D,GAAI6qE,GAAenrE,EAAmBorE,OAAO9qE,EAAMmrB,WAEnD,IAAI0/C,GAASxjE,UACZ,MAED,IAAIwjE,EAAMtvB,EAAgB9sC,IACzBo8D,EAAMtvB,EAAgB9sC,IAAMpH,UA5HhB3H,GAAAorE,OAAgB,GAAIlqE,OA8HnC,OAAAlB,KAE4BnB,GAAAJ,QAAnBuB,IrHu6aNw7C,sDAAsD,sDAAsDS,yDAAyD,yDAAyDmC,8DAA8D,8DAA8DyD,qDAAqD,qDAAqDqQ,uDAAuD,yDAAyD9W,+CAA+C,SAASz9C,EAAQkB,EAAOJ,GsHnjb9nB,GAAO+9D,GAAmB7+D,EAAa,iDACvC,IAAOwpE,GAAqBxpE,EAAY,mDACxC,IAAO4qE,GAAqB5qE,EAAY,mDACxC,IAAO8+D,GAAyB9+D,EAAW,uDAC3C,IAAO2nE,GAAsB3nE,EAAe,oDAC5C,IAAOqC,GAAkBrC,EAAa,gDtH2jbtC,IsHljbMm3C,GAAgB,WAgBrB,QAhBKA,GAgBOuqB,GAEXtgE,KAAKssE,UAAYhM,EAMlBn+D,OAAAC,eAAW2zC,EAAAx1C,UAAA,StHqibJ8B,IsHribP,WAEC,MAAOrC,MAAKgD,StHsibNT,IsHnibP,SAAiBC,GAEhB,GAAIxC,KAAKgD,SAAWR,EACnB,MAED,IAAIxC,KAAKgD,QACRhD,KAAK+C,SAEN/C,MAAKgD,QAAUR,CAEf,IAAIxC,KAAKgD,QACRhD,KAAKusE,gBtHiibA7pE,WAAY,KACZC,aAAc,MsH/hbdozC,GAAAx1C,UAAAgsE,aAAP,WAECvsE,KAAK29D,yBAA2B18D,EAAmBuH,QAAQi1D,EAAqBz9D,KAAKgD,QACrFhD,MAAKwsE,2BAA6BvrE,EAAmBuH,QAAQ4/D,EAAuBpoE,KAAKgD,QACzFhD,MAAKysE,+BAAiCxrE,EAAmBuH,QAAQk1D,EAA2B19D,KAAKgD,QACjGhD,MAAK0sE,2BAA6BzrE,EAAmBuH,QAAQghE,EAAuBxpE,KAAKgD,QACnFhD,MAAK2sE,4BAA8B1rE,EAAmBuH,QAAQ+9D,EAAwBvmE,KAAKgD,SAM3F+yC,GAAAx1C,UAAAwC,QAAP,WAEC/C,KAAK29D,yBAAyB56D,SAC9B/C,MAAK29D,yBAA2B,IAEhC39D,MAAKwsE,2BAA2BzpE,SAChC/C,MAAKwsE,2BAA6B,IAElCxsE,MAAKysE,+BAA+B1pE,SACpC/C,MAAKysE,+BAAiC,IAEtCzsE,MAAK0sE,2BAA2B3pE,SAChC/C,MAAK0sE,2BAA6B,IAE5B1sE,MAAK2sE,4BAA4B5pE,SACjC/C,MAAK2sE,4BAA8B,KAQnC52B,GAAAx1C,UAAAqsE,eAAP,SAAsBlO,GAErB1+D,KAAKssE,UAAUtxB,gBAAgBh7C,KAAK29D,yBAAyB33D,QAAQ04D,IAO/D3oB,GAAAx1C,UAAAssE,iBAAP,SAAwBxE,GAEvBroE,KAAKssE,UAAUtxB,gBAAgBh7C,KAAKwsE,2BAA2BxmE,QAAQqiE,IAOjEtyB,GAAAx1C,UAAAusE,qBAAP,SAA4BC,GAE3B/sE,KAAKssE,UAAUtxB,gBAAgBh7C,KAAKysE,+BAA+BzmE,QAAQ+mE,IAMlEh3B,GAAAx1C,UAAAysE,kBAAP,SAAyBC,GAErBjtE,KAAKssE,UAAUtxB,gBAAgBh7C,KAAK2sE,4BAA4B3mE,QAAQinE,IAMxEl3B,GAAAx1C,UAAA2sE,iBAAP,SAAwBC,GAEvBntE,KAAKssE,UAAUtxB,gBAAgBh7C,KAAK0sE,2BAA2B1mE,QAAQmnE,IAEzE,OAAAp3B,KAEAj2C,GAA0BJ,QAAjBq2C,ItHqhbNgpB,iDAAiD,iDAAiDsH,oDAAoD,oDAAoD8B,mDAAmD,mDAAmDoB,mDAAmD,mDAAmDngE,gDAAgD,gDAAgD41D,uDAAuD,yDAAyD31D,+CAA+C,SAASzK,EAAQkB,EAAOJ,GAChrB,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuHrqbtB,IAAOyb,GAAmBld,EAAa,2CAOvC,IAAO4a,GAAoB5a,EAAa,+CASxC,IAAOgnE,GAAchnE,EAAc,4CvH6pbnC,IuHrpbMsC,GAAgB,SAAAG,GAAStB,EAAzBmB,EAAgBG,EAsBrB,SAtBKH,GAsBO27C,EAAyBuwB,EAAe7rE,GAEnDF,EAAA1B,KAAAK,KAAM68C,EAAMuwB,EAAQA,EAAQA,EAAQ7rE,EAEpCvB,MAAKqtE,aAAe,GAAIpiE,OAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GASrD/J,EAAAX,UAAAulE,iBAAP,WAEC,GAAI7uD,GAA+B/V,EAAiBosE,SAEpD,KAAKr2D,EAAU,CACdA,EAAW/V,EAAiBosE,UAAY,GAAIxxD,GAAoB,KAChE7E,GAAS0K,kBAAoB,KAC7B1K,GAAS2K,mBAAqB,KAC9B3K,GAASuO,cAAcva,MAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9IgM,GAAS6M,gBAAgB7Y,OAAe,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,IAGzHjL,KAAKgmE,kBAAkBlqD,EAAoB0M,eAAiB,IAE5D,OAAOvR,GAGM/V,GAAA8/C,sBAAd,SAAoCnzC,IAQtB3M,GAAAmjD,gBAAd,SAA8Bx2C,EAA+B0iD,EAAmC+H,GAE/F,MAAO,sBACN,sBACA,qBACA,gBAMKp3D,GAAAX,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAACoG,EAAMH,EAAQuyC,EAE7B,IAAIrwC,GAAqBnI,KAAKqK,OAAOlC,OACrC,IAAI4+B,GAAe9gC,EAAOY,aAC1B7G,MAAKqtE,aAAa,GAAKtmC,EAAIhgC,CAC3B/G,MAAKqtE,aAAa,GAAKtmC,EAAI9/B,CAC3BjH,MAAKqtE,aAAa,GAAKtmC,EAAI5/B,CAC3BnH,MAAKqtE,aAAa,GAAKrtE,KAAKqtE,aAAa,GAAKrtE,KAAKqtE,aAAa,GAAKpnE,EAAOyqD,WAAWiI,IAAItxD,KAAKC,KAAK,EACrGa,GAAQ45D,8BAA8BvoD,EAAqBc,OAAQ,EAAGk+B,EAAgB,KACtFrwC,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAGta,KAAKqtE,aAAc,EAExFrtE,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAczC,EAAoB0M,eAAgBxoB,KAAKye,gBAAgB3C,EAAoB0M,eAAgB1M,EAAoB4M,gBAClKvgB,GAAQmE,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKuoB,gBAAiB,EAAGvoB,KAAK47C,cA9ElE16C,GAAA8O,GAAY,QAEZ9O,GAAAmT,uBAAgC,CA8E/C,OAAAnT,IAvF+B0kE,EAyF/B9lE,GAA0BJ,QAAjBwB,IvH4nbN8kB,2CAA2Cpd,UAAUw9D,4CAA4C,4CAA4CvrD,+CAA+CjS,YAAYo2D,wDAAwD,SAASpgE,EAAQkB,EAAOJ,GAC3R,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwHrvbtB,IAAO++D,GAAaxgE,EAAc,qCAIlC,IAAOkd,GAAmBld,EAAa,2CAGvC,IAAOmL,GAA2BnL,EAAW,sDAG7C,IAAO4a,GAAoB5a,EAAa,+CAMxC,IAAOgnE,GAAchnE,EAAc,4CxH+ubnC,IwHxubM8+D,GAAyB,SAAAr8D,GAAStB,EAAlC29D,EAAyBr8D,EAuB9B,SAvBKq8D,GAuBO7gB,EAAyBlmC,EAAyBpV,EAAailE,EAAkBC,GAAlB,GAAAD,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAE5FplE,EAAA1B,KAAAK,KAAM68C,EAAMlmC,EAAQC,WAAYD,EAASA,EAAQ8oC,SAAUl+C,EAAOilE,EAAOC,EAEzEzmE,MAAK2W,QAAUA,EAQT+mD,EAAAn9D,UAAAulE,iBAAP,WAEC,GAAIhvD,EAEJ,IAAI9W,KAAK2W,QAAQ8Z,SAChB3Z,EAAoC9W,KAAK2W,QAAQ8Z,SAASre,yBAAyBpS,KAAMA,KAAK2W,QAAQG,iBAEtGA,GAAc9W,KAAK2W,QAAQG,WAE5B9W,MAAKgmE,kBAAkBlqD,EAAoB0M,eAAiB,IAE5D,IAAI1R,EAAYqL,cACfniB,KAAKgmE,kBAAkBlqD,EAAoB6M,aAAe,IAE3D,IAAI7R,EAAYuL,eACfriB,KAAKgmE,kBAAkBlqD,EAAoBg1C,cAAgB,IAE5D,IAAIh6C,EAAY+O,IACf7lB,KAAKgmE,kBAAkBlqD,EAAoB6J,SAAW,IAEvD,IAAI7O,EAAYiP,aACf/lB,KAAKgmE,kBAAkBlqD,EAAoBgK,mBAAqB,IAEjE,IAAIhP,EAAYwL,aACftiB,KAAKgmE,kBAAkBlqD,EAAoB0C,kBAAoB,IAEhE,IAAI1H,EAAYyL,aACfviB,KAAKgmE,kBAAkBlqD,EAAoB6C,mBAAqB,IAEjE,QAAO7H,EAAYkE,iBAClB,IAAK,GACJhb,KAAK0e,mBAAqB1e,KAAK4e,oBAAsB7U,EAA4BwjE,OACjF,MACD,KAAK,GACJvtE,KAAK0e,mBAAqB1e,KAAK4e,oBAAsB7U,EAA4B8B,OACjF,MACD,KAAK,GACJ7L,KAAK0e,mBAAqB1e,KAAK4e,oBAAsB7U,EAA4Bi8B,OACjF,MACD,KAAK,GACJhmC,KAAK0e,mBAAqB1e,KAAK4e,oBAAsB7U,EAA4B6+B,OACjF,MACD,UAGD,MAAO9xB,GAIM4mD,GAAA1c,sBAAd,SAAoCnzC,IAKtB6vD,GAAArZ,gBAAd,SAA8Bx2C,EAA+B0iD,EAAmC+H,GAE/F,GAAI94D,GAAc,ExH2sbZ,IwHxsbFi6B,GAAkC5rB,EAAaw3C,sBAAwB,EAAIiT,EAAgBpS,qBAAuBoS,EAAgBjS,axH0sbhI,IwHvsbF4f,GAAsC1V,EAAchnC,uBACxDgnC,GAAchnC,uBACdgnC,GAAchnC,uBACdgnC,GAAchnC,uBACd1b,GAAaq4D,gBAAkBD,EAAczvD,MAAM,CAEnD,IAAI3I,EAAayiD,uBAAyB,EAAG,CAC5CgI,EAAgBG,mBAAqBlI,EAAc/lC,gBACnD,IAAIK,GAA6B0lC,EAAc5mC,yBAC/CnqB,IAAQ,OAASqrB,EAAO,KAAO4O,EAAW,KAAOwsC,EAAgB,KACjE,OAAS3N,EAAgBG,mBAAqB,KAAO5tC,EAAO,KAC5D,WAAaA,EAAO,SACd,CACNrrB,GAAQ,WAAai6B,EAAW,KAAOwsC,EAAgB,KAGxD,MAAOzmE,GAMDk+D,GAAAn9D,UAAAyD,SAAP,SAAgBoC,EAAqBH,EAAeuyC,GAEnDn3C,EAAAd,UAAMyD,SAAQrE,KAAAK,KAACoG,EAAMH,EAAQuyC,EAE7B,IAAInB,GAA0BjxC,EAAKixC,MAEnC,IAAIA,EAAO+O,kBAAoB,EAAG,CACjCpmD,KAAKgnC,aAAa0U,wBAAwBz1C,GAAQkrD,cAAc9Z,EAAO98B,mBAAoB88B,EAAO+O,iBAAkB,KACpH5N,GAAe2Y,cAAc9Z,EAAO98B,mBAAoB88B,EAAO6uB,gBAAiB,UAC1E,CACN,GAAIC,GAAoB/G,EAAc0C,kBAEtCqE,GAAS1/D,SAASzG,KAAKgnC,aAAa0U,wBAAwBz1C,GAC5DkgE,GAASz+B,OAAO8Q,EAEhB2tB,GAAShV,cAAc9Z,EAAO98B,mBAAoB88B,EAAO6uB,gBAAiB,MAG3E,GAAI/9D,GAAqBnI,KAAKqK,OAAOlC,OACrCA,GAAQkS,6BAA6Bb,EAAqBc,OAAQ,EAAG+8B,EAAO98B,mBAAoB88B,EAAOjjC,uBACvGjM,GAAQkS,6BAA6Bb,EAAqBkB,SAAU,EAAG28B,EAAO18B,qBAAsB08B,EAAO3iC,yBAE3G1U,MAAKqK,OAAOiU,eAAe,EAAGte,KAAKue,cAAczC,EAAoB0M,eAAgBxoB,KAAKye,gBAAgB3C,EAAoB0M,eAAgB1M,EAAoB4M,gBAClK1oB,MAAKqK,OAAOlC,QAAQmE,cAActM,KAAKqK,OAAO23D,eAAehiE,KAAKuoB,gBAAiB,EAAGvoB,KAAK47C,cAarF8hB,GAAAn9D,UAAAunE,wBAAP,SAA+BrB,GAE9B,MAAO,IAAI/I,GAA0B19D,KAAK8F,MAAyB9F,KAAKk7C,gBAAiBl7C,KAAKqK,OAAQrK,KAAK+nE,OAAS,EAAGtB,GAxJ1G/I,GAAA1tD,GAAY,iBAEZ0tD,GAAArpD,uBAAgC,CAwJ/C,OAAAqpD,IA/JwCkI,EAiKxC9lE,GAAmCJ,QAA1Bg+D,IxHmsbN13C,2CAA2Cpd,UAAU88D,qCAAqC98D,UAAUw9D,4CAA4C,4CAA4CvrD,+CAA+CjS,UAAU+D,sDAAsD/D,YAAY4kE,8CAA8C,SAAS5uE,EAAQkB,EAAOJ,GyH53bhY,GAAO0/D,GAAaxgE,EAAe,qCAGnC,IAAOo2C,GAAQp2C,EAAiB,gCAChC,IAAOkd,GAAmBld,EAAc,2CACxC,IAAO6uE,GAAI7uE,EAAkB,mCzH+3b7B,IyHz3bM8uE,GAAK,WAiBV,QAjBKA,GAiBOC,EAA8BC,EAAgCC,GAA9D,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAAgC,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,MAEzE7tE,KAAK8tE,cAAgBH,CACrB3tE,MAAK+tE,gBAAkBH,CACvB5tE,MAAKguE,aAAeH,EAMrB1rE,OAAAC,eAAWsrE,EAAAntE,UAAA,kBzH+2bJ8B,IyH12bP,WAEC,MAAOrC,MAAK+tE,iBzH82bNxrE,IyHr3bP,SAA0BrC,GAEzBF,KAAK+tE,gBAAkB7tE,GzHs3bjBwC,WAAY,KACZC,aAAc,MyH52brBR,QAAAC,eAAWsrE,EAAAntE,UAAA,gBzH+2bJ8B,IyH12bP,WAEC,MAAOrC,MAAK8tE,ezH82bNvrE,IyHr3bP,SAAwBrC,GAEvBF,KAAK8tE,cAAgB5tE,GzHs3bfwC,WAAY,KACZC,aAAc,MyH52brBR,QAAAC,eAAWsrE,EAAAntE,UAAA,ezH+2bJ8B,IyH12bP,WAEC,MAAOrC,MAAKguE,czH82bNzrE,IyHr3bP,SAAuBrC,GAEtBF,KAAKguE,aAAe9tE,GzHs3bdwC,WAAY,KACZC,aAAc,MyHv2bd+qE,GAAAntE,UAAA0tE,iBAAP,SAAwBC,EAAeC,GAEtCnuE,KAAKqR,OAGLrR,MAAKouE,eAAeF,EAAUC,EAG9BnuE,MAAKquE,QAAQH,EAAU,MAGvBluE,MAAKsuE,MAAMJ,EAAUluE,KAAK+tE,iBASpBL,GAAAntE,UAAAguE,cAAP,SAAqBL,EAAeM,GAEnCxuE,KAAKqR,OAEL,KAAKm9D,EAAO5uE,OACX,MAGD,KAAK,GAAIP,GAAoB,EAAGA,EAAImvE,EAAO5uE,OAAQP,IAClD,GAAImvE,EAAOnvE,IAAM6uE,EAChBluE,KAAKquE,QAAQG,EAAOnvE,GAAIW,KAAK+tE,gBAG/B/tE,MAAKquE,QAAQH,EAAU,MAGvBluE,MAAKsuE,MAAMJ,EAAUluE,KAAK+tE,iBASpBL,GAAAntE,UAAA20C,MAAP,SAAag5B,EAAe18D,GAE3BxR,KAAKqR,OAGLrR,MAAKquE,QAAQ78D,EAAMxR,KAAK+tE,gBAGxB/tE,MAAKquE,QAAQH,EAAU,MAGvBluE,MAAKsuE,MAAMJ,EAAUluE,KAAK+tE,iBAGnBL,GAAAntE,UAAA8Q,MAAR,WAECrR,KAAKyuE,WAAc,GAAIxjE,MACvBjL,MAAK0uE,SAAW,GAAIzjE,OAGbyiE,GAAAntE,UAAA+tE,MAAR,SAAcK,EAAe5rE,GAE5B,GAAI1D,EACJ,IAAIuvE,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJF,GAAUF,EAAS13D,QACnB63D,GAAWH,EAAS13D,SAAW,GAAI+9B,EACnC45B,GAASD,EAASr3D,UAAU1X,MAI5BmvE,GAAmB/uE,KAAK0uE,SAAS9uE,OAAS,CAE1C,KAAKP,EAAI,EAAGA,EAAIW,KAAK0uE,SAAS9uE,OAAQP,IAAK,CAC1C,GAAIJ,EACJ,IAAImsB,EACJ,IAAI4jD,GAA0B,GAAIlzD,GAAoB,KACtDkzD,GAAIrtD,kBAAoB,KACxBqtD,GAAIptD,mBAAqB,KAEzBwJ,GAAOprB,KAAK0uE,SAASrvE,EACrB2vE,GAAIxpD,cAAc4F,EAAK7P,QACvByzD,GAAIlrD,gBAAgBsH,EAAK6jD,SACzBD,GAAIjrD,oBAAoBqH,EAAK45C,QAC7BgK,GAAIhrD,qBAAqBoH,EAAK8jD,SAC9BF,GAAIppD,UAAUwF,EAAKvF,IAEnBipD,GAASK,eAAeH,EAExB,IAAIhvE,KAAK8tE,eAAiBiB,EACzBJ,EAASr3D,UAAUs3D,GAAQnvB,SAAWr0B,EAAKq0B,SAG7C,GAAIz/C,KAAK8tE,gBAAkBiB,GAAmB/uE,KAAK0uE,SAAS9uE,OAC3D+uE,EAASlvB,SAAWz/C,KAAK0uE,SAAS,GAAGjvB,QAEtC,IAAI18C,EAAS,CACZ,GAAIqsE,EACJ,IAAIxqE,GAAa5E,KAAKyuE,WAAW7uE,MACjC,KAAK,GAAIP,GAAUA,EAAIuF,EAAKvF,IAAK,CAChC+vE,EAAIpvE,KAAKyuE,WAAWpvE,EACpB+vE,GAAEn4D,SAASlU,SACXqsE,GAAErsE,UAIH8rE,EAAQ9rE,UAGT/C,KAAKyuE,WAAa,KAGXf,GAAAntE,UAAA8tE,QAAR,SAAgB78D,EAAWzO,GAE1B,GAAIyO,EAAKyF,SAAU,CAClB,GAAI23D,EACJ,IAAIvmD,GAAwE7W,EAAKyF,SAASoR,aAC1F,IAAIgnD,EACJ,KAAKT,EAAS,EAAGA,EAASvmD,EAAczoB,OAAQgvE,IAAU,CACzD,GAAIvvE,EACJ,IAAIuF,EACJ,IAAI0qE,GAAsBC,EAAsBC,EAAsBC,EAAsBC,CAC5F,IAAIjJ,EACJ,IAAIr+C,EACJ,IAAI2tC,EACJ,IAAIkZ,EACJ,IAAIjK,EACJ,IAAIkK,EACJ,IAAIS,GAAkBC,EAAkBC,EAAkBC,CAE1D1nD,GAAUC,EAAcumD,EACxBe,GAAKvnD,EAAQnG,SACb2tD,GAAKxnD,EAAQjG,aACb0tD,GAAKznD,EAAQ/F,cACbytD,GAAK1nD,EAAQvC,GAGbkwC,GAAK/1D,KAAK+vE,eAAev+D,EAAK8F,UAAUs3D,GAAQnvB,UAAYjuC,EAAKiuC,SAKjEwvB,GAAYjvE,KAAiB,aAAG+1D,EAAGkZ,SAAW,GAAIhkE,MAClD+5D,GAAWhlE,KAAiB,aAAG+1D,EAAGiP,QAAU,GAAI/5D,MAChDikE,GAAYlvE,KAAiB,aAAG+1D,EAAGmZ,SAAW,GAAIjkE,MAGlDskE,GAAON,EAASrvE,MAChB4vE,GAAOxK,EAAQplE,MACf6vE,GAAOP,EAAStvE,MAChB8vE,GAAO3Z,EAAGlwC,IAAIjmB,MACdgF,GAAMwjB,EAAQ3Q,WACd,KAAKpY,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CACzBgwE,EAAOhwE,EAAE,CAGT4vE,GAASM,KAAUI,EAAGN,EACtBJ,GAASM,KAAUI,EAAGN,EAAO,EAC7BJ,GAASM,KAAUI,EAAGN,EAAO,EAG7BrK,GAAQwK,KAAUI,EAAGP,EACrBrK,GAAQwK,KAAUI,EAAGP,EAAO,EAC5BrK,GAAQwK,KAAUI,EAAGP,EAAO,EAG5BH,GAASO,KAAUI,EAAGR,EACtBH,GAASO,KAAUI,EAAGR,EAAO,EAC7BH,GAASO,KAAUI,EAAGR,EAAO,EAG7BtZ,GAAGlwC,IAAI6pD,KAAUI,EAAGzwE,EAAE,EACtB02D,GAAGlwC,IAAI6pD,KAAUI,EAAGzwE,EAAE,EAAI,GAI3BonE,GAAgBzmE,KAAKguE,aAAejY,EAAGkZ,SAASrvE,OAAO,EAAG,CAC1D0vE,GAAOvZ,EAAGx6C,QAAQ3b,MAClBgF,GAAMwjB,EAAQwzB,YACd,KAAKv8C,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CACzBgwE,EAAOhwE,EAAE,CACT02D,GAAGx6C,QAAQ+zD,KAAUlnD,EAAQ7M,QAAQ8zD,GAAQ5I,CAC7C1Q,GAAGx6C,QAAQ+zD,KAAUlnD,EAAQ7M,QAAQ8zD,EAAO,GAAK5I,CACjD1Q,GAAGx6C,QAAQ+zD,KAAUlnD,EAAQ7M,QAAQ8zD,EAAO,GAAK5I,EAGlD,IAAKzmE,KAAKguE,aAAc,CACvBx8D,EAAKy1B,eAAe+oC,iBAAiBf,EAAUA,EAC/C7P,GAAc6Q,sBAAsBz+D,EAAKy1B,eAAgB+9B,EAASA,EAClE5F,GAAc6Q,sBAAsBz+D,EAAKy1B,eAAgBioC,EAAUA,EAGnEK,GAAOxZ,EAAGkZ,SAASrvE,MACnB4vE,GAAOzZ,EAAGiP,QAAQplE,MAClB6vE,GAAO1Z,EAAGmZ,SAAStvE,MACnBgF,GAAMqqE,EAASrvE,MACf,KAAKP,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CACzB02D,EAAGkZ,SAASM,KAAUN,EAAS5vE,EAC/B02D,GAAGiP,QAAQwK,KAAUxK,EAAQ3lE,EAC7B02D,GAAGmZ,SAASO,KAAUP,EAAS7vE,KAKlC,GAAI0D,EACH/C,KAAKyuE,WAAWjgE,KAAKgD,IAIhBk8D,GAAAntE,UAAAwvE,eAAR,SAAuBtwB,GAEtB,GAAIr0B,EAEJ,IAAIprB,KAAK8tE,cAAe,CACvB,GAAIzuE,EACJ,IAAIuF,EAEJA,GAAM5E,KAAK0uE,SAAS9uE,MACpB,KAAKP,EAAI,EAAGA,EAAIuF,EAAKvF,IAAK,CACzB,GAAIW,KAAK0uE,SAASrvE,GAAGogD,UAAYA,EAAU,CAC1Cr0B,EAAOprB,KAAK0uE,SAASrvE,EACrB,aAGI,IAAIW,KAAK0uE,SAAS9uE,OAAQ,CAGhCwrB,EAAOprB,KAAK0uE,SAAS,GAItB,IAAKtjD,EAAM,CACVA,EAAO,GAAI8kD,EACX9kD,GAAK6jD,SAAW,GAAIhkE,MACpBmgB,GAAK45C,QAAU,GAAI/5D,MACnBmgB,GAAK8jD,SAAW,GAAIjkE,MACpBmgB,GAAKvF,IAAM,GAAI5a,MACfmgB,GAAK7P,QAAU,GAAItQ,MACnBmgB,GAAKq0B,SAAWA,CAEhBz/C,MAAK0uE,SAASlgE,KAAK4c,GAGpB,MAAOA,GAGAsiD,GAAAntE,UAAA6tE,eAAR,SAAuBF,EAAeiC,GAErC,GAAIC,EACJ,IAAI/wE,EAEJ,IAAI8wE,YAAkB1C,IAAQ0C,GAAoCjC,EACjEluE,KAAKquE,QAAe8B,EAAQnwE,KAAK+tE,gBAElC,KAAK1uE,EAAI,EAAGA,EAAI8wE,EAAOE,cAAehxE,EAAG,CACxC+wE,EAAiCD,EAAOG,WAAWjxE,EACnDW,MAAKouE,eAAeF,EAAUkC,IAGjC,OAAA1C,KAIA,IAAMwC,GAAU,WAAhB,QAAMA,MAQN,MAAAA,KAVApwE,GAAAJ,QAASguE,IzHm0bNt4B,gCAAgCxsC,UAAUod,2CAA2Cpd,UAAU88D,qCAAqC98D,UAAU2nE,mCAAmC3nE,YAAY4nE,8DAA8D,SAAS5xE,EAAQkB,EAAOJ,GAItR,G0HhqcM+wE,GAAyB,WAA/B,QAAMA,MAMLtuE,OAAAC,eAAWquE,EAAAlwE,UAAA,mB1H8pcJ8B,I0H5ocP,WAEC,MAAOrC,MAAK0wE,yB1H6ocNnuE,I0HjqcP,SAA2BC,GAE1BxC,KAAK0wE,wBAA0BluE,CAC/BxC,MAAK2wE,2BAA6BnuE,EAAMkF,OACxC1H,MAAK2wE,2BAA2BhpE,QAChC3H,MAAK2wE,2BAA2BC,a1Hkqc1BluE,WAAY,KACZC,aAAc,M0HhqcrBR,QAAAC,eAAWquE,EAAAlwE,UAAA,e1HmqcJ8B,I0H9pcP,WAEC,MAAOrC,MAAK6wE,qB1H+pcNtuE,I0HtqcP,SAAuBC,GAEtBxC,KAAK6wE,oBAAsBruE,G1HuqcrBE,WAAY,KACZC,aAAc,M0H3pcrBR,QAAAC,eAAWquE,EAAAlwE,UAAA,sB1H8pcJ8B,I0H9pcP,WAEC,MAAOrC,MAAK2wE,4B1H+pcNjuE,WAAY,KACZC,aAAc,M0H9pctB,OAAA8tE,KAEA3wE,GAAmCJ,QAA1B+wE,O1HmqcHK,sDAAsD,SAASlyE,EAAQkB,EAAOJ,G2H1scpF,GAAO21C,GAAKz2C,EAAiB,6BAC7B,IAAO6B,GAAQ7B,EAAiB,gCAGhC,IAAOkd,GAAmBld,EAAc,2CAIxC,IAAOivB,GAAYjvB,EAAgB,oDACnC,IAAOq2C,GAAgBr2C,EAAe,8C3H0sctC,I2HpscMmyE,GAAsB,WAA5B,QAAMA,MAISA,EAAAC,iBAAd,SAA+BC,EAA4BC,GAAA,GAAAA,QAAA,GAAkD,CAAlDA,EAAA,KAE1D,GAAIC,GAA8C,GAAIlmE,MACtD,IAAImmE,GAAuC,GAAInmE,MAC/C,IAAIomE,GAAqC,GAAIpmE,MAC7C,IAAIqmE,GAAsC,GAAIrmE,MAC9C,IAAIsmE,GAAiC,GAAItmE,MACzC,IAAIumE,GAAwC,GAAIvmE,MAChD,IAAIyM,GAAgC,GAAIzM,MACxC,IAAIod,GAA2C,GAAIpd,MACnD,IAAI2M,GAA+Bq5D,EAAWrxE,MAE9C,IAAI6xE,EACJ,IAAIp/D,EACJ,IAAIq/D,EACJ,IAAIn2D,EACJ,IAAI0G,EACJ,IAAI+iD,EACJ,IAAIkK,EACJ,IAAIrpD,EACJ,IAAI8rD,EACJ,IAAI76D,EACJ,IAAIzX,EACJ,IAAI6X,EACJ,IAAI06D,GAAmC,GAAI3mE,MAE3C,IAAI4mE,GAAsB,GAAIpxE,EAC9B,IAAIqxE,GAAsB,GAAIrxE,EAC9B,IAAIsxE,GAAwB,GAAItxE,EAChC,IAAIuxE,GAAe,GAAI38B,EAEvB,KAAKh2C,EAAI,EAAGA,EAAIuY,EAAcvY,IAAK,CAClCoyE,EAAmDR,EAAW5xE,GAAGgpB,aACjEqpD,GAAmBD,EAAoB7xE,MACvC,KAAK,GAAIif,GAA0B,EAAGA,EAAW6yD,EAAkB7yD,IAAY,CAE9E,GAAI+yD,EAAWhyE,QAAUif,EAAU,CAClC+yD,EAAWpjE,KAAK6Z,EAAczoB,OAC9BuxE,GAAc3iE,KAAK,GAAIvD,OACvBmmE,GAAgB5iE,KAAK,GAAIvD,OACzBomE,GAAc7iE,KAAK,GAAIvD,OACvBqmE,GAAe9iE,KAAK,GAAIvD,OACxBsmE,GAAU/iE,KAAK,GAAIvD,OACnBod,GAAc7Z,KAAK,GAAIsN,GAAoB,MAC3C01D,GAAehjE,KAAK,GAGrB6D,EAAoBo/D,EAAoB5yD,EAGxC,IAAIxM,EAAkBoF,YAAc+5D,EAAeI,EAAW/yD,IAAakyD,EAAuBkB,WAAY,CAE7GL,EAAW/yD,GAAYwJ,EAAczoB,MACrCuxE,GAAc3iE,KAAK,GAAIvD,OACvBmmE,GAAgB5iE,KAAK,GAAIvD,OACzBomE,GAAc7iE,KAAK,GAAIvD,OACvBqmE,GAAe9iE,KAAK,GAAIvD,OACxBsmE,GAAU/iE,KAAK,GAAIvD,OACnBod,GAAc7Z,KAAK,GAAIsN,GAAoB,MAC3C01D,GAAehjE,KAAK,GAGrB0I,EAAI06D,EAAW/yD,EAGftD,GAAU41D,EAAcj6D,EACxB+K,GAAYmvD,EAAgBl6D,EAC5B8tD,GAAUqM,EAAcn6D,EACxBg4D,GAAWoC,EAAep6D,EAC1B2O,GAAM0rD,EAAUr6D,EAChBy6D,GAAgBH,EAAet6D,EAC/BJ,GAAcuR,EAAcnR,EAE5B,IAAIg7D,GAA4B,GAAIrkD,EACpCqkD,GAAaz6D,YAAcpF,EAAkBoF,WAC7Cy6D,GAAavkD,iBAAmBgkD,CAChCO,GAAap5D,cAAgBzZ,CAC7B6yE,GAAap7D,YAAcA,CAC3BY,GAAUlJ,KAAK0jE,EAEfV,GAAet6D,IAAM7E,EAAkBoF,WAEvC,IAAIN,EACJ,IAAIg7D,EACJ,IAAIC,GAA8B//D,CAClC,IAAIggE,EACJ,IAAIrwD,EACJ,IAAIE,EACJ,IAAIE,EACJ,IAAIkwD,EAEJ,IAAIF,EAAS,CACZD,EAAUC,EAAQ36D,WAClB26D,GAAQx2B,YACR55B,GAAkBowD,EAAQnwD,SAC1BC,GAAgBkwD,EAAQjwD,aACxBC,GAAiBgwD,EAAQ/vD,cACzBiwD,GAAYF,EAAQvsD,GAEpB,IAAIqrD,EAAY,CACf,GAAIqB,GAAsDrB,EAAW7xE,EACrE,IAAImzE,GAA2BD,EAA0BC,eACzD,IAAIC,GAA8BF,EAA0BE,kBAC5D,IAAIC,GAAqBH,EAA0BG,WAEnD,KAAKv7D,EAAI,EAAGA,EAAIg7D,EAASh7D,IAAK,CAO7Bk7D,EAAUl7D,EAAE,CACZ06D,GAAW9qE,EAAIib,EAAgBqwD,EAC/BR,GAAW5qE,EAAI+a,EAAgBqwD,EAAU,EACzCR,GAAW1qE,EAAI6a,EAAgBqwD,EAAU,EACzCP,GAAW/qE,EAAImb,EAAcmwD,EAC7BP,GAAW7qE,EAAIib,EAAcmwD,EAAU,EACvCP,GAAW3qE,EAAI+a,EAAcmwD,EAAU,EACvCN,GAAahrE,EAAIqb,EAAeiwD,EAChCN,GAAa9qE,EAAImb,EAAeiwD,EAAU,EAC1CN,GAAa5qE,EAAIib,EAAeiwD,EAAU,EAC1CL,GAAOjrE,EAAIurE,EAAUn7D,EAAE,EACvB66D,GAAO/qE,EAAIqrE,EAAUn7D,EAAE,EAAI,EAC3B,IAAIq7D,EAAiB,CACpBX,EAAaW,EAAgB3qE,gBAAgBgqE,EAC7CC,GAAaW,EAAmBE,qBAAqBb,EACrDC,GAAeU,EAAmBE,qBAAqBb,GAExD,GAAIY,EACHV,EAASU,EAAYE,eAAeZ,EAErChwD,GAAgBxT,KAAKqjE,EAAW9qE,EAAG8qE,EAAW5qE,EAAG4qE,EAAW1qE,EAC5D+a,GAAc1T,KAAKsjE,EAAW/qE,EAAG+qE,EAAW7qE,EAAG6qE,EAAW3qE,EAC1Dib,GAAe5T,KAAKujE,EAAahrE,EAAGgrE,EAAa9qE,EAAG8qE,EAAa5qE,EACjEmrE,GAAU9jE,KAAKwjE,EAAOjrE,EAAGirE,EAAO/qE,QAE3B,CACN,IAAKkQ,EAAI,EAAGA,EAAIg7D,EAASh7D,IAAK,CAC7Bk7D,EAAUl7D,EAAE,CAEZ8K,GAAUzT,KAAKwT,EAAgBqwD,GAAUrwD,EAAgBqwD,EAAU,GAAIrwD,EAAgBqwD,EAAU,GACjGrN,GAAQx2D,KAAK0T,EAAcmwD,GAAUnwD,EAAcmwD,EAAU,GAAInwD,EAAcmwD,EAAU,GACzFnD,GAAS1gE,KAAK4T,EAAeiwD,GAAUjwD,EAAeiwD,EAAU,GAAIjwD,EAAeiwD,EAAU,GAC7FxsD,GAAIrX,KAAK8jE,EAAUn7D,EAAE,GAAIm7D,EAAUn7D,EAAE,EAAI,UAGrC,EAIP,GAAI07D,GAAuCxgE,EAAkBkJ,OAC7D42D,GAAU9/D,EAAkBupC,YAC5B,KAAKzkC,EAAI,EAAGA,EAAIg7D,EAASh7D,IAAK,CAC7Bk7D,EAAUl7D,EAAE,CACZoE,GAAQ/M,KAAKqkE,EAAcR,GAAWV,EAAekB,EAAcR,EAAU,GAAKV,EAAekB,EAAcR,EAAU,GAAKV,KAKjI,GAAImB,GAAoC,GAAI79B,EAC5C69B,GAAiBp7D,UAAYA,CAC7Bo7D,GAAiBl7D,aAAeA,CAEhCA,GAAeyQ,EAAczoB,MAC7B,KAAKP,EAAI,EAAGA,EAAIuY,EAAcvY,IAAK,CAClCyX,EAAcuR,EAAchpB,EAC5ByX,GAAY6K,kBAAoB,KAChC7K,GAAY8K,mBAAqB,KACjC9K,GAAY0O,cAAc2rD,EAAc9xE,GACxCyX,GAAYgN,gBAAgBstD,EAAgB/xE,GAC5CyX,GAAYiN,oBAAoBstD,EAAchyE,GAC9CyX,GAAYkN,qBAAqBstD,EAAejyE,GAChDyX,GAAY8O,UAAU2rD,EAAUlyE,GAChCyzE,GAAiB3D,eAAer4D,GAGjC,MAAOg8D,GAnLM/B,GAAAkB,WAA4B,KAqL3C,OAAAlB,KAEgCjxE,GAAAJ,QAAvBqxE,I3HurcN/qD,2CAA2Cpd,UAAUmzC,6BAA6BnzC,UAAUC,gCAAgCD,UAAUglB,oDAAoD,oDAAoDmnB,8CAA8C,gDAAgDg+B,mDAAmD,SAASn0E,EAAQkB,EAAOJ,GAC1Z,GAAIK,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Ht4ctB,IAAOG,GAAQ5B,EAAiB,gC5H44chC,I4Hv4cMo0E,GAAmB,SAAA3xE,GAAStB,EAA5BizE,EAAmB3xE,EAExB,SAFK2xE,GAEOn0C,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEXx9B,EAAA1B,KAAAK,KAAM6+B,GAGAm0C,EAAAzyE,UAAA0yE,yBAAP,SAAgCC,EAAqBC,EAAoBC,EAAcC,GAEtF,GAAIC,GAAgB,EAAEjsE,KAAKksE,IAAIL,EAAa,EAC5C,IAAIM,GAAgBF,EAAOH,CAE3BnzE,MAAKyzE,iBAAiBD,EAAQ,EAAK,EAAK,EAAK,EAAKF,EAAQ,EAAK,EAAK,EAAK,EAAKD,GAAMA,EAAOD,GAAQ,EAAK,EAAK,EAAMA,EAAMC,GAAOD,EAAQC,GAAO,IAEjJ,OAAAL,IAdkCxyE,EAgBlCV,GAA6BJ,QAApBszE,I5Hu4cNrqE,gCAAgCC,YAAYyvD,oDAAoD,SAASz5D,EAAQkB,EAAOJ,G6H15c3H,GAAO40D,GAAsB11D,EAAY,iDAKzC,IAAMu4D,GAAoB,WAA1B,QAAMA,MAcSA,EAAAa,mBAAd,SAAiCH,EAAiCF,EAA8B+b,EAAgC9xB,EAAqB9rB,EAAgB4rB,EAAgBiyB,EAAiBC,EAAoCC,GAApC,GAAAD,QAAA,GAAkC,CAAlCA,EAAA,KAAoC,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,KAEzO,GAAIC,GAAcD,IAAcnyB,EAAQ,OAAO,QAC/C,IAAIl1B,GAAgB2qC,EAAqB4C,0BAA0BnY,EACnE,IAAI12C,GAAgB,EAAWyoE,EAAS,mBAAqB,SAAaA,EAAS,qBAAuB,SAE1G,IAAIC,GAAS,KACZA,EAAQjc,EAAU/Q,SAEnB,OAAO,OAASiR,EAAY,KAAO+b,EAAQ,KAAOF,EAAW,QAAUxoE,EAAS,IAAMshB,EAASsnD,EAAO,MAezF3c,GAAA4c,qBAAd,SAAmClc,EAAiC6b,EAAgC9xB,EAAqB9rB,EAAgB69C,EAAiBC,GAEzJ,GAAI1oE,EACJ,IAAIshB,GAAgB2qC,EAAqB4C,0BAA0BnY,EACnE,IAAI12C,GAAgB,EAAWyoE,EAAS,mBAAqB,SAAaA,EAAS,qBAAuB,SAE1G,OAAO,OAAS9b,EAAY,KAAO+b,EAAQ,KAAOF,EAAW,UAAYlnD,EAASthB,EAAS,MAU9EisD,GAAA4C,0BAAd,SAAwCnY,GAEvC,OAAQA,EAAQp1B,QACf,IAAK8nC,GAAuB0f,WAC3B,MAAO,OACP,MACD,KAAK1f,GAAuB2f,iBAC3B,MAAO,OACP,MACD,SACC,MAAO,IAGX,OAAA9c,KAEAr3D,GAA8BJ,QAArBy3D,I7Hm5cN7B,iDAAiD1sD",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase implements IRenderer\n{\n\tpublic _pRequireDepthRender:boolean;\n\tprivate _skyboxRenderablePool:RenderablePoolBase;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:TextureBase;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\n\t{\n\t\tsuper(rendererPoolClass, stage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:TextureBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tsuper.pDraw(entityCollector);\n\t}\n\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn <RenderObjectBase> renderObjectOwner.getRenderObject(renderable._pool);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar skyBox:SkyboxRenderable = <SkyboxRenderable> this._skyboxRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar renderObject:RenderObjectBase = skyBox.renderObject = this._pGetRenderObject(skyBox, skyBox.renderObjectOwner);\n\t\tvar pass:RenderPassBase = renderObject.passes[0];\n\n\t\tthis.activatePass(skyBox, pass, camera);\n\t\tskyBox._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(skyBox, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._skyboxRenderablePool.dispose();\n\t\tthis._skyboxRenderablePool = null;\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tsuper.iSetStage(value);\n\n\t\tif (this._pStage) {\n\t\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\t\tthis._pDepthRenderer = new DepthRenderer(this._pRendererPoolClass, this._pStage);\n\t\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pRendererPoolClass, this._pStage);\n\n\t\t\tthis._skyboxRenderablePool = RenderablePoolBase.getPool(SkyboxRenderable, this._pStage);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new RenderTexture(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\n\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\n\t{\n\t\tsuper(rendererPoolClass, stage);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn renderable._pool.getDepthRenderObject(renderObjectOwner);\n\t}\n}\n\nexport = DepthRenderer;",
    "import TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\n\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\n\t{\n\t\tsuper(rendererPoolClass, stage);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn renderable._pool.getDistanceRenderObject(renderObjectOwner);\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid) {\n\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\t}\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\n\t\t\t// TODO: check logic:\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\n\n\t\t\tvar s:any = this._filters[i];\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\n\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\n\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid) {\n\n\t\t\tthis.updateFilterSizes();\n\n\t\t}\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\t// TODO: check logic\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._filterSizesInvalid) {\n\t\t\tthis.updateFilterSizes();\n\t\t}\n\n\t\tif (this._filterTasksInvalid) {\n\t\t\tthis.updateFilterTasks(stage);\n\t\t}\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._filters[i].update(stage, camera);\n\t\t}\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;",
    "import SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\n\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilation at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilation\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationSubGeometries:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shaderObject.animationRegisterCache = new AnimationRegisterCache(shaderObject.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shaderObject.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shaderObject.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shaderObject.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shaderObject.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shaderObject.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shaderObject.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shaderObject.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shaderObject.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shaderObject, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shaderObject.uvSource, shaderObject.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shaderObject, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\n\t{\n\t\tvar mesh:Mesh = subMesh.parentMesh;\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\n\t\tif (animationSubGeometry)\n\t\t\treturn animationSubGeometry;\n\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\n\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationSubGeometry:AnimationSubGeometry;\n\t\tvar newAnimationSubGeometry:boolean = false;\n\t\tvar subGeometry:SubGeometryBase;\n\t\tvar subMesh:ISubMesh;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\t\t\tsubGeometry = subMesh.subGeometry;\n\t\t\tif (mesh.shareAnimationGeometry) {\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\n\n\t\t\t\tif (animationSubGeometry)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\n\n\t\t\tif (mesh.shareAnimationGeometry)\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\n\t\t\telse\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\n\n\t\t\tnewAnimationSubGeometry = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationSubGeometry)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationSubGeometry\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGeometry\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!subMesh)\n\t\t\tthrow(new Error(\"Must be subMesh\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator subGeometry\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shaderObject.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shaderObject.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shaderObject.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shaderObject.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Array<number>;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedSubGeometry:Object = new Object();\n\tprivate _morphedSubGeometryDirty:Object = new Object();\n\tprivate _condensedMatrices:Array<number>;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Array<number>\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\n\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp, subGeometry.numCondensedJoints);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, subGeometry.numCondensedJoints*3);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tstage.activateBuffer(vertexStreamOffset, renderable.getVertexData(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.JOINT_INDEX_FORMAT);\n\t\tstage.activateBuffer(vertexStreamOffset + 1, renderable.getVertexData(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.JOINT_WEIGHT_FORMAT);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shaderObject.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number> /*uint*/, numJoints:number /*uint*/)\n\t{\n\t\tvar i:number /*uint*/ = 0, j:number /*uint*/ = 0;\n\t\tvar len:number /*uint*/;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Array<number>();\n\n\t\tdo {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*4;\n\t\t\tlen = srcIndex + 12;\n\t\t\t// copy into condensed\n\t\t\twhile (srcIndex < len)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t} while (++i < numJoints);\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Array<number>;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceSubGeometry;\n\n\t\tvar targetSubGeometry:TriangleSubGeometry;\n\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetSubGeometry;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\n\n\t\tvar sourcePositions:Array<number> = sourceSubGeometry.positions;\n\t\tvar sourceNormals:Array<number> = sourceSubGeometry.vertexNormals;\n\t\tvar sourceTangents:Array<number> = sourceSubGeometry.vertexTangents;\n\n\t\tvar jointIndices:Array<number> = sourceSubGeometry.jointIndices;\n\t\tvar jointWeights:Array<number> = sourceSubGeometry.jointWeights;\n\n\t\tvar targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\n\n\t\tvar targetPositions:Array<number> = targetSubGeometry.positions;\n\t\tvar targetNormals:Array<number> = targetSubGeometry.vertexNormals;\n\t\tvar targetTangents:Array<number> = targetSubGeometry.vertexTangents;\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar len:number /*int*/ = sourcePositions.length;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < len) {\n\t\t\tvertX = sourcePositions[index];\n\t\t\tvertY = sourcePositions[index + 1];\n\t\t\tvertZ = sourcePositions[index + 2];\n\t\t\tnormX = sourceNormals[index];\n\t\t\tnormY = sourceNormals[index + 1];\n\t\t\tnormZ = sourceNormals[index + 2];\n\t\t\ttangX = sourceTangents[index];\n\t\t\ttangY = sourceTangents[index + 1];\n\t\t\ttangZ = sourceTangents[index + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[index] = vx;\n\t\t\ttargetPositions[index + 1] = vy;\n\t\t\ttargetPositions[index + 2] = vz;\n\t\t\ttargetNormals[index] = nx;\n\t\t\ttargetNormals[index + 1] = ny;\n\t\t\ttargetNormals[index + 2] = nz;\n\t\t\ttargetTangents[index] = tx;\n\t\t\ttargetTangents[index + 1] = ty;\n\t\t\ttargetTangents[index + 2] = tz;\n\n\t\t\tindex += 3;\n\t\t}\n\n\t\ttargetSubGeometry.updatePositions(targetPositions);\n\t\ttargetSubGeometry.updateVertexNormals(targetNormals);\n\t\ttargetSubGeometry.updateVertexTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).updateIndices(subGeometry.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\n\n\t\tswitch(event.dataType) {\n\t\t\tcase TriangleSubGeometry.UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.uvs);\n\t\t\tcase TriangleSubGeometry.SECONDARY_UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.secondaryUVs);\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shaderObject);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shaderObject);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\treturn \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shaderObject.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shaderObject.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shaderObject.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shaderObject.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shaderObject.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shaderObject.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shaderObject.animationTargetRegisters[0] + \", \" + shaderObject.animatableAttributes[0] + \"\\n\";\n\t\tif (shaderObject.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shaderObject.animationTargetRegisters[1] + \", \" + shaderObject.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shaderObject.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shaderObject.tangentDependencies > 0 || shaderObject.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shaderObject.animatableAttributes[2] + \", \" + shaderObject.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shaderObject.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shaderObject.animationTargetRegisters[2] + \", \" + shaderObject.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\n\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport VertexDataPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shaderObject, renderable, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\t\t// this type of animation can only be SubMesh\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tfor (; i < len; ++i) {\n\t\t\tsubGeom = this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\n\n\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.POSITION_DATA), subGeom.getOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\tif (shaderObject.normalDependencies > 0)\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.NORMAL_DATA), subGeom.getOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t}\n\t}\n\n\tprivate setNullPose(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\t\tif (shaderObject.normalDependencies > 0)\n\t\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t}\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\n\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Array<number> = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationSubGeometry\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationSubGeometry;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic subGeometry:TriangleSubGeometry;\n}\n\nexport = ParticleData",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Array<number>;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderObjectBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Geometry>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationSubGeometry.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Geometry>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGeometry:Geometry;\n\tprivate _nextGeometry:Geometry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGeometry;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGeometry;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGeometry = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * @class away.base.ParticleGeometry\n */\nclass ParticleGeometry extends Geometry\n{\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n}\n\nexport = ParticleGeometry;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRendererPoolClass\t\t\t= require(\"awayjs-renderergl/lib/pool/IRendererPoolClass\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\nimport RendererPoolBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RendererPoolBase\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher\n{\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tprivate _rendererPool:RendererPoolBase;\n\n\tpublic _pRendererPoolClass:IRendererPoolClass;\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean = false;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapData:BitmapData;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumTriangles:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._pNumTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(rendererPoolClass:IRendererPoolClass = null, stage:Stage = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pRendererPoolClass = rendererPoolClass;\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event)\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\tthis._rendererPool = (rendererPoolClass)? new this._pRendererPoolClass(this) : new RendererPoolBase(this);\n\n\t\tthis.stage = stage || StageManager.getInstance().getFreeStage();\n\t}\n\n\tpublic activatePass(renderable:RenderableBase, pass:RenderPassBase, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderable\n\t\trenderable._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderable:RenderableBase, pass:RenderPassBase)\n\t{\n\t\t//deactivate shader object\n\t\trenderable._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\tpublic set stage(value:Stage)\n\t{\n\t\tif (this._pStage == value)\n\t\t\treturn;\n\n\t\tthis.iSetStage(value);\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tif (this._pStage)\n\t\t\tthis.dispose();\n\n\t\tif (value) {\n\t\t\tthis._pStage = value;\n\n\t\t\tthis._rendererPool.stage = this._pStage;\n\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t\t/*\n\t\t\t if (_backgroundImageRenderer)\n\t\t\t _backgroundImageRenderer.stage = value;\n\t\t\t */\n\t\t\tif (this._pStage.context)\n\t\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t\t}\n\n\t\tthis._pBackBufferInvalid = true;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._rendererPool.dispose();\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:CollectorBase, target:TextureBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumTriangles = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this._rendererPool);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:TextureBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(entityCollector);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapData) {\n\t\t\t\tthis._pContext.drawToBitmapData(this._snapshotBitmapData);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapData)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapData = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:CollectorBase)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderable2:RenderableBase;\n\t//\tvar renderObject:RenderObjectBase;\n\t//\tvar pass:RenderPassBase;\n\t//\n\t//\twhile (renderable) {\n\t//\t\trenderable2 = renderable;\n\t//\t\trenderObject = renderable.renderObject;\n\t//\t\tpass = renderObject.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderable, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderable2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderable2 = renderable2.next;\n\t//\n\t//\t\t} while (renderable2 && renderable2.renderObject == renderObject && !renderable2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderable, pass);\n\t//\n\t//\t\trenderable = renderable2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tpublic drawRenderables(renderable:RenderableBase, entityCollector:CollectorBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderable2:RenderableBase;\n\t\tvar renderObject:RenderObjectBase;\n\t\tvar passes:Array<RenderPassBase>;\n\t\tvar pass:RenderPassBase;\n\t\tvar camera:Camera = entityCollector.camera;\n\n\n\t\twhile (renderable) {\n\t\t\trenderObject = renderable.renderObject;\n\t\t\tpasses = renderObject.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && renderObject._renderObjectOwner.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.renderObject == renderObject);\n\t\t\t} else {\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderable2 = renderable;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderable, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t\t} while (renderable2 && renderable2.renderObject == renderObject);\n\n\t\t\t\t\tthis.deactivatePass(renderable, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @protected\n\t */\n\tpublic applyRenderable(renderable:RenderableBase)\n\t{\n\t\t//set local vars for faster referencing\n\t\tvar renderObject:RenderObjectBase = this._pGetRenderObject(renderable, renderable.renderObjectOwner || DefaultMaterialManager.getDefaultMaterial(renderable.renderableOwner));\n\n\t\trenderable.renderObject = renderObject;\n\t\trenderable.renderObjectId = renderObject.renderObjectId;\n\t\trenderable.renderOrderId = renderObject.renderOrderId;\n\n\t\trenderable.cascaded = false;\n\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (renderObject.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumTriangles += renderable.numTriangles;\n\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\n\t\tif (renderable.overflow)\n\t\t\tthis.applyRenderable(renderable.overflow);\n\t}\n\n\tpublic _pGetRenderObject(renderable:RenderableBase, renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = RendererBase;",
    "import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport DepthPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/DepthPass\");\n\n/**\n * DepthRenderObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass DepthRenderObject extends RenderObjectBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"depth\";\n\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._pAddScreenPass(new DepthPass(this, renderObjectOwner, renderableClass, this._stage));\n\t}\n}\n\nexport = DepthRenderObject;",
    "﻿import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport DistancePass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/DistancePass\");\n\n/**\n * DistanceRenderObject is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRenderObject extends RenderObjectBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"distance\";\n\n\t/**\n\t * Creates a new DistanceRenderObject object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._pAddScreenPass(new DistancePass(this, renderObjectOwner, renderableClass, this._stage));\n\t}\n}\n\nexport = DistanceRenderObject;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilation process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/passes/BasicMaterialPass\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass RenderBasicMaterialObject extends RenderObjectBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"basic\";\n\n\tprivate _material:BasicMaterial;\n\tprivate _screenPass:BasicMaterialPass;\n\n\n\tconstructor(pool:RenderObjectPool, material:BasicMaterial, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, material, renderableClass, stage);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddScreenPass(this._screenPass = new BasicMaterialPass(this, material, renderableClass, this._stage));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRenderObject()\n\t{\n\t\tsuper._pUpdateRenderObject();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._screenPass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._screenPass.setBlendMode((this._renderObjectOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._screenPass.forceSeparateMVP = false;\n\t}\n}\n\nexport = RenderBasicMaterialObject;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\n/**\n *\n * @class away.pool.ScreenPasses\n */\nclass RenderObjectBase implements IRenderObject\n{\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tprivate _pool:RenderObjectPool;\n\tpublic _renderObjectOwner:IRenderObjectOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRenderObject:boolean = true;\n\tprivate _passes:Array<RenderPassBase> = new Array<RenderPassBase>();\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\n\tpublic renderObjectId:number;\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<RenderPassBase>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.renderObjectId = renderObjectOwner.id;\n\t\tthis._renderObjectOwner = renderObjectOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._renderableClass._iIncludeDependencies(shaderObject);\n\n\t\tshaderObject.alphaThreshold = this._renderObjectOwner.alphaThreshold;\n\t\tshaderObject.useMipmapping = this._renderObjectOwner.mipmap;\n\t\tshaderObject.useSmoothTextures = this._renderObjectOwner.smooth;\n\n\t\tif (this._renderObjectOwner.isAsset(MaterialBase)) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._renderObjectOwner;\n\t\t\tshaderObject.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshaderObject.useBothSides = material.bothSides;\n\t\t\tshaderObject.repeatTextures = material.repeat;\n\t\t\tshaderObject.usesUVTransform = material.animateUVs;\n\t\t\tshaderObject.texture = material.texture;\n\t\t\tshaderObject.color = material.color;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pClearScreenPasses();\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].dispose();\n\n\t\tthis._passes = null;\n\n\t\tthis._pool.disposeItem(this._renderObjectOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateRenderObject()\n\t{\n\t\tthis._invalidRenderObject = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidatePass();\n\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param renderObjectOwner\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRenderObject)\n\t\t\tthis._pUpdateRenderObject();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shaderObject:ShaderObjectBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshaderObject = this._passes[i].shader;\n\n\t\t\tif (shaderObject.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshaderObject.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshaderObject.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shaderObject.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRenderObject()\n\t{\n\t\tthis._invalidRenderObject = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the renderObjectOwner.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemoveScreenPass(pass:RenderPassBase)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the renderObjectOwner\n\t */\n\tpublic _pClearScreenPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the renderObjectOwner\n\t * @param pass\n\t */\n\tpublic _pAddScreenPass(pass:RenderPassBase)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateAnimation();\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._renderObjectOwner.animationSet) {\n\t\t\tthis._renderObjectOwner.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderableOwner> = this._renderObjectOwner.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._renderObjectOwner.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RenderObjectBase;",
    "import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderObjectClass\t\t\t= require(\"awayjs-renderergl/lib/compilation/IRenderObjectClass\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.RenderObjectPool\n */\nclass RenderObjectPool\n{\n\tprivate _renderObjectPool:Object = new Object();\n\tprivate _renderObjectClass:IRenderObjectClass;\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _stage:Stage;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderObjectClass\n\t */\n\tconstructor(renderObjectClass:IRenderObjectClass, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tthis._renderObjectClass = renderObjectClass;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn (this._renderObjectPool[renderObjectOwner.id] || (this._renderObjectPool[renderObjectOwner.id] = renderObjectOwner._iAddRenderObject(new this._renderObjectClass(this, renderObjectOwner, this._renderableClass, this._stage))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t */\n\tpublic disposeItem(renderObjectOwner:IRenderObjectOwner)\n\t{\n\t\trenderObjectOwner._iRemoveRenderObject(this._renderObjectPool[renderObjectOwner.id]);\n\n\t\tthis._renderObjectPool[renderObjectOwner.id] = null;\n\t}\n}\n\nexport = RenderObjectPool;",
    "import AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport IRenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderPassBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderCompilerBase\n{\n\tpublic _pShaderObject:ShaderObjectBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pRenderableClass:IRenderableClass;\n\tpublic _pRenderPass:IRenderPassBase;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, renderPass:IRenderPassBase, shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._pRenderableClass = renderableClass;\n\t\tthis._pRenderPass = renderPass;\n\t\tthis._pShaderObject = shaderObject;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shaderObject.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = renderableClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShaderObject.reset();\n\n\t\tthis.pIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShaderObject.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShaderObject);\n\t}\n\n\tpublic pIncludeDependencies()\n\t{\n\t\tthis._pShaderObject._iIncludeDependencies();\n\n\t\tthis._pShaderObject.outputsNormals = this._pRenderPass._pOutputsNormals(this._pShaderObject);\n\t\tthis._pShaderObject.outputsTangentNormals = this._pShaderObject.outputsNormals && this._pRenderPass._pOutputsTangentNormals(this._pShaderObject);\n\t\tthis._pShaderObject.usesTangentSpace = this._pShaderObject.outputsTangentNormals && this._pRenderPass._pUsesTangentSpace(this._pShaderObject);\n\n\t\tif (!this._pShaderObject.usesTangentSpace && this._pShaderObject.viewDirDependencies > 0)\n\t\t\tthis._pShaderObject.globalPosDependencies++;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShaderObject.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShaderObject.localPosDependencies > 0)\n            this.compileLocalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShaderObject.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShaderObject.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShaderObject.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShaderObject.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pRenderableClass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderableClass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShaderObject.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShaderObject.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShaderObject.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n    private compileLocalPositionCode()\n    {\n        this._pSharedRegisters.localPositionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.localPositionVarying + \", \" + this._pSharedRegisters.localPosition + \"\\n\";\n    }\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\tthis._pSharedRegisters.uvVarying = varying;\n\n\t\tif (this._pShaderObject.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShaderObject.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShaderObject.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShaderObject.viewDirDependencies);\n\n\t\tthis._pShaderObject.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShaderObject.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShaderObject.outputsNormals && !this._pShaderObject.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShaderObject.outputsNormals || !this._pShaderObject.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShaderObject.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShaderObject.outputsNormals) {\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShaderObject.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShaderObject.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShaderObject.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShaderObject.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShaderObject.tangentDependencies > 0 || this._pShaderObject.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShaderObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShaderObject.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = ShaderCompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport ShaderLightingObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingObject\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport IRenderLightingPass\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderLightingCompiler extends ShaderCompilerBase\n{\n\tprivate _shaderLightingObject:ShaderLightingObject;\n\tprivate _renderLightingPass:IRenderLightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, renderLightingPass:IRenderLightingPass, shaderLightingObject:ShaderLightingObject)\n\t{\n\t\tsuper(renderableClass, renderLightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._renderLightingPass = renderLightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._renderLightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._renderLightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._renderLightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = ShaderLightingCompiler;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport IRenderLightingPass\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderLightingPass\");\nimport ShaderLightingCompiler\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderLightingCompiler\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderLightingObject extends ShaderObjectBase\n{\n\tpublic _renderLightingPass:IRenderLightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, renderLightingPass:IRenderLightingPass, stage:Stage)\n\t{\n\t\tsuper(renderableClass, renderLightingPass, stage);\n\n\t\tthis._renderLightingPass = renderLightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._renderLightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._renderLightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._renderLightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._renderLightingPass.numPointLights + this._renderLightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._renderLightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._renderLightingPass._iUsesDiffuse(this)? this._renderLightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._renderLightingPass._iUsesSpecular(this)? this._renderLightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._renderLightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._renderLightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderLightingCompiler}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, renderPass:IRenderLightingPass):ShaderCompilerBase\n\t{\n\t\treturn new ShaderLightingCompiler(renderableClass, renderPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.numLights = 0;\n\t\tthis.usesLightFallOff = true;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._renderLightingPass.lightPicker)\n\t\t\tthis._renderLightingPass.lightPicker.collectLights(renderable);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._renderLightingPass.lightPicker.directionalLights;\n\t\toffset = this._renderLightingPass.directionalLightsOffset;\n\t\tlen = this._renderLightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._renderLightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._renderLightingPass.lightPicker.pointLights;\n\t\toffset = this._renderLightingPass.pointLightsOffset;\n\t\tlen = this._renderLightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._renderLightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._renderLightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._renderLightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._renderLightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._renderLightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._stage.activateCubeTexture(this.lightProbeDiffuseIndices[i], probe.diffuseMap, this.useSmoothTextures, this.useMipmapping);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._stage.activateCubeTexture(this.lightProbeSpecularIndices[i], probe.specularMap, this.useSmoothTextures, this.useMipmapping);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._renderLightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = ShaderLightingObject;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderPassBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderCompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderObjectBase\n{\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _renderPass:IRenderPassBase;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:Texture2DBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the local position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic localPosDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, renderPass:IRenderPassBase, stage:Stage)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._renderPass = renderPass;\n\t\tthis._stage = stage;\n\t\tthis.profile = this._stage.profile;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._renderPass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param renderableClass\n\t * @param renderPass\n\t * @param stage\n\t * @returns {ShaderCompilerBase}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, renderPass:IRenderPassBase):ShaderCompilerBase\n\t{\n\t\treturn new ShaderCompilerBase(renderableClass, renderPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.localPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\n\n\t\t//Initializes commonly required constant values.\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._renderPass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._renderPass.animationSet).deactivate(this, this._stage);\n\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderableOwner.animator)\n\t\t\t(<AnimatorBase> renderable.renderableOwner.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.uvBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\n\n\t\tif (this.secondaryUVBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\n\n\t\tif (this.normalBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\n\t\tif (this.tangentBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\n\n\t\tif (this.colorBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.colorBufferIndex, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\n\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.renderableOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\t\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:ShaderCompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._renderableClass, this._renderPass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._renderPass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderObjectBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilation.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n    public localPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport SkyboxPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/passes/SkyboxPass\");\n\n/**\n * SkyboxRenderObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass SkyboxRenderObject extends RenderObjectBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"skybox\";\n\n\tprivate _screenPass:SkyboxPass;\n\n\tconstructor(pool:RenderObjectPool, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._screenPass = new SkyboxPass(this, renderObjectOwner, renderableClass, this._stage);\n\n\t\tthis._pAddScreenPass(this._screenPass);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRenderObject()\n\t{\n\t\tsuper._pUpdateRenderObject();\n\n\t\tthis._pRequiresBlending = (this._renderObjectOwner.blendMode != BlendMode.NORMAL);\n\n\t\tthis._screenPass.setBlendMode((this._renderObjectOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._renderObjectOwner.blendMode);\n\t}\n}\n\nexport = SkyboxRenderObject;",
    "import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends Event\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic pAddTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:ITexture;\n\n\tprivate _scaledTextureWidth:number = -1;\n\tprivate _scaledTextureHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():ITexture\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:ITexture)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.pUpdateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic pInvalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic pUpdateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic pGetVertexCode():string\n\t{\n\t\t// TODO: imeplement AGAL <> GLSL\n\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic pGetFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic pUpdateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.pUpdateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = TextureUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = TextureUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends RenderPassBase\n{\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iIncludeDependencies(shaderObject);\n\n\t\tif (shaderObject.texture != null)\n\t\t\tshaderObject.uvDependencies++;\n\n    }\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\tdiffuseInputReg = regCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedReg, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shaderObject.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tdiffuseInputReg = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture != null) {\n\t\t\tthis._stage.activateTexture(this._texturesIndex, this._shader.texture, this._shader.repeatTextures, this._shader.useSmoothTextures, this._shader.useMipmapping);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * DepthRenderObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass DepthPass extends RenderPassBase\n{\n\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iIncludeDependencies(shaderObject);\n\n\t\tshaderObject.projectionDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shaderObject.texture && shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tif (this._shader.texture && this._shader.alphaThreshold > 0) {\n\t\t\tthis._stage.activateTexture(this._texturesIndex, this._shader.texture, this._shader.repeatTextures, this._shader.useSmoothTextures, this._shader.useMipmapping);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n\n}\n\nexport = DepthPass;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * DistancePass is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistancePass extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DistancePass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iIncludeDependencies(shaderObject);\n\n\t\tshaderObject.projectionDependencies++;\n\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tif (shaderObject.viewDirDependencies > 0)\n\t\t\tshaderObject.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant()\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t   \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t   \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t   \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._shader.alphaThreshold > 0) {\n\t\t\tthis._stage.activateTexture(this._texturesIndex, this._shader.texture, this._shader.repeatTextures, this._shader.useSmoothTextures, this._shader.useMipmapping);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistancePass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport IRenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/IRenderPassBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\n\n/**\n * RenderPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass RenderPassBase extends EventDispatcher implements IRenderPassBase\n{\n\tprivate _renderObject:RenderObjectBase;\n\tpublic _renderObjectOwner:IRenderObjectOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderObjectBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tpublic _pEnableBlending:boolean = false;\n\n\tprivate _writeDepth:boolean = true;\n\n\tpublic get shader():ShaderObjectBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderObjectOwner.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Creates a new RenderPassBase object.\n\t */\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderObject = renderObject;\n\t\tthis._renderObjectOwner = renderObjectOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t}\n\t\n\n\t/**\n\t * Indicate whether this pass should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic get writeDepth():boolean\n\t{\n\t\treturn this._writeDepth;\n\t}\n\n\tpublic set writeDepth(value:boolean)\n\t{\n\t\tthis._writeDepth = value;\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tthis._depthCompareMode = value;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._shader.dispose();\n\n\t\tthis._shader = null;\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling renderPass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._pEnableBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis._pEnableBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._pEnableBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._stage.context.setDepthTest(( this._writeDepth && !this._pEnableBlending ), this._depthCompareMode);\n\n\t\tif (this._pEnableBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._renderObject._iIncludeDependencies(shaderObject);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshaderObject.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated at all.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = RenderPassBase;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\n\n/**\n * SkyboxPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass SkyboxPass extends RenderPassBase\n{\n\tpublic _skybox:Skybox;\n\n\tconstructor(renderObject:RenderObjectBase, renderObjectOwner:IRenderObjectOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(renderObject, renderObjectOwner, renderableClass, stage);\n\n\t\tthis._skybox = <Skybox> renderObjectOwner;\n\n\t\tthis._shader = new ShaderObjectBase(renderableClass, this, this._stage);\n\t}\n\n\n\t/**\n\t* @inheritDoc\n\t*/\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//var cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\t//this._texturesIndex = cubeMapReg.index;\n\n\t\t//ShaderCompilerHelper.getTexCubeSampleCode(sharedRegisters.shadedTarget, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar mip:string = \",mipnone\";\n\n\t\tif (shaderObject.useMipmapping)\n\t\t\tmip = \",miplinear\";\n\n\t\treturn \"tex ft0, v0, fs0 <cube,\" + ShaderCompilerHelper.getFormatStringForTexture(this._skybox.cubeMap) + \"linear,clamp\" + mip + \">\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\tthis._stage.activateCubeTexture(0, this._skybox.cubeMap, this._shader.useSmoothTextures, this._shader.useMipmapping);\n\t}\n}\n\nexport = SkyboxPass;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport PickingColliderBase\t\t\t\t= require(\"awayjs-renderergl/lib/pick/PickingColliderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider extends PickingColliderBase implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(stage:Stage, findClosestCollision:boolean = false)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indexData:Array<number> = renderable.getIndexData().data;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = (<MaterialBase> renderable.renderObjectOwner).bothSides;\n\n\t\tvar positionData:Array<number> = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar uvData:Array<number> = renderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = renderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = renderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\t\tvar numIndices:number = indexData.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = positionOffset + indexData[ index ]*positionStride;\n\t\t\ti1 = positionOffset + indexData[ (index + 1) ]*positionStride;\n\t\t\ti2 = positionOffset + indexData[ (index + 2) ]*positionStride;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positionData[ i0 ];\n\t\t\tp0y = positionData[ (i0 + 1) ];\n\t\t\tp0z = positionData[ (i0 + 2) ];\n\t\t\tp1x = positionData[ i1 ];\n\t\t\tp1y = positionData[ (i1 + 1) ];\n\t\t\tp1z = positionData[ (i1 + 2) ];\n\t\t\tp2x = positionData[ i2 ];\n\t\t\tp2y = positionData[ (i2 + 1) ];\n\t\t\tp2z = positionData[ (i2 + 2) ];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*this.rayDirection.x + ny* +this.rayDirection.y + nz*this.rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*this.rayPosition.x + ny*this.rayPosition.y + nz*this.rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = this.rayPosition.x + t*this.rayDirection.x;\n\t\t\t\tcy = this.rayPosition.y + t*this.rayDirection.y;\n\t\t\t\tcz = this.rayPosition.z + t*this.rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/( Q1Q1*Q2Q2 - Q1Q2*Q1Q2 );\n\t\t\t\tv = coeff*( Q2Q2*RQ1 - Q1Q2*RQ2 );\n\t\t\t\tw = coeff*( -Q1Q2*RQ1 + Q1Q1*RQ2 );\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._pGetCollisionUV(indexData, uvData, index, v, w, u, uvOffset, uvStride);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BillboardRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport RenderablePoolBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\n\n/**\n * An abstract base class for all picking collider classes. It should not be instantiated directly.\n *\n * @class away.pick.PickingColliderBase\n */\nclass PickingColliderBase\n{\n\tprivate _billboardRenderablePool:RenderablePoolBase;\n\tprivate _subMeshRenderablePool:RenderablePoolBase;\n\n\tpublic rayPosition:Vector3D;\n\tpublic rayDirection:Vector3D;\n\n\tconstructor(stage:Stage)\n\t{\n\t\t//TODO\n\t\tthis._billboardRenderablePool = RenderablePoolBase.getPool(BillboardRenderable, stage);\n\t\tthis._subMeshRenderablePool = RenderablePoolBase.getPool(TriangleSubMeshRenderable, stage);\n\t}\n\n\tpublic _pPetCollisionNormal(indexData:Array<number> /*uint*/, vertexData:Array<number>, triangleIndex:number):Vector3D // PROTECTED\n\t{\n\t\tvar normal:Vector3D = new Vector3D();\n\t\tvar i0:number = indexData[ triangleIndex ]*3;\n\t\tvar i1:number = indexData[ triangleIndex + 1 ]*3;\n\t\tvar i2:number = indexData[ triangleIndex + 2 ]*3;\n\t\tvar p0:Vector3D = new Vector3D(vertexData[ i0 ], vertexData[ i0 + 1 ], vertexData[ i0 + 2 ]);\n\t\tvar p1:Vector3D = new Vector3D(vertexData[ i1 ], vertexData[ i1 + 1 ], vertexData[ i1 + 2 ]);\n\t\tvar p2:Vector3D = new Vector3D(vertexData[ i2 ], vertexData[ i2 + 1 ], vertexData[ i2 + 2 ]);\n\t\tvar side0:Vector3D = p1.subtract(p0);\n\t\tvar side1:Vector3D = p2.subtract(p0);\n\t\tnormal = side0.crossProduct(side1);\n\t\tnormal.normalize();\n\t\treturn normal;\n\t}\n\n\tpublic _pGetCollisionUV(indexData:Array<number> /*uint*/, uvData:Array<number>, triangleIndex:number, v:number, w:number, u:number, uvOffset:number, uvStride:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indexData[ triangleIndex ]*uvStride + uvOffset;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 1 ]*uvStride + uvOffset;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 2 ]*uvStride + uvOffset;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setLocalRay(localPosition:Vector3D, localDirection:Vector3D)\n\t{\n\t\tthis.rayPosition = localPosition;\n\t\tthis.rayDirection = localDirection;\n\t}\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\tif (this._pTestRenderableCollision(<RenderableBase> this._billboardRenderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\tpickingCollisionVO.renderableOwner = billboard;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\n\t *\n\t * @param mesh The mesh instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testMeshCollision(mesh:Mesh, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = mesh.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\n\t\t\tif (this._pTestRenderableCollision(<RenderableBase> this._subMeshRenderablePool.getItem(subMesh), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tpickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn pickingCollisionVO.renderableOwner != null;\n\t}\n}\n\nexport = PickingColliderBase;",
    "import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapData\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.entities.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:RenderableBase;\n\tprivate _blendedRenderableHead:RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapData:BitmapData;\n\tprivate _viewportData:Array<number>;\n\tprivate _boundOffsetScale:Array<number>;\n\tprivate _id:Array<number>;\n\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _subGeometryIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Array<number>(4);\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapData)\n\t\t\tthis._bitmapData = new BitmapData(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapData(this._bitmapData);\n\t\tthis._hitColor = this._bitmapData.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.subGeometryIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderable) {\n\t\t\t// it's possible that the renderable was already removed from the scene\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderable = renderable.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.renderObjectOwner).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\t\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\n\t\t\trenderable = renderable.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\tthis._stage.activateBuffer(0, this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA), this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(this._hitRenderable.getIndexData()), 0, this._hitRenderable.numTriangles);\n\n\t\tthis._context.drawToBitmapData(this._bitmapData);\n\n\t\tcol = this._bitmapData.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar indices:Array<number> = this._hitRenderable.getIndexData().data;\n\n\t\tvar positions:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\n\t\tvar uvs:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\n\t\tvar normals:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).data;\n\t\tvar normalStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).dataPerVertex;\n\t\tvar normalOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = positionOffset + indices[i]*positionStride;\n\t\t\tt2 = positionOffset + indices[j]*positionStride;\n\t\t\tt3 = positionOffset + indices[k]*positionStride;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = normalOffset + indices[i]*normalStride;\n\t\t\t\t\tni2 = normalOffset + indices[j]*normalStride;\n\t\t\t\t\tni3 = normalOffset + indices[k]*normalStride;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = uvOffset + indices[i]*uvStride\n\t\t\t\t\tui2 = uvOffset + indices[j]*uvStride\n\t\t\t\t\tui3 = uvOffset + indices[k]*uvStride\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back subGeometryIndex value\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapData.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapData = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tprivate static _materialGeometry:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"billboard\";\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePoolBase, billboard:Billboard, stage:Stage)\n\t{\n\t\tsuper(pool, billboard, billboard, billboard.material, stage);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shaderObject.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\t//buffer the same for all materials, so can set here\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderObjectBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n}\n\nexport = BillboardRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport CurveSubMesh\t\t\t\t    = require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport CurveSubGeometry\t\t    \t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass CurveSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"curvesubmesh\";\n\n\tpublic static vertexAttributesOffset:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:CurveSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePoolBase, subMesh:CurveSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():CurveSubGeometry\n\t{\n\t\tvar subGeometry:CurveSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <CurveSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[CurveSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.curves)\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.CURVE_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.UV_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n        shaderObject.localPosDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\n\n\n\t\tif (shaderObject.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \".xyw, \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov v2 va1 \\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\n\t\t} else {\n\t\t\tcode += \"mov v2 va1 \\n\";\n\t\t\tcode += \"m44 op, \" + position + \".xyw, \" + viewMatrixReg + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n    /**\n     * @inheritDoc\n     */\n\tpublic static _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar sd:boolean = (<ContextWebGL>shaderObject._stage.context).standardDerivatives;\n\t\tvar pos:ShaderRegisterElement = sharedRegisters.localPositionVarying;\n\t\tvar out:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\n\t\tvar curve:string = \"v2\";\n\t\tvar curvex:string = \"v2.x\";\n\t\tvar curvey:string = \"v2.y\";\n\t\tvar curvez:string = pos + \".z\";\n\n\n\t\t//get some free registers\n\t\tvar free:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free, 1);\n\t\tvar free1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free1, 1);\n\t\tvar free2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free2, 1);\n\n\t\t//distance from curve\n\t\tvar d:string = free + \".x\";\n\t\tvar dx:string = free + \".y\";\n\t\tvar dy:string = free + \".z\";\n\t\tvar t:string = free + \".w\";\n\t\tvar d2:string = free1 + \".x\";\n\t\tvar fixa:string = free1 + \".y\";\n\t\tvar fixb:string = free1 + \".z\";\n\n\t\tvar _aa:string = \"fc7.z\";\n\t\tvar _1:string = \"fc7.y\";\n\n\t\tvar nl:string = \"\\n\";\n\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//distance from curve\n\t\tcode.push(\"mul\",d, curvex, curvex, nl);\n\t\tcode.push(\"sub\",d, d, curvey, nl);\n\t\tcode.push(\"mul\",d, d, curvez, nl);\t//flipper\n\n\t\tcode.push(\"kil\" ,d, nl);\n\n\t\tif(sd)\n\t\t{\n\n\t\t\t//derivatives\n\t\t\tcode.push(\"ddx\", dx, d, nl);\n\t\t\tcode.push(\"ddy\", dy, d, nl);\n\n\t\t\t//AA\n\t\t\tcode.push(\"mul\",dx, dx, dx, nl);\n\t\t\tcode.push(\"mul\",dy, dy, dy, nl);\n\t\t\tcode.push(\"add\",t, dx, dy, nl);\n\t\t\tcode.push(\"sqt\",t, t, nl);\n\n\t\t\tcode.push(\"mul\",t, t, _aa, nl);\n\t\t\tcode.push(\"div\",d, d, t, nl);\n\n\n\t\t\t/*LINE*/\n\t\t\tcode.push(\"mov\", d2, curvey, nl);\n\t\t\tcode.push(\"ddx\", dx, curvey, nl);\n\t\t\tcode.push(\"ddy\", dy, curvey, nl);\n\t\t\tcode.push(\"mul\", dx, dx, dx, nl);\n\t\t\tcode.push(\"mul\", dy, dy, dy, nl);\n\t\t\tcode.push(\"add\", t, dx, dy, nl);\n\t\t\tcode.push(\"sqt\", t, t, nl);\n\t\t\tcode.push(\"mul\", t, t, _aa, nl);\n\n\t\t\tcode.push(\"div\", d2, d2, t, nl);\n\t\t\t/**/\n\n\t\t\t//code.push(\"sge\", fixa, curvex, _1, nl);\n\t\t\tcode.push(\"slt\", fixb, curvex, _1, nl);\n\t\t\tcode.push(\"sub\", fixa, _1, fixb, nl);\n\t\t\t//code.push(\"sub\", fixb, _1, fixa, nl);\n\t\t\tcode.push(\"mul\", d2, d2, fixa, nl);\n\t\t\tcode.push(\"mul\", d, d, fixb, nl);\n\n\t\t\tcode.push(\"add\", d, d, d2, nl);\n\t\t\tcode.push(\"abs\", d, d, nl);\n\n\t\t\tcode.push(\"mov\", out+\".w\", d, nl);\n\t\t}\n\t\treturn code.join(\" \");\n\t}\n    private _constants:Array<number> = new Array<number>(0, 1, 1, 0.5);\n    /**\n     * @inheritDoc\n     */\n    public _iActivate(pass:RenderPassBase, camera:Camera)\n    {\n        super._iActivate(pass, camera);\n\n        var context:IContextGL = this._stage.context;\n\n        context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 7, this._constants, 1);\n\n    }\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderObjectBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(CurveSubGeometry.POSITION_DATA), this.getVertexOffset(CurveSubGeometry.POSITION_DATA), CurveSubGeometry.POSITION_FORMAT);\n        this._stage.activateBuffer(1, this.getVertexData(CurveSubGeometry.CURVE_DATA), this.getVertexOffset(CurveSubGeometry.CURVE_DATA), CurveSubGeometry.CURVE_FORMAT);\n\n        this._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new CurveSubMeshRenderable(this._pool, <CurveSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = CurveSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSegmentRenderable extends RenderableBase\n{\n\tprivate static _lineGeometry:Object = new Object();\n\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"linesegment\";\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePoolBase, lineSegment:LineSegment, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment, lineSegment.material, stage, level, indexOffset);\n\n\t\tthis._lineSegment = lineSegment;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar geometry:LineSubGeometry = LineSegmentRenderable._lineGeometry[this._lineSegment.id] || (LineSegmentRenderable._lineGeometry[this._lineSegment.id] = new LineSubGeometry());\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar startPositions:Array<number>;\n\t\tvar endPositions:Array<number>;\n\t\tvar thickness:Array<number>;\n\n\t\tif (geometry.indices != null) {\n\t\t\tstartPositions = geometry.startPositions;\n\t\t\tendPositions = geometry.endPositions;\n\t\t\tthickness = geometry.thickness;\n\t\t} else {\n\t\t\tstartPositions = new Array<number>(3);\n\t\t\tendPositions = new Array<number>(3);\n\t\t\tthickness = new Array<number>(1);\n\t\t}\n\n\t\tstartPositions[0] = start.x;\n\t\tstartPositions[1] = start.y;\n\t\tstartPositions[2] = start.z;\n\t\tendPositions[0] = end.x;\n\t\tendPositions[1] = end.y;\n\t\tendPositions[2] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.updatePositions(startPositions, endPositions);\n\t\tgeometry.updateThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSegmentRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSegmentRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSegmentRenderable(this._pool, <LineSegment> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = LineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"linesubmesh\";\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePoolBase, subMesh:LineSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\n\t\tif (subGeometry.thickness)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\n\t\tif (subGeometry.startColors)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSubMeshRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSubMeshRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSubMeshRenderable(this._pool, <LineSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = LineSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onRenderObjectOwnerUpdatedDelegate:(event:RenderableOwnerEvent) => void;\n\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryDirty:boolean = true;\n\tprivate _indexData:IndexData;\n\tprivate _indexDataDirty:boolean = true;\n\tprivate _vertexData:Object = new Object();\n\tpublic _pVertexDataDirty:Object = new Object();\n\tprivate _vertexOffset:Object = new Object();\n\n\tpublic _level:number;\n\tprivate _indexOffset:number;\n\tprivate _overflow:RenderableBase;\n\tprivate _numTriangles:number;\n\tprivate _concatenateArrays:boolean;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePoolBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic get overflow():RenderableBase\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._overflow;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderObjectId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\n\t/**\n\t *\n\t */\n\tpublic renderObjectOwner:IRenderObjectOwner;\n\n\t/**\n\t *\n\t */\n\tpublic renderObject:RenderObjectBase;\n\n\t/**\n\t *\n\t */\n\tpublic getIndexData():IndexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._indexData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexData(dataType:string):VertexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexOffset(dataType:string):number\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexOffset[dataType];\n\t}\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param renderableOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePoolBase, sourceEntity:IEntity, renderableOwner:IRenderableOwner, renderObjectOwner:IRenderObjectOwner, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\t\tthis._onRenderObjectOwnerUpdatedDelegate = (event:RenderableOwnerEvent) => this._onRenderObjectOwnerUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\t\tthis._stage = stage;\n\n\t\t//reference to level of overflow\n\t\tthis._level = level;\n\n\t\t//reference to the offset on indices (if this is an overflow renderable)\n\t\tthis._indexOffset = indexOffset;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\n\t\tthis.renderableOwner.addEventListener(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this._onRenderObjectOwnerUpdatedDelegate)\n\n\t\tthis.renderObjectOwner = renderObjectOwner;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\n\t\tthis._indexData.dispose();\n\t\tthis._indexData = null;\n\n\t\tfor (var dataType in this._vertexData) {\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\n\t\t\tthis._vertexData[dataType] = null;\n\t\t}\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\n\t\t//invalidate indices\n\t\tif (this._level == 0)\n\t\t\tthis._indexDataDirty = true;\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\t\tthis._indexDataDirty = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\t\tthis._pVertexDataDirty[dataType] = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic static _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @param offset\n\t * @internal\n\t */\n\tpublic _iFillIndexData(indexOffset:number)\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\n\n\t\tthis._numTriangles = this._indexData.data.length/3;\n\n\t\tindexOffset = this._indexData.offset;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.length) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(indexOffset);\n\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:RenderPassBase, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:RenderPassBase)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\tthis._subGeometry = this._pGetSubGeometry();\n\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\n\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\t//dispose\n//\t\t\tif (this._indexData) {\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._indexData = null;\n//\t\t\t}\n\n//\t\t\tfor (var dataType in this._vertexData) {\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._vertexData[dataType] = null;\n//\t\t\t}\n\n\t\tthis._geometryDirty = false;\n\n\t\t//specific vertex data types have to be invalidated in the specific renderable\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateIndexData()\n\t{\n\t\tthis._iFillIndexData(this._indexOffset);\n\n\t\tthis._indexDataDirty = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t * @private\n\t */\n\tprivate _updateVertexData(dataType:string)\n\t{\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\n\n\t\tif (this._subGeometry.concatenateArrays)\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\n\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\n\n\t\tthis._pVertexDataDirty[dataType] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndexData();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\n\n\t\tthis.invalidateVertexData(event.dataType);\n\t}\n\n\tprivate _onRenderObjectOwnerUpdated(event:RenderableOwnerEvent)\n\t{\n\t\t//TODO flag unused renderObjects for deletion\n\t\tthis.renderObjectOwner = event.renderObjectOwner;\n\t}\n}\n\nexport = RenderableBase;",
    "import IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/pool/IRenderableClass\");\nimport RenderObjectPool\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectPool\");\nimport RenderBasicMaterialObject\t= require(\"awayjs-renderergl/lib/compilation/RenderBasicMaterialObject\");\nimport SkyboxRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/SkyboxRenderObject\");\nimport DepthRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DepthRenderObject\");\nimport DistanceRenderObject\t\t\t= require(\"awayjs-renderergl/lib/compilation/DistanceRenderObject\");\nimport RenderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/RenderObjectBase\");\n\n/**\n * @class away.pool.RenderablePoolBase\n */\nclass RenderablePoolBase implements IRenderablePool\n{\n\tpublic static _pools:Object = new Object();\n\n\tpublic _stage:Stage;\n\tpublic _renderablePool:Object = new Object();\n\tpublic _renderableClass:IRenderableClass;\n\n\tprivate _materialRenderObjectPool:RenderObjectPool;\n\tprivate _skyboxRenderObjectPool:RenderObjectPool;\n\tprivate _depthRenderObjectPool:RenderObjectPool;\n\tprivate _distanceRenderObjectPool:RenderObjectPool;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tconstructor(renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\n\t\tthis._materialRenderObjectPool = new RenderObjectPool(RenderBasicMaterialObject, this._renderableClass, this._stage);\n\t\tthis._skyboxRenderObjectPool = new RenderObjectPool(SkyboxRenderObject, this._renderableClass, this._stage);\n\t\tthis._depthRenderObjectPool = new RenderObjectPool(DepthRenderObject, this._renderableClass, this._stage);\n\t\tthis._distanceRenderObjectPool = new RenderObjectPool(DistanceRenderObject, this._renderableClass, this._stage);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderableOwner:IRenderableOwner):RenderableBase\n\t{\n\t\treturn (this._renderablePool[renderableOwner.id] || (this._renderablePool[renderableOwner.id] = renderableOwner._iAddRenderable(new this._renderableClass(this, renderableOwner, this._stage))))\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t * @param renderable\n\t */\n\tpublic getMaterialRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn this._materialRenderObjectPool.getItem(renderObjectOwner);\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t * @param renderable\n\t */\n\tpublic getSkyboxRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn this._skyboxRenderObjectPool.getItem(renderObjectOwner);\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t * @param renderable\n\t */\n\tpublic getDepthRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn this._depthRenderObjectPool.getItem(renderObjectOwner);\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t * @param renderable\n\t */\n\tpublic getDistanceRenderObject(renderObjectOwner:IRenderObjectOwner):RenderObjectBase\n\t{\n\t\treturn this._distanceRenderObjectPool.getItem(renderObjectOwner);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t */\n\tpublic disposeItem(renderableOwner:IRenderableOwner)\n\t{\n\t\trenderableOwner._iRemoveRenderable(this._renderablePool[renderableOwner.id]);\n\n\t\tthis._renderablePool[renderableOwner.id] = null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._renderablePool)\n\t\t\tthis._renderablePool[id].dispose();\n\n\t\tRenderablePoolBase.disposePool(this._renderableClass, this._stage);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderablePoolBase\n\t */\n\tpublic static getPool(renderableClass:IRenderableClass, stage:Stage):RenderablePoolBase\n\t{\n\t\tvar pools:Object = (RenderablePoolBase._pools[stage.stageIndex] || (RenderablePoolBase._pools[stage.stageIndex] = new Object()));\n\n\t\treturn (pools[renderableClass.id] || (pools[renderableClass.id] = new RenderablePoolBase(renderableClass, stage)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tpublic static disposePool(renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tvar pools:Object = RenderablePoolBase._pools[stage.stageIndex];\n\n\t\tif (pools == undefined)\n\t\t\treturn;\n\n\t\tif (pools[renderableClass.id])\n\t\t\tpools[renderableClass.id] = undefined;\n\t}\n}\n\nexport = RenderablePoolBase;",
    "\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/pool/BillboardRenderable\");\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSegmentRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/pool/LineSubMeshRenderable\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/pool/TriangleSubMeshRenderable\");\nimport CurveSubMeshRenderable\t    = require(\"awayjs-renderergl/lib/pool/CurveSubMeshRenderable\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/RendererBase\");\n\n/**\n * RendererPoolBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererPoolBase\n */\nclass RendererPoolBase implements IRendererPool\n{\n\tpublic _billboardRenderablePool:RenderablePoolBase;\n\tpublic _lineSegmentRenderablePool:RenderablePoolBase;\n\tpublic _triangleSubMeshRenderablePool:RenderablePoolBase;\n\tpublic _lineSubMeshRenderablePool:RenderablePoolBase;\n    public _curveSubMeshRenderablePool:RenderablePoolBase;\n\n\tpublic _pStage:Stage;\n\n\n\tprivate _renderer:RendererBase;\n\t\n\t/**\n\t * Creates a new RendererPoolBase object.\n\t */\n\tconstructor(renderer:RendererBase)\n\t{\n\t\tthis._renderer = renderer;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\tpublic set stage(value:Stage)\n\t{\n\t\tif (this._pStage == value)\n\t\t\treturn;\n\n\t\tif (this._pStage)\n\t\t\tthis.dispose();\n\n\t\tthis._pStage = value;\n\n\t\tif (this._pStage)\n\t\t\tthis._pUpdatePool();\n\t}\n\n\tpublic _pUpdatePool()\n\t{\n\t\tthis._billboardRenderablePool = RenderablePoolBase.getPool(BillboardRenderable, this._pStage);\n\t\tthis._lineSegmentRenderablePool = RenderablePoolBase.getPool(LineSegmentRenderable, this._pStage);\n\t\tthis._triangleSubMeshRenderablePool = RenderablePoolBase.getPool(TriangleSubMeshRenderable, this._pStage);\n\t\tthis._lineSubMeshRenderablePool = RenderablePoolBase.getPool(LineSubMeshRenderable, this._pStage);\n        this._curveSubMeshRenderablePool = RenderablePoolBase.getPool(CurveSubMeshRenderable, this._pStage);\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererPoolBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._billboardRenderablePool.dispose();\n\t\tthis._billboardRenderablePool = null;\n\n\t\tthis._lineSegmentRenderablePool.dispose();\n\t\tthis._lineSegmentRenderablePool = null;\n\n\t\tthis._triangleSubMeshRenderablePool.dispose();\n\t\tthis._triangleSubMeshRenderablePool = null;\n\n\t\tthis._lineSubMeshRenderablePool.dispose();\n\t\tthis._lineSubMeshRenderablePool = null;\n\n        this._curveSubMeshRenderablePool.dispose();\n        this._curveSubMeshRenderablePool = null;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t * @protected\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._renderer.applyRenderable(this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSegment(lineSegment:LineSegment)\n\t{\n\t\tthis._renderer.applyRenderable(this._lineSegmentRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\t\tthis._renderer.applyRenderable(this._triangleSubMeshRenderablePool.getItem(triangleSubMesh));\n\t}\n    /**\n     *\n     * @param curveSubMesh\n     */\n    public applyCurveSubMesh(curveSubMesh:CurveSubMesh)\n    {\n        this._renderer.applyRenderable(this._curveSubMeshRenderablePool.getItem(curveSubMesh));\n    }\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\tthis._renderer.applyRenderable(this._lineSubMeshRenderablePool.getItem(lineSubMesh));\n\t}\n}\n\nexport = RendererPoolBase;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-renderergl/lib/utils/ShaderCompilerHelper\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\tprivate _vertexArray:Array<number>;\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"skybox\";\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePoolBase, skybox:Skybox, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, skybox, skybox, stage);\n\n\t\tthis._vertexArray = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\" +\n\t\t\t\"mov v0, va0\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n}\n\nexport = SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderableBase\");\nimport RenderablePoolBase\t\t\t= require(\"awayjs-renderergl/lib/pool/RenderablePoolBase\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/passes/RenderPassBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"trianglesubmesh\";\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePoolBase, subMesh:TriangleSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar subGeometry:TriangleSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.vertexNormals)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\n\t\tif (subGeometry.vertexTangents)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\tif (subGeometry.secondaryUVs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\n\n\t\tif (subGeometry.jointIndices)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\n\n\t\tif (subGeometry.jointWeights)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\n\n\t\tswitch(subGeometry.jointsPerVertex) {\n\t\t\tcase 1:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shaderObject.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:RenderPassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderObjectBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new TriangleSubMeshRenderable(this._pool, <TriangleSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;",
    "import Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _geomVOs:Array<GeometryVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._geomVOs = new Array<GeometryVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar subIdx:number /*uint*/;\n\t\tvar oldGeom:Geometry;\n\t\tvar destGeom:Geometry;\n\t\tvar useSubMaterials:boolean;\n\n\t\toldGeom = destMesh.geometry;\n\t\tdestGeom = destMesh.geometry = new Geometry();\n\t\tsubIdx = destMesh.subMeshes.length;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\n\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\n\t\t\tvar s:number /*uint*/;\n\t\t\tvar data:GeometryVO;\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = false;\n\t\t\tsub.autoDeriveTangents = false;\n\n\t\t\tdata = this._geomVOs[i];\n\t\t\tsub.updateIndices(data.indices);\n\t\t\tsub.updatePositions(data.vertices);\n\t\t\tsub.updateVertexNormals(data.normals);\n\t\t\tsub.updateVertexTangents(data.tangents);\n\t\t\tsub.updateUVs(data.uvs);\n\n\t\t\tdestGeom.addSubGeometry(sub);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\n\t\t\tdestMesh.material = this._geomVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar m:Mesh;\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++) {\n\t\t\t\tm = this._toDispose[i];\n\t\t\t\tm.geometry.dispose();\n\t\t\t\tm.dispose();\n\t\t\t}\n\n\t\t\t//dispose of the original receiver geometry\n\t\t\toldGeom.dispose();\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tif (mesh.geometry) {\n\t\t\tvar subIdx:number /*uint*/;\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\n\t\t\tvar calc:number /*uint*/;\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\n\t\t\t\tvar i:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\t\tvar indexOffset:number /*uint*/;\n\t\t\t\tvar subGeom:TriangleSubGeometry;\n\t\t\t\tvar vo:GeometryVO;\n\t\t\t\tvar vertices:Array<number>;\n\t\t\t\tvar normals:Array<number>;\n\t\t\t\tvar tangents:Array<number>;\n\t\t\t\tvar pd:Array<number>, nd:Array<number>, td:Array<number>, ud:Array<number>;\n\n\t\t\t\tsubGeom = subGeometries[subIdx];\n\t\t\t\tpd = subGeom.positions;\n\t\t\t\tnd = subGeom.vertexNormals;\n\t\t\t\ttd = subGeom.vertexTangents;\n\t\t\t\tud = subGeom.uvs;\n\n\t\t\t\t// Get (or create) a VO for this material\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\n\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t\t// Copy over vertex attributes\n\t\t\t\tvIdx = vertices.length;\n\t\t\t\tnIdx = normals.length;\n\t\t\t\ttIdx = tangents.length;\n\t\t\t\tuIdx = vo.uvs.length;\n\t\t\t\tlen = subGeom.numVertices;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\n\t\t\t\t\t// Position\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t\t// Normal\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t\t// Tangent\n\t\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t\t// UV\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t\t}\n\n\t\t\t\t// Copy over triangle indices\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\t\tiIdx = vo.indices.length;\n\t\t\t\tlen = subGeom.numTriangles;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 1] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 2] + indexOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!this._objectSpace) {\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\t\tlen = vertices.length;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispose)\n\t\t\t\tthis._toDispose.push(mesh);\n\t\t}\n\t}\n\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\n\t{\n\t\tvar data:GeometryVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._geomVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._geomVOs[i].material == material) {\n\t\t\t\t\tdata = this._geomVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._geomVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._geomVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GeometryVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._geomVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GeometryVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGeometryTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGeometryTransform;",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\n\n/**\n * ...\n */\nclass ParticleGeometryHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\n\t\tvar numParticles:number /*uint*/ = geometries.length;\n\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\n\t\tvar numSubGeometries:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar subGeometry:TriangleSubGeometry;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\tsubGeometry = subGeometries[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.subGeometry = subGeometry;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:Array<number>;\n\t\t\t\tvar sourceNormals:Array<number>;\n\t\t\t\tvar sourceTangents:Array<number>;\n\t\t\t\tvar sourceUVs:Array<number>;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tcompact.numTriangles;\n\t\t\t\t\tsourcePositions = compact.positions;\n\t\t\t\t\tsourceNormals = compact.vertexNormals;\n\t\t\t\t\tsourceTangents = compact.vertexTangents;\n\t\t\t\t\tsourceUVs = compact.uvs;\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tsourcePositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tsourceNormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\tsourceTangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tsourceUVs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\tvar sourceIndices:Array<number> /*uint*/ = sourceSubGeometry.indices;\n\t\t\t\ttempLen = sourceSubGeometry.numTriangles;\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\n\t\tparticleGeometry.particles = particles;\n\t\tparticleGeometry.numParticles = numParticles;\n\n\t\tnumParticles = subGeometries.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsubGeometry = subGeometries[i];\n\t\t\tsubGeometry.autoDeriveNormals = false;\n\t\t\tsubGeometry.autoDeriveTangents = false;\n\t\t\tsubGeometry.updateIndices(indicesVector[i]);\n\t\t\tsubGeometry.updatePositions(positionsVector[i]);\n\t\t\tsubGeometry.updateVertexNormals(normalsVector[i]);\n\t\t\tsubGeometry.updateVertexTangents(tangentsVector[i]);\n\t\t\tsubGeometry.updateUVs(uvsVector[i]);\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\n\t\t}\n\n\t\treturn particleGeometry;\n\t}\n}\n\nexport = ParticleGeometryHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Array<number> = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\n\t}\n}\n\nexport = PerspectiveMatrix3D;",
    "import TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/compilation/ShaderRegisterElement\");\n\nclass ShaderCompilerHelper\n{\n\t/**\n\t * A helper method that generates standard code for sampling from a texture using the normal uv coordinates.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param sharedReg The shared register object for the shader.\n\t * @param inputReg The texture stream register.\n\t * @param texture The texture which will be assigned to the given slot.\n\t * @param uvReg An optional uv register if coordinates different from the primary uv coordinates are to be used.\n\t * @param forceWrap If true, texture wrapping is enabled regardless of the material setting.\n\t * @return The fragment code that performs the sampling.\n\t *\n\t * @protected\n\t */\n\tpublic static getTex2DSampleCode(targetReg:ShaderRegisterElement, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement, texture:TextureBase, smooth:boolean, repeat:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement = null, forceWrap:string = null):string\n\t{\n\t\tvar wrap:string = forceWrap || (repeat? \"wrap\":\"clamp\");\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar filter:string = (smooth)? (mipmaps? \"linear,miplinear\" : \"linear\") : (mipmaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tif (uvReg == null)\n\t\t\tuvReg = sharedReg.uvVarying;\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t}\n\n\n\t/**\n\t * A helper method that generates standard code for sampling from a cube texture.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param inputReg The texture stream register.\n\t * @param texture The cube map which will be assigned to the given slot.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t *\n\t * @protected\n\t */\n\tpublic static getTexCubeSampleCode(targetReg:ShaderRegisterElement, inputReg:ShaderRegisterElement, texture:TextureBase, smooth:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar filter:string = (smooth)? (mipmaps? \"linear,miplinear\" : \"linear\") : (mipmaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic static getFormatStringForTexture(texture:TextureBase):string\n\t{\n\t\tswitch (texture.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = ShaderCompilerHelper;"
  ],
  "sourceRoot": ""
}