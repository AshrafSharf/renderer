{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticleData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/base/ParticleGeometry.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/pick/JSPickingCollider.ts",
    "awayjs-renderergl/lib/pick/PickingColliderBase.ts",
    "awayjs-renderergl/lib/pick/ShaderPicker.ts",
    "awayjs-renderergl/lib/render/BasicMaterialRender.ts",
    "awayjs-renderergl/lib/render/DepthRender.ts",
    "awayjs-renderergl/lib/render/DistanceRender.ts",
    "awayjs-renderergl/lib/render/RenderBase.ts",
    "awayjs-renderergl/lib/render/RenderPassBase.ts",
    "awayjs-renderergl/lib/render/RenderPool.ts",
    "awayjs-renderergl/lib/render/SkyboxRender.ts",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/render/passes/PassBase.ts",
    "awayjs-renderergl/lib/renderables/BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable.ts",
    "awayjs-renderergl/lib/renderables/RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/RenderablePool.ts",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable.ts",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts",
    "awayjs-renderergl/lib/vos/Sampler2DVO.ts",
    "awayjs-renderergl/lib/vos/SamplerCubeVO.ts",
    "awayjs-renderergl/lib/vos/SamplerVOBase.ts",
    "awayjs-renderergl/lib/vos/Single2DTextureVO.ts",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO.ts",
    "awayjs-renderergl/lib/vos/TextureVOBase.ts",
    "awayjs-renderergl/lib/vos/TextureVOPool.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "RenderablePool",
    "RTTBufferManager",
    "DefaultRenderer",
    "_super",
    "stage",
    "_skyboxProjection",
    "_pRenderablePool",
    "_pStage",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "Object",
    "defineProperty",
    "get",
    "_antiAlias",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "entityCollector",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "dirLights",
    "directionalLights",
    "pointLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "skyBox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getItem",
    "camera",
    "updateSkyboxProjection",
    "getRenderPool",
    "renderableOwner",
    "renderOwner",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/data/BitmapImage2D",
    "undefined",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/renderables/RenderablePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "DepthRender",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "awayjs-renderergl/lib/render/DepthRender",
    "DistanceRender",
    "awayjs-renderergl/lib/render/DistanceRender",
    "Event",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "getMainInputTexture",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "Array",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setVertexBufferAt",
    "FLOAT_2",
    "renderToScreenVertexBuffer",
    "setTextureAt",
    "setProgram",
    "getProgram",
    "activate",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawTriangles",
    "deactivate",
    "removeEventListener",
    "awayjs-core/lib/events/Event",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RenderableMergeSort",
    "RendererEvent",
    "EntityCollector",
    "DefaultMaterialManager",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "_numUsedStreams",
    "_numUsedTextures",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumTriangles",
    "_disableColor",
    "_renderBlended",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_iCreateEntityCollector",
    "_viewportDirty",
    "_scissorDirty",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "_applyCollector",
    "setRenderTarget",
    "LESS",
    "head",
    "_pOpaqueRenderableHead",
    "first",
    "LESS_EQUAL",
    "_pBlendedRenderableHead",
    "item",
    "entityHead",
    "_pCamera",
    "_iEntryPoint",
    "_pCameraForward",
    "transform",
    "forwardVector",
    "entity",
    "_applyRenderer",
    "next",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderable2",
    "_renderOwner",
    "alphaThreshold",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "_iApplyRenderableOwner",
    "applyRenderable",
    "getDefaultMaterial",
    "renderId",
    "renderOrderId",
    "cascaded",
    "sourceEntity",
    "position",
    "subtract",
    "zIndex",
    "zOffset",
    "dotProduct",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "numTriangles",
    "overflow",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "awayjs-display/lib/traverse/EntityCollector",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "assetType",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "node",
    "push",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "id",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "mesh",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableSubGeometry",
    "sourceSubGeometry",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationSubGeometry",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationSubGeometries",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "_timeNode",
    "_iProcessAnimationSetting",
    "mode",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "profile",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationSubGeometry",
    "subMesh",
    "parentMesh",
    "animationSubGeometry",
    "subGeometry",
    "_iGenerateAnimationSubGeometries",
    "initParticleFunc",
    "geometry",
    "j",
    "k",
    "newAnimationSubGeometry",
    "localNode",
    "subMeshes",
    "shareAnimationGeometry",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/AnimationSubGeometry",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorSubGeometry",
    "getAnimatorSubGeometry",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "TriangleSubGeometry",
    "SubGeometryEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedSubGeometry",
    "_morphedSubGeometryDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "numCondensedJoints",
    "_condensedMatrices",
    "usesCPU",
    "morphSubGeometry",
    "activateBuffer",
    "getVertexData",
    "JOINT_INDEX_DATA",
    "getVertexOffset",
    "JOINT_INDEX_FORMAT",
    "JOINT_WEIGHT_DATA",
    "JOINT_WEIGHT_FORMAT",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetSubGeometry",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "INDICES_UPDATED",
    "VERTICES_UPDATED",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "vertexNormals",
    "sourceTangents",
    "vertexTangents",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "updatePositions",
    "updateVertexNormals",
    "updateVertexTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "updateIndices",
    "morphGeometry",
    "dataType",
    "UV_DATA",
    "updateUVs",
    "uvs",
    "SECONDARY_UV_DATA",
    "secondaryUVs",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-core/lib/events/SubGeometryEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexDataPool",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGeometry",
    "nextGeometry",
    "blendWeight",
    "_iInvalidateRenderableGeometries",
    "setNullPose",
    "subGeom",
    "subGeometries",
    "_iIndex",
    "getIndexData",
    "POSITION_DATA",
    "getOffset",
    "POSITION_FORMAT",
    "NORMAL_DATA",
    "NORMAL_FORMAT",
    "awayjs-stagegl/lib/pool/VertexDataPool",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticleData",
    "ParticleData",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "sceneTransform",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "setPositions",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGeometry",
    "_nextGeometry",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/base/ParticleGeometry",
    "Geometry",
    "ParticleGeometry",
    "apply",
    "arguments",
    "awayjs-core/lib/data/Geometry",
    "message",
    "awayjs-core/lib/errors/Error",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "pAddTask",
    "_textureWidth",
    "_textureHeight",
    "mainTarget",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "ContextGLTextureFormat",
    "Filter3DTaskBase",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "pUpdateTextures",
    "_program3D",
    "pInvalidateProgram",
    "pUpdateProgram",
    "pGetVertexCode",
    "pGetFragmentCode",
    "createTexture",
    "BGRA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/pick/JSPickingCollider",
    "PickingColliderBase",
    "JSPickingCollider",
    "renderablePool",
    "findClosestCollision",
    "_findClosestCollision",
    "_pTestRenderableCollision",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "i0",
    "i1",
    "i2",
    "rx",
    "ry",
    "rz",
    "coeff",
    "p0x",
    "p0y",
    "p0z",
    "p1x",
    "p1y",
    "p1z",
    "p2x",
    "p2y",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "indexData",
    "collisionTriangleIndex",
    "bothSides",
    "positionData",
    "positionStride",
    "dataPerVertex",
    "positionOffset",
    "uvData",
    "uvStride",
    "uvOffset",
    "numIndices",
    "rayDirection",
    "rayPosition",
    "rayEntryDistance",
    "localPosition",
    "localNormal",
    "uv",
    "_pGetCollisionUV",
    "awayjs-renderergl/lib/pick/PickingColliderBase",
    "_renderablePool",
    "_pGetCollisionNormal",
    "triangleIndex",
    "normal",
    "p0",
    "side0",
    "side1",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "setLocalRay",
    "localDirection",
    "testBillboardCollision",
    "billboard",
    "localRayPosition",
    "localRayDirection",
    "testMeshCollision",
    "findClosest",
    "awayjs-renderergl/lib/pick/ShaderPicker",
    "Debug",
    "Matrix3DUtils",
    "ContextGLTriangleFace",
    "ShaderPicker",
    "shaderPickingDetails",
    "_onlyMouseEnabled",
    "_interactives",
    "_localHitPosition",
    "_hitUV",
    "_localHitNormal",
    "_rayPos",
    "_rayDir",
    "_shaderPickingDetails",
    "_id",
    "_viewportData",
    "_boundOffsetScale",
    "getViewCollision",
    "view",
    "collector",
    "iEntityCollector",
    "renderer",
    "_context",
    "_projX",
    "_projY",
    "_potentialFound",
    "_blendedRenderableHead",
    "_opaqueRenderableHead",
    "_bitmapImage2D",
    "_hitColor",
    "getPixel",
    "_hitRenderable",
    "_hitEntity",
    "_iIsMouseEnabled",
    "_collisionVO",
    "_iPickingCollisionVO",
    "getHitDetails",
    "_faceIndex",
    "getSceneCollision",
    "direction",
    "scene",
    "MOUSE_SCISSOR_RECT",
    "_interactiveId",
    "_objectProgram",
    "initObjectProgram",
    "CALCULATION_MATRIX",
    "setCulling",
    "NONE",
    "BACK",
    "projection",
    "coordinateSystem",
    "setProgramConstantsFromMatrix",
    "getIndexBuffer",
    "updateRay",
    "getRay",
    "vertexCode",
    "fragmentCode",
    "throwPIR",
    "initTriangleProgram",
    "_triangleProgram",
    "getApproximatePosition",
    "getPreciseDetails",
    "bounds",
    "getBox",
    "col",
    "scX",
    "scY",
    "scZ",
    "offsX",
    "offsY",
    "offsZ",
    "localViewProjection",
    "depth",
    "setScissorRectangle",
    "t1",
    "t2",
    "t3",
    "v0x",
    "v0y",
    "v0z",
    "v1x",
    "v1y",
    "v1z",
    "v2x",
    "v2y",
    "v2z",
    "ni1",
    "ni2",
    "ni3",
    "n1",
    "n2",
    "n3",
    "nLength",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "invDenom",
    "ui1",
    "ui2",
    "ui3",
    "normals",
    "normalStride",
    "normalOffset",
    "getPrecisePosition",
    "invSceneTransform",
    "px",
    "py",
    "pz",
    "RAW_DATA_CONTAINER",
    "copyRawDataTo",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/utils/Debug",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/render/BasicMaterialRender",
    "BlendMode",
    "BasicMaterialPass",
    "RenderBase",
    "BasicMaterialRender",
    "pool",
    "material",
    "renderableClass",
    "_material",
    "_pAddPass",
    "_pass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "NORMAL",
    "alphaBlending",
    "colorTransform",
    "preserveAlpha",
    "setBlendMode",
    "LAYER",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-renderergl/lib/render/RenderBase",
    "awayjs-renderergl/lib/render/passes/BasicMaterialPass",
    "RenderPassBase",
    "ShaderBase",
    "_shader",
    "_iIncludeDependencies",
    "projectionDependencies",
    "uvDependencies",
    "_iInitConstantData",
    "_fragmentConstantsIndex",
    "_iGetFragmentCode",
    "registerCache",
    "sharedRegisters",
    "targetReg",
    "dataReg1",
    "getFreeFragmentConstant",
    "dataReg2",
    "getFreeFragmentVectorTemp",
    "projectionFragment",
    "texture",
    "_iInitRegisters",
    "albedo",
    "uvVarying",
    "cutOffReg",
    "removeFragmentTempUsage",
    "awayjs-renderergl/lib/render/RenderPassBase",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "viewDirDependencies",
    "globalPosDependencies",
    "viewDirVarying",
    "far",
    "awayjs-renderergl/lib/render/IRenderClass",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_passes",
    "_pool",
    "_renderableClass",
    "_onPassChangeDelegate",
    "onPassChange",
    "_updateAnimation",
    "_renderOrderId",
    "useMipmapping",
    "mipmap",
    "useSmoothTextures",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "useBothSides",
    "repeatTextures",
    "repeat",
    "animateUVs",
    "getTextureVO",
    "_pClearPasses",
    "disposeItem",
    "invalidateRender",
    "invalidatePasses",
    "invalidatePass",
    "invalidateAnimation",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "usesAnimation",
    "invalidateProgram",
    "_pRemovePass",
    "CHANGE",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/materials/MaterialBase",
    "invalidateShader",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "_iGetVertexCode",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "awayjs-renderergl/lib/render/RenderPool",
    "BasicMaterial",
    "Skybox",
    "SkyboxRender",
    "RenderPool",
    "renderClass",
    "_renderClass",
    "_iAddRender",
    "getClass",
    "_iRemoveRender",
    "registerClass",
    "assetClass",
    "_classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-renderergl/lib/render/SkyboxRender",
    "skybox",
    "_skybox",
    "_cubeTexture",
    "cubeMap",
    "usesLocalPosFragment",
    "localPositionVarying",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "getFreeFragmentSingleTemp",
    "colorBufferIndex",
    "colorVarying",
    "diffuseInputReg",
    "awayjs-renderergl/lib/render/passes/PassBase",
    "awayjs-renderergl/lib/render/passes/ILightingPass",
    "awayjs-renderergl/lib/render/passes/IPass",
    "_preserveAlpha",
    "_render",
    "awayjs-renderergl/lib/renderables/BillboardRenderable",
    "Billboard",
    "RenderableBase",
    "BillboardRenderable",
    "_billboard",
    "_pGetSubGeometry",
    "billboardRect",
    "_materialGeometry",
    "_pVertexDataDirty",
    "TANGENT_DATA",
    "globalPositionVertex",
    "viewMatrixReg",
    "viewMatrixIndex",
    "sceneMatrixIndex",
    "matrix3D",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-renderergl/lib/renderables/RenderableBase",
    "awayjs-renderergl/lib/renderables/CurveSubMeshRenderable",
    "CurveSubMesh",
    "CurveSubGeometry",
    "CurveSubMeshRenderable",
    "level",
    "indexOffset",
    "_constants",
    "curves",
    "CURVE_DATA",
    "sd",
    "standardDerivatives",
    "out",
    "curve",
    "curvex",
    "curvey",
    "curvez",
    "free",
    "free1",
    "free2",
    "d2",
    "fixa",
    "fixb",
    "_aa",
    "_1",
    "join",
    "CURVE_FORMAT",
    "_pGetOverflowRenderable",
    "_level",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-renderergl/lib/renderables/IRenderableClass",
    "awayjs-renderergl/lib/renderables/LineSegmentRenderable",
    "LineSubGeometry",
    "LineSegment",
    "LineSegmentRenderable",
    "lineSegment",
    "_thickness",
    "_lineSegment",
    "_calcMatrix",
    "_lineGeometry",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "startPostion",
    "end",
    "endPosition",
    "startPositions",
    "endPositions",
    "thickness",
    "updateThickness",
    "colorDependencies",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "THICKNESS_FORMAT",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-renderergl/lib/renderables/LineSubMeshRenderable",
    "LineSubMesh",
    "LineSubMeshRenderable",
    "startColors",
    "awayjs-display/lib/base/LineSubMesh",
    "SubGeometryBase",
    "RenderableOwnerEvent",
    "IndexDataPool",
    "_geometryDirty",
    "_indexDataDirty",
    "_vertexData",
    "_vertexOffset",
    "_onIndicesUpdatedDelegate",
    "_onIndicesUpdated",
    "_onVerticesUpdatedDelegate",
    "_onVerticesUpdated",
    "_onRenderOwnerUpdatedDelegate",
    "_onRenderOwnerUpdated",
    "_indexOffset",
    "RENDER_OWNER_UPDATED",
    "_updateIndexData",
    "_overflow",
    "_numTriangles",
    "_indexData",
    "_updateVertexData",
    "_concatenateArrays",
    "VERTEX_DATA",
    "invalidateGeometry",
    "invalidateIndexData",
    "invalidateVertexData",
    "_iFillIndexData",
    "_updateGeometry",
    "_subGeometry",
    "concatenateArrays",
    "awayjs-core/lib/data/SubGeometryBase",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-stagegl/lib/pool/IndexDataPool",
    "SkyboxRenderable",
    "TriangleSubMeshRenderable",
    "_objectPools",
    "_iAddRenderable",
    "_iRemoveRenderable",
    "awayjs-renderergl/lib/renderables/SkyboxRenderable",
    "awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable",
    "_vertexArray",
    "_geometry",
    "TriangleSubMesh",
    "FLOAT_1",
    "awayjs-display/lib/base/TriangleSubMesh",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "getImageObject",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "ArgumentError",
    "CompilerBase",
    "TextureVOPool",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "_textureVOPool",
    "_updateProgram",
    "_programData",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvBufferIndex",
    "uvTransformIndex",
    "secondaryUVBufferIndex",
    "normalBufferIndex",
    "tangentBufferIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "UV_FORMAT",
    "SECONDARY_UV_FORMAT",
    "TANGENT_FORMAT",
    "COLOR_FORMAT",
    "uvTransform",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "postAnimationFragmentCode",
    "usages",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/vos/TextureVOPool",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pRenderableClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "fragmentOutputRegister",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_uvSource",
    "_uvTarget",
    "compileGlobalPositionCode",
    "compileLocalPositionCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "uvAttributeReg",
    "varying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Mesh",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToMeshes",
    "meshes",
    "_toDispose",
    "_geomVOs",
    "destMesh",
    "subIdx",
    "oldGeom",
    "destGeom",
    "useSubMaterials",
    "sub",
    "vertices",
    "tangents",
    "addSubGeometry",
    "m",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "pd",
    "nd",
    "td",
    "ud",
    "getSubGeomData",
    "transformVectors",
    "deltaTransformVectors",
    "GeometryVO",
    "object",
    "child",
    "numChildren",
    "getChildAt",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-renderergl/lib/tools/data/ParticleGeometryTransform",
    "ParticleGeometryTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGeometryHelper",
    "ParticleGeometryHelper",
    "generateGeometry",
    "geometries",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "sourceSubGeometries",
    "numSubGeometries",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGeometryTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "particleGeometry",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "copyRawDataFrom",
    "awayjs-renderergl/lib/vos/ITextureVOClass",
    "awayjs-renderergl/lib/vos/Sampler2DVO",
    "SamplerVOBase",
    "Sampler2DVO",
    "initProperties",
    "sampler2D",
    "samplerReg",
    "samplerIndex",
    "imageRect",
    "fragmentReg",
    "fragmentIndex",
    "getFragmentCode",
    "inputReg",
    "wrap",
    "getFormatString",
    "image2D",
    "offsetX",
    "offsetY",
    "awayjs-renderergl/lib/vos/SamplerVOBase",
    "awayjs-renderergl/lib/vos/SamplerCubeVO",
    "SamplerCubeVO",
    "samplerCube",
    "imageCube",
    "bitmap",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-renderergl/lib/vos/Single2DTextureVO",
    "Single2DTexture",
    "TextureVOBase",
    "Single2DTextureVO",
    "single2DTexture",
    "_single2DTexture",
    "_sampler2DVO",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-renderergl/lib/vos/TextureVOBase",
    "awayjs-renderergl/lib/vos/SingleCubeTextureVO",
    "SingleCubeTexture",
    "SingleCubeTextureVO",
    "singleCubeTexture",
    "_singleCubeTexture",
    "_samplerCubeVO",
    "includeInput",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_texture",
    "invalidate",
    "invalid",
    "_iAddTextureVO",
    "_iRemoveTextureVO",
    "disposePool",
    "getPool",
    "_pools",
    "textureVOClass",
    "classPool"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage);\n\t\t\n\t\tif (stage)\n\t\t\tthis._shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tsuper.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar renderable:RenderableBase = this._pRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner);\n\n\t\tvar pass:IPass = render.passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/DepthRender\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DepthRender);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DistanceRender\t\t\t\t= require(\"awayjs-renderergl/lib/render/DistanceRender\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage);\n\t\t\n\t\tthis._pRenderablePool = new RenderablePool(this._pStage, DistanceRender);\n\t\t\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid) {\n\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\t}\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\n\t\t\t// TODO: check logic:\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\n\n\t\t\tvar s:any = this._filters[i];\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\n\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\n\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid) {\n\n\t\t\tthis.updateFilterSizes();\n\n\t\t}\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\t// TODO: check logic\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._filterSizesInvalid) {\n\t\t\tthis.updateFilterSizes();\n\t\t}\n\n\t\tif (this._filterTasksInvalid) {\n\t\t\tthis.updateFilterTasks(stage);\n\t\t}\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._filters[i].update(stage, camera);\n\t\t}\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer\n{\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pRenderablePool:RenderablePool;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumTriangles:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._pNumTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage();\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic activatePass(renderable:RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderable\n\t\trenderable._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderable:RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderable._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic get renderablePool():RenderablePool\n\t{\n\t\treturn this._pRenderablePool;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderablePool.dispose();\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\tprivate _applyCollector(entityCollector:CollectorBase)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumTriangles = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._applyRenderer(this);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:CollectorBase, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\t\tthis._applyCollector(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(entityCollector);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:CollectorBase)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderable2:RenderableBase;\n\t//\tvar render:RenderBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderable) {\n\t//\t\trenderable2 = renderable;\n\t//\t\trender = renderable.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderable, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderable2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderable2 = renderable2.next;\n\t//\n\t//\t\t} while (renderable2 && renderable2.render == render && !renderable2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderable, pass);\n\t//\n\t//\t\trenderable = renderable2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tpublic drawRenderables(renderable:RenderableBase, entityCollector:CollectorBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderable2:RenderableBase;\n\t\tvar render:RenderBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\t\tvar camera:Camera = entityCollector.camera;\n\n\n\t\twhile (renderable) {\n\t\t\trender = renderable.render;\n\t\t\tpasses = render.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && render._renderOwner.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.render == render);\n\t\t\t} else {\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderable2 = renderable;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderable, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\trenderable2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t\t} while (renderable2 && renderable2.render == render);\n\n\t\t\t\t\tthis.deactivatePass(renderable, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\tpublic _iApplyRenderableOwner(renderableOwner:IRenderableOwner)\n\t{\n\t\tthis.applyRenderable(this._pRenderablePool.getItem(renderableOwner));\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @protected\n\t */\n\tpublic applyRenderable(renderable:RenderableBase)\n\t{\n\t\t//set local vars for faster referencing\n\t\tvar render:RenderBase = this._pRenderablePool.getRenderPool(renderable.renderableOwner).getItem(renderable.renderOwner || DefaultMaterialManager.getDefaultMaterial(renderable.renderableOwner));\n\t\t\n\t\trenderable.render = render;\n\t\trenderable.renderId = render.renderId;\n\t\trenderable.renderOrderId = render.renderOrderId;\n\n\t\trenderable.cascaded = false;\n\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (render.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumTriangles += renderable.numTriangles;\n\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\n\t\tif (renderable.overflow)\n\t\t\tthis.applyRenderable(renderable.overflow);\n\t}\n}\n\nexport = RendererBase;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;",
    "import SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\n\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationSubGeometries:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animationSubGeometries[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationSubGeometry(subMesh:ISubMesh)\n\t{\n\t\tvar mesh:Mesh = subMesh.parentMesh;\n\t\tvar animationSubGeometry:AnimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\n\t\tif (animationSubGeometry)\n\t\t\treturn animationSubGeometry;\n\n\t\tthis._iGenerateAnimationSubGeometries(mesh);\n\n\t\treturn (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationSubGeometries(mesh:Mesh)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar geometry:ParticleGeometry = <ParticleGeometry> mesh.geometry;\n\n\t\tif (!geometry)\n\t\t\tthrow(new Error(\"Particle animation can only be performed on a ParticleGeometry object\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationSubGeometry:AnimationSubGeometry;\n\t\tvar newAnimationSubGeometry:boolean = false;\n\t\tvar subGeometry:SubGeometryBase;\n\t\tvar subMesh:ISubMesh;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < mesh.subMeshes.length; i++) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\t\t\tsubGeometry = subMesh.subGeometry;\n\t\t\tif (mesh.shareAnimationGeometry) {\n\t\t\t\tanimationSubGeometry = this._animationSubGeometries[subGeometry.id];\n\n\t\t\t\tif (animationSubGeometry)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationSubGeometry = new AnimationSubGeometry();\n\n\t\t\tif (mesh.shareAnimationGeometry)\n\t\t\t\tthis._animationSubGeometries[subGeometry.id] = animationSubGeometry;\n\t\t\telse\n\t\t\t\tthis._animationSubGeometries[subMesh.id] = animationSubGeometry;\n\n\t\t\tnewAnimationSubGeometry = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationSubGeometry)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = geometry.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = geometry.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationSubGeometry\n\t\t\t\tfor (k = 0; k < mesh.subMeshes.length; k++) {\n\t\t\t\t\tsubMesh = mesh.subMeshes[k];\n\t\t\t\t\tif (subMesh.subGeometry == particle.subGeometry) {\n\t\t\t\t\t\tanimationSubGeometry = (mesh.shareAnimationGeometry)? this._animationSubGeometries[subMesh.subGeometry.id] : this._animationSubGeometries[subMesh.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationSubGeometry.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationSubGeometry.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationSubGeometry.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationSubGeometry.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent mesh is particle geometry\n *\n * @see away.base.ParticleGeometry\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar subMesh:ISubMesh = (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!subMesh)\n\t\t\tthrow(new Error(\"Must be subMesh\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationSubGeometry:AnimationSubGeometry = this._particleAnimationSet.getAnimationSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationSubGeometry, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this.getAnimatorSubGeometry(subMesh);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorSubGeometry, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationSubGeometry> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorSubGeometry(subMesh:ISubMesh):AnimationSubGeometry\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar subGeometry:SubGeometryBase = subMesh.subGeometry;\n\t\tvar animatorSubGeometry:AnimationSubGeometry = this._animatorSubGeometries[subGeometry.id] = new AnimationSubGeometry();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorSubGeometry.createVertexData(subGeometry.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator subGeometry\n\t\tanimatorSubGeometry.animationParticles = this._particleAnimationSet.getAnimationSubGeometry(subMesh).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport SubGeometryEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Array<number>;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedSubGeometry:Object = new Object();\n\tprivate _morphedSubGeometryDirty:Object = new Object();\n\tprivate _condensedMatrices:Array<number>;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:SubGeometryEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Array<number>\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned mesh data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Array<number>(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:SubGeometryEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:SubGeometryEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> (<TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh).subGeometry;\n\n\t\tsubGeometry.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(subGeometry.condensedIndexLookUp, subGeometry.numCondensedJoints);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, subGeometry.numCondensedJoints*3);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedSubGeometryDirty[subGeometry.id])\n\t\t\t\t\tthis.morphSubGeometry(<TriangleSubMeshRenderable> renderable, subGeometry);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tstage.activateBuffer(vertexStreamOffset, renderable.getVertexData(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_INDEX_DATA), renderable.JOINT_INDEX_FORMAT);\n\t\tstage.activateBuffer(vertexStreamOffset + 1, renderable.getVertexData(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.getVertexOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA), renderable.JOINT_WEIGHT_FORMAT);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedSubGeometryDirty)\n\t\t\t\tthis._morphedSubGeometryDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number> /*uint*/, numJoints:number /*uint*/)\n\t{\n\t\tvar i:number /*uint*/ = 0, j:number /*uint*/ = 0;\n\t\tvar len:number /*uint*/;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Array<number>();\n\n\t\tdo {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*4;\n\t\t\tlen = srcIndex + 12;\n\t\t\t// copy into condensed\n\t\t\twhile (srcIndex < len)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t} while (++i < numJoints);\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Array<number>;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceSubGeometry;\n\n\t\tvar targetSubGeometry:TriangleSubGeometry;\n\n\t\tif (!(targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id] = sourceSubGeometry.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetSubGeometry.autoDeriveNormals = false;\n\t\t\ttargetSubGeometry.autoDeriveTangents = false;\n\t\t\ttargetSubGeometry.autoDeriveUVs = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdateDelegate);\n\t\t\tsourceSubGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetSubGeometry;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry)\n\t{\n\t\tthis._morphedSubGeometryDirty[sourceSubGeometry.id] = false;\n\n\t\tvar sourcePositions:Array<number> = sourceSubGeometry.positions;\n\t\tvar sourceNormals:Array<number> = sourceSubGeometry.vertexNormals;\n\t\tvar sourceTangents:Array<number> = sourceSubGeometry.vertexTangents;\n\n\t\tvar jointIndices:Array<number> = sourceSubGeometry.jointIndices;\n\t\tvar jointWeights:Array<number> = sourceSubGeometry.jointWeights;\n\n\t\tvar targetSubGeometry = this._morphedSubGeometry[sourceSubGeometry.id];\n\n\t\tvar targetPositions:Array<number> = targetSubGeometry.positions;\n\t\tvar targetNormals:Array<number> = targetSubGeometry.vertexNormals;\n\t\tvar targetTangents:Array<number> = targetSubGeometry.vertexTangents;\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar len:number /*int*/ = sourcePositions.length;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < len) {\n\t\t\tvertX = sourcePositions[index];\n\t\t\tvertY = sourcePositions[index + 1];\n\t\t\tvertZ = sourcePositions[index + 2];\n\t\t\tnormX = sourceNormals[index];\n\t\t\tnormY = sourceNormals[index + 1];\n\t\t\tnormZ = sourceNormals[index + 2];\n\t\t\ttangX = sourceTangents[index];\n\t\t\ttangY = sourceTangents[index + 1];\n\t\t\ttangZ = sourceTangents[index + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[index] = vx;\n\t\t\ttargetPositions[index + 1] = vy;\n\t\t\ttargetPositions[index + 2] = vz;\n\t\t\ttargetNormals[index] = nx;\n\t\t\ttargetNormals[index + 1] = ny;\n\t\t\ttargetNormals[index + 2] = nz;\n\t\t\ttargetTangents[index] = tx;\n\t\t\ttargetTangents[index + 1] = ty;\n\t\t\ttargetTangents[index + 2] = tz;\n\n\t\t\tindex += 3;\n\t\t}\n\n\t\ttargetSubGeometry.updatePositions(targetPositions);\n\t\ttargetSubGeometry.updateVertexNormals(targetNormals);\n\t\ttargetSubGeometry.updateVertexTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\n\t\t(<TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id]).updateIndices(subGeometry.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:SubGeometryEvent)\n\t{\n\t\tvar subGeometry:TriangleSubGeometry = <TriangleSubGeometry> event.target;\n\t\tvar morphGeometry:TriangleSubGeometry = <TriangleSubGeometry> this._morphedSubGeometry[subGeometry.id];\n\n\t\tswitch(event.dataType) {\n\t\t\tcase TriangleSubGeometry.UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.uvs);\n\t\t\tcase TriangleSubGeometry.SECONDARY_UV_DATA:\n\t\t\t\tmorphGeometry.updateUVs(subGeometry.secondaryUVs);\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\n\nimport TriangleSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport VertexDataPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to mesh-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Geometry> = new Array<Geometry>();\n\tprivate _weights:Array<number> = Array<number>(1, 0, 0, 0);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGeometry) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGeometry) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGeometry;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate meshes\n\t\t\tvar mesh:Mesh;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmesh = this._pOwners[i];\n\t\t\t\tmesh._iInvalidateRenderableGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, renderable, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\t\t// this type of animation can only be SubMesh\n\t\tvar subMesh:TriangleSubMesh = <TriangleSubMesh> (<TriangleSubMeshRenderable> renderable).subMesh;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tfor (; i < len; ++i) {\n\t\t\tsubGeom = this._poses[i].subGeometries[subMesh._iIndex] || subMesh.subGeometry;\n\n\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.POSITION_DATA), subGeom.getOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, VertexDataPool.getItem(subGeom, renderable.getIndexData(), TriangleSubGeometry.NORMAL_DATA), subGeom.getOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, renderable:RenderableBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\tstage.activateBuffer(vertexStreamOffset++, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleSubGeometry> this._poses[0].subGeometries[renderable.subMesh._iIndex] || sourceSubGeometry;\n\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Array<number> = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationSubGeometry\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationSubGeometry.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:string)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationSubGeometry;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "import TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic subGeometry:TriangleSubGeometry;\n}\n\nexport = ParticleData",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Array<number>;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Geometry> = new Array<Geometry>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Geometry>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for mesh movement.\n\t */\n\tpublic addFrame(geometry:Geometry, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationSubGeometry.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationSubGeometry.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationSubGeometry);\n\n\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationSubGeometry.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationSubGeometry.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationSubGeometry:AnimationSubGeometry)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationSubGeometry.animationParticles;\n\t\tvar vertexData:Array<number> = animationSubGeometry.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationSubGeometry.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationSubGeometry.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationSubGeometry.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationSubGeometry\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationSubGeometry\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:RenderableBase, animationSubGeometry:AnimationSubGeometry, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationSubGeometry._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationSubGeometry);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationSubGeometry.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Geometry>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGeometry:Geometry;\n\tprivate _nextGeometry:Geometry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGeometry;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGeometry():Geometry\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGeometry;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGeometry = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGeometry = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGeometry = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\n\n/**\n * @class away.base.ParticleGeometry\n */\nclass ParticleGeometry extends Geometry\n{\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n}\n\nexport = ParticleGeometry;",
    "import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Event\t\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends Event\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic pAddTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:ITexture;\n\n\tprivate _scaledTextureWidth:number = -1;\n\tprivate _scaledTextureHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():ITexture\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:ITexture)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.pUpdateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic pInvalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic pUpdateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic pGetVertexCode():string\n\t{\n\t\t// TODO: imeplement AGAL <> GLSL\n\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic pGetFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic pUpdateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = stage.context.createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.pUpdateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport PickingColliderBase\t\t\t\t= require(\"awayjs-renderergl/lib/pick/PickingColliderBase\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider extends PickingColliderBase implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(renderablePool:RenderablePool, findClosestCollision:boolean = false)\n\t{\n\t\tsuper(renderablePool);\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indexData:Array<number> = renderable.getIndexData().data;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = (<MaterialBase> renderable.renderOwner).bothSides;\n\n\t\tvar positionData:Array<number> = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = renderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar uvData:Array<number> = renderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = renderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = renderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\t\tvar numIndices:number = indexData.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = positionOffset + indexData[ index ]*positionStride;\n\t\t\ti1 = positionOffset + indexData[ (index + 1) ]*positionStride;\n\t\t\ti2 = positionOffset + indexData[ (index + 2) ]*positionStride;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positionData[ i0 ];\n\t\t\tp0y = positionData[ (i0 + 1) ];\n\t\t\tp0z = positionData[ (i0 + 2) ];\n\t\t\tp1x = positionData[ i1 ];\n\t\t\tp1y = positionData[ (i1 + 1) ];\n\t\t\tp1z = positionData[ (i1 + 2) ];\n\t\t\tp2x = positionData[ i2 ];\n\t\t\tp2y = positionData[ (i2 + 1) ];\n\t\t\tp2z = positionData[ (i2 + 2) ];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*this.rayDirection.x + ny* +this.rayDirection.y + nz*this.rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*this.rayPosition.x + ny*this.rayPosition.y + nz*this.rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = this.rayPosition.x + t*this.rayDirection.x;\n\t\t\t\tcy = this.rayPosition.y + t*this.rayDirection.y;\n\t\t\t\tcz = this.rayPosition.z + t*this.rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/( Q1Q1*Q2Q2 - Q1Q2*Q1Q2 );\n\t\t\t\tv = coeff*( Q2Q2*RQ1 - Q1Q2*RQ2 );\n\t\t\t\tw = coeff*( -Q1Q2*RQ1 + Q1Q1*RQ2 );\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._pGetCollisionUV(indexData, uvData, index, v, w, u, uvOffset, uvStride);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport RendererBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\n\nimport BillboardRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/BillboardRenderable\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport TriangleSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * An abstract base class for all picking collider classes. It should not be instantiated directly.\n *\n * @class away.pick.PickingColliderBase\n */\nclass PickingColliderBase\n{\n\tprivate _renderablePool:RenderablePool;\n\n\tpublic rayPosition:Vector3D;\n\tpublic rayDirection:Vector3D;\n\n\tconstructor(renderablePool:RenderablePool)\n\t{\n\t\t//TODO\n\t\tthis._renderablePool = renderablePool;\n\t}\n\n\tpublic _pGetCollisionNormal(indexData:Array<number> /*uint*/, vertexData:Array<number>, triangleIndex:number):Vector3D // PROTECTED\n\t{\n\t\tvar normal:Vector3D = new Vector3D();\n\t\tvar i0:number = indexData[ triangleIndex ]*3;\n\t\tvar i1:number = indexData[ triangleIndex + 1 ]*3;\n\t\tvar i2:number = indexData[ triangleIndex + 2 ]*3;\n\t\tvar p0:Vector3D = new Vector3D(vertexData[ i0 ], vertexData[ i0 + 1 ], vertexData[ i0 + 2 ]);\n\t\tvar p1:Vector3D = new Vector3D(vertexData[ i1 ], vertexData[ i1 + 1 ], vertexData[ i1 + 2 ]);\n\t\tvar p2:Vector3D = new Vector3D(vertexData[ i2 ], vertexData[ i2 + 1 ], vertexData[ i2 + 2 ]);\n\t\tvar side0:Vector3D = p1.subtract(p0);\n\t\tvar side1:Vector3D = p2.subtract(p0);\n\t\tnormal = side0.crossProduct(side1);\n\t\tnormal.normalize();\n\t\treturn normal;\n\t}\n\n\tpublic _pGetCollisionUV(indexData:Array<number> /*uint*/, uvData:Array<number>, triangleIndex:number, v:number, w:number, u:number, uvOffset:number, uvStride:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indexData[ triangleIndex ]*uvStride + uvOffset;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 1 ]*uvStride + uvOffset;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuIndex = indexData[ triangleIndex + 2 ]*uvStride + uvOffset;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[ uIndex ], uvData[ uIndex + 1 ]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pTestRenderableCollision(renderable:RenderableBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setLocalRay(localPosition:Vector3D, localDirection:Vector3D)\n\t{\n\t\tthis.rayPosition = localPosition;\n\t\tthis.rayDirection = localDirection;\n\t}\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\tif (this._pTestRenderableCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\tpickingCollisionVO.renderableOwner = billboard;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>Mesh</code> object for a collision with the picking ray.\n\t *\n\t * @param mesh The mesh instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testMeshCollision(mesh:Mesh, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis.setLocalRay(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection);\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = mesh.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = mesh.subMeshes[i];\n\n\t\t\tif (this._pTestRenderableCollision(<RenderableBase> this._renderablePool.getItem(subMesh), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tpickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn pickingCollisionVO.renderableOwner != null;\n\t}\n}\n\nexport = PickingColliderBase;",
    "import Debug\t\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/Debug\");\nimport BitmapImage2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Box\t\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Scene\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityCollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport AGALMiniAssembler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTriangleFace\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITextureBase\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\nimport DefaultRenderer\t\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\nimport RenderableBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * Picks a 3d object from a view or scene by performing a separate render pass on the scene around the area being picked using key color values,\n * then reading back the color value of the pixel in the render representing the picking ray. Requires multiple passes and readbacks for retriving details\n * on an entity that has its shaderPickingDetails property set to true.\n *\n * A read-back operation from any GPU is not a very efficient process, and the amount of processing used can vary significantly between different hardware.\n *\n * @see away.entities.Entity#shaderPickingDetails\n *\n * @class away.pick.ShaderPicker\n */\nclass ShaderPicker implements IPicker\n{\n\tprivate _opaqueRenderableHead:RenderableBase;\n\tprivate _blendedRenderableHead:RenderableBase;\n\n\tprivate _stage:Stage;\n\tprivate _context:IContextGL;\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _objectProgram:IProgram;\n\tprivate _triangleProgram:IProgram;\n\tprivate _bitmapImage2D:BitmapImage2D;\n\tprivate _viewportData:Array<number>;\n\tprivate _boundOffsetScale:Array<number>;\n\tprivate _id:Array<number>;\n\n\tprivate _interactives:Array<RenderableBase> = new Array<RenderableBase>();\n\tprivate _interactiveId:number;\n\tprivate _hitColor:number;\n\tprivate _projX:number;\n\tprivate _projY:number;\n\n\tprivate _hitRenderable:RenderableBase;\n\tprivate _hitEntity:IEntity;\n\tprivate _localHitPosition:Vector3D = new Vector3D();\n\tprivate _hitUV:Point = new Point();\n\tprivate _faceIndex:number;\n\tprivate _subGeometryIndex:number;\n\n\tprivate _localHitNormal:Vector3D = new Vector3D();\n\n\tprivate _rayPos:Vector3D = new Vector3D();\n\tprivate _rayDir:Vector3D = new Vector3D();\n\tprivate _potentialFound:boolean;\n\tprivate static MOUSE_SCISSOR_RECT:Rectangle = new Rectangle(0, 0, 1, 1);\n\n\tprivate _shaderPickingDetails:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>ShaderPicker</code> object.\n\t *\n\t * @param shaderPickingDetails Determines whether the picker includes a second pass to calculate extra\n\t * properties such as uv and normal coordinates.\n\t */\n\tconstructor(shaderPickingDetails:boolean = false)\n\t{\n\t\tthis._shaderPickingDetails = shaderPickingDetails;\n\n\t\tthis._id = new Array<number>(4);\n\t\tthis._viewportData = new Array<number>(4); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale = new Array<number>(8); // first 2 contain scale, last 2 translation\n\t\tthis._boundOffsetScale[3] = 0;\n\t\tthis._boundOffsetScale[7] = 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tvar collector:EntityCollector = <EntityCollector> view.iEntityCollector;\n\n\t\tthis._stage = (<DefaultRenderer> view.renderer).stage;\n\n\t\tif (!this._stage)\n\t\t\treturn null;\n\n\t\tthis._context = <IContextGL> this._stage.context;\n\n\t\tthis._viewportData[0] = view.width;\n\t\tthis._viewportData[1] = view.height;\n\t\tthis._viewportData[2] = -(this._projX = 2*x/view.width - 1);\n\t\tthis._viewportData[3] = this._projY = 2*y/view.height - 1;\n\n\t\t// _potentialFound will be set to true if any object is actually rendered\n\t\tthis._potentialFound = false;\n\n\t\t//reset head values\n\t\tthis._blendedRenderableHead = null;\n\t\tthis._opaqueRenderableHead = null;\n\n\t\tthis.pDraw(collector, null);\n\n\t\t// clear buffers\n\t\tthis._context.setVertexBufferAt(0, null);\n\n\t\tif (!this._context || !this._potentialFound)\n\t\t\treturn null;\n\n\t\tif (!this._bitmapImage2D)\n\t\t\tthis._bitmapImage2D = new BitmapImage2D(1, 1, false, 0);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\t\tthis._hitColor = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tif (!this._hitColor) {\n\t\t\tthis._context.present();\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._hitRenderable = this._interactives[this._hitColor - 1];\n\t\tthis._hitEntity = this._hitRenderable.sourceEntity;\n\n\t\tif (this._onlyMouseEnabled && !this._hitEntity._iIsMouseEnabled())\n\t\t\treturn null;\n\n\t\tvar _collisionVO:PickingCollisionVO = this._hitEntity._iPickingCollisionVO;\n\t\tif (this._shaderPickingDetails) {\n\t\t\tthis.getHitDetails(view.camera);\n\t\t\t_collisionVO.localPosition = this._localHitPosition;\n\t\t\t_collisionVO.localNormal = this._localHitNormal;\n\t\t\t_collisionVO.uv = this._hitUV;\n\t\t\t_collisionVO.index = this._faceIndex;\n\t\t\t//_collisionVO.subGeometryIndex = this._subGeometryIndex;\n\n\t\t} else {\n\t\t\t_collisionVO.localPosition = null;\n\t\t\t_collisionVO.localNormal = null;\n\t\t\t_collisionVO.uv = null;\n\t\t\t_collisionVO.index = 0;\n\t\t\t//_collisionVO.subGeometryIndex = 0;\n\t\t}\n\n\t\treturn _collisionVO;\n\t}\n\n\t//*/\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(position:Vector3D, direction:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:ITextureBase)\n\t{\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis._context.clear(0, 0, 0, 1);\n\t\tthis._stage.scissorRect = ShaderPicker.MOUSE_SCISSOR_RECT;\n\n\t\tthis._interactives.length = this._interactiveId = 0;\n\n\t\tif (!this._objectProgram)\n\t\t\tthis.initObjectProgram();\n\n\t\tthis._context.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._context.setDepthTest(true, ContextGLCompareMode.LESS);\n\t\tthis._context.setProgram(this._objectProgram);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._viewportData, 1);\n\t\t//this.drawRenderables(entityCollector.opaqueRenderableHead, camera);\n\t\t//this.drawRenderables(entityCollector.blendedRenderableHead, camera);\n\t\t//TODO: reimplement ShaderPicker inheriting from RendererBase\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param camera The camera for which to render.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, camera:Camera)\n\t{\n\t\tvar matrix:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\t\tvar viewProjection:Matrix3D = camera.viewProjection;\n\n\t\twhile (renderable) {\n\t\t\t// it's possible that the renderable was already removed from the scene\n\t\t\tif (!renderable.sourceEntity.scene || !renderable.sourceEntity._iIsMouseEnabled()) {\n\t\t\t\trenderable = renderable.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._potentialFound = true;\n\n\t\t\tthis._context.setCulling((<MaterialBase> renderable.renderOwner).bothSides? ContextGLTriangleFace.NONE : ContextGLTriangleFace.BACK, camera.projection.coordinateSystem);\n\n\t\t\tthis._interactives[this._interactiveId++] = renderable;\n\t\t\t// color code so that reading from bitmapdata will contain the correct value\n\t\t\tthis._id[1] = (this._interactiveId >> 8)/255; // on green channel\n\t\t\tthis._id[2] = (this._interactiveId & 0xff)/255; // on blue channel\n\n\t\t\tmatrix.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix.append(viewProjection);\n\t\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, matrix, true);\n\t\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._id, 1);\n\t\t\tthis._stage.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\n\t\t\trenderable = renderable.next;\n\t\t}\n\n\t}\n\n\tprivate updateRay(camera:Camera)\n\t{\n\t\tthis._rayPos = camera.scenePosition;\n\n\t\tthis._rayDir = camera.getRay(this._projX, this._projY, 1);\n\t\tthis._rayDir.normalize();\n\t}\n\n\t/**\n\t * Creates the Program that color-codes objects.\n\t */\n\tprivate initObjectProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._objectProgram = this._context.createProgram();\n\n\t\tvertexCode = \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, fc0\"; // write identifier\n\n\t\tDebug.throwPIR('ShaderPicker', 'initTriangleProgram', 'Dependency: initObjectProgram')\n\t\t//_objectProgram.upload(new AGALMiniAssembler().assemble(ContextGLProgramType.VERTEX, vertexCode),new AGALMiniAssembler().assemble(ContextGLProgramType.FRAGMENT, fragmentCode));\n\t}\n\n\t/**\n\t * Creates the Program that renders positions.\n\t */\n\n\tprivate initTriangleProgram()\n\t{\n\t\tvar vertexCode:string;\n\t\tvar fragmentCode:string;\n\n\t\tthis._triangleProgram = this._context.createProgram();\n\n\t\t// todo: add animation code\n\t\tvertexCode = \"add vt0, va0, vc5 \t\t\t\\n\" + \"mul vt0, vt0, vc6 \t\t\t\\n\" + \"mov v0, vt0\t\t\t\t\\n\" + \"m44 vt0, va0, vc0\t\t\t\\n\" + \"mul vt1.xy, vt0.w, vc4.zw\t\\n\" + \"add vt0.xy, vt0.xy, vt1.xy\t\\n\" + \"mul vt0.xy, vt0.xy, vc4.xy\t\\n\" + \"mov op, vt0\t\\n\";\n\t\tfragmentCode = \"mov oc, v0\"; // write identifier\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + vertexCode + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + fragmentCode + \"endpart\"))['fragment'].data;\n\t\tthis._triangleProgram.upload(vertexByteCode, fragmentByteCode);\n\t}\n\n\t/**\n\t * Gets more detailed information about the hir position, if required.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getHitDetails(camera:Camera)\n\t{\n\t\tthis.getApproximatePosition(camera);\n\t\tthis.getPreciseDetails(camera);\n\t}\n\n\t/**\n\t * Finds a first-guess approximate position about the hit position.\n\t *\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getApproximatePosition(camera:Camera)\n\t{\n\t\tvar bounds:Box = this._hitRenderable.sourceEntity.getBox();\n\t\tvar col:number;\n\t\tvar scX:number, scY:number, scZ:number;\n\t\tvar offsX:number, offsY:number, offsZ:number;\n\t\tvar localViewProjection:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\tlocalViewProjection.copyFrom(this._hitRenderable.sourceEntity.getRenderSceneTransform(camera));\n\t\tlocalViewProjection.append(camera.viewProjection);\n\t\tif (!this._triangleProgram) {\n\t\t\tthis.initTriangleProgram();\n\t\t}\n\n\t\tthis._boundOffsetScale[4] = 1/(scX = bounds.width);\n\t\tthis._boundOffsetScale[5] = 1/(scY = bounds.height);\n\t\tthis._boundOffsetScale[6] = 1/(scZ = bounds.depth);\n\t\tthis._boundOffsetScale[0] = offsX = -bounds.x;\n\t\tthis._boundOffsetScale[1] = offsY = -bounds.y;\n\t\tthis._boundOffsetScale[2] = offsZ = -bounds.z;\n\n\t\tthis._context.setProgram(this._triangleProgram);\n\t\tthis._context.clear(0, 0, 0, 0, 1, 0, ContextGLClearMask.DEPTH);\n\t\tthis._context.setScissorRectangle(ShaderPicker.MOUSE_SCISSOR_RECT);\n\t\tthis._context.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, localViewProjection, true);\n\t\tthis._context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, this._boundOffsetScale, 2);\n\n\t\tthis._stage.activateBuffer(0, this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA), this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._context.drawTriangles(this._stage.getIndexBuffer(this._hitRenderable.getIndexData()), 0, this._hitRenderable.numTriangles);\n\n\t\tthis._context.drawToBitmapImage2D(this._bitmapImage2D);\n\n\t\tcol = this._bitmapImage2D.getPixel(0, 0);\n\n\t\tthis._localHitPosition.x = ((col >> 16) & 0xff)*scX/255 - offsX;\n\t\tthis._localHitPosition.y = ((col >> 8) & 0xff)*scY/255 - offsY;\n\t\tthis._localHitPosition.z = (col & 0xff)*scZ/255 - offsZ;\n\t}\n\n\t/**\n\t * Use the approximate position info to find the face under the mouse position from which we can derive the precise\n\t * ray-face intersection point, then use barycentric coordinates to figure out the uv coordinates, etc.\n\t * @param camera The camera used to view the hit object.\n\t */\n\tprivate getPreciseDetails(camera:Camera)\n\t{\n\t\tvar len:number = indices.length;\n\t\tvar x1:number, y1:number, z1:number;\n\t\tvar x2:number, y2:number, z2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\t\tvar i:number = 0, j:number = 1, k:number = 2;\n\t\tvar t1:number, t2:number, t3:number;\n\t\tvar v0x:number, v0y:number, v0z:number;\n\t\tvar v1x:number, v1y:number, v1z:number;\n\t\tvar v2x:number, v2y:number, v2z:number;\n\t\tvar ni1:number, ni2:number, ni3:number;\n\t\tvar n1:number, n2:number, n3:number, nLength:number;\n\t\tvar dot00:number, dot01:number, dot02:number, dot11:number, dot12:number;\n\t\tvar s:number, t:number, invDenom:number;\n\t\tvar x:number = this._localHitPosition.x, y:number = this._localHitPosition.y, z:number = this._localHitPosition.z;\n\t\tvar u:number, v:number;\n\t\tvar ui1:number, ui2:number, ui3:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number;\n\t\tvar indices:Array<number> = this._hitRenderable.getIndexData().data;\n\n\t\tvar positions:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).data;\n\t\tvar positionStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.POSITION_DATA).dataPerVertex;\n\t\tvar positionOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA);\n\n\t\tvar uvs:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).data;\n\t\tvar uvStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.UV_DATA).dataPerVertex;\n\t\tvar uvOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.UV_DATA);\n\n\t\tvar normals:Array<number> = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).data;\n\t\tvar normalStride:number = this._hitRenderable.getVertexData(TriangleSubGeometry.NORMAL_DATA).dataPerVertex;\n\t\tvar normalOffset:number = this._hitRenderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.updateRay(camera);\n\n\t\twhile (i < len) {\n\t\t\tt1 = positionOffset + indices[i]*positionStride;\n\t\t\tt2 = positionOffset + indices[j]*positionStride;\n\t\t\tt3 = positionOffset + indices[k]*positionStride;\n\t\t\tx1 = positions[t1];\n\t\t\ty1 = positions[t1 + 1];\n\t\t\tz1 = positions[t1 + 2];\n\t\t\tx2 = positions[t2];\n\t\t\ty2 = positions[t2 + 1];\n\t\t\tz2 = positions[t2 + 2];\n\t\t\tx3 = positions[t3];\n\t\t\ty3 = positions[t3 + 1];\n\t\t\tz3 = positions[t3 + 2];\n\n\t\t\t// if within bounds\n\t\t\tif (!(    (x < x1 && x < x2 && x < x3) || (y < y1 && y < y2 && y < y3) || (z < z1 && z < z2 && z < z3) || (x > x1 && x > x2 && x > x3) || (y > y1 && y > y2 && y > y3) || (z > z1 && z > z2 && z > z3))) {\n\n\t\t\t\t// calculate barycentric coords for approximated position\n\t\t\t\tv0x = x3 - x1;\n\t\t\t\tv0y = y3 - y1;\n\t\t\t\tv0z = z3 - z1;\n\t\t\t\tv1x = x2 - x1;\n\t\t\t\tv1y = y2 - y1;\n\t\t\t\tv1z = z2 - z1;\n\t\t\t\tv2x = x - x1;\n\t\t\t\tv2y = y - y1;\n\t\t\t\tv2z = z - z1;\n\t\t\t\tdot00 = v0x*v0x + v0y*v0y + v0z*v0z;\n\t\t\t\tdot01 = v0x*v1x + v0y*v1y + v0z*v1z;\n\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\tdot11 = v1x*v1x + v1y*v1y + v1z*v1z;\n\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\tinvDenom = 1/(dot00*dot11 - dot01*dot01);\n\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t// if inside the current triangle, fetch details hit information\n\t\t\t\tif (s >= 0 && t >= 0 && (s + t) <= 1) {\n\n\t\t\t\t\tni1 = normalOffset + indices[i]*normalStride;\n\t\t\t\t\tni2 = normalOffset + indices[j]*normalStride;\n\t\t\t\t\tni3 = normalOffset + indices[k]*normalStride;\n\n\t\t\t\t\tn1 = indices[ni1] + indices[ni2] + indices[ni3];\n\t\t\t\t\tn2 = indices[ni1 + 1] + indices[ni2 + 1] + indices[ni3 + 1];\n\t\t\t\t\tn3 = indices[ni1 + 2] + indices[ni2 + 2] + indices[ni3 + 2];\n\n\t\t\t\t\tnLength = Math.sqrt(n1*n1 + n2*n2 + n3*n3);\n\n\t\t\t\t\tn1 /= nLength;\n\t\t\t\t\tn2 /= nLength;\n\t\t\t\t\tn3 /= nLength;\n\n\t\t\t\t\t// this is def the triangle, now calculate precise coords\n\t\t\t\t\tthis.getPrecisePosition(this._hitRenderable.sourceEntity.inverseSceneTransform, n1, n2, n3, x1, y1, z1);\n\n\t\t\t\t\tv2x = this._localHitPosition.x - x1;\n\t\t\t\t\tv2y = this._localHitPosition.y - y1;\n\t\t\t\t\tv2z = this._localHitPosition.z - z1;\n\n\t\t\t\t\ts0x = x2 - x1; // s0 = p1 - p0\n\t\t\t\t\ts0y = y2 - y1;\n\t\t\t\t\ts0z = z2 - z1;\n\t\t\t\t\ts1x = x3 - x1; // s1 = p2 - p0\n\t\t\t\t\ts1y = y3 - y1;\n\t\t\t\t\ts1z = z3 - z1;\n\t\t\t\t\tthis._localHitNormal.x = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\t\tthis._localHitNormal.y = s0z*s1x - s0x*s1z;\n\t\t\t\t\tthis._localHitNormal.z = s0x*s1y - s0y*s1x;\n\t\t\t\t\tnl = 1/Math.sqrt(this._localHitNormal.x*this._localHitNormal.x + this._localHitNormal.y*this._localHitNormal.y + this._localHitNormal.z*this._localHitNormal.z); // normalize n\n\t\t\t\t\tthis._localHitNormal.x *= nl;\n\t\t\t\t\tthis._localHitNormal.y *= nl;\n\t\t\t\t\tthis._localHitNormal.z *= nl;\n\n\t\t\t\t\tdot02 = v0x*v2x + v0y*v2y + v0z*v2z;\n\t\t\t\t\tdot12 = v1x*v2x + v1y*v2y + v1z*v2z;\n\t\t\t\t\ts = (dot11*dot02 - dot01*dot12)*invDenom;\n\t\t\t\t\tt = (dot00*dot12 - dot01*dot02)*invDenom;\n\n\t\t\t\t\tui1 = uvOffset + indices[i]*uvStride\n\t\t\t\t\tui2 = uvOffset + indices[j]*uvStride\n\t\t\t\t\tui3 = uvOffset + indices[k]*uvStride\n\n\t\t\t\t\tu = uvs[ui1];\n\t\t\t\t\tv = uvs[ui1 + 1];\n\t\t\t\t\tthis._hitUV.x = u + t*(uvs[ui2] - u) + s*(uvs[ui3] - u);\n\t\t\t\t\tthis._hitUV.y = v + t*(uvs[ui2 + 1] - v) + s*(uvs[ui3 + 1] - v);\n\n\t\t\t\t\tthis._faceIndex = i;\n\t\t\t\t\t//TODO add back subGeometryIndex value\n\t\t\t\t\t//this._subGeometryIndex = away.utils.GeometryUtils.getMeshSubGeometryIndex(subGeom);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t\tj += 3;\n\t\t\tk += 3;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the precise hit position by unprojecting the screen coordinate back unto the hit face's plane and\n\t * calculating the intersection point.\n\t * @param camera The camera used to render the object.\n\t * @param invSceneTransform The inverse scene transformation of the hit object.\n\t * @param nx The x-coordinate of the face's plane normal.\n\t * @param ny The y-coordinate of the face plane normal.\n\t * @param nz The z-coordinate of the face plane normal.\n\t * @param px The x-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param py The y-coordinate of a point on the face's plane (ie a face vertex)\n\t * @param pz The z-coordinate of a point on the face's plane (ie a face vertex)\n\t */\n\n\tprivate getPrecisePosition(invSceneTransform:Matrix3D, nx:number, ny:number, nz:number, px:number, py:number, pz:number)\n\t{\n\t\t// calculate screen ray and find exact intersection position with triangle\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar ox:number, oy:number, oz:number;\n\t\tvar t:number;\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar cx:number = this._rayPos.x, cy:number = this._rayPos.y, cz:number = this._rayPos.z;\n\n\t\t// unprojected projection point, gives ray dir in cam space\n\t\tox = this._rayDir.x;\n\t\toy = this._rayDir.y;\n\t\toz = this._rayDir.z;\n\n\t\t// transform ray dir and origin (cam pos) to object space\n\t\t//invSceneTransform.copyRawDataTo( raw  );\n\t\tinvSceneTransform.copyRawDataTo(raw);\n\t\trx = raw[0]*ox + raw[4]*oy + raw[8]*oz;\n\t\try = raw[1]*ox + raw[5]*oy + raw[9]*oz;\n\t\trz = raw[2]*ox + raw[6]*oy + raw[10]*oz;\n\n\t\tox = raw[0]*cx + raw[4]*cy + raw[8]*cz + raw[12];\n\t\toy = raw[1]*cx + raw[5]*cy + raw[9]*cz + raw[13];\n\t\toz = raw[2]*cx + raw[6]*cy + raw[10]*cz + raw[14];\n\n\t\tt = ((px - ox)*nx + (py - oy)*ny + (pz - oz)*nz)/(rx*nx + ry*ny + rz*nz);\n\n\t\tthis._localHitPosition.x = ox + rx*t;\n\t\tthis._localHitPosition.y = oy + ry*t;\n\t\tthis._localHitPosition.z = oz + rz*t;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._bitmapImage2D.dispose();\n\t\tif (this._triangleProgram)\n\t\t\tthis._triangleProgram.dispose();\n\n\t\tif (this._objectProgram)\n\t\t\tthis._objectProgram.dispose();\n\n\t\tthis._triangleProgram = null;\n\t\tthis._objectProgram = null;\n\t\tthis._bitmapImage2D = null;\n\t\tthis._hitRenderable = null;\n\t\tthis._hitEntity = null;\n\t}\n}\n\nexport = ShaderPicker;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/render/passes/BasicMaterialPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialRender extends RenderBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(pool:RenderPool, material:BasicMaterial, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, material, renderableClass, stage);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, renderableClass, this._stage));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport = BasicMaterialRender;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * DepthRender forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass DepthRender extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param renderOwner\n\t * @param renderableClass\n\t * @param stage\n\t */\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shader.texture && shader.alphaThreshold > 0) {\n\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture && this._shader.alphaThreshold > 0) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DepthRender;",
    "﻿import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends RenderPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shader.alphaThreshold > 0) {\n\t\t\tshader.texture._iInitRegisters(shader, registerCache);\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, albedo, registerCache, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._shader.alphaThreshold > 0) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceRender;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n *\n * @class away.pool.Passes\n */\nclass RenderBase extends EventDispatcher implements IRender\n{\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tprivate _pool:RenderPool;\n\tpublic _renderOwner:IRenderOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\n\tpublic renderId:number;\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tconstructor(pool:RenderPool, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis.renderId = renderOwner.id;\n\t\tthis._renderOwner = renderOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._renderableClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._renderOwner.alphaThreshold;\n\t\tshader.useMipmapping = this._renderOwner.mipmap;\n\t\tshader.useSmoothTextures = this._renderOwner.smooth;\n\n\t\tif (this._renderOwner instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._renderOwner;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.repeatTextures = material.repeat;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tif (material.texture)\n\t\t\t\tshader.texture = shader.getTextureVO(material.texture);\n\t\t\tshader.color = material.color;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pClearPasses();\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].dispose();\n\n\t\tthis._passes = null;\n\n\t\tthis._pool.disposeItem(this._renderOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateRender()\n\t{\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidatePass();\n\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param renderOwner\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the renderOwner.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the renderOwner\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the renderOwner\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateAnimation();\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._renderOwner.animationSet) {\n\t\t\tthis._renderOwner.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderableOwner> = this._renderOwner.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._renderOwner.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RenderBase;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\n\n/**\n * RenderPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass RenderPassBase extends RenderBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._shader.dispose();\n\n\t\tthis._shader = null;\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = RenderPassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport BasicMaterialRender\t\t\t= require(\"awayjs-renderergl/lib/render/BasicMaterialRender\");\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport SkyboxRender\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/SkyboxRender\");\n\n/**\n * @class away.pool.RenderPool\n */\nclass RenderPool\n{\n\tprivate static _classPool:Object = new Object();\n\t\n\tprivate _pool:Object = new Object();\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _stage:Stage;\n\tprivate _renderClass:IRenderClass;\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param renderClass\n\t */\n\tconstructor(renderableClass:IRenderableClass, stage:Stage, renderClass:IRenderClass = null)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t\tthis._renderClass = renderClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderOwner:IRenderOwner):RenderBase\n\t{\n\t\treturn (this._pool[renderOwner.id] || (this._pool[renderOwner.id] = renderOwner._iAddRender(new (this._renderClass || RenderPool.getClass(renderOwner))(this, renderOwner, this._renderableClass, this._stage))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t */\n\tpublic disposeItem(renderOwner:IRenderOwner)\n\t{\n\t\trenderOwner._iRemoveRender(this._pool[renderOwner.id]);\n\n\t\tthis._pool[renderOwner.id] = null;\n\t}\n\t\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(renderClass:IRenderClass, assetClass:IAssetClass)\n\t{\n\t\tRenderPool._classPool[assetClass.assetType] = renderClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(renderOwner:IRenderOwner):IRenderClass\n\t{\n\t\treturn RenderPool._classPool[renderOwner.assetType];\n\t}\n\t\n\n\tprivate static main = RenderPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tRenderPool.registerClass(BasicMaterialRender, BasicMaterial);\n\t\tRenderPool.registerClass(SkyboxRender, Skybox);\n\t}\n}\n\nexport = RenderPool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderPassBase\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPassBase\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\n\n/**\n * SkyboxRender forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass SkyboxRender extends RenderPassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _cubeTexture:TextureVOBase;\n\n\tconstructor(pool:RenderPool, skybox:Skybox, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, renderableClass, stage);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\n\t\tthis._cubeTexture = this._shader.getTextureVO(this._skybox.cubeMap);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._renderOwner.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._renderOwner.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._renderOwner.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesLocalPosFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._cubeTexture._iInitRegisters(shader, registerCache);\n\n\t\treturn this._cubeTexture._iGetFragmentCode(shader, sharedRegisters.shadedTarget, registerCache, sharedRegisters.localPositionVarying);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\tthis._cubeTexture.activate(this._shader);\n\t}\n}\n\nexport = SkyboxRender;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper(render, renderOwner, renderableClass, stage);\n\n\t\tthis._shader = new ShaderBase(renderableClass, this, this._stage);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (shader.texture != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (shader.texture != null) {\n\n\t\t\tshader.texture._iInitRegisters(shader, regCache);\n\n\t\t\tcode += shader.texture._iGetFragmentCode(shader, targetReg, regCache, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._shader.texture != null) {\n\t\t\tthis._shader.texture.activate(this._shader);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tprivate _render:RenderBase;\n\tpublic _renderOwner:IRenderOwner;\n\tpublic _renderableClass:IRenderableClass;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._renderOwner.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidatePass();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:RenderBase, renderOwner:IRenderOwner, renderableClass:IRenderableClass, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._renderOwner = renderOwner;\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._shader.dispose();\n\n\t\tthis._shader = null;\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic invalidatePass()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = PassBase;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = Billboard;\n\n\tprivate static _materialGeometry:Object = new Object();\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePool, billboard:Billboard, stage:Stage)\n\t{\n\t\tsuper(pool, billboard, billboard, billboard.material, stage);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.updatePositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.updatePositions(Array<number>(-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, material.height-billboardRect.y, 0, material.width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\t//buffer the same for all materials, so can set here\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n}\n\nexport = BillboardRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport CurveSubMesh\t\t\t\t    = require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport CurveSubGeometry\t\t    \t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\")\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass CurveSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = CurveSubMesh;\n\n\tpublic static vertexAttributesOffset:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:CurveSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:CurveSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():CurveSubGeometry\n\t{\n\t\tvar subGeometry:CurveSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <CurveSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[CurveSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.curves)\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.CURVE_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[CurveSubGeometry.UV_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n        shader.usesLocalPosFragment = true;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \".xyw, \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov v2 va1 \\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\n\t\t} else {\n\t\t\tcode += \"mov v2 va1 \\n\";\n\t\t\tcode += \"m44 op, \" + position + \".xyw, \" + viewMatrixReg + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n    /**\n     * @inheritDoc\n     */\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar sd:boolean = (<ContextWebGL>shader._stage.context).standardDerivatives;\n\t\tvar pos:ShaderRegisterElement = sharedRegisters.localPositionVarying;\n\t\tvar out:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\n\t\tvar curve:string = \"v2\";\n\t\tvar curvex:string = \"v2.x\";\n\t\tvar curvey:string = \"v2.y\";\n\t\tvar curvez:string = pos + \".z\";\n\n\n\t\t//get some free registers\n\t\tvar free:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free, 1);\n\t\tvar free1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free1, 1);\n\t\tvar free2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(free2, 1);\n\n\t\t//distance from curve\n\t\tvar d:string = free + \".x\";\n\t\tvar dx:string = free + \".y\";\n\t\tvar dy:string = free + \".z\";\n\t\tvar t:string = free + \".w\";\n\t\tvar d2:string = free1 + \".x\";\n\t\tvar fixa:string = free1 + \".y\";\n\t\tvar fixb:string = free1 + \".z\";\n\n\t\tvar _aa:string = \"fc7.z\";\n\t\tvar _1:string = \"fc7.y\";\n\n\t\tvar nl:string = \"\\n\";\n\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//distance from curve\n\t\tcode.push(\"mul\",d, curvex, curvex, nl);\n\t\tcode.push(\"sub\",d, d, curvey, nl);\n\t\tcode.push(\"mul\",d, d, curvez, nl);\t//flipper\n\n\t\tcode.push(\"kil\" ,d, nl);\n\n\t\tif(sd)\n\t\t{\n\n\t\t\t//derivatives\n\t\t\tcode.push(\"ddx\", dx, d, nl);\n\t\t\tcode.push(\"ddy\", dy, d, nl);\n\n\t\t\t//AA\n\t\t\tcode.push(\"mul\",dx, dx, dx, nl);\n\t\t\tcode.push(\"mul\",dy, dy, dy, nl);\n\t\t\tcode.push(\"add\",t, dx, dy, nl);\n\t\t\tcode.push(\"sqt\",t, t, nl);\n\n\t\t\tcode.push(\"mul\",t, t, _aa, nl);\n\t\t\tcode.push(\"div\",d, d, t, nl);\n\n\n\t\t\t/*LINE*/\n\t\t\tcode.push(\"mov\", d2, curvey, nl);\n\t\t\tcode.push(\"ddx\", dx, curvey, nl);\n\t\t\tcode.push(\"ddy\", dy, curvey, nl);\n\t\t\tcode.push(\"mul\", dx, dx, dx, nl);\n\t\t\tcode.push(\"mul\", dy, dy, dy, nl);\n\t\t\tcode.push(\"add\", t, dx, dy, nl);\n\t\t\tcode.push(\"sqt\", t, t, nl);\n\t\t\tcode.push(\"mul\", t, t, _aa, nl);\n\n\t\t\tcode.push(\"div\", d2, d2, t, nl);\n\t\t\t/**/\n\n\t\t\t//code.push(\"sge\", fixa, curvex, _1, nl);\n\t\t\tcode.push(\"slt\", fixb, curvex, _1, nl);\n\t\t\tcode.push(\"sub\", fixa, _1, fixb, nl);\n\t\t\t//code.push(\"sub\", fixb, _1, fixa, nl);\n\t\t\tcode.push(\"mul\", d2, d2, fixa, nl);\n\t\t\tcode.push(\"mul\", d, d, fixb, nl);\n\n\t\t\tcode.push(\"add\", d, d, d2, nl);\n\t\t\tcode.push(\"abs\", d, d, nl);\n\n\t\t\tcode.push(\"min\", d, d, _1, nl);\n\n\t\t\tcode.push(\"mov\", out+\".w\", d, nl);\n\t\t}\n\t\treturn code.join(\" \");\n\t}\n    private _constants:Array<number> = new Array<number>(0, 1, 1, 0.5);\n    /**\n     * @inheritDoc\n     */\n    public _iActivate(pass:PassBase, camera:Camera)\n    {\n        super._iActivate(pass, camera);\n\n        var context:IContextGL = this._stage.context;\n\n        context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 7, this._constants, 1);\n\n    }\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(CurveSubGeometry.POSITION_DATA), this.getVertexOffset(CurveSubGeometry.POSITION_DATA), CurveSubGeometry.POSITION_FORMAT);\n        this._stage.activateBuffer(1, this.getVertexData(CurveSubGeometry.CURVE_DATA), this.getVertexOffset(CurveSubGeometry.CURVE_DATA), CurveSubGeometry.CURVE_FORMAT);\n\n        this._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new CurveSubMeshRenderable(this._pool, <CurveSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = CurveSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSegmentRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = LineSegment;\n\n\tprivate static _lineGeometry:Object = new Object();\n\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment, lineSegment.material, stage, level, indexOffset);\n\n\t\tthis._lineSegment = lineSegment;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar geometry:LineSubGeometry = LineSegmentRenderable._lineGeometry[this._lineSegment.id] || (LineSegmentRenderable._lineGeometry[this._lineSegment.id] = new LineSubGeometry());\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar startPositions:Array<number>;\n\t\tvar endPositions:Array<number>;\n\t\tvar thickness:Array<number>;\n\n\t\tif (geometry.indices != null) {\n\t\t\tstartPositions = geometry.startPositions;\n\t\t\tendPositions = geometry.endPositions;\n\t\t\tthickness = geometry.thickness;\n\t\t} else {\n\t\t\tstartPositions = new Array<number>(3);\n\t\t\tendPositions = new Array<number>(3);\n\t\t\tthickness = new Array<number>(1);\n\t\t}\n\n\t\tstartPositions[0] = start.x;\n\t\tstartPositions[1] = start.y;\n\t\tstartPositions[2] = start.z;\n\t\tendPositions[0] = end.x;\n\t\tendPositions[1] = end.y;\n\t\tendPositions[2] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.updatePositions(startPositions, endPositions);\n\t\tgeometry.updateThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSegmentRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSegmentRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSegmentRenderable(this._pool, <LineSegment> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = LineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = LineSubMesh;\n\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number = 1.25;\n\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\n\t\tif (subGeometry.thickness)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\n\t\tif (subGeometry.startColors)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:PassBase, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, camera);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineSubMeshRenderable.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineSubMeshRenderable.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tthis._calcMatrix.copyFrom(this.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(LineSubGeometry.START_POSITION_DATA), this.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(1, this.getVertexData(LineSubGeometry.END_POSITION_DATA), this.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.activateBuffer(2, this.getVertexData(LineSubGeometry.THICKNESS_DATA), this.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSubMeshRenderable(this._pool, <LineSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = LineSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/SubGeometryEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport RenderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderBase\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\n\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onRenderOwnerUpdatedDelegate:(event:RenderableOwnerEvent) => void;\n\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryDirty:boolean = true;\n\tprivate _indexData:IndexData;\n\tprivate _indexDataDirty:boolean = true;\n\tprivate _vertexData:Object = new Object();\n\tpublic _pVertexDataDirty:Object = new Object();\n\tprivate _vertexOffset:Object = new Object();\n\n\tpublic _level:number;\n\tprivate _indexOffset:number;\n\tprivate _overflow:RenderableBase;\n\tprivate _numTriangles:number;\n\tprivate _concatenateArrays:boolean;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePool;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic get overflow():RenderableBase\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._overflow;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\n\t/**\n\t *\n\t */\n\tpublic renderOwner:IRenderOwner;\n\n\t/**\n\t *\n\t */\n\tpublic render:RenderBase;\n\n\t/**\n\t *\n\t */\n\tpublic getIndexData():IndexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._indexData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexData(dataType:string):VertexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexOffset(dataType:string):number\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexOffset[dataType];\n\t}\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param renderableOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner, renderOwner:IRenderOwner, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\t\tthis._onRenderOwnerUpdatedDelegate = (event:RenderableOwnerEvent) => this._onRenderOwnerUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\t\tthis._stage = stage;\n\n\t\t//reference to level of overflow\n\t\tthis._level = level;\n\n\t\t//reference to the offset on indices (if this is an overflow renderable)\n\t\tthis._indexOffset = indexOffset;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\n\t\tthis.renderableOwner.addEventListener(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this._onRenderOwnerUpdatedDelegate)\n\n\t\tthis.renderOwner = renderOwner;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\n\t\tthis._indexData.dispose();\n\t\tthis._indexData = null;\n\n\t\tfor (var dataType in this._vertexData) {\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\n\t\t\tthis._vertexData[dataType] = null;\n\t\t}\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\n\t\t//invalidate indices\n\t\tif (this._level == 0)\n\t\t\tthis._indexDataDirty = true;\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\t\tthis._indexDataDirty = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\t\tthis._pVertexDataDirty[dataType] = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @param offset\n\t * @internal\n\t */\n\tpublic _iFillIndexData(indexOffset:number)\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\n\n\t\tthis._numTriangles = this._indexData.data.length/3;\n\n\t\tindexOffset = this._indexData.offset;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.length) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(indexOffset);\n\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\tthis._subGeometry = this._pGetSubGeometry();\n\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\n\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\t//dispose\n//\t\t\tif (this._indexData) {\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._indexData = null;\n//\t\t\t}\n\n//\t\t\tfor (var dataType in this._vertexData) {\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._vertexData[dataType] = null;\n//\t\t\t}\n\n\t\tthis._geometryDirty = false;\n\n\t\t//specific vertex data types have to be invalidated in the specific renderable\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateIndexData()\n\t{\n\t\tthis._iFillIndexData(this._indexOffset);\n\n\t\tthis._indexDataDirty = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t * @private\n\t */\n\tprivate _updateVertexData(dataType:string)\n\t{\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\n\n\t\tif (this._subGeometry.concatenateArrays)\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\n\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\n\n\t\tthis._pVertexDataDirty[dataType] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndexData();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\n\n\t\tthis.invalidateVertexData(event.dataType);\n\t}\n\n\tprivate _onRenderOwnerUpdated(event:RenderableOwnerEvent)\n\t{\n\t\t//TODO flag unused renders for deletion\n\t\tthis.renderOwner = event.renderOwner;\n\t}\n}\n\nexport = RenderableBase;",
    "import IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport IRenderClass\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/IRenderClass\");\nimport RenderPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/RenderPool\");\nimport BillboardRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/BillboardRenderable\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSegmentRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/LineSubMeshRenderable\");\nimport CurveSubMeshRenderable\t    = require(\"awayjs-renderergl/lib/renderables/CurveSubMeshRenderable\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport SkyboxRenderable\t\t\t    = require(\"awayjs-renderergl/lib/renderables/SkyboxRenderable\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-renderergl/lib/renderables/TriangleSubMeshRenderable\");\n\n/**\n * RenderablePool forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RenderablePool\n */\nclass RenderablePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _stage:Stage;\n\tprivate _pool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\t\n\t/**\n\t * Creates a new RenderablePool object.\n\t *\n\t * @param stage\n\t * @param renderClass\n\t */\n\tconstructor(stage:Stage, renderClass:IRenderClass = null)\n\t{\n\t\tthis._stage = stage;\n\n\t\tfor (var i in RenderablePool._classPool)\n\t\t\tthis._objectPools[i] = new RenderPool(RenderablePool._classPool[i], this._stage, renderClass);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(renderableOwner:IRenderableOwner):RenderableBase\n\t{\n\t\treturn this._pool[renderableOwner.id] || (this._pool[renderableOwner.id] = renderableOwner._iAddRenderable(new (RenderablePool.getClass(renderableOwner))(this, renderableOwner, this._stage)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic disposeItem(renderableOwner:IRenderableOwner)\n\t{\n\t\trenderableOwner._iRemoveRenderable(this._pool[renderableOwner.id]);\n\n\t\tthis._pool[renderableOwner.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderPool\n\t */\n\tpublic getRenderPool(renderableOwner:IRenderableOwner):RenderPool\n\t{\n\t\treturn this._objectPools[renderableOwner.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(renderableClass:IRenderableClass)\n\t{\n\t\tRenderablePool._classPool[renderableClass.assetClass.assetType] = renderableClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(renderableOwner:IRenderableOwner):IRenderableClass\n\t{\n\t\treturn RenderablePool._classPool[renderableOwner.assetType];\n\t}\n\n\t/**\n\t * Disposes the resources used by the RenderablePool.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\tthis._pool[id].dispose();\n\n\t\tthis._pool = null;\n\t}\n\n\n\tprivate static main = RenderablePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tRenderablePool.registerClass(BillboardRenderable);\n\t\tRenderablePool.registerClass(LineSegmentRenderable);\n\t\tRenderablePool.registerClass(LineSubMeshRenderable);\n\t\tRenderablePool.registerClass(TriangleSubMeshRenderable);\n\t\tRenderablePool.registerClass(CurveSubMeshRenderable);\n\t\tRenderablePool.registerClass(SkyboxRenderable);\n\t}\n}\n\nexport = RenderablePool;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = Skybox;\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\tprivate _vertexArray:Array<number>;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePool, skybox:Skybox, stage:Stage)\n\t{\n\t\tsuper(pool, skybox, skybox, skybox, stage);\n\n\t\tthis._vertexArray = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\treturn geometry;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n}\n\nexport = SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderablePool\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/PassBase\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\tpublic static assetClass:IAssetClass = TriangleSubMesh;\n\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, stage:Stage, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, subMesh.material, stage, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar subGeometry:TriangleSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.vertexNormals)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\n\t\tif (subGeometry.vertexTangents)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\tif (subGeometry.secondaryUVs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\n\n\t\tif (subGeometry.jointIndices)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\n\n\t\tif (subGeometry.jointWeights)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\n\n\t\tswitch(subGeometry.jointsPerVertex) {\n\t\t\tcase 1:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn subGeometry;\n\t}\n\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRender(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(pass, camera, viewProjection);\n\n\t\tvar shader:ShaderBase = pass.shader;\n\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\tthis.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(this.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shader.vertexConstantData, shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shader.fragmentConstantData, shader.numUsedFragmentConstants);\n\n\t\tthis._stage.activateBuffer(0, this.getVertexData(TriangleSubGeometry.POSITION_DATA), this.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tthis._stage.context.drawTriangles(this._stage.getIndexBuffer(this.getIndexData()), 0, this.numTriangles);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderableOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):RenderableBase\n\t{\n\t\treturn new TriangleSubMeshRenderable(this._pool, <TriangleSubMesh> this.renderableOwner, this._stage, this._level + 1, indexOffset);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(renderableClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(renderableClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.numLights = 0;\n\t\tthis.usesLightFallOff = true;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._stage.getImageObject(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], false, this.useSmoothTextures, this.useMipmapping);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._stage.getImageObject(probe.specularMap).activate(this.lightProbeSpecularIndices[i], false, this.useSmoothTextures, this.useMipmapping);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase\n{\n\tprivate _textureVOPool:TextureVOPool;\n\tprivate _renderableClass:IRenderableClass;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:TextureVOBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesLocalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, stage:Stage)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._textureVOPool = new TextureVOPool(this._stage);\n\t}\n\n\tpublic getTextureVO(texture:TextureBase):TextureVOBase\n\t{\n\t\treturn this._textureVOPool.getItem(texture);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param renderableClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(renderableClass:IRenderableClass, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(renderableClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesLocalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\n\n\t\t//Initializes commonly required constant values.\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderableOwner.animator)\n\t\t\t(<AnimatorBase> renderable.renderableOwner.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.uvBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\n\n\t\tif (this.secondaryUVBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\n\n\t\tif (this.normalBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\n\t\tif (this.tangentBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\n\n\t\tif (this.colorBufferIndex >= 0)\n\t\t\tthis._stage.activateBuffer(this.colorBufferIndex, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\n\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.renderableOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\t\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._renderableClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n    public localPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/IPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pRenderableClass:IRenderableClass;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pRenderableClass = renderableClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = renderableClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesLocalPosFragment)\n            this.compileLocalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pRenderableClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderableClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n    private compileLocalPositionCode()\n    {\n        this._pSharedRegisters.localPositionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.localPositionVarying + \", \" + this._pSharedRegisters.localPosition + \"\\n\";\n    }\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/render/passes/ILightingPass\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/IRenderableClass\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(renderableClass:IRenderableClass, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(renderableClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = LightingCompiler;",
    "import Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static meshes into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _geomVOs:Array<GeometryVO>;\n\tprivate _toDispose:Array<Mesh>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier mesh material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver submeshes is applied to the merged submesh(es).\n\t * @param    disposeSources  [optional]    Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting mesh are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the mesh and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source mesh(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Mesh. If no Mesh object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Mesh to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the meshes to be mergd.\n\t *\n\t * @return The merged Mesh instance.\n\t */\n\tpublic applyToContainer(receiver:Mesh, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container meshes\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the meshes found in the Array&lt;Mesh&gt; into a single Mesh.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of the meshes.\n\t * @param    meshes      A series of Meshes to be merged with the reciever mesh.\n\t */\n\tpublic applyToMeshes(receiver:Mesh, meshes:Array<Mesh>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!meshes.length)\n\t\t\treturn;\n\n\t\t//collect meshes in vector\n\t\tfor (var i:number /*uint*/ = 0; i < meshes.length; i++)\n\t\t\tif (meshes[i] != receiver)\n\t\t\t\tthis.collect(meshes[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 meshes into one. It is recommand to use apply when 2 meshes are to be merged. If more need to be merged, use either applyToMeshes or applyToContainer methods.\n\t *\n\t * @param    receiver    The Mesh to receive the merged contents of both meshes.\n\t * @param    mesh        The Mesh to be merged with the receiver mesh\n\t */\n\tpublic apply(receiver:Mesh, mesh:Mesh)\n\t{\n\t\tthis.reset();\n\n\t\t//collect mesh\n\t\tthis.collect(mesh, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Mesh>();\n\t\tthis._geomVOs = new Array<GeometryVO>();\n\t}\n\n\tprivate merge(destMesh:Mesh, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\tvar subIdx:number /*uint*/;\n\t\tvar oldGeom:Geometry;\n\t\tvar destGeom:Geometry;\n\t\tvar useSubMaterials:boolean;\n\n\t\toldGeom = destMesh.geometry;\n\t\tdestGeom = destMesh.geometry = new Geometry();\n\t\tsubIdx = destMesh.subMeshes.length;\n\n\t\t// Only apply materials directly to sub-meshes if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._geomVOs.length > 1);\n\n\t\tfor (i = 0; i < this._geomVOs.length; i++) {\n\t\t\tvar s:number /*uint*/;\n\t\t\tvar data:GeometryVO;\n\t\t\tvar sub:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\tsub.autoDeriveNormals = false;\n\t\t\tsub.autoDeriveTangents = false;\n\n\t\t\tdata = this._geomVOs[i];\n\t\t\tsub.updateIndices(data.indices);\n\t\t\tsub.updatePositions(data.vertices);\n\t\t\tsub.updateVertexNormals(data.normals);\n\t\t\tsub.updateVertexTangents(data.tangents);\n\t\t\tsub.updateUVs(data.uvs);\n\n\t\t\tdestGeom.addSubGeometry(sub);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestMesh.subMeshes[subIdx].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._geomVOs.length)\n\t\t\tdestMesh.material = this._geomVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar m:Mesh;\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++) {\n\t\t\t\tm = this._toDispose[i];\n\t\t\t\tm.geometry.dispose();\n\t\t\t\tm.dispose();\n\t\t\t}\n\n\t\t\t//dispose of the original receiver geometry\n\t\t\toldGeom.dispose();\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(mesh:Mesh, dispose:boolean)\n\t{\n\t\tif (mesh.geometry) {\n\t\t\tvar subIdx:number /*uint*/;\n\t\t\tvar subGeometries:Array<TriangleSubGeometry> = <Array<TriangleSubGeometry>> mesh.geometry.subGeometries;\n\t\t\tvar calc:number /*uint*/;\n\t\t\tfor (subIdx = 0; subIdx < subGeometries.length; subIdx++) {\n\t\t\t\tvar i:number /*uint*/;\n\t\t\t\tvar len:number /*uint*/;\n\t\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\t\tvar indexOffset:number /*uint*/;\n\t\t\t\tvar subGeom:TriangleSubGeometry;\n\t\t\t\tvar vo:GeometryVO;\n\t\t\t\tvar vertices:Array<number>;\n\t\t\t\tvar normals:Array<number>;\n\t\t\t\tvar tangents:Array<number>;\n\t\t\t\tvar pd:Array<number>, nd:Array<number>, td:Array<number>, ud:Array<number>;\n\n\t\t\t\tsubGeom = subGeometries[subIdx];\n\t\t\t\tpd = subGeom.positions;\n\t\t\t\tnd = subGeom.vertexNormals;\n\t\t\t\ttd = subGeom.vertexTangents;\n\t\t\t\tud = subGeom.uvs;\n\n\t\t\t\t// Get (or create) a VO for this material\n\t\t\t\tvo = this.getSubGeomData(mesh.subMeshes[subIdx].material || mesh.material);\n\n\t\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t\t// Copy over vertex attributes\n\t\t\t\tvIdx = vertices.length;\n\t\t\t\tnIdx = normals.length;\n\t\t\t\ttIdx = tangents.length;\n\t\t\t\tuIdx = vo.uvs.length;\n\t\t\t\tlen = subGeom.numVertices;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\n\t\t\t\t\t// Position\n\t\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t\t// Normal\n\t\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t\t// Tangent\n\t\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t\t// UV\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t\t}\n\n\t\t\t\t// Copy over triangle indices\n\t\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\t\tiIdx = vo.indices.length;\n\t\t\t\tlen = subGeom.numTriangles;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcalc = i*3;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 1] + indexOffset;\n\t\t\t\t\tvo.indices[iIdx++] = subGeom.indices[calc + 2] + indexOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!this._objectSpace) {\n\t\t\t\t\tmesh.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, normals, normals);\n\t\t\t\t\tMatrix3DUtils.deltaTransformVectors(mesh.sceneTransform, tangents, tangents);\n\n\t\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\t\tlen = vertices.length;\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispose)\n\t\t\t\tthis._toDispose.push(mesh);\n\t\t}\n\t}\n\n\tprivate getSubGeomData(material:MaterialBase):GeometryVO\n\t{\n\t\tvar data:GeometryVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._geomVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._geomVOs[i].material == material) {\n\t\t\t\t\tdata = this._geomVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._geomVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._geomVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GeometryVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._geomVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Mesh, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Mesh && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Mesh> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GeometryVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGeometryTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGeometryTransform;",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Geometry\t\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport Mesh\t\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleData\");\nimport ParticleGeometry\t\t\t\t\t= require(\"awayjs-renderergl/lib/base/ParticleGeometry\");\nimport ParticleGeometryTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGeometryTransform\");\n\n/**\n * ...\n */\nclass ParticleGeometryHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGeometry(geometries:Array<Geometry>, transforms:Array<ParticleGeometryTransform> = null):ParticleGeometry\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar subGeometries:Array<TriangleSubGeometry> = new Array<TriangleSubGeometry>();\n\t\tvar numParticles:number /*uint*/ = geometries.length;\n\n\t\tvar sourceSubGeometries:Array<TriangleSubGeometry>;\n\t\tvar sourceSubGeometry:TriangleSubGeometry;\n\t\tvar numSubGeometries:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar subGeometry:TriangleSubGeometry;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceSubGeometries = <Array<TriangleSubGeometry>> geometries[i].subGeometries;\n\t\t\tnumSubGeometries = sourceSubGeometries.length;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numSubGeometries; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(subGeometries.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceSubGeometry = sourceSubGeometries[srcIndex];\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceSubGeometry.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGeometryHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = subGeometries.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\tsubGeometries.push(new TriangleSubGeometry(true));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\tsubGeometry = subGeometries[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceSubGeometry.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.subGeometry = subGeometry;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceSubGeometry.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleSubGeometry = sourceSubGeometry;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:Array<number>;\n\t\t\t\tvar sourceNormals:Array<number>;\n\t\t\t\tvar sourceTangents:Array<number>;\n\t\t\t\tvar sourceUVs:Array<number>;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tcompact.numTriangles;\n\t\t\t\t\tsourcePositions = compact.positions;\n\t\t\t\t\tsourceNormals = compact.vertexNormals;\n\t\t\t\t\tsourceTangents = compact.vertexTangents;\n\t\t\t\t\tsourceUVs = compact.uvs;\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGeometryTransform:ParticleGeometryTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGeometryTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGeometryTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGeometryTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tsourcePositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tsourceNormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\tsourceTangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tsourceUVs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\tvar sourceIndices:Array<number> /*uint*/ = sourceSubGeometry.indices;\n\t\t\t\ttempLen = sourceSubGeometry.numTriangles;\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar particleGeometry:ParticleGeometry = new ParticleGeometry();\n\t\tparticleGeometry.particles = particles;\n\t\tparticleGeometry.numParticles = numParticles;\n\n\t\tnumParticles = subGeometries.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsubGeometry = subGeometries[i];\n\t\t\tsubGeometry.autoDeriveNormals = false;\n\t\t\tsubGeometry.autoDeriveTangents = false;\n\t\t\tsubGeometry.updateIndices(indicesVector[i]);\n\t\t\tsubGeometry.updatePositions(positionsVector[i]);\n\t\t\tsubGeometry.updateVertexNormals(normalsVector[i]);\n\t\t\tsubGeometry.updateVertexTangents(tangentsVector[i]);\n\t\t\tsubGeometry.updateUVs(uvsVector[i]);\n\t\t\tparticleGeometry.addSubGeometry(subGeometry);\n\t\t}\n\n\t\treturn particleGeometry;\n\t}\n}\n\nexport = ParticleGeometryHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Array<number> = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.copyRawDataFrom([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zFar/(zFar - zNear), 1.0, 0.0, 0.0, (zNear*zFar)/(zNear - zFar), 0.0]);\n\t}\n}\n\nexport = PerspectiveMatrix3D;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\n\n/**\n *\n * @class away.pool.Sampler2DVO\n */\nclass Sampler2DVO extends SamplerVOBase\n{\n\tpublic sampler2D:Sampler2D;\n\n\tpublic fragmentReg:ShaderRegisterElement;\n\n\tpublic fragmentIndex:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper(stage);\n\t}\n\n\n\tpublic initProperties(sampler2D:Sampler2D, regCache:ShaderRegisterCache)\n\t{\n\t\tthis.sampler2D = sampler2D;\n\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\n\t\tthis.samplerIndex = this.samplerReg.index;\n\n\t\tif (this.sampler2D.imageRect) {\n\t\t\tthis.fragmentReg = regCache.getFreeFragmentConstant();\n\t\t\tthis.fragmentIndex = this.fragmentReg.index*4;\n\t\t}\n\t}\n\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = (shader.repeatTextures? \"wrap\":\"clamp\");\n\t\tvar format:string = this.getFormatString(this.sampler2D);\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//handles texture atlasing\n\t\tif (this.sampler2D.imageRect) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + this.fragmentReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + this.fragmentReg + \".zw\\n\";\n\t\t} else {\n\t\t\ttemp = inputReg;\n\t\t}\n\n\t\tcode += \"tex \" + targetReg + \", \" + temp + \", \" + this.samplerReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._stage.getImageObject(this.sampler2D.image2D).activate(this.samplerIndex, this.sampler2D.repeat || shader.repeatTextures, this.sampler2D.smooth || shader.useSmoothTextures, this.sampler2D.mipmap || shader.useMipmapping);\n\n\t\tif (this.sampler2D.imageRect) {\n\t\t\tvar index:number = this.fragmentIndex;\n\t\t\tvar data:Array<number> = shader.fragmentConstantData;\n\t\t\tdata[index] = this.sampler2D.scaleX;\n\t\t\tdata[index + 1] = this.sampler2D.scaleY;\n\t\t\tdata[index + 2] = this.sampler2D.offsetX;\n\t\t\tdata[index + 3] = this.sampler2D.offsetY;\n\t\t}\n\t}\n}\n\nexport = Sampler2DVO;",
    "import SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport SamplerVOBase\t\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerVOBase\");\n\n/**\n *\n * @class away.pool.BitmapObject\n */\nclass SamplerCubeVO extends SamplerVOBase\n{\n\tpublic samplerCube:SamplerCube;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper(stage);\n\t}\n\n\tpublic initProperties(samplerCube:SamplerCube, regCache:ShaderRegisterCache)\n\t{\n\t\tthis.samplerCube = samplerCube;\n\n\t\tthis.samplerReg = regCache.getFreeTextureReg();\n\n\t\tthis.samplerIndex = this.samplerReg.index;\n\t}\n\n\tpublic getFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = this.getFormatString(this.samplerCube);\n\t\tvar filter:string = (shader.useSmoothTextures)? (shader.useMipmapping? \"linear,miplinear\" : \"linear\") : (shader.useMipmapping? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + this.samplerReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._stage.getImageObject(this.samplerCube.imageCube).activate(this.samplerIndex, false, this.samplerCube.smooth || shader.useSmoothTextures, this.samplerCube.mipmap || shader.useMipmapping);\n\t}\n}\n\nexport = SamplerCubeVO;",
    "import SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n *\n * @class away.pool.SamplerVOBase\n */\nclass SamplerVOBase\n{\n\tpublic _stage:Stage;\n\n\tpublic samplerReg:ShaderRegisterElement;\n\n\tpublic samplerIndex:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic getFormatString(bitmap:SamplerBase):string\n\t{\n\t\tswitch (bitmap.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = SamplerVOBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport Sampler2DVO\t\t\t\t= require(\"awayjs-renderergl/lib/vos/Sampler2DVO\");\n\n/**\n *\n * @class away.pool.Single2DTextureVO\n */\nclass Single2DTextureVO extends TextureVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = Single2DTexture;\n\n\tprivate _single2DTexture:Single2DTexture;\n\n\tprivate _sampler2DVO:Sampler2DVO;\n\n\tconstructor(pool:TextureVOPool, single2DTexture:Single2DTexture, stage:Stage)\n\t{\n\t\tsuper(pool, single2DTexture, stage);\n\n\t\tthis._single2DTexture = single2DTexture;\n\n\t\tthis._sampler2DVO = new Sampler2DVO(stage);\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\t\tthis._sampler2DVO.initProperties(this._single2DTexture.sampler2D, regCache);\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\treturn this._sampler2DVO.getFragmentCode(shader, targetReg, regCache, inputReg);\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._sampler2DVO.activate(shader);\n\t}\n}\n\nexport = Single2DTextureVO;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport SamplerCubeVO\t\t\t= require(\"awayjs-renderergl/lib/vos/SamplerCubeVO\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass SingleCubeTextureVO extends TextureVOBase\n{\n\t/**\n\t *\n\t */\n\tpublic static assetClass:IAssetClass = SingleCubeTexture;\n\n\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\n\tprivate _samplerCubeVO:SamplerCubeVO;\n\n\tconstructor(pool:TextureVOPool, singleCubeTexture:SingleCubeTexture, stage:Stage)\n\t{\n\t\tsuper(pool, singleCubeTexture, stage);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\n\t\tthis._samplerCubeVO = new SamplerCubeVO(stage);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase, includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tshader.usesLocalPosFragment = true;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\t\tthis._samplerCubeVO.initProperties(this._singleCubeTexture.samplerCube, regCache);\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement):string\n\t{\n\t\treturn this._samplerCubeVO.getFragmentCode(shader, targetReg, regCache, inputReg);\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthis._samplerCubeVO.activate(shader);\n\t}\n}\n\nexport = SingleCubeTextureVO;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ITextureVO\t\t\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport TextureVOPool\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOPool\");\n\n/**\n *\n * @class away.pool.TextureVOBaseBase\n */\nclass TextureVOBase implements ITextureVO\n{\n\tprivate _pool:TextureVOPool;\n\tprivate _texture:TextureBase;\n\n\tpublic _stage:Stage;\n\n\tpublic invalid:boolean;\n\n\tconstructor(pool:TextureVOPool, texture:TextureBase, stage:Stage)\n\t{\n\t\tthis._pool = pool;\n\t\tthis._texture = texture;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic _iInitRegisters(shader:ShaderBase, regCache:ShaderRegisterCache)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this._texture);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic activate(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = TextureVOBase;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ITextureVOClass\t\t\t= require(\"awayjs-renderergl/lib/vos/ITextureVOClass\");\nimport TextureVOBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/vos/TextureVOBase\");\nimport Single2DTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/Single2DTextureVO\");\nimport SingleCubeTextureVO\t\t= require(\"awayjs-renderergl/lib/vos/SingleCubeTextureVO\");\n\n/**\n * @class away.pool.TextureVOPool\n */\nclass TextureVOPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static _pools:Object = new Object();\n\n\tpublic _stage:Stage;\n\tprivate _pool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(texture:TextureBase):TextureVOBase\n\t{\n\t\treturn (this._pool[texture.id] || (this._pool[texture.id] = texture._iAddTextureVO(new (TextureVOPool.getClass(texture))(this, texture, this._stage))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(texture:TextureBase)\n\t{\n\t\ttexture._iRemoveTextureVO(this._pool[texture.id]);\n\n\t\tthis._pool[texture.id] = null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\tthis._pool[id].dispose();\n\n\t\tTextureVOPool.disposePool(this._stage);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderPool\n\t */\n\tpublic static getPool(stage:Stage):TextureVOPool\n\t{\n\t\treturn (TextureVOPool._pools[stage.stageIndex] || (TextureVOPool._pools[stage.stageIndex] = new TextureVOPool(stage)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tpublic static disposePool(stage:Stage)\n\t{\n\t\tTextureVOPool._pools[stage.stageIndex] = undefined;\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(textureVOClass:ITextureVOClass)\n\t{\n\t\tTextureVOPool.classPool[textureVOClass.assetClass.assetType] = textureVOClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(texture:TextureBase):ITextureVOClass\n\t{\n\t\treturn TextureVOPool.classPool[texture.assetType];\n\t}\n\n\tprivate static main = TextureVOPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tTextureVOPool.registerClass(Single2DTextureVO);\n\t\tTextureVOPool.registerClass(SingleCubeTextureVO);\n\t}\n}\n\nexport = TextureVOPool;"
  ],
  "sourceRoot": ""
}