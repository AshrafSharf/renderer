{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "../index.ts",
    "lib/DefaultRenderer.ts",
    "lib/DepthRenderer.ts",
    "lib/DistanceRenderer.ts",
    "lib/Filter3DRenderer.ts",
    "lib/RendererBase.ts",
    "lib/lib/animators/AnimationSetBase.ts",
    "lib/lib/animators/AnimatorBase.ts",
    "lib/lib/animators/ParticleAnimationSet.ts",
    "lib/lib/animators/ParticleAnimator.ts",
    "lib/lib/animators/SkeletonAnimationSet.ts",
    "lib/lib/animators/SkeletonAnimator.ts",
    "lib/lib/animators/VertexAnimationSet.ts",
    "lib/lib/animators/VertexAnimator.ts",
    "lib/animators/lib/animators/data/AnimationElements.ts",
    "lib/animators/lib/animators/data/AnimationRegisterCache.ts",
    "lib/animators/lib/animators/data/ColorSegmentPoint.ts",
    "lib/animators/lib/animators/data/JointPose.ts",
    "lib/animators/lib/animators/data/ParticleAnimationData.ts",
    "lib/animators/lib/animators/data/ParticlePropertiesMode.ts",
    "lib/animators/lib/animators/data/ParticleProperties.ts",
    "lib/animators/lib/animators/data/SkeletonJoint.ts",
    "lib/animators/lib/animators/data/SkeletonPose.ts",
    "lib/animators/lib/animators/data/Skeleton.ts",
    "lib/animators/lib/animators/data/VertexAnimationMode.ts",
    "lib/animators/lib/animators/nodes/AnimationClipNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleAccelerationNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBillboardNode.ts",
    "lib/animators/lib/animators/nodes/ParticleColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleFollowNode.ts",
    "lib/animators/lib/animators/nodes/ParticleInitialColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleOrbitNode.ts",
    "lib/animators/lib/animators/nodes/ParticleOscillatorNode.ts",
    "lib/animators/lib/animators/nodes/ParticlePositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "lib/animators/lib/animators/nodes/ParticleScaleNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "lib/animators/lib/animators/nodes/ParticleTimeNode.ts",
    "lib/animators/lib/animators/nodes/ParticleUVNode.ts",
    "lib/animators/lib/animators/nodes/ParticleVelocityNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonClipNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/VertexClipNode.ts",
    "lib/animators/lib/animators/states/AnimationClipState.ts",
    "lib/animators/lib/animators/states/AnimationStateBase.ts",
    "lib/animators/lib/animators/states/ParticleAccelerationState.ts",
    "lib/animators/lib/animators/states/ParticleBezierCurveState.ts",
    "lib/animators/lib/animators/states/ParticleBillboardState.ts",
    "lib/animators/lib/animators/states/ParticleColorState.ts",
    "lib/animators/lib/animators/states/ParticleFollowState.ts",
    "lib/animators/lib/animators/states/ParticleInitialColorState.ts",
    "lib/animators/lib/animators/states/ParticleOrbitState.ts",
    "lib/animators/lib/animators/states/ParticleOscillatorState.ts",
    "lib/animators/lib/animators/states/ParticlePositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToHeadingState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToPositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotationalVelocityState.ts",
    "lib/animators/lib/animators/states/ParticleScaleState.ts",
    "lib/animators/lib/animators/states/ParticleSegmentedColorState.ts",
    "lib/animators/lib/animators/states/ParticleSpriteSheetState.ts",
    "lib/animators/lib/animators/states/ParticleStateBase.ts",
    "lib/animators/lib/animators/states/ParticleTimeState.ts",
    "lib/animators/lib/animators/states/ParticleUVState.ts",
    "lib/animators/lib/animators/states/ParticleVelocityState.ts",
    "lib/animators/lib/animators/states/SkeletonBinaryLERPState.ts",
    "lib/animators/lib/animators/states/SkeletonClipState.ts",
    "lib/animators/lib/animators/states/SkeletonDifferenceState.ts",
    "lib/animators/lib/animators/states/SkeletonDirectionalState.ts",
    "lib/animators/lib/animators/states/SkeletonNaryLERPState.ts",
    "lib/animators/lib/animators/states/VertexClipState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransition.ts",
    "lib/animators.ts",
    "lib/lib/elements/ElementsPool.ts",
    "lib/lib/elements/GL_ElementsBase.ts",
    "lib/lib/elements/GL_LineElements.ts",
    "lib/lib/elements/GL_SkyboxElements.ts",
    "lib/lib/elements/GL_TriangleElements.ts",
    "lib/elements.ts",
    "lib/lib/errors/AnimationSetError.ts",
    "lib/errors.ts",
    "lib/lib/events/AnimationStateEvent.ts",
    "lib/lib/events/AnimatorEvent.ts",
    "lib/lib/events/PassEvent.ts",
    "lib/lib/events/RTTEvent.ts",
    "lib/lib/events/ShadingMethodEvent.ts",
    "lib/events.ts",
    "lib/lib/filters/BlurFilter3D.ts",
    "lib/lib/filters/CompositeFilter3D.ts",
    "lib/lib/filters/FXAAFilter3D.ts",
    "lib/lib/filters/Filter3DBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DCompositeTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DFXAATask.ts",
    "lib/filters/lib/filters/tasks/Filter3DHBlurTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DTaskBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DVBlurTask.ts",
    "lib/filters.ts",
    "lib/lib/managers/RTTBufferManager.ts",
    "lib/managers.ts",
    "lib/lib/renderables/GL_BillboardRenderable.ts",
    "lib/lib/renderables/GL_GraphicRenderable.ts",
    "lib/lib/renderables/GL_LineSegmentRenderable.ts",
    "lib/lib/renderables/GL_RenderableBase.ts",
    "lib/lib/renderables/GL_SkyboxRenderable.ts",
    "lib/renderables.ts",
    "lib/lib/shaders/LightingShader.ts",
    "lib/lib/shaders/RegisterPool.ts",
    "lib/lib/shaders/ShaderBase.ts",
    "lib/lib/shaders/ShaderRegisterCache.ts",
    "lib/lib/shaders/ShaderRegisterData.ts",
    "lib/lib/shaders/ShaderRegisterElement.ts",
    "lib/shaders/lib/shaders/compilers/CompilerBase.ts",
    "lib/shaders/lib/shaders/compilers/LightingCompiler.ts",
    "lib/shaders.ts",
    "lib/lib/sort/RenderableMergeSort.ts",
    "lib/lib/sort/RenderableNullSort.ts",
    "lib/sort.ts",
    "lib/lib/surfaces/GL_BasicMaterialSurface.ts",
    "lib/lib/surfaces/GL_DepthSurface.ts",
    "lib/lib/surfaces/GL_DistanceSurface.ts",
    "lib/lib/surfaces/GL_SkyboxSurface.ts",
    "lib/lib/surfaces/GL_SurfaceBase.ts",
    "lib/lib/surfaces/GL_SurfacePassBase.ts",
    "lib/lib/surfaces/SurfacePool.ts",
    "lib/surfaces/lib/surfaces/passes/BasicMaterialPass.ts",
    "lib/surfaces/lib/surfaces/passes/PassBase.ts",
    "lib/surfaces.ts",
    "lib/lib/textures/GL_Single2DTexture.ts",
    "lib/lib/textures/GL_SingleCubeTexture.ts",
    "lib/lib/textures/GL_TextureBase.ts",
    "lib/textures.ts",
    "lib/tools/lib/tools/commands/Merge.ts",
    "lib/tools/lib/tools/data/ParticleGraphicsTransform.ts",
    "lib/tools.ts",
    "lib/lib/utils/ParticleGraphicsHelper.ts",
    "lib/lib/utils/PerspectiveMatrix3D.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "animators",
    "elements",
    "errors",
    "events",
    "filters",
    "managers",
    "renderables",
    "shaders",
    "sort",
    "surfaces",
    "textures",
    "tools",
    "utils",
    "DefaultRenderer_1",
    "DefaultRenderer",
    "default",
    "DepthRenderer_1",
    "DepthRenderer",
    "DistanceRenderer_1",
    "DistanceRenderer",
    "Filter3DRenderer_1",
    "Filter3DRenderer",
    "RendererBase_1",
    "RendererBase",
    "BasicMaterial_1",
    "Skybox_1",
    "Billboard_1",
    "LineSegment_1",
    "LineElements_1",
    "TriangleElements_1",
    "Graphic_1",
    "Single2DTexture_1",
    "SingleCubeTexture_1",
    "SurfacePool",
    "registerAbstraction",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "ElementsPool",
    "GL_LineElements",
    "GL_TriangleElements",
    "ShaderBase",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "./lib/DefaultRenderer",
    "./lib/DepthRenderer",
    "./lib/DistanceRenderer",
    "./lib/Filter3DRenderer",
    "./lib/RendererBase",
    "./lib/animators",
    "./lib/elements",
    "./lib/errors",
    "./lib/events",
    "./lib/filters",
    "./lib/managers",
    "./lib/renderables",
    "./lib/shaders",
    "./lib/sort",
    "./lib/surfaces",
    "./lib/textures",
    "./lib/tools",
    "./lib/utils",
    "awayjs-display/lib/display/Billboard",
    "undefined",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-renderergl/lib/DefaultRenderer",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "BitmapImage2D_1",
    "Matrix3D_1",
    "Vector3D_1",
    "ContextGLCompareMode_1",
    "ContextGLClearMask_1",
    "GL_SkyboxElements_1",
    "RTTBufferManager_1",
    "SurfacePool_1",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_antiAlias",
    "_directionalLights",
    "Array",
    "_pointLights",
    "_lightProbes",
    "shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "_skyBoxSurfacePool",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "enterNode",
    "node",
    "enter",
    "debugVisible",
    "applyEntity",
    "bounds",
    "boundsPrimitive",
    "render",
    "camera",
    "scene",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "len",
    "light",
    "shadowMapper",
    "shadowsEnabled",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "_skybox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getAbstraction",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "_cameraTransform",
    "updateSkyboxProjection",
    "pass",
    "surfaceGL",
    "surface",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "applyDirectionalLight",
    "entity",
    "push",
    "applyLightProbe",
    "applyPointLight",
    "applySkybox",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "./DepthRenderer",
    "./DistanceRenderer",
    "./Filter3DRenderer",
    "./RendererBase",
    "./elements/GL_SkyboxElements",
    "./managers/RTTBufferManager",
    "./surfaces/SurfacePool",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "awayjs-renderergl/lib/DepthRenderer",
    "GL_DepthSurface_1",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iCollectionMark",
    "isCastingShadow",
    "./surfaces/GL_DepthSurface",
    "awayjs-renderergl/lib/DistanceRenderer",
    "GL_DistanceSurface_1",
    "./surfaces/GL_DistanceSurface",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "ContextGLDrawMode_1",
    "ContextGLBlendFactor_1",
    "ContextGLVertexBufferFormat_1",
    "RTTEvent_1",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "FLOAT_2",
    "setRenderTarget",
    "activate",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "./events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "awayjs-renderergl/lib/RendererBase",
    "Matrix3DUtils_1",
    "Point_1",
    "Rectangle_1",
    "EventDispatcher_1",
    "RendererEvent_1",
    "AGALMiniAssembler_1",
    "StageEvent_1",
    "StageManager_1",
    "ElementsPool_1",
    "RenderableMergeSort_1",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_cameraForward",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_numCullPlanes",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_abstractionClassPool",
    "_customCullPlanes",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "id",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "renderableClass",
    "assetClass",
    "renderableGL",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_viewportDirty",
    "_scissorDirty",
    "_pBlendedRenderableHead",
    "_pOpaqueRenderableHead",
    "_cullPlanes",
    "frustumPlanes",
    "_cameraPosition",
    "sceneTransform",
    "getForward",
    "traversePartitions",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "LESS",
    "head",
    "first",
    "LESS_EQUAL",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "next",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "isInFrustum",
    "_sourceEntity",
    "_zIndex",
    "zOffset",
    "subtract",
    "dotProduct",
    "_renderSceneTransform",
    "_acceptTraverser",
    "applyRenderable",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "zIndex",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "requiresBlending",
    "numElements",
    "obj",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "./elements/ElementsPool",
    "./sort/RenderableMergeSort",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase_1",
    "AbstractMethodError_1",
    "AnimationSetError_1",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "../errors/AnimationSetError",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame_1",
    "getTimer_1",
    "AnimatorEvent_1",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "sprite",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "transform",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "../events/AnimatorEvent",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationSetBase_1",
    "AnimationRegisterCache_1",
    "AnimationElements_1",
    "ParticleAnimationData_1",
    "ParticleProperties_1",
    "ParticlePropertiesMode_1",
    "ParticleTimeNode_1",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "animationElements",
    "_iGenerateAnimationElements",
    "parent",
    "graphics",
    "initParticleFunc",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "../animators/AnimationSetBase",
    "../animators/data/AnimationElements",
    "../animators/data/AnimationRegisterCache",
    "../animators/data/ParticleAnimationData",
    "../animators/data/ParticleProperties",
    "../animators/data/ParticlePropertiesMode",
    "../animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType_1",
    "AnimatorBase_1",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "../animators/AnimatorBase",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent_1",
    "JointPose_1",
    "SkeletonPose_1",
    "AnimationStateEvent_1",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetElements",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "../animators/data/JointPose",
    "../animators/data/SkeletonPose",
    "../events/AnimationStateEvent",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode_1",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "../animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "invalidateElements",
    "setNullPose",
    "elementsGL",
    "_iIndex",
    "_elementsPool",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "AnimationElements",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "ShaderRegisterCache_1",
    "ShaderRegisterElement_1",
    "AnimationRegisterCache",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "../../animators/../shaders/ShaderRegisterCache",
    "../../animators/../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "Quaternion_1",
    "JointPose",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "ParticleAnimationData",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "ParticlePropertiesMode",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "ParticleProperties",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "SkeletonPose",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "../../animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "VertexAnimationMode",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase_1",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase_1",
    "ParticleAccelerationState_1",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "../../animators/data/ParticlePropertiesMode",
    "../../animators/nodes/ParticleNodeBase",
    "../../animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState_1",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "../../animators/states/ParticleBezierCurveState",
    "../../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState_1",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "../../animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform_1",
    "ParticleAnimationSet_1",
    "ParticleColorState_1",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "../../animators/ParticleAnimationSet",
    "../../animators/states/ParticleColorState",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState_1",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "../../animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState_1",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "../../animators/states/ParticleInitialColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "ParticleNodeBase",
    "_pDataLength",
    "MODES",
    "_priority",
    0,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState_1",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "../../animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState_1",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "../../animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState_1",
    "ParticlePositionNode",
    "position",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "../../animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState_1",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "../../animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState_1",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "../../animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState_1",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "../../animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState_1",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "../../animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState_1",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "../../animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState_1",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "../../animators/states/ParticleSpriteSheetState",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "ParticleTimeState_1",
    "ParticleTimeNode",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "../../animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState_1",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "../../animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState_1",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "../../animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState_1",
    "SkeletonBinaryLERPNode",
    "../../animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "AnimationClipNodeBase_1",
    "SkeletonClipState_1",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "../../animators/nodes/AnimationClipNodeBase",
    "../../animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState_1",
    "SkeletonDifferenceNode",
    "../../animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState_1",
    "SkeletonDirectionalNode",
    "../../animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState_1",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "../../animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState_1",
    "VertexClipNode",
    "_translations",
    "geometry",
    "../../animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase_1",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "../../animators/states/AnimationStateBase",
    "../../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "ParticleStateBase_1",
    "ParticleAccelerationState",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "../../animators/states/ParticleStateBase",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "ParticleBezierCurveState",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "MathConsts_1",
    "Orientation3D_1",
    "ParticleBillboardState",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "ParticleColorState",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "ParticleFollowState",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "ParticleInitialColorState",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "ParticleOrbitState",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "ParticleOscillatorState",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "ParticlePositionState",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "ParticleRotateToPositionState",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "ParticleRotationalVelocityState",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "ParticleScaleState",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "ParticleSegmentedColorState",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleSpriteSheetState",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "ParticleStateBase",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "ParticleTimeState",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "ParticleUVState",
    "particleUVNode",
    "_particleUVNode",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "ParticleVelocityState",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "SkeletonBinaryLERPState",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "../../animators/data/SkeletonPose",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "AnimationClipState_1",
    "SkeletonClipState",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "../../animators/states/AnimationClipState",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "SkeletonDifferenceState",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "SkeletonDirectionalState",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "SkeletonNaryLERPState",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "VertexClipState",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "SkeletonBinaryLERPNode_1",
    "CrossfadeTransitionState_1",
    "CrossfadeTransitionNode",
    "../../animators/nodes/SkeletonBinaryLERPNode",
    "../../animators/transitions/CrossfadeTransitionState",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "../../animators/../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransitionNode_1",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "../../animators/transitions/CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/animators",
    "ColorSegmentPoint_1",
    "Skeleton_1",
    "SkeletonJoint_1",
    "ParticleAccelerationNode_1",
    "ParticleBezierCurveNode_1",
    "ParticleBillboardNode_1",
    "ParticleColorNode_1",
    "ParticleFollowNode_1",
    "ParticleInitialColorNode_1",
    "ParticleOrbitNode_1",
    "ParticleOscillatorNode_1",
    "ParticlePositionNode_1",
    "ParticleRotateToHeadingNode_1",
    "ParticleRotateToPositionNode_1",
    "ParticleRotationalVelocityNode_1",
    "ParticleScaleNode_1",
    "ParticleSegmentedColorNode_1",
    "ParticleSpriteSheetNode_1",
    "ParticleUVNode_1",
    "ParticleVelocityNode_1",
    "SkeletonClipNode_1",
    "SkeletonDifferenceNode_1",
    "SkeletonDirectionalNode_1",
    "SkeletonNaryLERPNode_1",
    "VertexClipNode_1",
    "CrossfadeTransition_1",
    "ParticleAnimator_1",
    "SkeletonAnimationSet_1",
    "SkeletonAnimator_1",
    "VertexAnimationSet_1",
    "VertexAnimator_1",
    "./animators/AnimationSetBase",
    "./animators/AnimatorBase",
    "./animators/ParticleAnimationSet",
    "./animators/ParticleAnimator",
    "./animators/SkeletonAnimationSet",
    "./animators/SkeletonAnimator",
    "./animators/VertexAnimationSet",
    "./animators/VertexAnimator",
    "./animators/data/AnimationElements",
    "./animators/data/AnimationRegisterCache",
    "./animators/data/ColorSegmentPoint",
    "./animators/data/JointPose",
    "./animators/data/ParticleAnimationData",
    "./animators/data/ParticleProperties",
    "./animators/data/ParticlePropertiesMode",
    "./animators/data/Skeleton",
    "./animators/data/SkeletonJoint",
    "./animators/data/SkeletonPose",
    "./animators/data/VertexAnimationMode",
    "./animators/nodes/AnimationClipNodeBase",
    "./animators/nodes/ParticleAccelerationNode",
    "./animators/nodes/ParticleBezierCurveNode",
    "./animators/nodes/ParticleBillboardNode",
    "./animators/nodes/ParticleColorNode",
    "./animators/nodes/ParticleFollowNode",
    "./animators/nodes/ParticleInitialColorNode",
    "./animators/nodes/ParticleNodeBase",
    "./animators/nodes/ParticleOrbitNode",
    "./animators/nodes/ParticleOscillatorNode",
    "./animators/nodes/ParticlePositionNode",
    "./animators/nodes/ParticleRotateToHeadingNode",
    "./animators/nodes/ParticleRotateToPositionNode",
    "./animators/nodes/ParticleRotationalVelocityNode",
    "./animators/nodes/ParticleScaleNode",
    "./animators/nodes/ParticleSegmentedColorNode",
    "./animators/nodes/ParticleSpriteSheetNode",
    "./animators/nodes/ParticleTimeNode",
    "./animators/nodes/ParticleUVNode",
    "./animators/nodes/ParticleVelocityNode",
    "./animators/nodes/SkeletonBinaryLERPNode",
    "./animators/nodes/SkeletonClipNode",
    "./animators/nodes/SkeletonDifferenceNode",
    "./animators/nodes/SkeletonDirectionalNode",
    "./animators/nodes/SkeletonNaryLERPNode",
    "./animators/nodes/VertexClipNode",
    "./animators/states/AnimationClipState",
    "./animators/states/AnimationStateBase",
    "./animators/states/ParticleAccelerationState",
    "./animators/states/ParticleBezierCurveState",
    "./animators/states/ParticleBillboardState",
    "./animators/states/ParticleColorState",
    "./animators/states/ParticleFollowState",
    "./animators/states/ParticleInitialColorState",
    "./animators/states/ParticleOrbitState",
    "./animators/states/ParticleOscillatorState",
    "./animators/states/ParticlePositionState",
    "./animators/states/ParticleRotateToHeadingState",
    "./animators/states/ParticleRotateToPositionState",
    "./animators/states/ParticleRotationalVelocityState",
    "./animators/states/ParticleScaleState",
    "./animators/states/ParticleSegmentedColorState",
    "./animators/states/ParticleSpriteSheetState",
    "./animators/states/ParticleStateBase",
    "./animators/states/ParticleTimeState",
    "./animators/states/ParticleUVState",
    "./animators/states/ParticleVelocityState",
    "./animators/states/SkeletonBinaryLERPState",
    "./animators/states/SkeletonClipState",
    "./animators/states/SkeletonDifferenceState",
    "./animators/states/SkeletonDirectionalState",
    "./animators/states/SkeletonNaryLERPState",
    "./animators/states/VertexClipState",
    "./animators/transitions/CrossfadeTransition",
    "./animators/transitions/CrossfadeTransitionNode",
    "./animators/transitions/CrossfadeTransitionState",
    "awayjs-renderergl/lib/elements/ElementsPool",
    "elementsClass",
    "_shader",
    "_elementsClass",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase_1",
    "AssetEvent_1",
    "ElementsUtils_1",
    "GL_ElementsBase",
    "pool",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferGL",
    "_indices",
    "getVertexBufferGL",
    "bufferId",
    "_updateVertices",
    "size",
    "unsigned",
    "onClear",
    "_overflow",
    "_setRenderState",
    "draw",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "GL_ElementsBase_1",
    "lineElements",
    "_constants",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "registerCache",
    "sharedRegisters",
    "_iGetFragmentCode",
    "colorBufferIndex",
    "colors",
    "thickness",
    "projection",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "setProgramConstantsFromMatrix",
    "numIndices",
    "drawVertices",
    "_pool",
    "../elements/GL_ElementsBase",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "GL_TriangleElements_1",
    "GL_SkyboxElements",
    "apply",
    "arguments",
    "../elements/GL_TriangleElements",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "triangleElements",
    "_triangleElements",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "viewMatrixReg",
    "viewMatrixIndex",
    "projectionDependencies",
    "projectionFragment",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "sceneMatrixIndex",
    "copyRawDataTo",
    "matrix3D",
    "CALCULATION_MATRIX",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "awayjs-renderergl/lib/elements",
    "GL_LineElements_1",
    "./elements/GL_ElementsBase",
    "./elements/GL_LineElements",
    "./elements/GL_TriangleElements",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "ErrorBase_1",
    "AnimationSetError",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-renderergl/lib/errors",
    "./errors/AnimationSetError",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "EventBase_1",
    "AnimationStateEvent",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "AnimatorEvent",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "awayjs-renderergl/lib/events/RTTEvent",
    "RTTEvent",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/events",
    "PassEvent_1",
    "ShadingMethodEvent_1",
    "./events/AnimationStateEvent",
    "./events/AnimatorEvent",
    "./events/PassEvent",
    "./events/ShadingMethodEvent",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask_1",
    "Filter3DVBlurTask_1",
    "Filter3DBase_1",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "../filters/Filter3DBase",
    "../filters/tasks/Filter3DHBlurTask",
    "../filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask_1",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "../filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask_1",
    "FXAAFilter3D",
    "_fxaaTask",
    "../filters/tasks/Filter3DFXAATask",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "_textureWidth",
    "_textureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "Filter3DTaskBase_1",
    "Filter3DCompositeTask",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "op",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "../../filters/tasks/Filter3DTaskBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "Filter3DFXAATask",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "Filter3DHBlurTask",
    "numSamples",
    "invW",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "Image2D_1",
    "Filter3DTaskBase",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "awayjs-core/lib/image/Image2D",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "Filter3DVBlurTask",
    "invH",
    "awayjs-renderergl/lib/filters",
    "BlurFilter3D_1",
    "CompositeFilter3D_1",
    "FXAAFilter3D_1",
    "./filters/BlurFilter3D",
    "./filters/CompositeFilter3D",
    "./filters/FXAAFilter3D",
    "./filters/Filter3DBase",
    "./filters/tasks/Filter3DCompositeTask",
    "./filters/tasks/Filter3DFXAATask",
    "./filters/tasks/Filter3DHBlurTask",
    "./filters/tasks/Filter3DTaskBase",
    "./filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "ImageUtils_1",
    "RTTBufferManager",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "../events/RTTEvent",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/managers",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "AttributesBuffer_1",
    "DefaultMaterialManager_1",
    "GL_RenderableBase_1",
    "GL_Billboard",
    "billboard",
    "renderer",
    "_billboard",
    "_pGetElements",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_id",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetSurface",
    "../renderables/GL_RenderableBase",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "_count",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "_renderer",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "RenderableEvent_1",
    "GL_RenderableBase",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onSurfaceUpdatedDelegate",
    "_onSurfaceUpdated",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_RENDER_OWNER",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_updateSurface",
    "_surfaceGL",
    "activeElements",
    "getDefaultMaterial",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "skybox",
    "_vertexArray",
    "_geometry",
    "far",
    "awayjs-renderergl/lib/renderables",
    "GL_BillboardRenderable_1",
    "GL_GraphicRenderable_1",
    "GL_LineSegmentRenderable_1",
    "GL_SkyboxRenderable_1",
    "./renderables/GL_BillboardRenderable",
    "./renderables/GL_GraphicRenderable",
    "./renderables/GL_LineSegmentRenderable",
    "./renderables/GL_RenderableBase",
    "./renderables/GL_SkyboxRenderable",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources_1",
    "ContextGLProfile_1",
    "ShaderBase_1",
    "LightingCompiler_1",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "dirLights",
    "directionalLights",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLights",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "../shaders/ShaderBase",
    "../shaders/compilers/LightingCompiler",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "BlendMode_1",
    "ArgumentError_1",
    "ContextGLTriangleFace_1",
    "CompilerBase_1",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "BACK",
    "usesPositionFragment",
    "imageIndices",
    "_updateProgram",
    "_programData",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "usesAnimation",
    "setCulling",
    "useBothSides",
    "NONE",
    "coordinateSystem",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "invalidateShader",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "../elements/ElementsPool",
    "../shaders/compilers/CompilerBase",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "RegisterPool_1",
    "ShaderRegisterCache",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeFragmentConstant",
    "removeFragmentTempUsage",
    "getFreeFragmentVectorTemp",
    "getFreeFragmentSingleTemp",
    "getFreeTextureReg",
    "../shaders/RegisterPool",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "ShaderRegisterElement",
    "component",
    "_toStr",
    "COMPONENTS",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "ShaderRegisterData_1",
    "CompilerBase",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_uvSource",
    "_uvTarget",
    "_iInitConstantData",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "../../shaders/ShaderRegisterCache",
    "../../shaders/ShaderRegisterData",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "LightingCompiler",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "../../shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/shaders",
    "LightingShader_1",
    "./shaders/LightingShader",
    "./shaders/RegisterPool",
    "./shaders/ShaderBase",
    "./shaders/ShaderRegisterCache",
    "./shaders/ShaderRegisterData",
    "./shaders/ShaderRegisterElement",
    "./shaders/compilers/CompilerBase",
    "./shaders/compilers/LightingCompiler",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-renderergl/lib/sort",
    "RenderableNullSort_1",
    "./sort/RenderableNullSort",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "BasicMaterialPass_1",
    "GL_SurfaceBase_1",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "../surfaces/GL_SurfaceBase",
    "../surfaces/passes/BasicMaterialPass",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_SurfacePassBase_1",
    "GL_DepthSurface",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "../surfaces/GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "DistanceRender",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "_texture",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "SurfaceEvent_1",
    "MaterialBase_1",
    "GL_SurfaceBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "bothSides",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "owners",
    "iOwners",
    "numOwners",
    "../events/PassEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "_surfaceClassGL",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "PassBase_1",
    "BasicMaterialPass",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "_render",
    "../../shaders/ShaderBase",
    "../../surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "PassBase",
    "_preserveAlpha",
    "../../events/PassEvent",
    "awayjs-renderergl/lib/surfaces",
    "GL_BasicMaterialSurface_1",
    "GL_DistanceSurface",
    "GL_SkyboxSurface_1",
    "./surfaces/GL_BasicMaterialSurface",
    "./surfaces/GL_SkyboxSurface",
    "./surfaces/GL_SurfaceBase",
    "./surfaces/GL_SurfacePassBase",
    "./surfaces/passes/BasicMaterialPass",
    "./surfaces/passes/PassBase",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "MappingMode_1",
    "GL_TextureBase_1",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "../textures/GL_TextureBase",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "ContextGLTextureFormat_1",
    "GL_TextureBase",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "awayjs-renderergl/lib/textures",
    "GL_Single2DTexture_1",
    "GL_SingleCubeTexture_1",
    "./textures/GL_Single2DTexture",
    "./textures/GL_SingleCubeTexture",
    "./textures/GL_TextureBase",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Sprite_1",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToSpritees",
    "sprites",
    "_toDispose",
    "_graphicVOs",
    "destSprite",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Sprite",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/tools",
    "Merge_1",
    "ParticleGraphicsTransform_1",
    "./tools/commands/Merge",
    "./tools/data/ParticleGraphicsTransform",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData_1",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "awayjs-renderergl/lib/utils",
    "ParticleGraphicsHelper_1",
    "PerspectiveMatrix3D_1",
    "./utils/ParticleGraphicsHelper",
    "./utils/PerspectiveMatrix3D"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar animators = require(\"./lib/animators\");\nexports.animators = animators;\nvar elements = require(\"./lib/elements\");\nexports.elements = elements;\nvar errors = require(\"./lib/errors\");\nexports.errors = errors;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar filters = require(\"./lib/filters\");\nexports.filters = filters;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar renderables = require(\"./lib/renderables\");\nexports.renderables = renderables;\nvar shaders = require(\"./lib/shaders\");\nexports.shaders = shaders;\nvar sort = require(\"./lib/sort\");\nexports.sort = sort;\nvar surfaces = require(\"./lib/surfaces\");\nexports.surfaces = surfaces;\nvar textures = require(\"./lib/textures\");\nexports.textures = textures;\nvar tools = require(\"./lib/tools\");\nexports.tools = tools;\nvar utils = require(\"./lib/utils\");\nexports.utils = utils;\nvar DefaultRenderer_1 = require(\"./lib/DefaultRenderer\");\nexports.DefaultRenderer = DefaultRenderer_1.default;\nvar DepthRenderer_1 = require(\"./lib/DepthRenderer\");\nexports.DepthRenderer = DepthRenderer_1.default;\nvar DistanceRenderer_1 = require(\"./lib/DistanceRenderer\");\nexports.DistanceRenderer = DistanceRenderer_1.default;\nvar Filter3DRenderer_1 = require(\"./lib/Filter3DRenderer\");\nexports.Filter3DRenderer = Filter3DRenderer_1.default;\nvar RendererBase_1 = require(\"./lib/RendererBase\");\nexports.RendererBase = RendererBase_1.default;\nvar BasicMaterial_1 = require(\"awayjs-display/lib/materials/BasicMaterial\");\nvar Skybox_1 = require(\"awayjs-display/lib/display/Skybox\");\nvar Billboard_1 = require(\"awayjs-display/lib/display/Billboard\");\nvar LineSegment_1 = require(\"awayjs-display/lib/display/LineSegment\");\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial_1.default);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox_1.default);\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements_1.default);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_BillboardRenderable, Billboard_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_GraphicRenderable, Graphic_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox_1.default);\n\n},{\"./lib/DefaultRenderer\":\"awayjs-renderergl/lib/DefaultRenderer\",\"./lib/DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"./lib/DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"./lib/Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"./lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./lib/animators\":\"awayjs-renderergl/lib/animators\",\"./lib/elements\":\"awayjs-renderergl/lib/elements\",\"./lib/errors\":\"awayjs-renderergl/lib/errors\",\"./lib/events\":\"awayjs-renderergl/lib/events\",\"./lib/filters\":\"awayjs-renderergl/lib/filters\",\"./lib/managers\":\"awayjs-renderergl/lib/managers\",\"./lib/renderables\":\"awayjs-renderergl/lib/renderables\",\"./lib/shaders\":\"awayjs-renderergl/lib/shaders\",\"./lib/sort\":\"awayjs-renderergl/lib/sort\",\"./lib/surfaces\":\"awayjs-renderergl/lib/surfaces\",\"./lib/textures\":\"awayjs-renderergl/lib/textures\",\"./lib/tools\":\"awayjs-renderergl/lib/tools\",\"./lib/utils\":\"awayjs-renderergl/lib/utils\",\"awayjs-display/lib/display/Billboard\":undefined,\"awayjs-display/lib/display/LineSegment\":undefined,\"awayjs-display/lib/display/Skybox\":undefined,\"awayjs-display/lib/graphics/Graphic\":undefined,\"awayjs-display/lib/graphics/LineElements\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/materials/BasicMaterial\":undefined,\"awayjs-display/lib/textures/Single2DTexture\":undefined,\"awayjs-display/lib/textures/SingleCubeTexture\":undefined}],\"awayjs-renderergl/lib/DefaultRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLClearMask_1 = require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nvar RendererBase_1 = require(\"./RendererBase\");\nvar DepthRenderer_1 = require(\"./DepthRenderer\");\nvar DistanceRenderer_1 = require(\"./DistanceRenderer\");\nvar Filter3DRenderer_1 = require(\"./Filter3DRenderer\");\nvar GL_SkyboxElements_1 = require(\"./elements/GL_SkyboxElements\");\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nvar DefaultRenderer = (function (_super) {\n    __extends(DefaultRenderer, _super);\n    /**\n     * Creates a new DefaultRenderer object.\n     *\n     * @param antiAlias The amount of anti-aliasing to use.\n     * @param renderMode The render mode to use.\n     */\n    function DefaultRenderer(stage, forceSoftware, profile, mode) {\n        if (stage === void 0) { stage = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this, stage, null, forceSoftware, profile, mode);\n        this._skyboxProjection = new Matrix3D_1.default();\n        this._antiAlias = 0;\n        this._directionalLights = new Array();\n        this._pointLights = new Array();\n        this._lightProbes = new Array();\n        if (stage)\n            this.shareContext = true;\n        this._pRttBufferManager = RTTBufferManager_1.default.getInstance(this._pStage);\n        this._pDepthRenderer = new DepthRenderer_1.default(this._pStage);\n        this._pDistanceRenderer = new DistanceRenderer_1.default(this._pStage);\n        if (this._width == 0)\n            this.width = window.innerWidth;\n        else\n            this._pRttBufferManager.viewWidth = this._width;\n        if (this._height == 0)\n            this.height = window.innerHeight;\n        else\n            this._pRttBufferManager.viewHeight = this._height;\n        this._skyBoxSurfacePool = new SurfacePool_1.default(GL_SkyboxElements_1.default, this._pStage);\n    }\n    Object.defineProperty(DefaultRenderer.prototype, \"antiAlias\", {\n        get: function () {\n            return this._antiAlias;\n        },\n        set: function (value) {\n            if (this._antiAlias == value)\n                return;\n            this._antiAlias = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"depthPrepass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._depthPrepass;\n        },\n        set: function (value) {\n            this._depthPrepass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"filters3d\", {\n        /**\n         *\n         * @returns {*}\n         */\n        get: function () {\n            return this._pFilter3DRenderer ? this._pFilter3DRenderer.filters : null;\n        },\n        set: function (value) {\n            if (value && value.length == 0)\n                value = null;\n            if (this._pFilter3DRenderer && !value) {\n                this._pFilter3DRenderer.dispose();\n                this._pFilter3DRenderer = null;\n            }\n            else if (!this._pFilter3DRenderer && value) {\n                this._pFilter3DRenderer = new Filter3DRenderer_1.default(this._pStage);\n                this._pFilter3DRenderer.filters = value;\n            }\n            if (this._pFilter3DRenderer) {\n                this._pFilter3DRenderer.filters = value;\n                this._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n            }\n            else {\n                this._pRequireDepthRender = false;\n                if (this._pDepthRender) {\n                    this._pDepthRender.dispose();\n                    this._pDepthRender = null;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DefaultRenderer.prototype.enterNode = function (node) {\n        var enter = _super.prototype.enterNode.call(this, node);\n        if (enter && node.debugVisible)\n            this.applyEntity(node.bounds.boundsPrimitive);\n        return enter;\n    };\n    DefaultRenderer.prototype.render = function (camera, scene) {\n        _super.prototype.render.call(this, camera, scene);\n        if (!this._pStage.recoverFromDisposal()) {\n            this._pBackBufferInvalid = true;\n            return;\n        }\n        if (this._pBackBufferInvalid)\n            this.pUpdateBackBuffer();\n        if (this.shareContext && this._pContext)\n            this._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask_1.default.DEPTH);\n        if (this._pFilter3DRenderer) {\n            this.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this.textureRatioY = this._pRttBufferManager.textureRatioY;\n        }\n        else {\n            this.textureRatioX = 1;\n            this.textureRatioY = 1;\n        }\n        if (this._pRequireDepthRender)\n            this.pRenderSceneDepthToTexture(camera, scene);\n        if (this._depthPrepass)\n            this.pRenderDepthPrepass(camera, scene);\n        //reset lights\n        this._directionalLights.length = 0;\n        this._pointLights.length = 0;\n        this._lightProbes.length = 0;\n        if (this._pFilter3DRenderer && this._pContext) {\n            this._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n            this._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n        }\n        else {\n            if (this.shareContext)\n                this._iRender(camera, scene, null, this._pScissorRect);\n            else\n                this._iRender(camera, scene);\n        }\n        if (!this.shareContext && this._pContext)\n            this._pContext.present();\n        // register that a view has been rendered\n        this._pStage.bufferClear = false;\n    };\n    DefaultRenderer.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this.updateLights(camera);\n        _super.prototype.pExecuteRender.call(this, camera, target, scissorRect, surfaceSelector);\n    };\n    DefaultRenderer.prototype.updateLights = function (camera) {\n        var len, i;\n        var light;\n        var shadowMapper;\n        len = this._directionalLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._directionalLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n        }\n        len = this._pointLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._pointLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DefaultRenderer.prototype.pDraw = function (camera) {\n        if (this._skybox) {\n            this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.ALWAYS);\n            this.drawSkybox(camera);\n        }\n        _super.prototype.pDraw.call(this, camera);\n    };\n    /**\n     * Draw the skybox if present.\n     **/\n    DefaultRenderer.prototype.drawSkybox = function (camera) {\n        var renderable = this.getAbstraction(this._skybox);\n        renderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n        this.updateSkyboxProjection(camera);\n        var pass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n        this.activatePass(renderable, pass, camera);\n        renderable._iRender(pass, camera, this._skyboxProjection);\n        this.deactivatePass(renderable, pass);\n    };\n    DefaultRenderer.prototype.updateSkyboxProjection = function (camera) {\n        var near = new Vector3D_1.default();\n        this._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n        this._skyboxProjection.copyRowTo(2, near);\n        var camPos = camera.scenePosition;\n        var cx = near.x;\n        var cy = near.y;\n        var cz = near.z;\n        var cw = -(near.x * camPos.x + near.y * camPos.y + near.z * camPos.z + Math.sqrt(cx * cx + cy * cy + cz * cz));\n        var signX = cx >= 0 ? 1 : -1;\n        var signY = cy >= 0 ? 1 : -1;\n        var p = new Vector3D_1.default(signX, signY, 1, 1);\n        var inverse = this._skyboxProjection.clone();\n        inverse.invert();\n        var q = inverse.transformVector(p);\n        this._skyboxProjection.copyRowTo(3, p);\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\n        this._skyboxProjection.copyRowFrom(2, new Vector3D_1.default(cx * a, cy * a, cz * a, cw * a));\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyDirectionalLight = function (entity) {\n        this._directionalLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyLightProbe = function (entity) {\n        this._lightProbes.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyPointLight = function (entity) {\n        this._pointLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applySkybox = function (entity) {\n        this._skybox = entity;\n    };\n    DefaultRenderer.prototype.dispose = function () {\n        if (!this.shareContext)\n            this._pStage.dispose();\n        this._pRttBufferManager.dispose();\n        this._pRttBufferManager = null;\n        this._pDepthRenderer.dispose();\n        this._pDistanceRenderer.dispose();\n        this._pDepthRenderer = null;\n        this._pDistanceRenderer = null;\n        this._pDepthRender = null;\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderDepthPrepass = function (camera, scene) {\n        this._pDepthRenderer.disableColor = true;\n        if (this._pFilter3DRenderer) {\n            this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n            this._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n        }\n        else {\n            this._pDepthRenderer.textureRatioX = 1;\n            this._pDepthRenderer.textureRatioY = 1;\n            this._pDepthRenderer._iRender(camera, scene);\n        }\n        this._pDepthRenderer.disableColor = false;\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderSceneDepthToTexture = function (camera, scene) {\n        if (this._pDepthTextureInvalid || !this._pDepthRender)\n            this.initDepthTexture(this._pStage.context);\n        this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n        this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n        this._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n    };\n    /**\n     * Updates the backbuffer dimensions.\n     */\n    DefaultRenderer.prototype.pUpdateBackBuffer = function () {\n        // No reason trying to configure back buffer if there is no context available.\n        // Doing this anyway (and relying on _stage to cache width/height for\n        // context does get available) means usesSoftwareRendering won't be reliable.\n        if (this._pStage.context && !this.shareContext) {\n            if (this._width && this._height) {\n                this._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n                this._pBackBufferInvalid = false;\n            }\n        }\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.initDepthTexture = function (context) {\n        this._pDepthTextureInvalid = false;\n        if (this._pDepthRender)\n            this._pDepthRender.dispose();\n        this._pDepthRender = new BitmapImage2D_1.default(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n    };\n    return DefaultRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DefaultRenderer;\n\n},{\"./DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"./DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"./Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-stagegl/lib/base/ContextGLClearMask\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/DepthRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"./RendererBase\");\nvar GL_DepthSurface_1 = require(\"./surfaces/GL_DepthSurface\");\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nvar DepthRenderer = (function (_super) {\n    __extends(DepthRenderer, _super);\n    /**\n     * Creates a new DepthRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DepthRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DepthSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DepthRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DepthRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DepthRenderer;\n\n},{\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\"}],\"awayjs-renderergl/lib/DistanceRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"./RendererBase\");\nvar GL_DistanceSurface_1 = require(\"./surfaces/GL_DistanceSurface\");\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nvar DistanceRenderer = (function (_super) {\n    __extends(DistanceRenderer, _super);\n    /**\n     * Creates a new DistanceRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DistanceRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DistanceSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DistanceRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DistanceRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRenderer;\n\n},{\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\"}],\"awayjs-renderergl/lib/Filter3DRenderer\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar RTTEvent_1 = require(\"./events/RTTEvent\");\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\n/**\n * @class away.render.Filter3DRenderer\n */\nvar Filter3DRenderer = (function () {\n    function Filter3DRenderer(stage) {\n        var _this = this;\n        this._filterSizesInvalid = true;\n        this._onRTTResizeDelegate = function (event) { return _this.onRTTResize(event); };\n        this._stage = stage;\n        this._rttManager = RTTBufferManager_1.default.getInstance(stage);\n        this._rttManager.addEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n    }\n    Filter3DRenderer.prototype.onRTTResize = function (event) {\n        this._filterSizesInvalid = true;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.getMainInputTexture = function (stage) {\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        return this._mainInputTexture;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"filters\", {\n        get: function () {\n            return this._filters;\n        },\n        set: function (value) {\n            this._filters = value;\n            this._filterTasksInvalid = true;\n            this._requireDepthRender = false;\n            if (!this._filters)\n                return;\n            for (var i = 0; i < this._filters.length; ++i)\n                if (this._filters[i].requireDepthRender)\n                    this._requireDepthRender = true;\n            this._filterSizesInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.updateFilterTasks = function (stage) {\n        var len;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (!this._filters) {\n            this._tasks = null;\n            return;\n        }\n        this._tasks = new Array();\n        len = this._filters.length - 1;\n        var filter;\n        for (var i = 0; i <= len; ++i) {\n            // make sure all internal tasks are linked together\n            filter = this._filters[i];\n            filter.setRenderTargets(i == len ? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n            this._tasks = this._tasks.concat(filter.tasks);\n        }\n        this._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n    };\n    Filter3DRenderer.prototype.render = function (stage, camera, depthTexture) {\n        var len;\n        var i;\n        var task;\n        var context = stage.context;\n        var indexBuffer = this._rttManager.indexBuffer;\n        var vertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n        if (!this._filters)\n            return;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        len = this._filters.length;\n        for (i = 0; i < len; ++i)\n            this._filters[i].update(stage, camera);\n        len = this._tasks.length;\n        if (len > 1) {\n            context.setProgram(this._tasks[0].getProgram(stage));\n            context.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            context.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        for (i = 0; i < len; ++i) {\n            task = this._tasks[i];\n            stage.setRenderTarget(task.target);\n            context.setProgram(task.getProgram(stage));\n            stage.getAbstraction(task.getMainInputTexture(stage)).activate(0, false);\n            if (!task.target) {\n                stage.scissorRect = null;\n                vertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n                context.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                context.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            }\n            context.clear(0.0, 0.0, 0.0, 0.0);\n            task.activate(stage, camera, depthTexture);\n            context.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n            context.drawIndices(ContextGLDrawMode_1.default.TRIANGLES, indexBuffer, 0, 6);\n            task.deactivate(stage);\n        }\n        context.setTextureAt(0, null);\n        context.setVertexBufferAt(0, null);\n        context.setVertexBufferAt(1, null);\n    };\n    Filter3DRenderer.prototype.updateFilterSizes = function () {\n        for (var i = 0; i < this._filters.length; ++i) {\n            this._filters[i].textureWidth = this._rttManager.textureWidth;\n            this._filters[i].textureHeight = this._rttManager.textureHeight;\n            this._filters[i].rttManager = this._rttManager;\n        }\n        this._filterSizesInvalid = true;\n    };\n    Filter3DRenderer.prototype.dispose = function () {\n        this._rttManager.removeEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n        this._rttManager = null;\n        this._stage = null;\n    };\n    return Filter3DRenderer;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DRenderer;\n\n},{\"./events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/RendererBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar RendererEvent_1 = require(\"awayjs-display/lib/events/RendererEvent\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar StageEvent_1 = require(\"awayjs-stagegl/lib/events/StageEvent\");\nvar StageManager_1 = require(\"awayjs-stagegl/lib/managers/StageManager\");\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\nvar ElementsPool_1 = require(\"./elements/ElementsPool\");\nvar RenderableMergeSort_1 = require(\"./sort/RenderableMergeSort\");\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nvar RendererBase = (function (_super) {\n    __extends(RendererBase, _super);\n    /**\n     * Creates a new RendererBase object.\n     */\n    function RendererBase(stage, surfaceClassGL, forceSoftware, profile, mode) {\n        var _this = this;\n        if (stage === void 0) { stage = null; }\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this);\n        this._objectPools = new Object();\n        this._abstractionPool = new Object();\n        this._activeMasksConfig = new Array();\n        this._registeredMasks = new Array();\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._cameraForward = new Vector3D_1.default();\n        this._viewPort = new Rectangle_1.default();\n        this._pBackBufferInvalid = true;\n        this._pDepthTextureInvalid = true;\n        this._depthPrepass = false;\n        this._backgroundR = 0;\n        this._backgroundG = 0;\n        this._backgroundB = 0;\n        this._backgroundAlpha = 1;\n        this.textureRatioX = 1;\n        this.textureRatioY = 1;\n        this._pRttViewProjectionMatrix = new Matrix3D_1.default();\n        this._localPos = new Point_1.default();\n        this._globalPos = new Point_1.default();\n        this._pScissorRect = new Rectangle_1.default();\n        this._pNumElements = 0;\n        this._disableColor = false;\n        this._renderBlended = true;\n        this._numCullPlanes = 0;\n        this._onViewportUpdatedDelegate = function (event) { return _this.onViewportUpdated(event); };\n        this._onContextUpdateDelegate = function (event) { return _this.onContextUpdate(event); };\n        //default sorting algorithm\n        this.renderableSorter = new RenderableMergeSort_1.default();\n        //set stage\n        this._pStage = stage || StageManager_1.default.getInstance().getFreeStage(forceSoftware, profile, mode);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.stage = value;\n         */\n        if (this._pStage.context)\n            this._pContext = this._pStage.context;\n        for (var i in ElementsPool_1.default._abstractionClassPool)\n            this._objectPools[i] = new SurfacePool_1.default(ElementsPool_1.default._abstractionClassPool[i], this._pStage, surfaceClassGL);\n    }\n    Object.defineProperty(RendererBase.prototype, \"cullPlanes\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._customCullPlanes;\n        },\n        set: function (value) {\n            this._customCullPlanes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"renderBlended\", {\n        get: function () {\n            return this._renderBlended;\n        },\n        set: function (value) {\n            this._renderBlended = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"disableColor\", {\n        get: function () {\n            return this._disableColor;\n        },\n        set: function (value) {\n            this._disableColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"numElements\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pNumElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"viewPort\", {\n        /**\n         * A viewPort rectangle equivalent of the Stage size and position.\n         */\n        get: function () {\n            return this._viewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"scissorRect\", {\n        /**\n         * A scissor rectangle equivalent of the view size and position.\n         */\n        get: function () {\n            return this._pScissorRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.x;\n        },\n        set: function (value) {\n            if (this.x == value)\n                return;\n            this._globalPos.x = this._localPos.x = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.y;\n        },\n        set: function (value) {\n            if (this.y == value)\n                return;\n            this._globalPos.y = this._localPos.y = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._pScissorRect.width = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewWidth = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._pScissorRect.height = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewHeight = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RendererBase.prototype.getAbstraction = function (renderable) {\n        return this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new RendererBase._abstractionClassPool[renderable.assetType](renderable, this));\n    };\n    /**\n     *\n     * @param image\n     */\n    RendererBase.prototype.clearAbstraction = function (renderable) {\n        this._abstractionPool[renderable.id] = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsClass\n     * @returns SurfacePool\n     */\n    RendererBase.prototype.getSurfacePool = function (elements) {\n        return this._objectPools[elements.assetType];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    RendererBase.registerAbstraction = function (renderableClass, assetClass) {\n        RendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n    };\n    RendererBase.prototype.activatePass = function (renderableGL, pass, camera) {\n        //clear unused vertex streams\n        for (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n            this._pContext.setVertexBufferAt(i, null);\n        //clear unused texture streams\n        for (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n            this._pContext.setTextureAt(i, null);\n        //check program data is uploaded\n        var programData = pass.shader.programData;\n        if (!programData.program) {\n            programData.program = this._pContext.createProgram();\n            var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n            var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n            programData.program.upload(vertexByteCode, fragmentByteCode);\n        }\n        //set program data\n        this._pContext.setProgram(programData.program);\n        //activate shader object through renderableGL\n        renderableGL._iActivate(pass, camera);\n    };\n    RendererBase.prototype.deactivatePass = function (renderableGL, pass) {\n        //deactivate shader object\n        renderableGL._iDeactivate(pass);\n        this._numUsedStreams = pass.shader.numUsedStreams;\n        this._numUsedTextures = pass.shader.numUsedTextures;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundR\", {\n        /**\n         * The background color's red component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundR;\n        },\n        set: function (value) {\n            if (this._backgroundR == value)\n                return;\n            this._backgroundR = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundG\", {\n        /**\n         * The background color's green component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundG;\n        },\n        set: function (value) {\n            if (this._backgroundG == value)\n                return;\n            this._backgroundG = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundB\", {\n        /**\n         * The background color's blue component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundB;\n        },\n        set: function (value) {\n            if (this._backgroundB == value)\n                return;\n            this._backgroundB = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"context\", {\n        get: function () {\n            return this._pContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"stage\", {\n        /**\n         * The Stage that will provide the ContextGL used for rendering.\n         */\n        get: function () {\n            return this._pStage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Disposes the resources used by the RendererBase.\n     */\n    RendererBase.prototype.dispose = function () {\n        for (var id in this._abstractionPool)\n            this._abstractionPool[id].clear();\n        this._abstractionPool = null;\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        this._pStage = null;\n        this._pContext = null;\n        /*\n         if (_backgroundImageRenderer) {\n         _backgroundImageRenderer.dispose();\n         _backgroundImageRenderer = null;\n         }\n         */\n    };\n    RendererBase.prototype.render = function (camera, scene) {\n        this._viewportDirty = false;\n        this._scissorDirty = false;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture.\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype._iRender = function (camera, scene, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        //TODO refactor setTarget so that rendertextures are created before this check\n        if (!this._pStage || !this._pContext)\n            return;\n        //reset head values\n        this._pBlendedRenderableHead = null;\n        this._pOpaqueRenderableHead = null;\n        this._pNumElements = 0;\n        this._cullPlanes = this._customCullPlanes ? this._customCullPlanes : camera.frustumPlanes;\n        this._numCullPlanes = this._cullPlanes ? this._cullPlanes.length : 0;\n        this._cameraPosition = camera.scenePosition;\n        this._cameraTransform = camera.sceneTransform;\n        this._cameraForward = Matrix3DUtils_1.default.getForward(camera.sceneTransform, this._cameraForward);\n        RendererBase._iCollectionMark++;\n        scene.traversePartitions(this);\n        //sort the resulting renderables\n        if (this.renderableSorter) {\n            this._pOpaqueRenderableHead = this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n            this._pBlendedRenderableHead = this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n        }\n        this._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n        this._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n        this.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n        // generate mip maps on target (if target exists) //TODO\n        //if (target)\n        //\t(<Texture>target).generateMipmaps();\n        // clear buffers\n        for (var i = 0; i < 8; ++i) {\n            this._pContext.setVertexBufferAt(i, null);\n            this._pContext.setTextureAt(i, null);\n        }\n    };\n    RendererBase.prototype._iRenderCascades = function (camera, scene, target, numCascades, scissorRects, cameras) {\n        this._pStage.setRenderTarget(target, true, 0);\n        this._pContext.clear(1, 1, 1, 1, 1, 0);\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS);\n        var head = this._pOpaqueRenderableHead;\n        var first = true;\n        //TODO cascades must have separate collectors, rather than separate draw commands\n        for (var i = numCascades - 1; i >= 0; --i) {\n            this._pStage.scissorRect = scissorRects[i];\n            //this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n            first = false;\n        }\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this._pStage.scissorRect = null;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n     *\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this._pStage.setRenderTarget(target, true, surfaceSelector);\n        if ((target || !this.shareContext) && !this._depthPrepass)\n            this._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n        this._pStage.scissorRect = scissorRect;\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.render();\n         */\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this.pDraw(camera);\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        //this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n        if (!this.shareContext) {\n            if (this._snapshotRequired && this._snapshotBitmapImage2D) {\n                this._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n                this._snapshotRequired = false;\n            }\n        }\n        this._pStage.scissorRect = null;\n    };\n    /*\n     * Will draw the renderer's output on next render to the provided bitmap data.\n     * */\n    RendererBase.prototype.queueSnapshot = function (bmd) {\n        this._snapshotRequired = true;\n        this._snapshotBitmapImage2D = bmd;\n    };\n    /**\n     * Performs the actual drawing of geometry to the target.\n     */\n    RendererBase.prototype.pDraw = function (camera) {\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        if (this._disableColor)\n            this._pContext.setColorMask(false, false, false, false);\n        this.drawRenderables(camera, this._pOpaqueRenderableHead);\n        if (this._renderBlended)\n            this.drawRenderables(camera, this._pBlendedRenderableHead);\n        if (this._disableColor)\n            this._pContext.setColorMask(true, true, true, true);\n    };\n    //private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n    //{\n    //\tvar renderableGL2:GL_RenderableBase;\n    //\tvar render:GL_SurfaceBase;\n    //\tvar pass:IPass;\n    //\n    //\twhile (renderableGL) {\n    //\t\trenderableGL2 = renderableGL;\n    //\t\trender = renderableGL.render;\n    //\t\tpass = render.passes[0] //assuming only one pass per material\n    //\n    //\t\tthis.activatePass(renderableGL, pass, camera);\n    //\n    //\t\tdo {\n    //\t\t\t// if completely in front, it will fall in a different cascade\n    //\t\t\t// do not use near and far planes\n    //\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n    //\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n    //\t\t\t} else {\n    //\t\t\t\trenderableGL2.cascaded = true;\n    //\t\t\t}\n    //\n    //\t\t\trenderableGL2 = renderableGL2.next;\n    //\n    //\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n    //\n    //\t\tthis.deactivatePass(renderableGL, pass);\n    //\n    //\t\trenderableGL = renderableGL2;\n    //\t}\n    //}\n    /**\n     * Draw a list of renderables.\n     *\n     * @param renderables The renderables to draw.\n     */\n    RendererBase.prototype.drawRenderables = function (camera, renderableGL) {\n        var i;\n        var len;\n        var renderableGL2;\n        var surfaceGL;\n        var passes;\n        var pass;\n        this._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n        this._registeredMasks.length = 0;\n        var gl = this._pContext[\"_gl\"];\n        if (gl) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        this._maskConfig = 0;\n        while (renderableGL) {\n            surfaceGL = renderableGL.surfaceGL;\n            passes = surfaceGL.passes;\n            // otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n            if (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n                renderableGL2 = renderableGL;\n                // fast forward\n                do {\n                    renderableGL2 = renderableGL2.next;\n                } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n            }\n            else {\n                if (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n                    this._activeMasksConfig = renderableGL.masksConfig;\n                    if (!this._activeMasksConfig.length) {\n                        // disable stencil\n                        if (gl) {\n                            gl.disable(gl.STENCIL_TEST);\n                            gl.stencilFunc(gl.ALWAYS, 0, 0xff);\n                            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n                        }\n                    }\n                    else {\n                        this._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n                    }\n                    this._activeMasksDirty = false;\n                }\n                //iterate through each shader object\n                len = passes.length;\n                for (i = 0; i < len; i++) {\n                    renderableGL2 = renderableGL;\n                    pass = passes[i];\n                    this.activatePass(renderableGL, pass, camera);\n                    do {\n                        if (renderableGL2.maskId !== -1) {\n                            if (i == 0)\n                                this._registerMask(renderableGL2);\n                        }\n                        else {\n                            renderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n                        }\n                        renderableGL2 = renderableGL2.next;\n                    } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n                    this.deactivatePass(renderableGL, pass);\n                }\n            }\n            renderableGL = renderableGL2;\n        }\n    };\n    /**\n     * Assign the context once retrieved\n     */\n    RendererBase.prototype.onContextUpdate = function (event) {\n        this._pContext = this._pStage.context;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundAlpha\", {\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        set: function (value) {\n            if (this._backgroundAlpha == value)\n                return;\n            this._backgroundAlpha = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /*\n     public get iBackground():Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*\n     public set iBackground(value:Texture2DBase)\n     {\n     if (this._backgroundImageRenderer && !value) {\n     this._backgroundImageRenderer.dispose();\n     this._backgroundImageRenderer = null;\n     }\n\n     if (!this._backgroundImageRenderer && value)\n     {\n\n     this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n     }\n\n\n     this._background = value;\n\n     if (this._backgroundImageRenderer)\n     this._backgroundImageRenderer.texture = value;\n     }\n     */\n    /*\n     public get backgroundImageRenderer():BackgroundImageRenderer\n     {\n     return _backgroundImageRenderer;\n     }\n     */\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyScissorUpdate = function () {\n        if (this._scissorDirty)\n            return;\n        this._scissorDirty = true;\n        if (!this._scissorUpdated)\n            this._scissorUpdated = new RendererEvent_1.default(RendererEvent_1.default.SCISSOR_UPDATED);\n        this.dispatchEvent(this._scissorUpdated);\n    };\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyViewportUpdate = function () {\n        if (this._viewportDirty)\n            return;\n        this._viewportDirty = true;\n        if (!this._viewPortUpdated)\n            this._viewPortUpdated = new RendererEvent_1.default(RendererEvent_1.default.VIEWPORT_UPDATED);\n        this.dispatchEvent(this._viewPortUpdated);\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.onViewportUpdated = function (event) {\n        this._viewPort = this._pStage.viewPort;\n        //TODO stop firing viewport updated for every stagegl viewport change\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._pStage.x;\n            this._pScissorRect.y = this._globalPos.y - this._pStage.y;\n            this.notifyScissorUpdate();\n        }\n        this.notifyViewportUpdate();\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.updateGlobalPos = function () {\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n            this._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n        }\n        else {\n            this._pScissorRect.x = 0;\n            this._pScissorRect.y = 0;\n            this._viewPort.x = this._globalPos.x;\n            this._viewPort.y = this._globalPos.y;\n        }\n        this.notifyScissorUpdate();\n    };\n    /**\n     *\n     * @param node\n     * @returns {boolean}\n     */\n    RendererBase.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n        node._iCollectionMark = RendererBase._iCollectionMark;\n        return enter;\n    };\n    RendererBase.prototype.applyEntity = function (entity) {\n        this._sourceEntity = entity;\n        // project onto camera's z-axis\n        this._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n        //save sceneTransform\n        this._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n        //collect renderables\n        entity._acceptTraverser(this);\n    };\n    RendererBase.prototype.applyRenderable = function (renderable) {\n        var renderableGL = this.getAbstraction(renderable);\n        var surfaceGL = renderableGL.surfaceGL;\n        //set local vars for faster referencing\n        renderableGL.surfaceID = surfaceGL.surfaceID;\n        renderableGL.renderOrderId = surfaceGL.renderOrderId;\n        renderableGL.cascaded = false;\n        renderableGL.sourceEntity = this._sourceEntity;\n        renderableGL.zIndex = this._zIndex;\n        renderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n        renderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n        //store reference to scene transform\n        renderableGL.renderSceneTransform = this._renderSceneTransform;\n        if (surfaceGL.requiresBlending) {\n            renderableGL.next = this._pBlendedRenderableHead;\n            this._pBlendedRenderableHead = renderableGL;\n        }\n        else {\n            renderableGL.next = this._pOpaqueRenderableHead;\n            this._pOpaqueRenderableHead = renderableGL;\n        }\n        this._pNumElements += renderableGL.elements.numElements;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    RendererBase.prototype._registerMask = function (obj) {\n        //console.log(\"registerMask\");\n        this._registeredMasks.push(obj);\n    };\n    RendererBase.prototype._renderMasks = function (camera, masks) {\n        var gl = this._pContext[\"_gl\"];\n        //var oldRenderTarget = this._stage.renderTarget;\n        //this._stage.setRenderTarget(this._image);\n        //this._stage.clear();\n        this._pContext.setColorMask(false, false, false, false);\n        // TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n        //context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n        gl.enable(gl.STENCIL_TEST);\n        this._maskConfig++;\n        gl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n        gl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n        var numLayers = masks.length;\n        var numRenderables = this._registeredMasks.length;\n        var renderableGL;\n        var children;\n        var numChildren;\n        var mask;\n        for (var i = 0; i < numLayers; ++i) {\n            if (i != 0) {\n                gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n                gl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n                this._maskConfig++;\n            }\n            children = masks[i];\n            numChildren = children.length;\n            for (var j = 0; j < numChildren; ++j) {\n                mask = children[j];\n                for (var k = 0; k < numRenderables; ++k) {\n                    renderableGL = this._registeredMasks[k];\n                    //console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n                    if (renderableGL.maskId == mask.id) {\n                        //console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n                        this._drawMask(camera, renderableGL);\n                    }\n                }\n            }\n        }\n        gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        this._pContext.setColorMask(true, true, true, true);\n        //this._stage.setRenderTarget(oldRenderTarget);\n    };\n    RendererBase.prototype._drawMask = function (camera, renderableGL) {\n        var surfaceGL = renderableGL.surfaceGL;\n        var passes = surfaceGL.passes;\n        var len = passes.length;\n        var pass = passes[len - 1];\n        this.activatePass(renderableGL, pass, camera);\n        // only render last pass for now\n        renderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n        this.deactivatePass(renderableGL, pass);\n    };\n    RendererBase.prototype._checkMasksConfig = function (masksConfig) {\n        if (this._activeMasksConfig.length != masksConfig.length)\n            return true;\n        var numLayers = masksConfig.length;\n        var numChildren;\n        var childConfig;\n        var activeNumChildren;\n        var activeChildConfig;\n        for (var i = 0; i < numLayers; i++) {\n            childConfig = masksConfig[i];\n            numChildren = childConfig.length;\n            activeChildConfig = this._activeMasksConfig[i];\n            activeNumChildren = activeChildConfig.length;\n            if (activeNumChildren != numChildren)\n                return true;\n            for (var j = 0; j < numChildren; j++) {\n                if (activeChildConfig[j] != childConfig[j])\n                    return true;\n            }\n        }\n        return false;\n    };\n    RendererBase._iCollectionMark = 0;\n    RendererBase._abstractionClassPool = new Object();\n    return RendererBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RendererBase;\n\n},{\"./elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"./sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/events/RendererEvent\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/events/StageEvent\":undefined,\"awayjs-stagegl/lib/managers/StageManager\":undefined}],\"awayjs-renderergl/lib/animators/AnimationSetBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AnimationSetError_1 = require(\"../errors/AnimationSetError\");\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nvar AnimationSetBase = (function (_super) {\n    __extends(AnimationSetBase, _super);\n    function AnimationSetBase() {\n        _super.call(this);\n        this._animations = new Array();\n        this._animationNames = new Array();\n        this._animationDictionary = new Object();\n    }\n    /**\n     * Retrieves a temporary GPU register that's still free.\n     *\n     * @param exclude An array of non-free temporary registers.\n     * @param excludeAnother An additional register that's not free.\n     * @return A temporary register that can be used.\n     */\n    AnimationSetBase.prototype._pFindTempReg = function (exclude, excludeAnother) {\n        if (excludeAnother === void 0) { excludeAnother = null; }\n        var i = 0;\n        var reg;\n        while (true) {\n            reg = \"vt\" + i;\n            if (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n                return reg;\n            ++i;\n        }\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"usesCPU\", {\n        /**\n         * Indicates whether the properties of the animation data contained within the set combined with\n         * the vertex registers already in use on shading materials allows the animation data to utilise\n         * GPU calls.\n         */\n        get: function () {\n            return this._usesCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called by the material to reset the GPU indicator before testing whether register space in the shader\n     * is available for running GPU-based animation code.\n     *\n     * @private\n     */\n    AnimationSetBase.prototype.resetGPUCompatibility = function () {\n        this._usesCPU = false;\n    };\n    AnimationSetBase.prototype.cancelGPUCompatibility = function () {\n        this._usesCPU = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALVertexCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.activate = function (shader, stage) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.deactivate = function (shader, stage) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALUVCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.doneAGALCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationSetBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animations\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animationNames\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animationNames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check to determine whether a state is registered in the animation set under the given name.\n     *\n     * @param stateName The name of the animation state object to be checked.\n     */\n    AnimationSetBase.prototype.hasAnimation = function (name) {\n        return this._animationDictionary[name] != null;\n    };\n    /**\n     * Retrieves the animation state object registered in the animation data set under the given name.\n     *\n     * @param stateName The name of the animation state object to be retrieved.\n     */\n    AnimationSetBase.prototype.getAnimation = function (name) {\n        return this._animationDictionary[name];\n    };\n    /**\n     * Adds an animation state object to the aniamtion data set under the given name.\n     *\n     * @param stateName The name under which the animation state object will be stored.\n     * @param animationState The animation state object to be staored in the set.\n     */\n    AnimationSetBase.prototype.addAnimation = function (node) {\n        if (this._animationDictionary[node.name])\n            throw new AnimationSetError_1.default(\"root node name '\" + node.name + \"' already exists in the set\");\n        this._animationDictionary[node.name] = node;\n        this._animations.push(node);\n        this._animationNames.push(node.name);\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     */\n    AnimationSetBase.prototype.dispose = function () {\n    };\n    AnimationSetBase.assetType = \"[asset AnimationSet]\";\n    return AnimationSetBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetBase;\n\n},{\"../errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/AnimatorBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar RequestAnimationFrame_1 = require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar AnimatorEvent_1 = require(\"../events/AnimatorEvent\");\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nvar AnimatorBase = (function (_super) {\n    __extends(AnimatorBase, _super);\n    /**\n     * Creates a new <code>AnimatorBase</code> object.\n     *\n     * @param animationSet The animation data set to be used by the animator object.\n     */\n    function AnimatorBase(animationSet) {\n        _super.call(this);\n        this._autoUpdate = true;\n        this._time = 0;\n        this._playbackSpeed = 1;\n        this._pOwners = new Array();\n        this._pAbsoluteTime = 0;\n        this._animationStates = new Object();\n        /**\n         * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n         *\n         * @see away.animators.IAnimationState#positionDelta\n         */\n        this.updatePosition = true;\n        this._pAnimationSet = animationSet;\n        this._broadcaster = new RequestAnimationFrame_1.default(this.onEnterFrame, this);\n    }\n    AnimatorBase.prototype.getAnimationState = function (node) {\n        var className = node.stateClass;\n        var uID = node.id;\n        if (this._animationStates[uID] == null)\n            this._animationStates[uID] = new className(this, node);\n        return this._animationStates[uID];\n    };\n    AnimatorBase.prototype.getAnimationStateByName = function (name) {\n        return this.getAnimationState(this._pAnimationSet.getAnimation(name));\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"absoluteTime\", {\n        /**\n         * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n         *\n         * @see #time\n         * @see #playbackSpeed\n         */\n        get: function () {\n            return this._pAbsoluteTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"animationSet\", {\n        /**\n         * Returns the animation data set in use by the animator.\n         */\n        get: function () {\n            return this._pAnimationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeState\", {\n        /**\n         * Returns the current active animation state.\n         */\n        get: function () {\n            return this._pActiveState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimation\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimationName\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pActiveAnimationName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"autoUpdate\", {\n        /**\n         * Determines whether the animators internal update mechanisms are active. Used in cases\n         * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n         * Defaults to true.\n         *\n         * @see #time\n         * @see #update()\n         */\n        get: function () {\n            return this._autoUpdate;\n        },\n        set: function (value) {\n            if (this._autoUpdate == value)\n                return;\n            this._autoUpdate = value;\n            if (this._autoUpdate)\n                this.start();\n            else\n                this.stop();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"time\", {\n        /**\n         * Gets and sets the internal time clock of the animator.\n         */\n        get: function () {\n            return this._time;\n        },\n        set: function (value /*int*/) {\n            if (this._time == value)\n                return;\n            this.update(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the animation phase of the current active state's animation clip(s).\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimatorBase.prototype.phase = function (value) {\n        this._pActiveState.phase(value);\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"playbackSpeed\", {\n        /**\n         * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n         */\n        get: function () {\n            return this._playbackSpeed;\n        },\n        set: function (value) {\n            this._playbackSpeed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Resumes the automatic playback clock controling the active state of the animator.\n     */\n    AnimatorBase.prototype.start = function () {\n        if (this._isPlaying || !this._autoUpdate)\n            return;\n        this._time = this._pAbsoluteTime = getTimer_1.default();\n        this._isPlaying = true;\n        this._broadcaster.start();\n        if (!this.hasEventListener(AnimatorEvent_1.default.START))\n            return;\n        if (this._startEvent == null)\n            this._startEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.START, this);\n        this.dispatchEvent(this._startEvent);\n    };\n    /**\n     * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n     * <code>time</code> property or <code>update()</code> method.\n     *\n     * @see #time\n     * @see #update()\n     */\n    AnimatorBase.prototype.stop = function () {\n        if (!this._isPlaying)\n            return;\n        this._isPlaying = false;\n        this._broadcaster.stop();\n        if (!this.hasEventListener(AnimatorEvent_1.default.STOP))\n            return;\n        if (this._stopEvent == null)\n            this._stopEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.STOP, this);\n        this.dispatchEvent(this._stopEvent);\n    };\n    /**\n     * Provides a way to manually update the active state of the animator when automatic\n     * updates are disabled.\n     *\n     * @see #stop()\n     * @see #autoUpdate\n     */\n    AnimatorBase.prototype.update = function (time /*int*/) {\n        var dt = (time - this._time) * this.playbackSpeed;\n        this._pUpdateDeltaTime(dt);\n        this._time = time;\n    };\n    AnimatorBase.prototype.reset = function (name, offset) {\n        if (offset === void 0) { offset = 0; }\n        this.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n    };\n    /**\n     * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.addOwner = function (sprite) {\n        this._pOwners.push(sprite);\n    };\n    /**\n     * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.removeOwner = function (sprite) {\n        this._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n    };\n    /**\n     * Internal abstract method called when the time delta property of the animator's contents requires updating.\n     *\n     * @private\n     */\n    AnimatorBase.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        this._pActiveState.update(this._pAbsoluteTime);\n        if (this.updatePosition)\n            this.applyPositionDelta();\n    };\n    /**\n     * Enter frame event handler for automatically updating the active state of the animator.\n     */\n    AnimatorBase.prototype.onEnterFrame = function (event) {\n        if (event === void 0) { event = null; }\n        this.update(getTimer_1.default());\n    };\n    AnimatorBase.prototype.applyPositionDelta = function () {\n        var delta = this._pActiveState.positionDelta;\n        var dist = delta.length;\n        var len;\n        if (dist > 0) {\n            len = this._pOwners.length;\n            for (var i = 0; i < len; ++i)\n                this._pOwners[i].transform.translateLocal(delta, dist);\n        }\n    };\n    /**\n     *  for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.dispatchCycleEvent = function () {\n        if (this.hasEventListener(AnimatorEvent_1.default.CYCLE_COMPLETE)) {\n            if (this._cycleEvent == null)\n                this._cycleEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.CYCLE_COMPLETE, this);\n            this.dispatchEvent(this._cycleEvent);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.dispose = function () {\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.testGPUCompatibility = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimatorBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.getRenderableElements = function (renderable, sourceElements) {\n        //nothing to do here\n        return sourceElements;\n    };\n    AnimatorBase.assetType = \"[asset Animator]\";\n    return AnimatorBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorBase;\n\n},{\"../events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-core/lib/utils/RequestAnimationFrame\":undefined,\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\nvar AnimationRegisterCache_1 = require(\"../animators/data/AnimationRegisterCache\");\nvar AnimationElements_1 = require(\"../animators/data/AnimationElements\");\nvar ParticleAnimationData_1 = require(\"../animators/data/ParticleAnimationData\");\nvar ParticleProperties_1 = require(\"../animators/data/ParticleProperties\");\nvar ParticlePropertiesMode_1 = require(\"../animators/data/ParticlePropertiesMode\");\nvar ParticleTimeNode_1 = require(\"../animators/nodes/ParticleTimeNode\");\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nvar ParticleAnimationSet = (function (_super) {\n    __extends(ParticleAnimationSet, _super);\n    /**\n     * Creates a new <code>ParticleAnimationSet</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleAnimationSet(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this);\n        this._animationElements = new Object();\n        this._particleNodes = new Array();\n        this._localDynamicNodes = new Array();\n        this._localStaticNodes = new Array();\n        this._totalLenOfOneVertex = 0;\n        /**\n         *\n         */\n        this.shareAnimationGraphics = true;\n        //automatically add a particle time node to the set\n        this.addAnimation(this._timeNode = new ParticleTimeNode_1.default(usesDuration, usesLooping, usesDelay));\n    }\n    Object.defineProperty(ParticleAnimationSet.prototype, \"particleNodes\", {\n        /**\n         * Returns a vector of the particle animation nodes contained within the set.\n         */\n        get: function () {\n            return this._particleNodes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.addAnimation = function (node) {\n        var i;\n        var n = node;\n        n._iProcessAnimationSetting(this);\n        if (n.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            n._iDataOffset = this._totalLenOfOneVertex;\n            this._totalLenOfOneVertex += n.dataLength;\n            this._localStaticNodes.push(n);\n        }\n        else if (n.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC)\n            this._localDynamicNodes.push(n);\n        for (i = this._particleNodes.length - 1; i >= 0; i--) {\n            if (this._particleNodes[i].priority <= n.priority)\n                break;\n        }\n        this._particleNodes.splice(i + 1, 0, n);\n        _super.prototype.addAnimation.call(this, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.activate = function (shader, stage) {\n        //\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.deactivate = function (shader, stage) {\n        //\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n        //\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n        //\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n        //\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n        //\t\t\t\tcontext.setVertexBufferAt(i, null);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALVertexCode = function (shader) {\n        //grab animationRegisterCache from the materialpassbase or create a new one if the first time\n        this._iAnimationRegisterCache = shader.animationRegisterCache;\n        if (this._iAnimationRegisterCache == null)\n            this._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache_1.default(shader.profile);\n        //reset animationRegisterCache\n        this._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n        this._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n        this._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n        this._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n        this._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n        this._iAnimationRegisterCache.needVelocity = this.needVelocity;\n        this._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n        this._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n        this._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n        this._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n        this._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n        this._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n        this._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n        this._iAnimationRegisterCache.reset();\n        var code = \"\";\n        code += this._iAnimationRegisterCache.getInitCode();\n        var node;\n        var i;\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority < ParticleAnimationSet.POST_PRIORITY)\n                code += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n        }\n        code += this._iAnimationRegisterCache.getCombinationCode();\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n        }\n        code += this._iAnimationRegisterCache.initColorRegisters();\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n        }\n        code += this._iAnimationRegisterCache.getColorPassCode();\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALUVCode = function (shader) {\n        var code = \"\";\n        if (this.hasUVNode) {\n            this._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n            code += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n            var node;\n            for (var i = 0; i < this._particleNodes.length; i++)\n                node = this._particleNodes[i];\n            code += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n            code += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n        }\n        else\n            code += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        return this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.doneAGALCode = function (shader) {\n        this._iAnimationRegisterCache.setDataLength();\n        //set vertexZeroConst,vertexOneConst,vertexTwoConst\n        this._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n    };\n    Object.defineProperty(ParticleAnimationSet.prototype, \"usesCPU\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.cancelGPUCompatibility = function () {\n    };\n    ParticleAnimationSet.prototype.dispose = function () {\n        for (var key in this._animationElements)\n            this._animationElements[key].dispose();\n        _super.prototype.dispose.call(this);\n    };\n    ParticleAnimationSet.prototype.getAnimationElements = function (graphic) {\n        var animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n        if (animationElements)\n            return animationElements;\n        this._iGenerateAnimationElements(graphic.parent);\n        return (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n    };\n    /** @private */\n    ParticleAnimationSet.prototype._iGenerateAnimationElements = function (graphics) {\n        if (this.initParticleFunc == null)\n            throw (new Error(\"no initParticleFunc set\"));\n        var i /*int*/, j /*int*/, k;\n        var animationElements;\n        var newAnimationElements = false;\n        var elements;\n        var graphic;\n        var localNode;\n        for (i = 0; i < graphics.count; i++) {\n            graphic = graphics.getGraphicAt(i);\n            elements = graphic.elements;\n            if (this.shareAnimationGraphics) {\n                animationElements = this._animationElements[elements.id];\n                if (animationElements)\n                    continue;\n            }\n            animationElements = new AnimationElements_1.default();\n            if (this.shareAnimationGraphics)\n                this._animationElements[elements.id] = animationElements;\n            else\n                this._animationElements[graphic.id] = animationElements;\n            newAnimationElements = true;\n            //create the vertexData vector that will be used for local node data\n            animationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        }\n        if (!newAnimationElements)\n            return;\n        var particles = graphics.particles;\n        var particlesLength = particles.length;\n        var numParticles = graphics.numParticles;\n        var particleProperties = new ParticleProperties_1.default();\n        var particle;\n        var oneDataLen;\n        var oneDataOffset;\n        var counterForVertex;\n        var counterForOneData;\n        var oneData;\n        var numVertices;\n        var vertexData;\n        var vertexLength;\n        var startingOffset;\n        var vertexOffset;\n        //default values for particle param\n        particleProperties.total = numParticles;\n        particleProperties.startTime = 0;\n        particleProperties.duration = 1000;\n        particleProperties.delay = 0.1;\n        i = 0;\n        j = 0;\n        while (i < numParticles) {\n            particleProperties.index = i;\n            //call the init on the particle parameters\n            this.initParticleFunc.call(this.initParticleScope, particleProperties);\n            //create the next set of node properties for the particle\n            for (k = 0; k < this._localStaticNodes.length; k++)\n                this._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n            //loop through all particle data for the curent particle\n            while (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n                //find the target animationElements\n                for (k = 0; k < graphics.count; k++) {\n                    graphic = graphics.getGraphicAt(k);\n                    if (graphic.elements == particle.elements) {\n                        animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n                        break;\n                    }\n                }\n                numVertices = particle.numVertices;\n                vertexData = animationElements.vertexData;\n                vertexLength = numVertices * this._totalLenOfOneVertex;\n                startingOffset = animationElements.numProcessedVertices * this._totalLenOfOneVertex;\n                //loop through each static local node in the animation set\n                for (k = 0; k < this._localStaticNodes.length; k++) {\n                    localNode = this._localStaticNodes[k];\n                    oneData = localNode.oneData;\n                    oneDataLen = localNode.dataLength;\n                    oneDataOffset = startingOffset + localNode._iDataOffset;\n                    //loop through each vertex set in the vertex data\n                    for (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n                        vertexOffset = oneDataOffset + counterForVertex;\n                        //add the data for the local node to the vertex data\n                        for (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n                            vertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n                    }\n                }\n                //store particle properties if they need to be retreived for dynamic local nodes\n                if (this._localDynamicNodes.length)\n                    animationElements.animationParticles.push(new ParticleAnimationData_1.default(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n                animationElements.numProcessedVertices += numVertices;\n                //next index\n                j++;\n            }\n            //next particle\n            i++;\n        }\n    };\n    /**\n     * Property used by particle nodes that require compilers at the end of the shader\n     */\n    ParticleAnimationSet.POST_PRIORITY = 9;\n    /**\n     * Property used by particle nodes that require color compilers\n     */\n    ParticleAnimationSet.COLOR_PRIORITY = 18;\n    return ParticleAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"../animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"../animators/data/AnimationRegisterCache\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\",\"../animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"../animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\"}],\"awayjs-renderergl/lib/animators/ParticleAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar AnimationElements_1 = require(\"../animators/data/AnimationElements\");\nvar ParticlePropertiesMode_1 = require(\"../animators/data/ParticlePropertiesMode\");\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nvar ParticleAnimator = (function (_super) {\n    __extends(ParticleAnimator, _super);\n    /**\n     * Creates a new <code>ParticleAnimator</code> object.\n     *\n     * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n     */\n    function ParticleAnimator(particleAnimationSet) {\n        _super.call(this, particleAnimationSet);\n        this._animationParticleStates = new Array();\n        this._animatorParticleStates = new Array();\n        this._timeParticleStates = new Array();\n        this._totalLenOfOneVertex = 0;\n        this._animatorSubGeometries = new Object();\n        this._particleAnimationSet = particleAnimationSet;\n        var state;\n        var node;\n        for (var i = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n            node = this._particleAnimationSet.particleNodes[i];\n            state = this.getAnimationState(node);\n            if (node.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC) {\n                this._animatorParticleStates.push(state);\n                node._iDataOffset = this._totalLenOfOneVertex;\n                this._totalLenOfOneVertex += node.dataLength;\n            }\n            else {\n                this._animationParticleStates.push(state);\n            }\n            if (state.needUpdateTime)\n                this._timeParticleStates.push(state);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.clone = function () {\n        return new ParticleAnimator(this._particleAnimationSet);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        var animationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n        var graphic = renderable.graphic;\n        var state;\n        var i;\n        if (!graphic)\n            throw (new Error(\"Must be graphic\"));\n        //process animation sub geometries\n        var animationElements = this._particleAnimationSet.getAnimationElements(graphic);\n        for (i = 0; i < this._animationParticleStates.length; i++)\n            this._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n        //process animator subgeometries\n        var animatorElements = this.getAnimatorElements(graphic);\n        for (i = 0; i < this._animatorParticleStates.length; i++)\n            this._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n        if (animationRegisterCache.numFragmentConstant > 0)\n            stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.start = function () {\n        _super.prototype.start.call(this);\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].update(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.resetTime = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n        this.update(this.time);\n    };\n    ParticleAnimator.prototype.dispose = function () {\n        for (var key in this._animatorSubGeometries)\n            this._animatorSubGeometries[key].dispose();\n    };\n    ParticleAnimator.prototype.getAnimatorElements = function (graphic) {\n        if (!this._animatorParticleStates.length)\n            return;\n        var elements = graphic.elements;\n        var animatorElements = this._animatorSubGeometries[elements.id] = new AnimationElements_1.default();\n        //create the vertexData vector that will be used for local state data\n        animatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        //pass the particles data to the animator elements\n        animatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n    };\n    return ParticleAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nvar SkeletonAnimationSet = (function (_super) {\n    __extends(SkeletonAnimationSet, _super);\n    /**\n     * Creates a new <code>SkeletonAnimationSet</code> object.\n     *\n     * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n     */\n    function SkeletonAnimationSet(jointsPerVertex) {\n        if (jointsPerVertex === void 0) { jointsPerVertex = 4; }\n        _super.call(this);\n        this._jointsPerVertex = jointsPerVertex;\n    }\n    Object.defineProperty(SkeletonAnimationSet.prototype, \"jointsPerVertex\", {\n        /**\n         * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n         * maximum allowed value is 4.\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALVertexCode = function (shader) {\n        var len = shader.animatableAttributes.length;\n        var indexOffset0 = shader.numUsedVertexConstants;\n        var indexOffset1 = indexOffset0 + 1;\n        var indexOffset2 = indexOffset0 + 2;\n        var indexStream = \"va\" + shader.numUsedStreams;\n        var weightStream = \"va\" + (shader.numUsedStreams + 1);\n        var indices = [indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\"];\n        var weights = [weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\"];\n        var temp1 = this._pFindTempReg(shader.animationTargetRegisters);\n        var temp2 = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n        var dot = \"dp4\";\n        var code = \"\";\n        for (var i = 0; i < len; ++i) {\n            var src = shader.animatableAttributes[i];\n            for (var j = 0; j < this._jointsPerVertex; ++j) {\n                code += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n                    \"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n                    \"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n                // add or mov to target. Need to write to a temp reg first, because an output can be a target\n                if (j == 0)\n                    code += \"mov \" + temp2 + \", \" + temp1 + \"\\n\";\n                else\n                    code += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n            }\n            // switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n            dot = \"dp3\";\n            code += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.activate = function (shader, stage) {\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.deactivate = function (shader, stage) {\n        //\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n        //\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n        //\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n        //\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALUVCode = function (shader) {\n        return \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    return SkeletonAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\"}],\"awayjs-renderergl/lib/animators/SkeletonAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar JointPose_1 = require(\"../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../animators/data/SkeletonPose\");\nvar AnimationStateEvent_1 = require(\"../events/AnimationStateEvent\");\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar SkeletonAnimator = (function (_super) {\n    __extends(SkeletonAnimator, _super);\n    /**\n     * Creates a new <code>SkeletonAnimator</code> object.\n     *\n     * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n     * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n     * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n     */\n    function SkeletonAnimator(animationSet, skeleton, forceCPU) {\n        var _this = this;\n        if (forceCPU === void 0) { forceCPU = false; }\n        _super.call(this, animationSet);\n        this._globalPose = new SkeletonPose_1.default();\n        this._morphedElements = new Object();\n        this._morphedElementsDirty = new Object();\n        this._skeleton = skeleton;\n        this._forceCPU = forceCPU;\n        this._jointsPerVertex = animationSet.jointsPerVertex;\n        this._numJoints = this._skeleton.numJoints;\n        this._globalMatrices = new Float32Array(this._numJoints * 12);\n        var j = 0;\n        for (var i = 0; i < this._numJoints; ++i) {\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n        }\n        this._onTransitionCompleteDelegate = function (event) { return _this.onTransitionComplete(event); };\n        this._onIndicesUpdateDelegate = function (event) { return _this.onIndicesUpdate(event); };\n        this._onVerticesUpdateDelegate = function (event) { return _this.onVerticesUpdate(event); };\n    }\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalMatrices\", {\n        /**\n         * returns the calculated global matrices of the current skeleton pose.\n         *\n         * @see #globalPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalMatrices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalPose\", {\n        /**\n         * returns the current skeleton pose output from the animator.\n         *\n         * @see away.animators.data.SkeletonPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"skeleton\", {\n        /**\n         * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n         * skinned geoemtry to which skeleon animator is applied.\n         */\n        get: function () {\n            return this._skeleton;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"forceCPU\", {\n        /**\n         * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n         * Defaults to false.\n         */\n        get: function () {\n            return this._forceCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.clone = function () {\n        /* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n         through the constructor, which will only accept a SkeletonAnimationSet. */\n        return new SkeletonAnimator(this._pAnimationSet, this._skeleton, this._forceCPU);\n    };\n    /**\n     * Plays an animation state registered with the given name in the animation data set.\n     *\n     * @param name The data set name of the animation state to be played.\n     * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n     * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n     */\n    SkeletonAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        if (transition && this._pActiveNode) {\n            //setup the transition\n            this._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n            this._pActiveNode.addEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n        }\n        else\n            this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeSkeletonState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        // do on request of globalProperties\n        if (this._globalPropertiesDirty)\n            this.updateGlobalProperties();\n        var elements = renderable.graphic.elements;\n        elements.useCondensedIndices = this._useCondensedIndices;\n        if (this._useCondensedIndices) {\n            // using a condensed data set\n            this.updateCondensedMatrices(elements.condensedIndexLookUp);\n            stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length / 4);\n        }\n        else {\n            if (this._pAnimationSet.usesCPU) {\n                if (this._morphedElementsDirty[elements.id])\n                    this.morphElements(renderable, elements);\n                return;\n            }\n            stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints * 3);\n        }\n        shader.jointIndexIndex = vertexStreamOffset++;\n        shader.jointWeightIndex = vertexStreamOffset++;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.testGPUCompatibility = function (shader) {\n        if (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints * 3 > 128))\n            this._pAnimationSet.cancelGPUCompatibility();\n    };\n    /**\n     * Applies the calculated time delta to the active animation state node or state transition object.\n     */\n    SkeletonAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        //invalidate pose matrices\n        this._globalPropertiesDirty = true;\n        //trigger geometry invalidation if using CPU animation\n        if (this._pAnimationSet.usesCPU)\n            for (var key in this._morphedElementsDirty)\n                this._morphedElementsDirty[key] = true;\n    };\n    SkeletonAnimator.prototype.updateCondensedMatrices = function (condensedIndexLookUp) {\n        var j = 0, k = 0;\n        var len = condensedIndexLookUp.length;\n        var srcIndex;\n        this._condensedMatrices = new Float32Array(len * 12);\n        for (var i = 0; i < len; i++) {\n            srcIndex = condensedIndexLookUp[i] * 12; //12 required for the three 4-component vectors that store the matrix\n            k = 12;\n            // copy into condensed\n            while (k--)\n                this._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n        }\n    };\n    SkeletonAnimator.prototype.updateGlobalProperties = function () {\n        this._globalPropertiesDirty = false;\n        //get global pose\n        this.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n        // convert pose to matrix\n        var mtxOffset = 0;\n        var globalPoses = this._globalPose.jointPoses;\n        var raw;\n        var ox, oy, oz, ow;\n        var xy2, xz2, xw2;\n        var yz2, yw2, zw2;\n        var n11, n12, n13;\n        var n21, n22, n23;\n        var n31, n32, n33;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        var joints = this._skeleton.joints;\n        var pose;\n        var quat;\n        var vec;\n        var t;\n        for (var i = 0; i < this._numJoints; ++i) {\n            pose = globalPoses[i];\n            quat = pose.orientation;\n            vec = pose.translation;\n            ox = quat.x;\n            oy = quat.y;\n            oz = quat.z;\n            ow = quat.w;\n            xy2 = (t = 2.0 * ox) * oy;\n            xz2 = t * oz;\n            xw2 = t * ow;\n            yz2 = (t = 2.0 * oy) * oz;\n            yw2 = t * ow;\n            zw2 = 2.0 * oz * ow;\n            yz2 = 2.0 * oy * oz;\n            yw2 = 2.0 * oy * ow;\n            zw2 = 2.0 * oz * ow;\n            ox *= ox;\n            oy *= oy;\n            oz *= oz;\n            ow *= ow;\n            n11 = (t = ox - oy) - oz + ow;\n            n12 = xy2 - zw2;\n            n13 = xz2 + yw2;\n            n21 = xy2 + zw2;\n            n22 = -t - oz + ow;\n            n23 = yz2 - xw2;\n            n31 = xz2 - yw2;\n            n32 = yz2 + xw2;\n            n33 = -ox - oy + oz + ow;\n            // prepend inverse bind pose\n            raw = joints[i].inverseBindPose;\n            m11 = raw[0];\n            m12 = raw[4];\n            m13 = raw[8];\n            m14 = raw[12];\n            m21 = raw[1];\n            m22 = raw[5];\n            m23 = raw[9];\n            m24 = raw[13];\n            m31 = raw[2];\n            m32 = raw[6];\n            m33 = raw[10];\n            m34 = raw[14];\n            this._globalMatrices[mtxOffset] = n11 * m11 + n12 * m21 + n13 * m31;\n            this._globalMatrices[mtxOffset + 1] = n11 * m12 + n12 * m22 + n13 * m32;\n            this._globalMatrices[mtxOffset + 2] = n11 * m13 + n12 * m23 + n13 * m33;\n            this._globalMatrices[mtxOffset + 3] = n11 * m14 + n12 * m24 + n13 * m34 + vec.x;\n            this._globalMatrices[mtxOffset + 4] = n21 * m11 + n22 * m21 + n23 * m31;\n            this._globalMatrices[mtxOffset + 5] = n21 * m12 + n22 * m22 + n23 * m32;\n            this._globalMatrices[mtxOffset + 6] = n21 * m13 + n22 * m23 + n23 * m33;\n            this._globalMatrices[mtxOffset + 7] = n21 * m14 + n22 * m24 + n23 * m34 + vec.y;\n            this._globalMatrices[mtxOffset + 8] = n31 * m11 + n32 * m21 + n33 * m31;\n            this._globalMatrices[mtxOffset + 9] = n31 * m12 + n32 * m22 + n33 * m32;\n            this._globalMatrices[mtxOffset + 10] = n31 * m13 + n32 * m23 + n33 * m33;\n            this._globalMatrices[mtxOffset + 11] = n31 * m14 + n32 * m24 + n33 * m34 + vec.z;\n            mtxOffset = mtxOffset + 12;\n        }\n    };\n    SkeletonAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = true;\n        //early out for GPU animations\n        if (!this._pAnimationSet.usesCPU)\n            return sourceElements;\n        var targetElements;\n        if (!(targetElements = this._morphedElements[sourceElements.id])) {\n            //not yet stored\n            targetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n            //turn off auto calculations on the morphed geometry\n            targetElements.autoDeriveNormals = false;\n            targetElements.autoDeriveTangents = false;\n            //add event listeners for any changes in UV values on the source geometry\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n        }\n        return targetElements;\n    };\n    /**\n     * If the animation can't be performed on GPU, transform vertices manually\n     * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n     * @param pass The material pass for which we need to transform the vertices\n     */\n    SkeletonAnimator.prototype.morphElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = false;\n        var numVertices = sourceElements.numVertices;\n        var sourcePositions = sourceElements.positions.get(numVertices);\n        var sourceNormals = sourceElements.normals.get(numVertices);\n        var sourceTangents = sourceElements.tangents.get(numVertices);\n        var posDim = sourceElements.positions.dimensions;\n        var jointIndices = sourceElements.jointIndices.get(numVertices);\n        var jointWeights = sourceElements.jointWeights.get(numVertices);\n        var targetElements = this._morphedElements[sourceElements.id];\n        var targetPositions = targetElements.positions.get(numVertices);\n        var targetNormals = targetElements.normals.get(numVertices);\n        var targetTangents = targetElements.tangents.get(numVertices);\n        var index = 0;\n        var i0 = 0;\n        var i1 = 0;\n        var j = 0;\n        var k;\n        var vx, vy, vz;\n        var nx, ny, nz;\n        var tx, ty, tz;\n        var weight;\n        var vertX, vertY, vertZ;\n        var normX, normY, normZ;\n        var tangX, tangY, tangZ;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        while (index < numVertices) {\n            i0 = index * posDim;\n            vertX = sourcePositions[i0];\n            vertY = sourcePositions[i0 + 1];\n            vertZ = (posDim == 3) ? sourcePositions[i0 + 2] : 0;\n            i1 = index * 3;\n            normX = sourceNormals[i1];\n            normY = sourceNormals[i1 + 1];\n            normZ = sourceNormals[i1 + 2];\n            tangX = sourceTangents[i1];\n            tangY = sourceTangents[i1 + 1];\n            tangZ = sourceTangents[i1 + 2];\n            vx = 0;\n            vy = 0;\n            vz = 0;\n            nx = 0;\n            ny = 0;\n            nz = 0;\n            tx = 0;\n            ty = 0;\n            tz = 0;\n            k = 0;\n            while (k < this._jointsPerVertex) {\n                weight = jointWeights[j];\n                if (weight > 0) {\n                    // implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n                    var mtxOffset = jointIndices[j++] << 2;\n                    m11 = this._globalMatrices[mtxOffset];\n                    m12 = this._globalMatrices[mtxOffset + 1];\n                    m13 = this._globalMatrices[mtxOffset + 2];\n                    m14 = this._globalMatrices[mtxOffset + 3];\n                    m21 = this._globalMatrices[mtxOffset + 4];\n                    m22 = this._globalMatrices[mtxOffset + 5];\n                    m23 = this._globalMatrices[mtxOffset + 6];\n                    m24 = this._globalMatrices[mtxOffset + 7];\n                    m31 = this._globalMatrices[mtxOffset + 8];\n                    m32 = this._globalMatrices[mtxOffset + 9];\n                    m33 = this._globalMatrices[mtxOffset + 10];\n                    m34 = this._globalMatrices[mtxOffset + 11];\n                    vx += weight * (m11 * vertX + m12 * vertY + m13 * vertZ + m14);\n                    vy += weight * (m21 * vertX + m22 * vertY + m23 * vertZ + m24);\n                    vz += weight * (m31 * vertX + m32 * vertY + m33 * vertZ + m34);\n                    nx += weight * (m11 * normX + m12 * normY + m13 * normZ);\n                    ny += weight * (m21 * normX + m22 * normY + m23 * normZ);\n                    nz += weight * (m31 * normX + m32 * normY + m33 * normZ);\n                    tx += weight * (m11 * tangX + m12 * tangY + m13 * tangZ);\n                    ty += weight * (m21 * tangX + m22 * tangY + m23 * tangZ);\n                    tz += weight * (m31 * tangX + m32 * tangY + m33 * tangZ);\n                    ++k;\n                }\n                else {\n                    j += (this._jointsPerVertex - k);\n                    k = this._jointsPerVertex;\n                }\n            }\n            targetPositions[i0] = vx;\n            targetPositions[i0 + 1] = vy;\n            if (posDim == 3)\n                targetPositions[i0 + 2] = vz;\n            targetNormals[i1] = nx;\n            targetNormals[i1 + 1] = ny;\n            targetNormals[i1 + 2] = nz;\n            targetTangents[i1] = tx;\n            targetTangents[i1 + 1] = ty;\n            targetTangents[i1 + 2] = tz;\n            index++;\n        }\n        targetElements.setPositions(targetPositions);\n        targetElements.setNormals(targetNormals);\n        targetElements.setTangents(targetTangents);\n    };\n    /**\n     * Converts a local hierarchical skeleton pose to a global pose\n     * @param targetPose The SkeletonPose object that will contain the global pose.\n     * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n     */\n    SkeletonAnimator.prototype.localToGlobalPose = function (sourcePose, targetPose, skeleton) {\n        var globalPoses = targetPose.jointPoses;\n        var globalJointPose;\n        var joints = skeleton.joints;\n        var len = sourcePose.numJointPoses;\n        var jointPoses = sourcePose.jointPoses;\n        var parentIndex;\n        var joint;\n        var parentPose;\n        var pose;\n        var or;\n        var tr;\n        var t;\n        var q;\n        var x1, y1, z1, w1;\n        var x2, y2, z2, w2;\n        var x3, y3, z3;\n        // :s\n        if (globalPoses.length != len)\n            globalPoses.length = len;\n        for (var i = 0; i < len; ++i) {\n            globalJointPose = globalPoses[i];\n            if (globalJointPose == null)\n                globalJointPose = globalPoses[i] = new JointPose_1.default();\n            joint = joints[i];\n            parentIndex = joint.parentIndex;\n            pose = jointPoses[i];\n            q = globalJointPose.orientation;\n            t = globalJointPose.translation;\n            if (parentIndex < 0) {\n                tr = pose.translation;\n                or = pose.orientation;\n                q.x = or.x;\n                q.y = or.y;\n                q.z = or.z;\n                q.w = or.w;\n                t.x = tr.x;\n                t.y = tr.y;\n                t.z = tr.z;\n            }\n            else {\n                // append parent pose\n                parentPose = globalPoses[parentIndex];\n                // rotate point\n                or = parentPose.orientation;\n                tr = pose.translation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                x3 = tr.x;\n                y3 = tr.y;\n                z3 = tr.z;\n                w1 = -x2 * x3 - y2 * y3 - z2 * z3;\n                x1 = w2 * x3 + y2 * z3 - z2 * y3;\n                y1 = w2 * y3 - x2 * z3 + z2 * x3;\n                z1 = w2 * z3 + x2 * y3 - y2 * x3;\n                // append parent translation\n                tr = parentPose.translation;\n                t.x = -w1 * x2 + x1 * w2 - y1 * z2 + z1 * y2 + tr.x;\n                t.y = -w1 * y2 + x1 * z2 + y1 * w2 - z1 * x2 + tr.y;\n                t.z = -w1 * z2 - x1 * y2 + y1 * x2 + z1 * w2 + tr.z;\n                // append parent orientation\n                x1 = or.x;\n                y1 = or.y;\n                z1 = or.z;\n                w1 = or.w;\n                or = pose.orientation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                q.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n                q.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n                q.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n                q.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onTransitionComplete = function (event) {\n        if (event.type == AnimationStateEvent_1.default.TRANSITION_COMPLETE) {\n            event.animationNode.removeEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n            //if this is the current active state transition, revert control to the active node\n            if (this._pActiveState == event.animationState) {\n                this._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n                this._pActiveState = this.getAnimationState(this._pActiveNode);\n                this._activeSkeletonState = this._pActiveState;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onIndicesUpdate = function (event) {\n        var elements = event.target;\n        this._morphedElements[elements.id].setIndices(elements.indices);\n    };\n    SkeletonAnimator.prototype.onVerticesUpdate = function (event) {\n        var elements = event.target;\n        var morphGraphics = this._morphedElements[elements.id];\n        switch (event.attributesView) {\n            case elements.uvs:\n                morphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n                break;\n            case elements.getCustomAtributes(\"secondaryUVs\"):\n                morphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n                break;\n        }\n    };\n    return SkeletonAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-display/lib/events/ElementsEvent\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/animators/VertexAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\nvar VertexAnimationMode_1 = require(\"../animators/data/VertexAnimationMode\");\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nvar VertexAnimationSet = (function (_super) {\n    __extends(VertexAnimationSet, _super);\n    /**\n     * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n     */\n    //\t\tpublic get useNormals():boolean\n    //\t\t{\n    //\t\t\treturn this._uploadNormals;\n    //\t\t}\n    /**\n     * Creates a new <code>VertexAnimationSet</code> object.\n     *\n     * @param numPoses The number of poses made available at once to the GPU animation code.\n     * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n     *\n     * @see away3d.animators.data.VertexAnimationMode\n     */\n    function VertexAnimationSet(numPoses, blendMode) {\n        if (numPoses === void 0) { numPoses = 2; }\n        if (blendMode === void 0) { blendMode = \"absolute\"; }\n        _super.call(this);\n        this._numPoses = numPoses;\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(VertexAnimationSet.prototype, \"numPoses\", {\n        /**\n         * Returns the number of poses made available at once to the GPU animation code.\n         */\n        get: function () {\n            return this._numPoses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexAnimationSet.prototype, \"blendMode\", {\n        /**\n         * Returns the active blend mode of the vertex animator object.\n         */\n        get: function () {\n            return this._blendMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALVertexCode = function (shader) {\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            return this.getAbsoluteAGALCode(shader);\n        else\n            return this.getAdditiveAGALCode(shader);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.activate = function (shader, stage) {\n        //\t\t\tvar uID:number = pass._iUniqueId;\n        //\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n        //\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.deactivate = function (shader, stage) {\n        //\t\t\tvar uID:number = pass._iUniqueId;\n        //\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n        //\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n        //\t\t\tcontext.setVertexBufferAt(index, null);\n        //\t\t\tif (this._uploadNormals)\n        //\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n        //\t\t\tif (this._uploadTangents)\n        //\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALUVCode = function (shader) {\n        return \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    /**\n     * Generates the vertex AGAL code for absolute blending.\n     */\n    VertexAnimationSet.prototype.getAbsoluteAGALCode = function (shader) {\n        var code = \"\";\n        var temp1 = this._pFindTempReg(shader.animationTargetRegisters);\n        var temp2 = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n        var regs = new Array(\"x\", \"y\", \"z\", \"w\");\n        var len = shader.animatableAttributes.length;\n        var constantReg = \"vc\" + shader.numUsedVertexConstants;\n        if (len > 2)\n            len = 2;\n        var streamIndex = shader.numUsedStreams;\n        for (var i = 0; i < len; ++i) {\n            code += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n            for (var j = 1; j < this._numPoses; ++j) {\n                code += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n                if (j < this._numPoses - 1)\n                    code += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n                ++streamIndex;\n            }\n            code += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        }\n        // add code for bitangents if tangents are used\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * Generates the vertex AGAL code for additive blending.\n     */\n    VertexAnimationSet.prototype.getAdditiveAGALCode = function (shader) {\n        var code = \"\";\n        var len = shader.animatableAttributes.length;\n        var regs = [\"x\", \"y\", \"z\", \"w\"];\n        var temp1 = this._pFindTempReg(shader.animationTargetRegisters);\n        var k;\n        var streamIndex = shader.numUsedStreams;\n        if (len > 2)\n            len = 2;\n        code += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n        if (shader.normalDependencies > 0)\n            code += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n        for (var i = 0; i < len; ++i) {\n            for (var j = 0; j < this._numPoses; ++j) {\n                code += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n                    \"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n                k++;\n            }\n        }\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n        }\n        return code;\n    };\n    return VertexAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"../animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\"}],\"awayjs-renderergl/lib/animators/VertexAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar VertexAnimationMode_1 = require(\"../animators/data/VertexAnimationMode\");\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar VertexAnimator = (function (_super) {\n    __extends(VertexAnimator, _super);\n    /**\n     * Creates a new <code>VertexAnimator</code> object.\n     *\n     * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n     */\n    function VertexAnimator(vertexAnimationSet) {\n        _super.call(this, vertexAnimationSet);\n        this._poses = new Array();\n        this._weights = new Float32Array([1, 0, 0, 0]);\n        this._vertexAnimationSet = vertexAnimationSet;\n        this._numPoses = vertexAnimationSet.numPoses;\n        this._blendMode = vertexAnimationSet.blendMode;\n    }\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.clone = function () {\n        return new VertexAnimator(this._vertexAnimationSet);\n    };\n    /**\n     * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n     * @param sequenceName The name of the clip to be played.\n     */\n    VertexAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        //TODO: implement transitions in vertex animator\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeVertexState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        var geometryFlag = false;\n        if (this._poses[0] != this._activeVertexState.currentGraphics) {\n            this._poses[0] = this._activeVertexState.currentGraphics;\n            geometryFlag = true;\n        }\n        if (this._poses[1] != this._activeVertexState.nextGraphics) {\n            this._poses[1] = this._activeVertexState.nextGraphics;\n            geometryFlag = true;\n        }\n        this._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n        if (geometryFlag) {\n            //invalidate sprites\n            var sprite;\n            var len = this._pOwners.length;\n            for (var i = 0; i < len; i++) {\n                sprite = this._pOwners[i];\n                sprite.graphics.invalidateElements();\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        // todo: add code for when running on cpu\n        // this type of animation can only be SubSprite\n        var graphic = renderable.graphic;\n        var elements = graphic.elements;\n        // if no poses defined, set temp data\n        if (!this._poses.length) {\n            this.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n            return;\n        }\n        var i;\n        var len = this._numPoses;\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._weights, 1);\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            i = 1;\n        else\n            i = 0;\n        var elementsGL;\n        for (; i < len; ++i) {\n            elements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n            elementsGL = shader._elementsPool.getAbstraction(elements);\n            elementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n            if (elements.isAsset(TriangleElements_1.default)) {\n                elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.positions);\n                if (shader.normalDependencies > 0)\n                    elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.normals);\n            }\n        }\n    };\n    VertexAnimator.prototype.setNullPose = function (shader, elements, stage, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._weights, 1);\n        var elementsGL = shader._elementsPool.getAbstraction(elements);\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE) {\n            var len = this._numPoses;\n            for (var i = 1; i < len; ++i) {\n                if (elements.isAsset(TriangleElements_1.default)) {\n                    elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.positions);\n                    if (shader.normalDependencies > 0)\n                        elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.normals);\n                }\n            }\n        }\n        // todo: set temp data for additive?\n    };\n    /**\n     * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n     * Needs to be called if gpu code is potentially required.\n     */\n    VertexAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    VertexAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE && this._poses.length)\n            return this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n        //nothing to do here\n        return sourceElements;\n    };\n    return VertexAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/animators/data/AnimationElements\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar AnimationElements = (function () {\n    function AnimationElements() {\n        this._pVertexBuffer = new Array(8);\n        this._pBufferContext = new Array(8);\n        this._pBufferDirty = new Array(8);\n        this.numProcessedVertices = 0;\n        this.previousTime = Number.NEGATIVE_INFINITY;\n        this.animationParticles = new Array();\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n        this._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n    }\n    AnimationElements.prototype.createVertexData = function (numVertices /*uint*/, totalLenOfOneVertex /*uint*/) {\n        this._numVertices = numVertices;\n        this._totalLenOfOneVertex = totalLenOfOneVertex;\n        this._pVertexData = new Array(numVertices * totalLenOfOneVertex);\n    };\n    AnimationElements.prototype.activateVertexBuffer = function (index /*int*/, bufferOffset /*int*/, stage, format) {\n        var contextIndex = stage.stageIndex;\n        var context = stage.context;\n        var buffer = this._pVertexBuffer[contextIndex];\n        if (!buffer || this._pBufferContext[contextIndex] != context) {\n            buffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex * 4);\n            this._pBufferContext[contextIndex] = context;\n            this._pBufferDirty[contextIndex] = true;\n        }\n        if (this._pBufferDirty[contextIndex]) {\n            buffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n            this._pBufferDirty[contextIndex] = false;\n        }\n        context.setVertexBufferAt(index, buffer, bufferOffset * 4, format);\n    };\n    AnimationElements.prototype.dispose = function () {\n        while (this._pVertexBuffer.length) {\n            var vertexBuffer = this._pVertexBuffer.pop();\n            if (vertexBuffer)\n                vertexBuffer.dispose();\n        }\n    };\n    AnimationElements.prototype.invalidateBuffer = function () {\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n    };\n    Object.defineProperty(AnimationElements.prototype, \"vertexData\", {\n        get: function () {\n            return this._pVertexData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"totalLenOfOneVertex\", {\n        get: function () {\n            return this._totalLenOfOneVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationElements.SUBGEOM_ID_COUNT = 0;\n    return AnimationElements;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationElements;\n\n},{}],\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ShaderRegisterCache_1 = require(\"../../animators/../shaders/ShaderRegisterCache\");\nvar ShaderRegisterElement_1 = require(\"../../animators/../shaders/ShaderRegisterElement\");\n/**\n * ...\n */\nvar AnimationRegisterCache = (function (_super) {\n    __extends(AnimationRegisterCache, _super);\n    function AnimationRegisterCache(profile) {\n        _super.call(this, profile);\n        this.indexDictionary = new Object();\n    }\n    AnimationRegisterCache.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this.rotationRegisters = new Array();\n        this.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n        this.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n        this.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n        for (var i = 1; i < this.targetRegisters.length; i++) {\n            this.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n            this.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n        }\n        this.scaleAndRotateTarget = new ShaderRegisterElement_1.default(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n        //allot const register\n        this.vertexZeroConst = this.getFreeVertexConstant();\n        this.vertexZeroConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n        this.vertexOneConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n        this.vertexTwoConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n        //allot temp register\n        this.positionTarget = this.getFreeVertexVectorTemp();\n        this.addVertexTempUsages(this.positionTarget, 1);\n        this.positionTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n        if (this.needVelocity) {\n            this.velocityTarget = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(this.velocityTarget, 1);\n            this.velocityTarget = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index);\n            this.vertexTime = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index, 3);\n            this.vertexLife = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index, 3);\n        }\n        else {\n            var tempTime = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(tempTime, 1);\n            this.vertexTime = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 0);\n            this.vertexLife = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 1);\n        }\n    };\n    AnimationRegisterCache.prototype.setUVSourceAndTarget = function (UVAttribute, UVVaring) {\n        this.uvVar = this.getRegisterFromString(UVVaring);\n        this.uvAttribute = this.getRegisterFromString(UVAttribute);\n        //uv action is processed after normal actions,so use offsetTarget as uvTarget\n        this.uvTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n    };\n    AnimationRegisterCache.prototype.setRegisterIndex = function (node, parameterIndex /*int*/, registerIndex /*int*/) {\n        //8 should be enough for any node.\n        var t = this.indexDictionary[node.id];\n        if (t == null)\n            t = this.indexDictionary[node.id] = new Array(8) /*int*/;\n        t[parameterIndex] = registerIndex;\n    };\n    AnimationRegisterCache.prototype.getRegisterIndex = function (node, parameterIndex /*int*/) {\n        return this.indexDictionary[node.id][parameterIndex];\n    };\n    AnimationRegisterCache.prototype.getInitCode = function () {\n        var len = this.sourceRegisters.length;\n        var code = \"\";\n        for (var i = 0; i < len; i++)\n            code += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n        code += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n        if (this.needVelocity)\n            code += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n        return code;\n    };\n    AnimationRegisterCache.prototype.getCombinationCode = function () {\n        return \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n    };\n    AnimationRegisterCache.prototype.initColorRegisters = function () {\n        var code = \"\";\n        if (this.hasColorMulNode) {\n            this.colorMulTarget = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(this.colorMulTarget, 1);\n            this.colorMulVary = this.getFreeVarying();\n            code += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n        }\n        if (this.hasColorAddNode) {\n            this.colorAddTarget = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(this.colorAddTarget, 1);\n            this.colorAddVary = this.getFreeVarying();\n            code += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n        }\n        return code;\n    };\n    AnimationRegisterCache.prototype.getColorPassCode = function () {\n        var code = \"\";\n        if (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            if (this.hasColorMulNode)\n                code += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n        }\n        return code;\n    };\n    AnimationRegisterCache.prototype.getColorCombinationCode = function (shadedTarget) {\n        var code = \"\";\n        if (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            var colorTarget = this.getRegisterFromString(shadedTarget);\n            this.addFragmentTempUsages(colorTarget, 1);\n            if (this.hasColorMulNode)\n                code += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n        }\n        return code;\n    };\n    AnimationRegisterCache.prototype.getRegisterFromString = function (code) {\n        var temp = code.split(/(\\d+)/);\n        return new ShaderRegisterElement_1.default(temp[0], parseInt(temp[1]));\n    };\n    Object.defineProperty(AnimationRegisterCache.prototype, \"numVertexConstant\", {\n        get: function () {\n            return this._numVertexConstant;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationRegisterCache.prototype, \"numFragmentConstant\", {\n        get: function () {\n            return this._numFragmentConstant;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationRegisterCache.prototype.setDataLength = function () {\n        this._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n        this._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n        this.vertexConstantData = new Float32Array(this._numVertexConstant * 4);\n        this.fragmentConstantData = new Float32Array(this._numFragmentConstant * 4);\n    };\n    AnimationRegisterCache.prototype.setVertexConst = function (index /*int*/, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        var _index = (index - this.vertexConstantOffset) * 4;\n        this.vertexConstantData[_index++] = x;\n        this.vertexConstantData[_index++] = y;\n        this.vertexConstantData[_index++] = z;\n        this.vertexConstantData[_index] = w;\n    };\n    AnimationRegisterCache.prototype.setVertexConstFromArray = function (index /*int*/, data) {\n        var _index = (index - this.vertexConstantOffset) * 4;\n        for (var i = 0; i < data.length; i++)\n            this.vertexConstantData[_index++] = data[i];\n    };\n    AnimationRegisterCache.prototype.setVertexConstFromMatrix = function (index /*int*/, matrix) {\n        var rawData = matrix.rawData;\n        var _index = (index - this.vertexConstantOffset) * 4;\n        this.vertexConstantData[_index++] = rawData[0];\n        this.vertexConstantData[_index++] = rawData[4];\n        this.vertexConstantData[_index++] = rawData[8];\n        this.vertexConstantData[_index++] = rawData[12];\n        this.vertexConstantData[_index++] = rawData[1];\n        this.vertexConstantData[_index++] = rawData[5];\n        this.vertexConstantData[_index++] = rawData[9];\n        this.vertexConstantData[_index++] = rawData[13];\n        this.vertexConstantData[_index++] = rawData[2];\n        this.vertexConstantData[_index++] = rawData[6];\n        this.vertexConstantData[_index++] = rawData[10];\n        this.vertexConstantData[_index++] = rawData[14];\n        this.vertexConstantData[_index++] = rawData[3];\n        this.vertexConstantData[_index++] = rawData[7];\n        this.vertexConstantData[_index++] = rawData[11];\n        this.vertexConstantData[_index] = rawData[15];\n    };\n    AnimationRegisterCache.prototype.setFragmentConst = function (index /*int*/, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        var _index = (index - this.fragmentConstantOffset) * 4;\n        this.fragmentConstantData[_index++] = x;\n        this.fragmentConstantData[_index++] = y;\n        this.fragmentConstantData[_index++] = z;\n        this.fragmentConstantData[_index] = w;\n    };\n    return AnimationRegisterCache;\n}(ShaderRegisterCache_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationRegisterCache;\n\n},{\"../../animators/../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"../../animators/../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\":[function(require,module,exports){\n\"use strict\";\nvar ColorSegmentPoint = (function () {\n    function ColorSegmentPoint(life, color) {\n        //0<life<1\n        if (life <= 0 || life >= 1)\n            throw (new Error(\"life exceeds range (0,1)\"));\n        this._life = life;\n        this._color = color;\n    }\n    Object.defineProperty(ColorSegmentPoint.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColorSegmentPoint.prototype, \"life\", {\n        get: function () {\n            return this._life;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorSegmentPoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ColorSegmentPoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/JointPose\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nvar JointPose = (function () {\n    function JointPose() {\n        /**\n         * The rotation of the pose stored as a quaternion\n         */\n        this.orientation = new Quaternion_1.default();\n        /**\n         * The translation of the pose\n         */\n        this.translation = new Vector3D_1.default();\n    }\n    /**\n     * Converts the transformation to a Matrix3D representation.\n     *\n     * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n     * @return The transformation matrix of the pose.\n     */\n    JointPose.prototype.toMatrix3D = function (target) {\n        if (target === void 0) { target = null; }\n        if (target == null)\n            target = new Matrix3D_1.default();\n        this.orientation.toMatrix3D(target);\n        target.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n        return target;\n    };\n    /**\n     * Copies the transformation data from a source pose object into the existing pose object.\n     *\n     * @param pose The source pose to copy from.\n     */\n    JointPose.prototype.copyFrom = function (pose) {\n        var or = pose.orientation;\n        var tr = pose.translation;\n        this.orientation.x = or.x;\n        this.orientation.y = or.y;\n        this.orientation.z = or.z;\n        this.orientation.w = or.w;\n        this.translation.x = tr.x;\n        this.translation.y = tr.y;\n        this.translation.z = tr.z;\n    };\n    return JointPose;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JointPose;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Quaternion\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleAnimationData = (function () {\n    function ParticleAnimationData(index /*uint*/, startTime, duration, delay, particle) {\n        this.index = index;\n        this.startTime = startTime;\n        this.totalTime = duration + delay;\n        this.duration = duration;\n        this.delay = delay;\n        this.startVertexIndex = particle.startVertexIndex;\n        this.numVertices = particle.numVertices;\n    }\n    return ParticleAnimationData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationData;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the properties mode of a particle animation node.\n */\nvar ParticlePropertiesMode = (function () {\n    function ParticlePropertiesMode() {\n    }\n    /**\n     * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n     */\n    ParticlePropertiesMode.GLOBAL = 0;\n    /**\n     * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n     */\n    ParticlePropertiesMode.LOCAL_STATIC = 1;\n    /**\n     * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n     */\n    ParticlePropertiesMode.LOCAL_DYNAMIC = 2;\n    return ParticlePropertiesMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePropertiesMode;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticleProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nvar ParticleProperties = (function () {\n    function ParticleProperties() {\n    }\n    return ParticleProperties;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleProperties;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonJoint\":[function(require,module,exports){\n\"use strict\";\n/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nvar SkeletonJoint = (function () {\n    /**\n     * Creates a new <code>SkeletonJoint</code> object\n     */\n    function SkeletonJoint() {\n        /**\n         * The index of the parent joint in the skeleton's joints vector.\n         *\n         * @see away.animators.Skeleton#joints\n         */\n        this.parentIndex = -1;\n    }\n    return SkeletonJoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonJoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonPose\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nvar SkeletonPose = (function (_super) {\n    __extends(SkeletonPose, _super);\n    /**\n     * Creates a new <code>SkeletonPose</code> object.\n     */\n    function SkeletonPose() {\n        _super.call(this);\n        this.jointPoses = new Array();\n    }\n    Object.defineProperty(SkeletonPose.prototype, \"numJointPoses\", {\n        /**\n         * The total number of joint poses in the skeleton pose.\n         */\n        get: function () {\n            return this.jointPoses.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonPose.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return SkeletonPose.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint pose object with the given joint name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object whose pose is to be found.\n     * @return The pose object with the given joint name.\n     */\n    SkeletonPose.prototype.jointPoseFromName = function (jointName) {\n        var jointPoseIndex = this.jointPoseIndexFromName(jointName);\n        if (jointPoseIndex != -1)\n            return this.jointPoses[jointPoseIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n     *\n     * @param The name of the joint object whose pose is to be found.\n     * @return The index of the pose object in the jointPoses Array\n     *\n     * @see #jointPoses\n     */\n    SkeletonPose.prototype.jointPoseIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointPoseIndex;\n        var jointPose;\n        for (var i; i < this.jointPoses.length; i++) {\n            jointPose = this.jointPoses[i];\n            if (jointPose.name == jointName)\n                return jointPoseIndex;\n            jointPoseIndex++;\n        }\n        return -1;\n    };\n    /**\n     * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n     *\n     * @return SkeletonPose\n     */\n    SkeletonPose.prototype.clone = function () {\n        var clone = new SkeletonPose();\n        var numJointPoses = this.jointPoses.length;\n        for (var i = 0; i < numJointPoses; i++) {\n            var cloneJointPose = new JointPose_1.default();\n            var thisJointPose = this.jointPoses[i];\n            cloneJointPose.name = thisJointPose.name;\n            cloneJointPose.copyFrom(thisJointPose);\n            clone.jointPoses[i] = cloneJointPose;\n        }\n        return clone;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonPose.prototype.dispose = function () {\n        this.jointPoses.length = 0;\n    };\n    SkeletonPose.assetType = \"[asset SkeletonPose]\";\n    return SkeletonPose;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonPose;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/Skeleton\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nvar Skeleton = (function (_super) {\n    __extends(Skeleton, _super);\n    /**\n     * Creates a new <code>Skeleton</code> object\n     */\n    function Skeleton() {\n        _super.call(this);\n        // in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n        this.joints = new Array();\n    }\n    Object.defineProperty(Skeleton.prototype, \"numJoints\", {\n        /**\n         * The total number of joints in the skeleton.\n         */\n        get: function () {\n            return this.joints.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The joint object with the given name.\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointFromName = function (jointName) {\n        var jointIndex = this.jointIndexFromName(jointName);\n        if (jointIndex != -1)\n            return this.joints[jointIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The index of the joint object in the joints Array\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointIndex;\n        var joint;\n        for (var i; i < this.joints.length; i++) {\n            joint = this.joints[i];\n            if (joint.name == jointName)\n                return jointIndex;\n            jointIndex++;\n        }\n        return -1;\n    };\n    /**\n     * @inheritDoc\n     */\n    Skeleton.prototype.dispose = function () {\n        this.joints.length = 0;\n    };\n    Object.defineProperty(Skeleton.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return Skeleton.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skeleton.assetType = \"[asset Skeleton]\";\n    return Skeleton;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Skeleton;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nvar VertexAnimationMode = (function () {\n    function VertexAnimationMode() {\n    }\n    /**\n     * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ADDITIVE = \"additive\";\n    /**\n     * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ABSOLUTE = \"absolute\";\n    return VertexAnimationMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationMode;\n\n},{}],\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nvar AnimationClipNodeBase = (function (_super) {\n    __extends(AnimationClipNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationClipNodeBase</code> object.\n     */\n    function AnimationClipNodeBase() {\n        _super.call(this);\n        this._pLooping = true;\n        this._pTotalDuration = 0;\n        this._pStitchDirty = true;\n        this._pStitchFinalFrame = false;\n        this._pNumFrames = 0;\n        this._pDurations = new Array();\n        /*uint*/\n        this._pTotalDelta = new Vector3D_1.default();\n        this.fixedFrameRate = true;\n    }\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"looping\", {\n        /**\n         * Determines whether the contents of the animation node have looping characteristics enabled.\n         */\n        get: function () {\n            return this._pLooping;\n        },\n        set: function (value) {\n            if (this._pLooping == value)\n                return;\n            this._pLooping = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"stitchFinalFrame\", {\n        /**\n         * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n         * assumption that both first and last frames are identical (false). Defaults to false.\n         */\n        get: function () {\n            return this._pStitchFinalFrame;\n        },\n        set: function (value) {\n            if (this._pStitchFinalFrame == value)\n                return;\n            this._pStitchFinalFrame = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDuration\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDelta\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"lastFrame\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pLastFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"durations\", {\n        /**\n         * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n         */\n        get: function () {\n            return this._pDurations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the node's final frame stitch state.\n     *\n     * @see #stitchFinalFrame\n     */\n    AnimationClipNodeBase.prototype._pUpdateStitch = function () {\n        this._pStitchDirty = false;\n        this._pLastFrame = (this._pStitchFinalFrame) ? this._pNumFrames : this._pNumFrames - 1;\n        this._pTotalDuration = 0;\n        this._pTotalDelta.x = 0;\n        this._pTotalDelta.y = 0;\n        this._pTotalDelta.z = 0;\n    };\n    return AnimationClipNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipNodeBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleAccelerationState_1 = require(\"../../animators/states/ParticleAccelerationState\");\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nvar ParticleAccelerationNode = (function (_super) {\n    __extends(ParticleAccelerationNode, _super);\n    /**\n     * Creates a new <code>ParticleAccelerationNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n     */\n    function ParticleAccelerationNode(mode /*uint*/, acceleration) {\n        if (acceleration === void 0) { acceleration = null; }\n        _super.call(this, \"ParticleAcceleration\", mode, 3);\n        this._pStateClass = ParticleAccelerationState_1.default;\n        this._acceleration = acceleration || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.pGetAGALVertexCode = function (shader, animationRegisterCache) {\n        var accelerationValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleAccelerationState_1.default.ACCELERATION_INDEX, accelerationValue.index);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var code = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n        if (animationRegisterCache.needVelocity) {\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            code += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        }\n        animationRegisterCache.removeVertexTempUsage(temp);\n        code += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var tempAcceleration = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n        if (!tempAcceleration)\n            throw new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n        this._pOneData[0] = tempAcceleration.x / 2;\n        this._pOneData[1] = tempAcceleration.y / 2;\n        this._pOneData[2] = tempAcceleration.z / 2;\n    };\n    /**\n     * Reference for acceleration node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n     */\n    ParticleAccelerationNode.ACCELERATION_VECTOR3D = \"AccelerationVector3D\";\n    return ParticleAccelerationNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleBezierCurveState_1 = require(\"../../animators/states/ParticleBezierCurveState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nvar ParticleBezierCurveNode = (function (_super) {\n    __extends(ParticleBezierCurveNode, _super);\n    /**\n     * Creates a new <code>ParticleBezierCurveNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n     * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n     */\n    function ParticleBezierCurveNode(mode /*uint*/, controlPoint, endPoint) {\n        if (controlPoint === void 0) { controlPoint = null; }\n        if (endPoint === void 0) { endPoint = null; }\n        _super.call(this, \"ParticleBezierCurve\", mode, 6);\n        this._pStateClass = ParticleBezierCurveState_1.default;\n        this._iControlPoint = controlPoint || new Vector3D_1.default();\n        this._iEndPoint = endPoint || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var controlValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_CONTROL_INDEX, controlValue.index);\n        var endValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_END_INDEX, endValue.index);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var rev_time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var time_2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var time_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        animationRegisterCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n        code += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity) {\n            code += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n            code += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n            code += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var bezierControl = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n        if (!bezierControl)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n        var bezierEnd = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n        if (!bezierEnd)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n        this._pOneData[0] = bezierControl.x;\n        this._pOneData[1] = bezierControl.y;\n        this._pOneData[2] = bezierControl.z;\n        this._pOneData[3] = bezierEnd.x;\n        this._pOneData[4] = bezierEnd.y;\n        this._pOneData[5] = bezierEnd.z;\n    };\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D = \"BezierControlVector3D\";\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_END_VECTOR3D = \"BezierEndVector3D\";\n    return ParticleBezierCurveNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleBillboardState_1 = require(\"../../animators/states/ParticleBillboardState\");\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nvar ParticleBillboardNode = (function (_super) {\n    __extends(ParticleBillboardNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleBillboardNode(billboardAxis) {\n        if (billboardAxis === void 0) { billboardAxis = null; }\n        _super.call(this, \"ParticleBillboard\", ParticlePropertiesMode_1.default.GLOBAL, 0, 4);\n        this._pStateClass = ParticleBillboardState_1.default;\n        this._iBillboardAxis = billboardAxis;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var rotationMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleBillboardState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var code = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n            \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        var shaderRegisterElement;\n        for (var i = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n            shaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n            code += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n                \"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasBillboard = true;\n    };\n    return ParticleBillboardNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleColorState_1 = require(\"../../animators/states/ParticleColorState\");\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nvar ParticleColorNode = (function (_super) {\n    __extends(ParticleColorNode, _super);\n    /**\n     * Creates a new <code>ParticleColorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n     * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n     * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleColorNode(mode /*uint*/, usesMultiplier, usesOffset, usesCycle, usesPhase, startColor, endColor, cycleDuration, cyclePhase) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (startColor === void 0) { startColor = null; }\n        if (endColor === void 0) { endColor = null; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleColor\", mode, (usesMultiplier && usesOffset) ? 16 : 8, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iStartColor = startColor || new ColorTransform_1.default();\n        this._iEndColor = endColor || new ColorTransform_1.default();\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        if (animationRegisterCache.needFragmentAnimation) {\n            var temp = animationRegisterCache.getFreeVertexVectorTemp();\n            if (this._iUsesCycle) {\n                var cycleConst = animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.CYCLE_INDEX, cycleConst.index);\n                animationRegisterCache.addVertexTempUsages(temp, 1);\n                var sin = animationRegisterCache.getFreeVertexSingleTemp();\n                animationRegisterCache.removeVertexTempUsage(temp);\n                code += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n                if (this._iUsesPhase)\n                    code += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n                code += \"sin \" + sin + \",\" + sin + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                var startMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n                var deltaMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n                code += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle ? sin : animationRegisterCache.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n                code += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var startOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n                var deltaOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n                code += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle ? sin : animationRegisterCache.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var startColor = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n        if (!startColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n        var endColor = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n        if (!endColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        if (!this._iUsesCycle) {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = startColor.redMultiplier;\n                this._pOneData[i++] = startColor.greenMultiplier;\n                this._pOneData[i++] = startColor.blueMultiplier;\n                this._pOneData[i++] = startColor.alphaMultiplier;\n                this._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n                this._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n                this._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n                this._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = startColor.redOffset / 255;\n                this._pOneData[i++] = startColor.greenOffset / 255;\n                this._pOneData[i++] = startColor.blueOffset / 255;\n                this._pOneData[i++] = startColor.alphaOffset / 255;\n                this._pOneData[i++] = (endColor.redOffset - startColor.redOffset) / 255;\n                this._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset) / 255;\n                this._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset) / 255;\n                this._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset) / 255;\n            }\n        }\n        else {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier) / 2;\n                this._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier) / 2;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = (startColor.redOffset + endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.redOffset - endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset) / (255 * 2);\n            }\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_START_COLORTRANSFORM = \"ColorStartColorTransform\";\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_END_COLORTRANSFORM = \"ColorEndColorTransform\";\n    return ParticleColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleFollowState_1 = require(\"../../animators/states/ParticleFollowState\");\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nvar ParticleFollowNode = (function (_super) {\n    __extends(ParticleFollowNode, _super);\n    /**\n     * Creates a new <code>ParticleFollowNode</code>\n     *\n     * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n     * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n     * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n     */\n    function ParticleFollowNode(usesPosition, usesRotation, smooth) {\n        if (usesPosition === void 0) { usesPosition = true; }\n        if (usesRotation === void 0) { usesRotation = true; }\n        if (smooth === void 0) { smooth = false; }\n        _super.call(this, \"ParticleFollow\", ParticlePropertiesMode_1.default.LOCAL_DYNAMIC, (usesPosition && usesRotation) ? 6 : 3, ParticleAnimationSet_1.default.POST_PRIORITY);\n        this._pStateClass = ParticleFollowState_1.default;\n        this._iUsesPosition = usesPosition;\n        this._iUsesRotation = usesRotation;\n        this._iSmooth = smooth;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        //TODO: use Quaternion to implement this function\n        var code = \"\";\n        if (this._iUsesRotation) {\n            var rotationAttribute = animationRegisterCache.getFreeVertexAttribute();\n            animationRegisterCache.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n            var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp1, 1);\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp2, 1);\n            var temp3 = animationRegisterCache.getFreeVertexVectorTemp();\n            var temp4;\n            if (animationRegisterCache.hasBillboard) {\n                animationRegisterCache.addVertexTempUsages(temp3, 1);\n                temp4 = animationRegisterCache.getFreeVertexVectorTemp();\n            }\n            animationRegisterCache.removeVertexTempUsage(temp1);\n            animationRegisterCache.removeVertexTempUsage(temp2);\n            if (animationRegisterCache.hasBillboard)\n                animationRegisterCache.removeVertexTempUsage(temp3);\n            var len = animationRegisterCache.rotationRegisters.length;\n            var i;\n            //x axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n            code += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n            code += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n            code += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n            if (animationRegisterCache.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //y axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n            code += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n            code += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n            if (animationRegisterCache.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n            code += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            if (animationRegisterCache.hasBillboard) {\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n                code += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n                code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            }\n            else {\n                code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n        }\n        if (this._iUsesPosition) {\n            var positionAttribute = animationRegisterCache.getFreeVertexAttribute();\n            animationRegisterCache.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_POSITION_INDEX, positionAttribute.index);\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return ParticleFollowNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleInitialColorState_1 = require(\"../../animators/states/ParticleInitialColorState\");\n/**\n *\n */\nvar ParticleInitialColorNode = (function (_super) {\n    __extends(ParticleInitialColorNode, _super);\n    function ParticleInitialColorNode(mode /*uint*/, usesMultiplier, usesOffset, initialColor) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = false; }\n        if (initialColor === void 0) { initialColor = null; }\n        _super.call(this, \"ParticleInitialColor\", mode, (usesMultiplier && usesOffset) ? 8 : 4, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleInitialColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iInitialColor = initialColor || new ColorTransform_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        if (animationRegisterCache.needFragmentAnimation) {\n            if (this._iUsesMultiplier) {\n                var multiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n                animationRegisterCache.setRegisterIndex(this, ParticleInitialColorState_1.default.MULTIPLIER_INDEX, multiplierValue.index);\n                code += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var offsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleInitialColorState_1.default.OFFSET_INDEX, offsetValue.index);\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var initialColor = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n        if (!initialColor)\n            throw (new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        //multiplier\n        if (this._iUsesMultiplier) {\n            this._pOneData[i++] = initialColor.redMultiplier;\n            this._pOneData[i++] = initialColor.greenMultiplier;\n            this._pOneData[i++] = initialColor.blueMultiplier;\n            this._pOneData[i++] = initialColor.alphaMultiplier;\n        }\n        //offset\n        if (this._iUsesOffset) {\n            this._pOneData[i++] = initialColor.redOffset / 255;\n            this._pOneData[i++] = initialColor.greenOffset / 255;\n            this._pOneData[i++] = initialColor.blueOffset / 255;\n            this._pOneData[i++] = initialColor.alphaOffset / 255;\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n     */\n    ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM = \"ColorInitialColorTransform\";\n    return ParticleInitialColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nvar ParticleNodeBase = (function (_super) {\n    __extends(ParticleNodeBase, _super);\n    /**\n     * Creates a new <code>ParticleNodeBase</code> object.\n     *\n     * @param               name            Defines the generic name of the particle animation node.\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n     * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n     */\n    function ParticleNodeBase(name, mode /*uint*/, dataLength /*uint*/, priority) {\n        if (priority === void 0) { priority = 1; }\n        _super.call(this);\n        this._pDataLength = 3;\n        name = name + ParticleNodeBase.MODES[mode];\n        this.name = name;\n        this._pMode = mode;\n        this._priority = priority;\n        this._pDataLength = dataLength;\n        this._pOneData = new Array(this._pDataLength);\n    }\n    Object.defineProperty(ParticleNodeBase.prototype, \"mode\", {\n        /**\n         * Returns the property mode of the particle animation node. Typically set in the node constructor\n         *\n         * @see away.animators.ParticlePropertiesMode\n         */\n        get: function () {\n            return this._pMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"priority\", {\n        /**\n         * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._priority;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"dataLength\", {\n        /**\n         * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._pDataLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"oneData\", {\n        /**\n         * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #generatePropertyOfOneParticle\n         */\n        get: function () {\n            return this._pOneData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the AGAL code of the particle animation node for use in the vertex shader.\n     */\n    ParticleNodeBase.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader.\n     */\n    ParticleNodeBase.prototype.getAGALFragmentCode = function (shader, animationRegisterCache) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n     */\n    ParticleNodeBase.prototype.getAGALUVCode = function (shader, animationRegisterCache) {\n        return \"\";\n    };\n    /**\n     * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n     *\n     * @see away.animators.ParticleAnimationSet#initParticleFunc\n     */\n    ParticleNodeBase.prototype._iGeneratePropertyOfOneParticle = function (param) {\n    };\n    /**\n     * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n     */\n    ParticleNodeBase.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n    };\n    //modes alias\n    ParticleNodeBase.GLOBAL = 'Global';\n    ParticleNodeBase.LOCAL_STATIC = 'LocalStatic';\n    ParticleNodeBase.LOCAL_DYNAMIC = 'LocalDynamic';\n    //modes list\n    ParticleNodeBase.MODES = {\n        0: ParticleNodeBase.GLOBAL,\n        1: ParticleNodeBase.LOCAL_STATIC,\n        2: ParticleNodeBase.LOCAL_DYNAMIC\n    };\n    return ParticleNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleNodeBase;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleOrbitState_1 = require(\"../../animators/states/ParticleOrbitState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nvar ParticleOrbitNode = (function (_super) {\n    __extends(ParticleOrbitNode, _super);\n    /**\n     * Creates a new <code>ParticleOrbitNode</code> object.\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n     * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n     */\n    function ParticleOrbitNode(mode /*uint*/, usesEulers, usesCycle, usesPhase, radius, cycleDuration, cyclePhase, eulers) {\n        if (usesEulers === void 0) { usesEulers = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (radius === void 0) { radius = 100; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (eulers === void 0) { eulers = null; }\n        var len = 3;\n        if (usesPhase)\n            len++;\n        _super.call(this, \"ParticleOrbit\", mode, len);\n        this._pStateClass = ParticleOrbitState_1.default;\n        this._iUsesEulers = usesEulers;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iRadius = radius;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n        this._iEulers = eulers || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var orbitRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleOrbitState_1.default.ORBIT_INDEX, orbitRegister.index);\n        var eulersMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleOrbitState_1.default.EULERS_INDEX, eulersMatrixRegister.index);\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(temp1, 1);\n        var distance = new ShaderRegisterElement_1.default(temp1.regName, temp1.index);\n        var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n        var cos = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 1);\n        var degree = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 2);\n        animationRegisterCache.removeVertexTempUsage(temp1);\n        var code = \"\";\n        if (this._iUsesCycle) {\n            code += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n        }\n        else\n            code += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n        code += \"cos \" + cos + \",\" + degree + \"\\n\";\n        code += \"sin \" + sin + \",\" + degree + \"\\n\";\n        code += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n        code += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n        code += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n        if (this._iUsesEulers)\n            code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity) {\n            code += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n            code += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n            code += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            if (this._iUsesEulers)\n                code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n            code += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n            code += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n            if (!this._iUsesCycle)\n                code += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n        var orbit = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n        if (!orbit)\n            throw new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n        this._pOneData[0] = orbit.x;\n        if (this._iUsesCycle && orbit.y <= 0)\n            throw (new Error(\"the cycle duration must be greater than zero\"));\n        this._pOneData[1] = Math.PI * 2 / (!this._iUsesCycle ? 1 : orbit.y);\n        this._pOneData[2] = orbit.x * Math.PI * 2;\n        if (this._iUsesPhase)\n            this._pOneData[3] = orbit.z * Math.PI / 180;\n    };\n    /**\n     * Reference for orbit node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n     */\n    ParticleOrbitNode.ORBIT_VECTOR3D = \"OrbitVector3D\";\n    return ParticleOrbitNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleOscillatorState_1 = require(\"../../animators/states/ParticleOscillatorState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nvar ParticleOscillatorNode = (function (_super) {\n    __extends(ParticleOscillatorNode, _super);\n    /**\n     * Creates a new <code>ParticleOscillatorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n     */\n    function ParticleOscillatorNode(mode /*uint*/, oscillator) {\n        if (oscillator === void 0) { oscillator = null; }\n        _super.call(this, \"ParticleOscillator\", mode, 4);\n        this._pStateClass = ParticleOscillatorState_1.default;\n        this._iOscillator = oscillator || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var oscillatorRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleOscillatorState_1.default.OSCILLATOR_INDEX, oscillatorRegister.index);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var dgree = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        animationRegisterCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + dgree + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity) {\n            code += \"cos \" + cos + \",\" + dgree + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n        var drift = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n        if (!drift)\n            throw (new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = drift.x;\n        this._pOneData[1] = drift.y;\n        this._pOneData[2] = drift.z;\n        if (drift.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        this._pOneData[3] = Math.PI * 2 / drift.w;\n    };\n    /**\n     * Reference for ocsillator node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n     */\n    ParticleOscillatorNode.OSCILLATOR_VECTOR3D = \"OscillatorVector3D\";\n    return ParticleOscillatorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticlePositionState_1 = require(\"../../animators/states/ParticlePositionState\");\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nvar ParticlePositionNode = (function (_super) {\n    __extends(ParticlePositionNode, _super);\n    /**\n     * Creates a new <code>ParticlePositionNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n     */\n    function ParticlePositionNode(mode /*uint*/, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticlePosition\", mode, 3);\n        this._pStateClass = ParticlePositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticlePositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        return \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticlePositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for position node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing position of the particle.\n     */\n    ParticlePositionNode.POSITION_VECTOR3D = \"PositionVector3D\";\n    return ParticlePositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToHeadingState_1 = require(\"../../animators/states/ParticleRotateToHeadingState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nvar ParticleRotateToHeadingNode = (function (_super) {\n    __extends(ParticleRotateToHeadingNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleRotateToHeadingNode() {\n        _super.call(this, \"ParticleRotateToHeading\", ParticlePropertiesMode_1.default.GLOBAL, 0, 3);\n        this._pStateClass = ParticleRotateToHeadingState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        var len = animationRegisterCache.rotationRegisters.length;\n        var i;\n        if (animationRegisterCache.hasBillboard) {\n            var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp1, 1);\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp2, 1);\n            var temp3 = animationRegisterCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.removeVertexTempUsage(temp1);\n            animationRegisterCache.removeVertexTempUsage(temp2);\n            //process the velocity\n            code += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmVel = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(nrmVel, 1);\n            var xAxis = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(xAxis, 1);\n            var R = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(R, 1);\n            var R_rev = animationRegisterCache.getFreeVertexVectorTemp();\n            var cos = new ShaderRegisterElement_1.default(R.regName, R.index, 3);\n            var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n            var cos2 = new ShaderRegisterElement_1.default(nrmVel.regName, nrmVel.index, 3);\n            var tempSingle = sin;\n            animationRegisterCache.removeVertexTempUsage(nrmVel);\n            animationRegisterCache.removeVertexTempUsage(xAxis);\n            animationRegisterCache.removeVertexTempUsage(R);\n            code += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n            code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            //use R as temp to judge if nrm is (0,0,0).\n            //if nrm is (0,0,0) ,change it to (0,0,1).\n            code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n            code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n            code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n            code += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            //use cos as R_rev.w\n            //nrmVel and xAxis are used as temp register\n            code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            //code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n                code += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n                code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n                code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n                code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n                code += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n                code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n                code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n                code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n                code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n                code += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.needVelocity = true;\n    };\n    return ParticleRotateToHeadingNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToPositionState_1 = require(\"../../animators/states/ParticleRotateToPositionState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nvar ParticleRotateToPositionNode = (function (_super) {\n    __extends(ParticleRotateToPositionNode, _super);\n    /**\n     * Creates a new <code>ParticleRotateToPositionNode</code>\n     */\n    function ParticleRotateToPositionNode(mode /*uint*/, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticleRotateToPosition\", mode, 3, 3);\n        this._pStateClass = ParticleRotateToPositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        var code = \"\";\n        var len = animationRegisterCache.rotationRegisters.length;\n        var i;\n        if (animationRegisterCache.hasBillboard) {\n            var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp1, 1);\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp2, 1);\n            var temp3 = animationRegisterCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.removeVertexTempUsage(temp1);\n            animationRegisterCache.removeVertexTempUsage(temp2);\n            //process the position\n            code += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n            code += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmDirection = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n            var temp = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp, 1);\n            var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            var o_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n            var tempSingle = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n            var R = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(R, 1);\n            animationRegisterCache.removeVertexTempUsage(nrmDirection);\n            animationRegisterCache.removeVertexTempUsage(temp);\n            animationRegisterCache.removeVertexTempUsage(R);\n            code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n            code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n            code += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n            code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n            //judgu if nrmDirection=(0,1,0);\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n            code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n            code += \"neg \" + cos + \",\" + cos + \"\\n\";\n            code += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n            code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n                code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n                code += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n                code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n                code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n                code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n                code += \"neg \" + cos + \",\" + cos + \"\\n\";\n                code += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n                code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n     */\n    ParticleRotateToPositionNode.POSITION_VECTOR3D = \"RotateToPositionVector3D\";\n    return ParticleRotateToPositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotationalVelocityState_1 = require(\"../../animators/states/ParticleRotationalVelocityState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nvar ParticleRotationalVelocityNode = (function (_super) {\n    __extends(ParticleRotationalVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleRotationalVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     */\n    function ParticleRotationalVelocityNode(mode /*uint*/, rotationalVelocity) {\n        if (rotationalVelocity === void 0) { rotationalVelocity = null; }\n        _super.call(this, \"ParticleRotationalVelocity\", mode, 4);\n        this._pStateClass = ParticleRotationalVelocityState_1.default;\n        this._iRotationalVelocity = rotationalVelocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var rotationRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState_1.default.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n        var nrmVel = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(nrmVel, 1);\n        var xAxis = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(xAxis, 1);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var Rtemp = new ShaderRegisterElement_1.default(temp.regName, temp.index);\n        var R_rev = animationRegisterCache.getFreeVertexVectorTemp();\n        R_rev = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index);\n        var cos = new ShaderRegisterElement_1.default(Rtemp.regName, Rtemp.index, 3);\n        var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n        animationRegisterCache.removeVertexTempUsage(nrmVel);\n        animationRegisterCache.removeVertexTempUsage(xAxis);\n        animationRegisterCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n        code += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n        code += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + cos + \"\\n\";\n        code += \"cos \" + cos + \",\" + cos + \"\\n\";\n        code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n        //nrmVel and xAxis are used as temp register\n        code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n        code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n        //use cos as R_rev.w\n        code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n        code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n        code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        var len = animationRegisterCache.rotationRegisters.length;\n        for (var i = 0; i < len; i++) {\n            code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n            code += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n            code += \"sin \" + sin + \",\" + cos + \"\\n\";\n            code += \"cos \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n        var rotate = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n        if (!rotate)\n            throw (new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n        if (rotate.length <= 0)\n            rotate.z = 1; //set the default direction\n        else\n            rotate.normalize();\n        this._pOneData[0] = rotate.x;\n        this._pOneData[1] = rotate.y;\n        this._pOneData[2] = rotate.z;\n        if (rotate.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        // it's used as angle/2 in agal\n        this._pOneData[3] = Math.PI / rotate.w;\n    };\n    /**\n     * Reference for rotational velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n     */\n    ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D = \"RotationalVelocityVector3D\";\n    return ParticleRotationalVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleScaleState_1 = require(\"../../animators/states/ParticleScaleState\");\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nvar ParticleScaleNode = (function (_super) {\n    __extends(ParticleScaleNode, _super);\n    /**\n     * Creates a new <code>ParticleScaleNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n     * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleScaleNode(mode /*uint*/, usesCycle, usesPhase, minScale, maxScale, cycleDuration, cyclePhase) {\n        if (minScale === void 0) { minScale = 1; }\n        if (maxScale === void 0) { maxScale = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleScale\", mode, (usesCycle && usesPhase) ? 4 : ((usesCycle || usesPhase) ? 3 : 2), 3);\n        this._pStateClass = ParticleScaleState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iMinScale = minScale;\n        this._iMaxScale = maxScale;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        var temp = animationRegisterCache.getFreeVertexSingleTemp();\n        var scaleRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleScaleState_1.default.SCALE_INDEX, scaleRegister.index);\n        if (this._iUsesCycle) {\n            code += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n            code += \"sin \" + temp + \",\" + temp + \"\\n\";\n        }\n        code += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle) ? temp : animationRegisterCache.vertexLife) + \"\\n\";\n        code += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n        code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var scale = param[ParticleScaleNode.SCALE_VECTOR3D];\n        if (!scale)\n            throw (new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n        if (this._iUsesCycle) {\n            this._pOneData[0] = (scale.x + scale.y) / 2;\n            this._pOneData[1] = Math.abs(scale.x - scale.y) / 2;\n            if (scale.z <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._pOneData[2] = Math.PI * 2 / scale.z;\n            if (this._iUsesPhase)\n                this._pOneData[3] = scale.w * Math.PI / 180;\n        }\n        else {\n            this._pOneData[0] = scale.x;\n            this._pOneData[1] = scale.y - scale.x;\n        }\n    };\n    /**\n     * Reference for scale node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n     */\n    ParticleScaleNode.SCALE_VECTOR3D = \"ScaleVector3D\";\n    return ParticleScaleNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleSegmentedColorState_1 = require(\"../../animators/states/ParticleSegmentedColorState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n *\n */\nvar ParticleSegmentedColorNode = (function (_super) {\n    __extends(ParticleSegmentedColorNode, _super);\n    function ParticleSegmentedColorNode(usesMultiplier, usesOffset, numSegmentPoint /*int*/, startColor, endColor, segmentPoints) {\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleSegmentedColor\", ParticlePropertiesMode_1.default.GLOBAL, 0, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleSegmentedColorState_1.default;\n        if (numSegmentPoint > 4)\n            throw (new Error(\"the numSegmentPoint must be less or equal 4\"));\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iNumSegmentPoint = numSegmentPoint;\n        this._iStartColor = startColor;\n        this._iEndColor = endColor;\n        this._iSegmentPoints = segmentPoints;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        if (animationRegisterCache.needFragmentAnimation) {\n            var accMultiplierColor;\n            //var accOffsetColor:ShaderRegisterElement;\n            if (this._iUsesMultiplier) {\n                accMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n                animationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n            }\n            var tempColor = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(tempColor, 1);\n            var temp = animationRegisterCache.getFreeVertexVectorTemp();\n            var accTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var tempTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            if (this._iUsesMultiplier)\n                animationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n            animationRegisterCache.removeVertexTempUsage(tempColor);\n            //for saving all the life values (at most 4)\n            var lifeTimeRegister = animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState_1.default.TIME_DATA_INDEX, lifeTimeRegister.index);\n            var i;\n            var startMulValue;\n            var deltaMulValues;\n            if (this._iUsesMultiplier) {\n                startMulValue = animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_MULTIPLIER_INDEX, startMulValue.index);\n                deltaMulValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n            }\n            var startOffsetValue;\n            var deltaOffsetValues;\n            if (this._iUsesOffset) {\n                startOffsetValue = animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                deltaOffsetValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n            }\n            if (this._iUsesMultiplier)\n                code += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n            if (this._iUsesOffset)\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n            for (i = 0; i < this._iNumSegmentPoint; i++) {\n                switch (i) {\n                    case 0:\n                        code += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                if (this._iUsesMultiplier) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n                    code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                }\n                if (this._iUsesOffset) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n                    code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n                }\n            }\n            //for the last segment:\n            if (this._iNumSegmentPoint == 0)\n                tempTime = animationRegisterCache.vertexLife;\n            else {\n                switch (this._iNumSegmentPoint) {\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 4:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                code += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n            }\n        }\n        return code;\n    };\n    return ParticleSegmentedColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleSpriteSheetState_1 = require(\"../../animators/states/ParticleSpriteSheetState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nvar ParticleSpriteSheetNode = (function (_super) {\n    __extends(ParticleSpriteSheetNode, _super);\n    /**\n     * Creates a new <code>ParticleSpriteSheetNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n     * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n     * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n     */\n    function ParticleSpriteSheetNode(mode /*uint*/, usesCycle, usesPhase, numColumns, numRows, cycleDuration, cyclePhase, totalFrames) {\n        if (numColumns === void 0) { numColumns = 1; }\n        if (numRows === void 0) { numRows = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (totalFrames === void 0) { totalFrames = Number.MAX_VALUE; }\n        _super.call(this, \"ParticleSpriteSheet\", mode, usesCycle ? (usesPhase ? 3 : 2) : 1, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleSpriteSheetState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iNumColumns = numColumns;\n        this._iNumRows = numRows;\n        this._iCyclePhase = cyclePhase;\n        this._iCycleDuration = cycleDuration;\n        this._iTotalFrames = Math.min(totalFrames, numColumns * numRows);\n    }\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numColumns\", {\n        /**\n         * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numRows\", {\n        /**\n         * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"totalFrames\", {\n        /**\n         * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n         */\n        get: function () {\n            return this._iTotalFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAGALUVCode = function (shader, animationRegisterCache) {\n        //get 2 vc\n        var uvParamConst1 = animationRegisterCache.getFreeVertexConstant();\n        var uvParamConst2 = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_0, uvParamConst1.index);\n        animationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_1, uvParamConst2.index);\n        var uTotal = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 0);\n        var uStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 1);\n        var vStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 2);\n        var uSpeed = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 0);\n        var cycle = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 1);\n        var phaseTime = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 2);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var vOffset = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        var temp2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n        var u = new ShaderRegisterElement_1.default(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n        var v = new ShaderRegisterElement_1.default(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n        var code = \"\";\n        //scale uv\n        code += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n        if (this._iUsesCycle) {\n            if (this._iUsesPhase)\n                code += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n            else\n                code += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n            code += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"frc \" + time + \",\" + time + \"\\n\";\n            code += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n        }\n        else\n            code += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n        if (this._iNumRows > 1) {\n            code += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n            code += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n            code += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n            code += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n        }\n        code += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n        code += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n        code += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n        code += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"frc \" + temp + \",\" + temp + \"\\n\";\n        code += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        if (this._iUsesCycle) {\n            var uvCycle = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n            if (!uvCycle)\n                throw (new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n            if (uvCycle.x <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            var uTotal = this._iTotalFrames / this._iNumColumns;\n            this._pOneData[0] = uTotal / uvCycle.x;\n            this._pOneData[1] = uvCycle.x;\n            if (this._iUsesPhase)\n                this._pOneData[2] = uvCycle.y;\n        }\n    };\n    /**\n     * Reference for spritesheet node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n     */\n    ParticleSpriteSheetNode.UV_VECTOR3D = \"UVVector3D\";\n    return ParticleSpriteSheetNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleTimeState_1 = require(\"../../animators/states/ParticleTimeState\");\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nvar ParticleTimeNode = (function (_super) {\n    __extends(ParticleTimeNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleTimeNode(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this, \"ParticleTime\", ParticlePropertiesMode_1.default.LOCAL_STATIC, 4, 0);\n        this._pStateClass = ParticleTimeState_1.default;\n        this._iUsesDuration = usesDuration;\n        this._iUsesLooping = usesLooping;\n        this._iUsesDelay = usesDelay;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var timeStreamRegister = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n        animationRegisterCache.setRegisterIndex(this, ParticleTimeState_1.default.TIME_STREAM_INDEX, timeStreamRegister.index);\n        var timeConst = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleTimeState_1.default.TIME_CONSTANT_INDEX, timeConst.index);\n        var code = \"\";\n        code += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n        //if time=0,set the position to zero.\n        var temp = animationRegisterCache.getFreeVertexSingleTemp();\n        code += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n        code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        if (this._iUsesDuration) {\n            if (this._iUsesLooping) {\n                var div = animationRegisterCache.getFreeVertexSingleTemp();\n                if (this._iUsesDelay) {\n                    code += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n                    code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n                }\n                else {\n                    code += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n                }\n            }\n            else {\n                var sge = animationRegisterCache.getFreeVertexSingleTemp();\n                code += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n                code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n            }\n        }\n        code += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        this._pOneData[0] = param.startTime;\n        this._pOneData[1] = param.duration;\n        this._pOneData[2] = param.delay + param.duration;\n        this._pOneData[3] = 1 / param.duration;\n    };\n    return ParticleTimeNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleUVState_1 = require(\"../../animators/states/ParticleUVState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nvar ParticleUVNode = (function (_super) {\n    __extends(ParticleUVNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n     */\n    function ParticleUVNode(mode /*uint*/, cycle, scale, axis) {\n        if (cycle === void 0) { cycle = 1; }\n        if (scale === void 0) { scale = 1; }\n        if (axis === void 0) { axis = \"x\"; }\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleUV\", ParticlePropertiesMode_1.default.GLOBAL, 4, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleUVState_1.default;\n        this._cycle = cycle;\n        this._scale = scale;\n        this._axis = axis;\n        this.updateUVData();\n    }\n    Object.defineProperty(ParticleUVNode.prototype, \"cycle\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._cycle;\n        },\n        set: function (value) {\n            this._cycle = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"scale\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"axis\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._axis;\n        },\n        set: function (value) {\n            this._axis = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAGALUVCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        var uvConst = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleUVState_1.default.UV_INDEX, uvConst.index);\n        var axisIndex = this._axis == \"x\" ? 0 : (this._axis == \"y\" ? 1 : 2);\n        var target = new ShaderRegisterElement_1.default(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n        var sin = animationRegisterCache.getFreeVertexSingleTemp();\n        if (this._scale != 1)\n            code += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n        code += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n        code += \"sin \" + sin + \",\" + sin + \"\\n\";\n        code += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    ParticleUVNode.prototype.updateUVData = function () {\n        this._iUvData = new Vector3D_1.default(Math.PI * 2 / this._cycle, this._scale, 0, 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     *\n     */\n    ParticleUVNode.U_AXIS = \"x\";\n    /**\n     *\n     */\n    ParticleUVNode.V_AXIS = \"y\";\n    return ParticleUVNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleVelocityState_1 = require(\"../../animators/states/ParticleVelocityState\");\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nvar ParticleVelocityNode = (function (_super) {\n    __extends(ParticleVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n     */\n    function ParticleVelocityNode(mode /*uint*/, velocity) {\n        if (velocity === void 0) { velocity = null; }\n        _super.call(this, \"ParticleVelocity\", mode, 3);\n        this._pStateClass = ParticleVelocityState_1.default;\n        this._iVelocity = velocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var velocityValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleVelocityState_1.default.VELOCITY_INDEX, velocityValue.index);\n        var distance = animationRegisterCache.getFreeVertexVectorTemp();\n        var code = \"\";\n        code += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity)\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var _tempVelocity = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n        if (!_tempVelocity)\n            throw new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n        this._pOneData[0] = _tempVelocity.x;\n        this._pOneData[1] = _tempVelocity.y;\n        this._pOneData[2] = _tempVelocity.z;\n    };\n    /**\n     * Reference for velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n     */\n    ParticleVelocityNode.VELOCITY_VECTOR3D = \"VelocityVector3D\";\n    return ParticleVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonBinaryLERPState_1 = require(\"../../animators/states/SkeletonBinaryLERPState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonBinaryLERPNode = (function (_super) {\n    __extends(SkeletonBinaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n     */\n    function SkeletonBinaryLERPNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonBinaryLERPState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonBinaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPNode;\n\n},{\"../../animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipNodeBase_1 = require(\"../../animators/nodes/AnimationClipNodeBase\");\nvar SkeletonClipState_1 = require(\"../../animators/states/SkeletonClipState\");\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nvar SkeletonClipNode = (function (_super) {\n    __extends(SkeletonClipNode, _super);\n    /**\n     * Creates a new <code>SkeletonClipNode</code> object.\n     */\n    function SkeletonClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        /**\n         * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n         * of the output skeleton pose. Defaults to false.\n         */\n        this.highQuality = false;\n        this._pStateClass = SkeletonClipState_1.default;\n    }\n    Object.defineProperty(SkeletonClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a skeleton pose frame to the internal timeline of the animation node.\n     *\n     * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     */\n    SkeletonClipNode.prototype.addFrame = function (skeletonPose, duration /*number /*uint*/) {\n        this._frames.push(skeletonPose);\n        this._pDurations.push(duration);\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._frames[i].jointPoses[0].translation;\n            p2 = this._frames[i + 1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pStitchFinalFrame || !this._pLooping) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return SkeletonClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipNode;\n\n},{\"../../animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"../../animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDifferenceState_1 = require(\"../../animators/states/SkeletonDifferenceState\");\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDifferenceNode = (function (_super) {\n    __extends(SkeletonDifferenceNode, _super);\n    /**\n     * Creates a new <code>SkeletonAdditiveNode</code> object.\n     */\n    function SkeletonDifferenceNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDifferenceState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDifferenceNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceNode;\n\n},{\"../../animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDirectionalState_1 = require(\"../../animators/states/SkeletonDirectionalState\");\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDirectionalNode = (function (_super) {\n    __extends(SkeletonDirectionalNode, _super);\n    function SkeletonDirectionalNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDirectionalState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDirectionalNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalNode;\n\n},{\"../../animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonNaryLERPState_1 = require(\"../../animators/states/SkeletonNaryLERPState\");\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonNaryLERPNode = (function (_super) {\n    __extends(SkeletonNaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonNaryLERPNode</code> object.\n     */\n    function SkeletonNaryLERPNode() {\n        _super.call(this);\n        this._iInputs = new Array();\n        this._pStateClass = SkeletonNaryLERPState_1.default;\n    }\n    Object.defineProperty(SkeletonNaryLERPNode.prototype, \"numInputs\", {\n        get: function () {\n            return this._numInputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns an integer representing the input index of the given skeleton animation node.\n     *\n     * @param input The skeleton animation node for with the input index is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputIndex = function (input) {\n        return this._iInputs.indexOf(input);\n    };\n    /**\n     * Returns the skeleton animation node object that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputAt = function (index /*uint*/) {\n        return this._iInputs[index];\n    };\n    /**\n     * Adds a new skeleton animation node input to the animation node.\n     */\n    SkeletonNaryLERPNode.prototype.addInput = function (input) {\n        this._iInputs[this._numInputs++] = input;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonNaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPNode;\n\n},{\"../../animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationClipNodeBase_1 = require(\"../../animators/nodes/AnimationClipNodeBase\");\nvar VertexClipState_1 = require(\"../../animators/states/VertexClipState\");\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nvar VertexClipNode = (function (_super) {\n    __extends(VertexClipNode, _super);\n    /**\n     * Creates a new <code>VertexClipNode</code> object.\n     */\n    function VertexClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        this._translations = new Array();\n        this._pStateClass = VertexClipState_1.default;\n    }\n    Object.defineProperty(VertexClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a geometry object to the internal timeline of the animation node.\n     *\n     * @param geometry The geometry object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n     */\n    VertexClipNode.prototype.addFrame = function (geometry, duration /*uint*/, translation) {\n        if (translation === void 0) { translation = null; }\n        this._frames.push(geometry);\n        this._pDurations.push(duration);\n        this._translations.push(translation || new Vector3D_1.default());\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._translations[i];\n            p2 = this._translations[i + 1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._translations[0];\n            p2 = this._translations[1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return VertexClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipNode;\n\n},{\"../../animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"../../animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/AnimationClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\nvar AnimationStateEvent_1 = require(\"../../events/AnimationStateEvent\");\n/**\n *\n */\nvar AnimationClipState = (function (_super) {\n    __extends(AnimationClipState, _super);\n    function AnimationClipState(animator, animationClipNode) {\n        _super.call(this, animator, animationClipNode);\n        this._pFramesDirty = true;\n        this._animationClipNode = animationClipNode;\n    }\n    Object.defineProperty(AnimationClipState.prototype, \"blendWeight\", {\n        /**\n         * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n         * between the current frame (0) and next frame (1) of the animation.\n         *\n         * @see #currentFrame\n         * @see #nextFrame\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pBlendWeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"currentFrame\", {\n        /**\n         * Returns the current frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pCurrentFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"nextFrame\", {\n        /**\n         * Returns the next frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pNextFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.update = function (time /*int*/) {\n        if (!this._animationClipNode.looping) {\n            if (time > this._pStartTime + this._animationClipNode.totalDuration)\n                time = this._pStartTime + this._animationClipNode.totalDuration;\n            else if (time < this._pStartTime)\n                time = this._pStartTime;\n        }\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.phase = function (value) {\n        var time = value * this._animationClipNode.totalDuration + this._pStartTime;\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype._pUpdateTime = function (time /*int*/) {\n        this._pFramesDirty = true;\n        this._pTimeDir = (time - this._pStartTime > this._pTime) ? 1 : -1;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n     *\n     * @see #currentFrame\n     * @see #nextFrame\n     * @see #blendWeight\n     */\n    AnimationClipState.prototype._pUpdateFrames = function () {\n        this._pFramesDirty = false;\n        var looping = this._animationClipNode.looping;\n        var totalDuration = this._animationClipNode.totalDuration;\n        var lastFrame = this._animationClipNode.lastFrame;\n        var time = this._pTime;\n        //trace(\"time\", time, totalDuration)\n        if (looping && (time >= totalDuration || time < 0)) {\n            time %= totalDuration;\n            if (time < 0)\n                time += totalDuration;\n        }\n        if (!looping && time >= totalDuration) {\n            this.notifyPlaybackComplete();\n            this._pCurrentFrame = lastFrame;\n            this._pNextFrame = lastFrame;\n            this._pBlendWeight = 0;\n        }\n        else if (!looping && time <= 0) {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            this._pBlendWeight = 0;\n        }\n        else if (this._animationClipNode.fixedFrameRate) {\n            var t = time / totalDuration * lastFrame;\n            this._pCurrentFrame = Math.floor(t);\n            this._pBlendWeight = t - this._pCurrentFrame;\n            this._pNextFrame = this._pCurrentFrame + 1;\n        }\n        else {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            var dur = 0, frameTime;\n            var durations = this._animationClipNode.durations;\n            do {\n                frameTime = dur;\n                dur += durations[this._pNextFrame];\n                this._pCurrentFrame = this._pNextFrame++;\n            } while (time > dur);\n            if (this._pCurrentFrame == lastFrame) {\n                this._pCurrentFrame = 0;\n                this._pNextFrame = 1;\n            }\n            this._pBlendWeight = (time - frameTime) / durations[this._pCurrentFrame];\n        }\n    };\n    AnimationClipState.prototype.notifyPlaybackComplete = function () {\n        if (this._animationStatePlaybackComplete == null)\n            this._animationStatePlaybackComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n        this._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n    };\n    return AnimationClipState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipState;\n\n},{\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"../../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\"}],\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n *\n */\nvar AnimationStateBase = (function () {\n    function AnimationStateBase(animator, animationNode) {\n        this._pRootDelta = new Vector3D_1.default();\n        this._pPositionDeltaDirty = true;\n        this._pStartTime = 0;\n        this._pAnimator = animator;\n        this._pAnimationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateBase.prototype, \"positionDelta\", {\n        /**\n         * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n         */\n        get: function () {\n            if (this._pPositionDeltaDirty) {\n                this._pUpdatePositionDelta();\n            }\n            return this._pRootDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the start time of the node to a  new value.\n     *\n     * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n     */\n    AnimationStateBase.prototype.offset = function (startTime) {\n        this._pStartTime = startTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the configuration of the node to its current state.\n     *\n     * @param time The absolute time (in milliseconds) of the animator's play head position.\n     *\n     * @see AnimatorBase#update()\n     */\n    AnimationStateBase.prototype.update = function (time) {\n        if (this._pTime == time - this._pStartTime) {\n            return;\n        }\n        this._pUpdateTime(time);\n    };\n    /**\n     * Sets the animation phase of the node.\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimationStateBase.prototype.phase = function (value) {\n    };\n    /**\n     * Updates the node's internal playhead position.\n     *\n     * @param time The local time (in milliseconds) of the node's playhead position.\n     */\n    AnimationStateBase.prototype._pUpdateTime = function (time) {\n        this._pTime = time - this._pStartTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the node's root delta position\n     */\n    AnimationStateBase.prototype._pUpdatePositionDelta = function () {\n    };\n    return AnimationStateBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/IAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleAccelerationState = (function (_super) {\n    __extends(ParticleAccelerationState, _super);\n    function ParticleAccelerationState(animator, particleAccelerationNode) {\n        _super.call(this, animator, particleAccelerationNode);\n        this._particleAccelerationNode = particleAccelerationNode;\n        this._acceleration = this._particleAccelerationNode._acceleration;\n        this.updateAccelerationData();\n    }\n    Object.defineProperty(ParticleAccelerationState.prototype, \"acceleration\", {\n        /**\n         * Defines the acceleration vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._acceleration;\n        },\n        set: function (value) {\n            this._acceleration.x = value.x;\n            this._acceleration.y = value.y;\n            this._acceleration.z = value.z;\n            this.updateAccelerationData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        else\n            animationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n    };\n    ParticleAccelerationState.prototype.updateAccelerationData = function () {\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            this._halfAcceleration = new Vector3D_1.default(this._acceleration.x / 2, this._acceleration.y / 2, this._acceleration.z / 2);\n    };\n    /** @private */\n    ParticleAccelerationState.ACCELERATION_INDEX = 0;\n    return ParticleAccelerationState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBezierCurveState = (function (_super) {\n    __extends(ParticleBezierCurveState, _super);\n    function ParticleBezierCurveState(animator, particleBezierCurveNode) {\n        _super.call(this, animator, particleBezierCurveNode);\n        this._particleBezierCurveNode = particleBezierCurveNode;\n        this._controlPoint = this._particleBezierCurveNode._iControlPoint;\n        this._endPoint = this._particleBezierCurveNode._iEndPoint;\n    }\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"controlPoint\", {\n        /**\n         * Defines the default control point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._controlPoint;\n        },\n        set: function (value) {\n            this._controlPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"endPoint\", {\n        /**\n         * Defines the default end point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._endPoint;\n        },\n        set: function (value) {\n            this._endPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleBezierCurveState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var controlIndex = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n        var endIndex = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n        if (this._particleBezierCurveNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            animationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else {\n            animationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n            animationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n        }\n    };\n    /** @private */\n    ParticleBezierCurveState.BEZIER_CONTROL_INDEX = 0;\n    /** @private */\n    ParticleBezierCurveState.BEZIER_END_INDEX = 1;\n    return ParticleBezierCurveState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBillboardState = (function (_super) {\n    __extends(ParticleBillboardState, _super);\n    /**\n     *\n     */\n    function ParticleBillboardState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default;\n        this._billboardAxis = particleNode._iBillboardAxis;\n    }\n    ParticleBillboardState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var comps;\n        if (this._billboardAxis) {\n            var pos = renderable.sourceEntity.sceneTransform.position;\n            var look = camera.sceneTransform.position.subtract(pos);\n            var right = look.crossProduct(this._billboardAxis);\n            right.normalize();\n            look = this.billboardAxis.crossProduct(right);\n            look.normalize();\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            this._matrix.copyColumnFrom(0, right);\n            this._matrix.copyColumnFrom(1, this.billboardAxis);\n            this._matrix.copyColumnFrom(2, look);\n            this._matrix.copyColumnFrom(3, pos);\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        else {\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            //decompose using axis angle rotations\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            //recreate the matrix with just the rotation data\n            this._matrix.identity();\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        //set a new matrix transform constant\n        animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n    };\n    Object.defineProperty(ParticleBillboardState.prototype, \"billboardAxis\", {\n        /**\n         * Defines the billboard axis.\n         */\n        get: function () {\n            return this.billboardAxis;\n        },\n        set: function (value) {\n            this.billboardAxis = value ? value.clone() : null;\n            if (this.billboardAxis)\n                this.billboardAxis.normalize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    ParticleBillboardState.MATRIX_INDEX = 0;\n    return ParticleBillboardState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Orientation3D\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticleColorState = (function (_super) {\n    __extends(ParticleColorState, _super);\n    function ParticleColorState(animator, particleColorNode) {\n        _super.call(this, animator, particleColorNode);\n        this._particleColorNode = particleColorNode;\n        this._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n        this._usesOffset = this._particleColorNode._iUsesOffset;\n        this._usesCycle = this._particleColorNode._iUsesCycle;\n        this._usesPhase = this._particleColorNode._iUsesPhase;\n        this._startColor = this._particleColorNode._iStartColor;\n        this._endColor = this._particleColorNode._iEndColor;\n        this._cycleDuration = this._particleColorNode._iCycleDuration;\n        this._cyclePhase = this._particleColorNode._iCyclePhase;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleColorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needFragmentAnimation) {\n            var dataOffset = this._particleColorNode._iDataOffset;\n            if (this._usesCycle)\n                animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n            if (this._usesMultiplier) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n                }\n            }\n            if (this._usesOffset) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n                }\n            }\n        }\n    };\n    ParticleColorState.prototype.updateColorData = function () {\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._cycleData = new Vector3D_1.default(Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180, 0, 0);\n        }\n        if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default((this._startColor.redMultiplier + this._endColor.redMultiplier) / 2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier) / 2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier) / 2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier) / 2);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier) / 2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier) / 2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier) / 2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier) / 2);\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default((this._startColor.redOffset + this._endColor.redOffset) / (255 * 2), (this._startColor.greenOffset + this._endColor.greenOffset) / (255 * 2), (this._startColor.blueOffset + this._endColor.blueOffset) / (255 * 2), (this._startColor.alphaOffset + this._endColor.alphaOffset) / (255 * 2));\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / (255 * 2), (this._endColor.greenOffset - this._startColor.greenOffset) / (255 * 2), (this._endColor.blueOffset - this._startColor.blueOffset) / (255 * 2), (this._endColor.alphaOffset - this._startColor.alphaOffset) / (255 * 2));\n                }\n            }\n            else {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default(this._startColor.redOffset / 255, this._startColor.greenOffset / 255, this._startColor.blueOffset / 255, this._startColor.alphaOffset / 255);\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / 255, (this._endColor.greenOffset - this._startColor.greenOffset) / 255, (this._endColor.blueOffset - this._startColor.blueOffset) / 255, (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255);\n                }\n            }\n        }\n    };\n    /** @private */\n    ParticleColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleColorState.DELTA_MULTIPLIER_INDEX = 1;\n    /** @private */\n    ParticleColorState.START_OFFSET_INDEX = 2;\n    /** @private */\n    ParticleColorState.DELTA_OFFSET_INDEX = 3;\n    /** @private */\n    ParticleColorState.CYCLE_INDEX = 4;\n    return ParticleColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleFollowState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleFollowState = (function (_super) {\n    __extends(ParticleFollowState, _super);\n    function ParticleFollowState(animator, particleFollowNode) {\n        _super.call(this, animator, particleFollowNode, true);\n        this._targetPos = new Vector3D_1.default();\n        this._targetEuler = new Vector3D_1.default();\n        //temporary vector3D for calculation\n        this._temp = new Vector3D_1.default();\n        this._particleFollowNode = particleFollowNode;\n        this._smooth = particleFollowNode._iSmooth;\n    }\n    Object.defineProperty(ParticleFollowState.prototype, \"followTarget\", {\n        get: function () {\n            return this._followTarget;\n        },\n        set: function (value) {\n            this._followTarget = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleFollowState.prototype, \"smooth\", {\n        get: function () {\n            return this._smooth;\n        },\n        set: function (value) {\n            this._smooth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._followTarget) {\n            if (this._particleFollowNode._iUsesPosition) {\n                this._targetPos.x = this._followTarget.transform.position.x / renderable.sourceEntity.scaleX;\n                this._targetPos.y = this._followTarget.transform.position.y / renderable.sourceEntity.scaleY;\n                this._targetPos.z = this._followTarget.transform.position.z / renderable.sourceEntity.scaleZ;\n            }\n            if (this._particleFollowNode._iUsesRotation) {\n                this._targetEuler.x = this._followTarget.rotationX;\n                this._targetEuler.y = this._followTarget.rotationY;\n                this._targetEuler.z = this._followTarget.rotationZ;\n                this._targetEuler.scaleBy(MathConsts_1.default.DEGREES_TO_RADIANS);\n            }\n        }\n        //initialization\n        if (!this._prePos)\n            this._prePos = this._targetPos.clone();\n        if (!this._preEuler)\n            this._preEuler = this._targetEuler.clone();\n        var currentTime = this._pTime / 1000;\n        var previousTime = animationElements.previousTime;\n        var deltaTime = currentTime - previousTime;\n        var needProcess = previousTime != currentTime;\n        if (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.processPositionAndRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesPosition) {\n            if (needProcess)\n                this.processPosition(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.precessRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        this._prePos.copyFrom(this._targetPos);\n        this._targetEuler.copyFrom(this._targetEuler);\n        animationElements.previousTime = currentTime;\n    };\n    ParticleFollowState.prototype.processPosition = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var posVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedPos = this._targetPos;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.precessRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedRotation;\n        var rotationVelocity;\n        if (this._smooth) {\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedRotation = this._targetEuler;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.processPositionAndRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var interpolatedRotation;\n        var posVelocity;\n        var rotationVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else {\n            interpolatedPos = this._targetPos;\n            interpolatedRotation = this._targetEuler;\n        }\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    /** @private */\n    ParticleFollowState.FOLLOW_POSITION_INDEX = 0;\n    /** @private */\n    ParticleFollowState.FOLLOW_ROTATION_INDEX = 1;\n    return ParticleFollowState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n*\n*/\nvar ParticleInitialColorState = (function (_super) {\n    __extends(ParticleInitialColorState, _super);\n    function ParticleInitialColorState(animator, particleInitialColorNode) {\n        _super.call(this, animator, particleInitialColorNode);\n        this._particleInitialColorNode = particleInitialColorNode;\n        this._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n        this._usesOffset = particleInitialColorNode._iUsesOffset;\n        this._initialColor = particleInitialColorNode._iInitialColor;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleInitialColorState.prototype, \"initialColor\", {\n        /**\n         * Defines the initial color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._initialColor;\n        },\n        set: function (value) {\n            this._initialColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        // TODO: not used\n        renderable = renderable;\n        camera = camera;\n        if (animationRegisterCache.needFragmentAnimation) {\n            if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                var dataOffset = this._particleInitialColorNode._iDataOffset;\n                if (this._usesMultiplier) {\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                if (this._usesOffset)\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            }\n            else {\n                if (this._usesMultiplier)\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n                if (this._usesOffset)\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n            }\n        }\n    };\n    ParticleInitialColorState.prototype.updateColorData = function () {\n        if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesMultiplier)\n                this._multiplierData = new Vector3D_1.default(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n            if (this._usesOffset)\n                this._offsetData = new Vector3D_1.default(this._initialColor.redOffset / 255, this._initialColor.greenOffset / 255, this._initialColor.blueOffset / 255, this._initialColor.alphaOffset / 255);\n        }\n    };\n    /** @private */\n    ParticleInitialColorState.MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleInitialColorState.OFFSET_INDEX = 1;\n    return ParticleInitialColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOrbitState = (function (_super) {\n    __extends(ParticleOrbitState, _super);\n    function ParticleOrbitState(animator, particleOrbitNode) {\n        _super.call(this, animator, particleOrbitNode);\n        this._particleOrbitNode = particleOrbitNode;\n        this._usesEulers = this._particleOrbitNode._iUsesEulers;\n        this._usesCycle = this._particleOrbitNode._iUsesCycle;\n        this._usesPhase = this._particleOrbitNode._iUsesPhase;\n        this._eulers = this._particleOrbitNode._iEulers;\n        this._radius = this._particleOrbitNode._iRadius;\n        this._cycleDuration = this._particleOrbitNode._iCycleDuration;\n        this._cyclePhase = this._particleOrbitNode._iCyclePhase;\n        this.updateOrbitData();\n    }\n    Object.defineProperty(ParticleOrbitState.prototype, \"radius\", {\n        /**\n         * Defines the radius of the orbit when in global mode. Defaults to 100.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"eulers\", {\n        /**\n         * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n         */\n        get: function () {\n            return this._eulers;\n        },\n        set: function (value) {\n            this._eulers = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleOrbitState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesPhase)\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            else\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else\n            animationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n        if (this._usesEulers)\n            animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n    };\n    ParticleOrbitState.prototype.updateOrbitData = function () {\n        if (this._usesEulers) {\n            this._eulersMatrix = new Matrix3D_1.default();\n            this._eulersMatrix.appendRotation(this._eulers.x, Vector3D_1.default.X_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.y, Vector3D_1.default.Y_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.z, Vector3D_1.default.Z_AXIS);\n        }\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._orbitData = new Vector3D_1.default(this._radius, 0, this._radius * Math.PI * 2, this._cyclePhase * Math.PI / 180);\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._orbitData.y = Math.PI * 2 / this._cycleDuration;\n            }\n            else\n                this._orbitData.y = Math.PI * 2;\n        }\n    };\n    /** @private */\n    ParticleOrbitState.ORBIT_INDEX = 0;\n    /** @private */\n    ParticleOrbitState.EULERS_INDEX = 1;\n    return ParticleOrbitState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOscillatorState = (function (_super) {\n    __extends(ParticleOscillatorState, _super);\n    function ParticleOscillatorState(animator, particleOscillatorNode) {\n        _super.call(this, animator, particleOscillatorNode);\n        this._particleOscillatorNode = particleOscillatorNode;\n        this._oscillator = this._particleOscillatorNode._iOscillator;\n        this.updateOscillatorData();\n    }\n    Object.defineProperty(ParticleOscillatorState.prototype, \"oscillator\", {\n        /**\n         * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n         */\n        get: function () {\n            return this._oscillator;\n        },\n        set: function (value) {\n            this._oscillator = value;\n            this.updateOscillatorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        else\n            animationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n    };\n    ParticleOscillatorState.prototype.updateOscillatorData = function () {\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._oscillator.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            if (this._oscillatorData == null)\n                this._oscillatorData = new Vector3D_1.default();\n            this._oscillatorData.x = this._oscillator.x;\n            this._oscillatorData.y = this._oscillator.y;\n            this._oscillatorData.z = this._oscillator.z;\n            this._oscillatorData.w = Math.PI * 2 / this._oscillator.w;\n        }\n    };\n    /** @private */\n    ParticleOscillatorState.OSCILLATOR_INDEX = 0;\n    return ParticleOscillatorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticlePositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticlePositionState = (function (_super) {\n    __extends(ParticlePositionState, _super);\n    function ParticlePositionState(animator, particlePositionNode) {\n        _super.call(this, animator, particlePositionNode);\n        this._particlePositionNode = particlePositionNode;\n        this._position = this._particlePositionNode._iPosition;\n    }\n    Object.defineProperty(ParticlePositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticlePositionState.prototype.getPositions = function () {\n        return this._pDynamicProperties;\n    };\n    ParticlePositionState.prototype.setPositions = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            animationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticlePositionState.POSITION_INDEX = 0;\n    return ParticlePositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToHeadingState = (function (_super) {\n    __extends(ParticleRotateToHeadingState, _super);\n    function ParticleRotateToHeadingState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default();\n    }\n    ParticleRotateToHeadingState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n        }\n    };\n    /** @private */\n    ParticleRotateToHeadingState.MATRIX_INDEX = 0;\n    return ParticleRotateToHeadingState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToPositionState = (function (_super) {\n    __extends(ParticleRotateToPositionState, _super);\n    function ParticleRotateToPositionState(animator, particleRotateToPositionNode) {\n        _super.call(this, animator, particleRotateToPositionNode);\n        this._matrix = new Matrix3D_1.default();\n        this._particleRotateToPositionNode = particleRotateToPositionNode;\n        this._position = this._particleRotateToPositionNode._iPosition;\n    }\n    Object.defineProperty(ParticleRotateToPositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleRotateToPositionState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n        if (animationRegisterCache.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n        }\n        if (this._particleRotateToPositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n            animationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n        }\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleRotateToPositionState.MATRIX_INDEX = 0;\n    /** @private */\n    ParticleRotateToPositionState.POSITION_INDEX = 1;\n    return ParticleRotateToPositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotationalVelocityState = (function (_super) {\n    __extends(ParticleRotationalVelocityState, _super);\n    function ParticleRotationalVelocityState(animator, particleRotationNode) {\n        _super.call(this, animator, particleRotationNode);\n        this._particleRotationalVelocityNode = particleRotationNode;\n        this._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n        this.updateRotationalVelocityData();\n    }\n    Object.defineProperty(ParticleRotationalVelocityState.prototype, \"rotationalVelocity\", {\n        /**\n         * Defines the default rotationalVelocity of the state, used when in global mode.\n         */\n        get: function () {\n            return this._rotationalVelocity;\n        },\n        set: function (value) {\n            this._rotationalVelocity = value;\n            this.updateRotationalVelocityData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleRotationalVelocityState.prototype.getRotationalVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleRotationalVelocityState.prototype.setRotationalVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            animationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n    };\n    ParticleRotationalVelocityState.prototype.updateRotationalVelocityData = function () {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._rotationalVelocity.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            var rotation = this._rotationalVelocity.clone();\n            if (rotation.length <= 0)\n                rotation.z = 1; //set the default direction\n            else\n                rotation.normalize();\n            // w is used as angle/2 in agal\n            this._rotationalVelocityData = new Vector3D_1.default(rotation.x, rotation.y, rotation.z, Math.PI / rotation.w);\n        }\n    };\n    /** @private */\n    ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX = 0;\n    return ParticleRotationalVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleScaleState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleScaleState = (function (_super) {\n    __extends(ParticleScaleState, _super);\n    function ParticleScaleState(animator, particleScaleNode) {\n        _super.call(this, animator, particleScaleNode);\n        this._particleScaleNode = particleScaleNode;\n        this._usesCycle = this._particleScaleNode._iUsesCycle;\n        this._usesPhase = this._particleScaleNode._iUsesPhase;\n        this._minScale = this._particleScaleNode._iMinScale;\n        this._maxScale = this._particleScaleNode._iMaxScale;\n        this._cycleDuration = this._particleScaleNode._iCycleDuration;\n        this._cyclePhase = this._particleScaleNode._iCyclePhase;\n        this.updateScaleData();\n    }\n    Object.defineProperty(ParticleScaleState.prototype, \"minScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._minScale;\n        },\n        set: function (value) {\n            this._minScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"maxScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._maxScale;\n        },\n        set: function (value) {\n            this._maxScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleScaleState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesCycle) {\n                if (this._usesPhase)\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                else\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            }\n            else\n                animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        else\n            animationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n    };\n    ParticleScaleState.prototype.updateScaleData = function () {\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._scaleData = new Vector3D_1.default((this._minScale + this._maxScale) / 2, Math.abs(this._minScale - this._maxScale) / 2, Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180);\n            }\n            else\n                this._scaleData = new Vector3D_1.default(this._minScale, this._maxScale - this._minScale, 0, 0);\n        }\n    };\n    /** @private */\n    ParticleScaleState.SCALE_INDEX = 0;\n    return ParticleScaleState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n *\n */\nvar ParticleSegmentedColorState = (function (_super) {\n    __extends(ParticleSegmentedColorState, _super);\n    function ParticleSegmentedColorState(animator, particleSegmentedColorNode) {\n        _super.call(this, animator, particleSegmentedColorNode);\n        this._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n        this._usesOffset = particleSegmentedColorNode._iUsesOffset;\n        this._startColor = particleSegmentedColorNode._iStartColor;\n        this._endColor = particleSegmentedColorNode._iEndColor;\n        this._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n        this._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"numSegmentPoint\", {\n        /**\n         * Defines the number of segments.\n         */\n        get: function () {\n            return this._numSegmentPoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"segmentPoints\", {\n        /**\n         * Defines the key points of color\n         */\n        get: function () {\n            return this._segmentPoints;\n        },\n        set: function (value) {\n            this._segmentPoints = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesMultiplier\", {\n        get: function () {\n            return this._usesMultiplier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesOffset\", {\n        get: function () {\n            return this._usesOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSegmentedColorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needFragmentAnimation) {\n            if (this._numSegmentPoint > 0)\n                animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n            if (this._usesMultiplier)\n                animationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n            if (this._usesOffset)\n                animationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n        }\n    };\n    ParticleSegmentedColorState.prototype.updateColorData = function () {\n        this._timeLifeData = new Array();\n        this._multiplierData = new Array();\n        this._offsetData = new Array();\n        var i;\n        for (i = 0; i < this._numSegmentPoint; i++) {\n            if (i == 0)\n                this._timeLifeData.push(this._segmentPoints[i].life);\n            else\n                this._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n        }\n        if (this._numSegmentPoint == 0)\n            this._timeLifeData.push(1);\n        else\n            this._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n        if (this._usesMultiplier) {\n            this._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0)\n                    this._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier) / this._timeLifeData[i]);\n                else\n                    this._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i]);\n            }\n            if (this._numSegmentPoint == 0)\n                this._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n            else\n                this._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i]);\n        }\n        if (this._usesOffset) {\n            this._offsetData.push(this._startColor.redOffset / 255, this._startColor.greenOffset / 255, this._startColor.blueOffset / 255, this._startColor.alphaOffset / 255);\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0)\n                    this._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset) / this._timeLifeData[i] / 255);\n                else\n                    this._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255);\n            }\n            if (this._numSegmentPoint == 0)\n                this._offsetData.push((this._endColor.redOffset - this._startColor.redOffset) / 255, (this._endColor.greenOffset - this._startColor.greenOffset) / 255, (this._endColor.blueOffset - this._startColor.blueOffset) / 255, (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255);\n            else\n                this._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255);\n        }\n        //cut off the data\n        this._timeLifeData.length = 4;\n    };\n    /** @private */\n    ParticleSegmentedColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleSegmentedColorState.START_OFFSET_INDEX = 1;\n    /** @private */\n    ParticleSegmentedColorState.TIME_DATA_INDEX = 2;\n    return ParticleSegmentedColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleSpriteSheetState = (function (_super) {\n    __extends(ParticleSpriteSheetState, _super);\n    function ParticleSpriteSheetState(animator, particleSpriteSheetNode) {\n        _super.call(this, animator, particleSpriteSheetNode);\n        this._particleSpriteSheetNode = particleSpriteSheetNode;\n        this._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n        this._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n        this._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n        this._numColumns = this._particleSpriteSheetNode._iNumColumns;\n        this._numRows = this._particleSpriteSheetNode._iNumRows;\n        this._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n        this._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n        this.updateSpriteSheetData();\n    }\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the cycle phase, when in global mode. Defaults to zero.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSpriteSheetState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needUVAnimation) {\n            animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n            if (this._usesCycle) {\n                var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n                if (this._particleSpriteSheetNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    if (this._usesPhase)\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n                    else\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                }\n                else\n                    animationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n            }\n        }\n    };\n    ParticleSpriteSheetState.prototype.updateSpriteSheetData = function () {\n        this._spriteSheetData = new Array(8);\n        var uTotal = this._totalFrames / this._numColumns;\n        this._spriteSheetData[0] = uTotal;\n        this._spriteSheetData[1] = 1 / this._numColumns;\n        this._spriteSheetData[2] = 1 / this._numRows;\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._spriteSheetData[4] = uTotal / this._cycleDuration;\n            this._spriteSheetData[5] = this._cycleDuration;\n            if (this._usesPhase)\n                this._spriteSheetData[6] = this._cyclePhase;\n        }\n    };\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_0 = 0;\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_1 = 1;\n    return ParticleSpriteSheetState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n * ...\n */\nvar ParticleStateBase = (function (_super) {\n    __extends(ParticleStateBase, _super);\n    function ParticleStateBase(animator, particleNode, needUpdateTime) {\n        if (needUpdateTime === void 0) { needUpdateTime = false; }\n        _super.call(this, animator, particleNode);\n        this._pDynamicProperties = new Array();\n        this._pDynamicPropertiesDirty = new Object();\n        this._particleNode = particleNode;\n        this._pNeedUpdateTime = needUpdateTime;\n    }\n    Object.defineProperty(ParticleStateBase.prototype, \"needUpdateTime\", {\n        get: function () {\n            return this._pNeedUpdateTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleStateBase.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n    };\n    ParticleStateBase.prototype._pUpdateDynamicProperties = function (animationElements) {\n        this._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n        var animationParticles = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var totalLenOfOneVertex = animationElements.totalLenOfOneVertex;\n        var dataLength = this._particleNode.dataLength;\n        var dataOffset = this._particleNode._iDataOffset;\n        var vertexLength;\n        //\t\t\tvar particleOffset:number /*uint*/;\n        var startingOffset;\n        var vertexOffset;\n        var data;\n        var animationParticle;\n        //\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n        var numParticles = this._pDynamicProperties.length;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        //loop through all particles\n        while (i < numParticles) {\n            //loop through each particle data for the current particle\n            while (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n                data = this._pDynamicProperties[i];\n                vertexLength = animationParticle.numVertices * totalLenOfOneVertex;\n                startingOffset = animationParticle.startVertexIndex * totalLenOfOneVertex + dataOffset;\n                //loop through each vertex in the particle data\n                for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                    vertexOffset = startingOffset + k;\n                    //\t\t\t\t\t\tparticleOffset = i * dataLength;\n                    //loop through all vertex data for the current particle data\n                    for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                        vertexOffset = startingOffset + k;\n                        vertexData[vertexOffset++] = data.x;\n                        vertexData[vertexOffset++] = data.y;\n                        vertexData[vertexOffset++] = data.z;\n                        if (dataLength == 4)\n                            vertexData[vertexOffset++] = data.w;\n                    }\n                }\n                j++;\n            }\n            i++;\n        }\n        animationElements.invalidateBuffer();\n    };\n    return ParticleStateBase;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleStateBase;\n\n},{\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleTimeState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleTimeState = (function (_super) {\n    __extends(ParticleTimeState, _super);\n    function ParticleTimeState(animator, particleTimeNode) {\n        _super.call(this, animator, particleTimeNode, true);\n        this._particleTimeNode = particleTimeNode;\n    }\n    ParticleTimeState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        var particleTime = this._pTime / 1000;\n        animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n    };\n    /** @private */\n    ParticleTimeState.TIME_STREAM_INDEX = 0;\n    /** @private */\n    ParticleTimeState.TIME_CONSTANT_INDEX = 1;\n    return ParticleTimeState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleUVState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleUVState = (function (_super) {\n    __extends(ParticleUVState, _super);\n    function ParticleUVState(animator, particleUVNode) {\n        _super.call(this, animator, particleUVNode);\n        this._particleUVNode = particleUVNode;\n    }\n    ParticleUVState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needUVAnimation) {\n            var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n            var data = this._particleUVNode._iUvData;\n            animationRegisterCache.setVertexConst(index, data.x, data.y);\n        }\n    };\n    /** @private */\n    ParticleUVState.UV_INDEX = 0;\n    return ParticleUVState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleVelocityState = (function (_super) {\n    __extends(ParticleVelocityState, _super);\n    function ParticleVelocityState(animator, particleVelocityNode) {\n        _super.call(this, animator, particleVelocityNode);\n        this._particleVelocityNode = particleVelocityNode;\n        this._velocity = this._particleVelocityNode._iVelocity;\n    }\n    Object.defineProperty(ParticleVelocityState.prototype, \"velocity\", {\n        /**\n         * Defines the default velocity vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._velocity;\n        },\n        set: function (value) {\n            this._velocity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleVelocityState.prototype.getVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleVelocityState.prototype.setVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    ParticleVelocityState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            animationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleVelocityState.VELOCITY_INDEX = 0;\n    return ParticleVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonBinaryLERPState = (function (_super) {\n    __extends(SkeletonBinaryLERPState, _super);\n    function SkeletonBinaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._inputA = animator.getAnimationState(this._skeletonAnimationNode.inputA);\n        this._inputB = animator.getAnimationState(this._skeletonAnimationNode.inputB);\n    }\n    Object.defineProperty(SkeletonBinaryLERPState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see inputA\n         * @see inputB\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdateTime = function (time /*int*/) {\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonBinaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this._pRootDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this._pRootDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this._pRootDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonBinaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    return SkeletonBinaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationClipState_1 = require(\"../../animators/states/AnimationClipState\");\n/**\n *\n */\nvar SkeletonClipState = (function (_super) {\n    __extends(SkeletonClipState, _super);\n    function SkeletonClipState(animator, skeletonClipNode) {\n        _super.call(this, animator, skeletonClipNode);\n        this._rootPos = new Vector3D_1.default();\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonClipNode = skeletonClipNode;\n        this._frames = this._skeletonClipNode.frames;\n    }\n    Object.defineProperty(SkeletonClipState.prototype, \"currentPose\", {\n        /**\n         * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonClipState.prototype, \"nextPose\", {\n        /**\n         * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonClipState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateTime = function (time /*int*/) {\n        this._skeletonPoseDirty = true;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentPose = this._frames[this._pCurrentFrame];\n        if (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n            this._nextPose = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextPose = this._frames[this._pNextFrame];\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the internal playhead position.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonClipState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (!this._skeletonClipNode.totalDuration)\n            return;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var currentPose = this._currentPose.jointPoses;\n        var nextPose = this._nextPose.jointPoses;\n        var numJoints = skeleton.numJoints;\n        var p1, p2;\n        var pose1, pose2;\n        var endPoses = this._skeletonPose.jointPoses;\n        var endPose;\n        var tr;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        if ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n            throw new Error(\"joint counts don't match!\");\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = currentPose[i];\n            pose2 = nextPose[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            if (this._skeletonClipNode.highQuality)\n                endPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            else\n                endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            if (i > 0) {\n                tr = endPose.translation;\n                tr.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n                tr.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n                tr.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var p1, p2, p3;\n        var totalDelta = this._skeletonClipNode.totalDelta;\n        // jumping back, need to reset position\n        if ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n            this._rootPos.x -= totalDelta.x * this._pTimeDir;\n            this._rootPos.y -= totalDelta.y * this._pTimeDir;\n            this._rootPos.z -= totalDelta.z * this._pTimeDir;\n        }\n        var dx = this._rootPos.x;\n        var dy = this._rootPos.y;\n        var dz = this._rootPos.z;\n        if (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            p3 = this._currentPose.jointPoses[0].translation;\n            this._rootPos.x = p3.x + p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p3.y + p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p3.z + p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        else {\n            p1 = this._currentPose.jointPoses[0].translation;\n            p2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n            this._rootPos.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        this._pRootDelta.x = this._rootPos.x - dx;\n        this._pRootDelta.y = this._rootPos.y - dy;\n        this._pRootDelta.z = this._rootPos.z - dz;\n        this._pOldFrame = this._pNextFrame;\n    };\n    return SkeletonClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDifferenceState = (function (_super) {\n    __extends(SkeletonDifferenceState, _super);\n    function SkeletonDifferenceState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._baseInput = animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n        this._differenceInput = animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n    }\n    Object.defineProperty(SkeletonDifferenceState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see #baseInput\n         * @see #differenceInput\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._baseInput.phase(value);\n        this._baseInput.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdateTime = function (time /*int*/) {\n        this._skeletonPoseDirty = true;\n        this._baseInput.update(time);\n        this._differenceInput.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDifferenceState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._baseInput.positionDelta;\n        var deltB = this._differenceInput.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * deltB.x;\n        this.positionDelta.y = deltA.y + this._blendWeight * deltB.y;\n        this.positionDelta.z = deltA.z + this._blendWeight * deltB.z;\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDifferenceState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var basePoses = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n        var diffPoses = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n        var base, diff;\n        var basePos, diffPos;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            base = basePoses[i];\n            diff = diffPoses[i];\n            basePos = base.translation;\n            diffPos = diff.translation;\n            SkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n            endPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = basePos.x + this._blendWeight * diffPos.x;\n            tr.y = basePos.y + this._blendWeight * diffPos.y;\n            tr.z = basePos.z + this._blendWeight * diffPos.z;\n        }\n    };\n    SkeletonDifferenceState._tempQuat = new Quaternion_1.default();\n    return SkeletonDifferenceState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"awayjs-core/lib/geom/Quaternion\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDirectionalState = (function (_super) {\n    __extends(SkeletonDirectionalState, _super);\n    function SkeletonDirectionalState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeight = 0;\n        this._direction = 0;\n        this._blendDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._forward = animator.getAnimationState(this._skeletonAnimationNode.forward);\n        this._backward = animator.getAnimationState(this._skeletonAnimationNode.backward);\n        this._left = animator.getAnimationState(this._skeletonAnimationNode.left);\n        this._right = animator.getAnimationState(this._skeletonAnimationNode.right);\n    }\n    Object.defineProperty(SkeletonDirectionalState.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        /**\n         * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n         * used to produce the skeleton pose output.\n         */\n        set: function (value) {\n            if (this._direction == value)\n                return;\n            this._direction = value;\n            this._blendDirty = true;\n            this._skeletonPoseDirty = true;\n            this._pPositionDeltaDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype.phase = function (value) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUdateTime = function (time /*int*/) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDirectionalState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this.positionDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this.positionDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDirectionalState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    /**\n     * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @private\n     */\n    SkeletonDirectionalState.prototype.updateBlend = function () {\n        this._blendDirty = false;\n        if (this._direction < 0 || this._direction > 360) {\n            this._direction %= 360;\n            if (this._direction < 0)\n                this._direction += 360;\n        }\n        if (this._direction < 90) {\n            this._inputA = this._forward;\n            this._inputB = this._right;\n            this._blendWeight = this._direction / 90;\n        }\n        else if (this._direction < 180) {\n            this._inputA = this._right;\n            this._inputB = this._backward;\n            this._blendWeight = (this._direction - 90) / 90;\n        }\n        else if (this._direction < 270) {\n            this._inputA = this._backward;\n            this._inputB = this._left;\n            this._blendWeight = (this._direction - 180) / 90;\n        }\n        else {\n            this._inputA = this._left;\n            this._inputB = this._forward;\n            this._blendWeight = (this._direction - 270) / 90;\n        }\n    };\n    return SkeletonDirectionalState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonNaryLERPState = (function (_super) {\n    __extends(SkeletonNaryLERPState, _super);\n    function SkeletonNaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeights = new Array();\n        this._inputs = new Array();\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        var i = this._skeletonAnimationNode.numInputs;\n        while (i--)\n            this._inputs[i] = animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(value);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUdateTime = function (time /*int*/) {\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(time);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonNaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node blend weight is requested.\n     */\n    SkeletonNaryLERPState.prototype.getBlendWeightAt = function (index /*uint*/) {\n        return this._blendWeights[index];\n    };\n    /**\n     * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index on which the skeleton animation node blend weight is to be set.\n     * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n     */\n    SkeletonNaryLERPState.prototype.setBlendWeightAt = function (index /*uint*/, blendWeight) {\n        this._blendWeights[index] = blendWeight;\n        this._pPositionDeltaDirty = true;\n        this._skeletonPoseDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var delta;\n        var weight;\n        this.positionDelta.x = 0;\n        this.positionDelta.y = 0;\n        this.positionDelta.z = 0;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (weight) {\n                delta = this._inputs[j].positionDelta;\n                this.positionDelta.x += weight * delta.x;\n                this.positionDelta.y += weight * delta.y;\n                this.positionDelta.z += weight * delta.z;\n            }\n        }\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonNaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var weight;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses;\n        var endPose, pose;\n        var endTr, tr;\n        var endQuat, q;\n        var firstPose;\n        var i;\n        var w0, x0, y0, z0;\n        var w1, x1, y1, z1;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (!weight)\n                continue;\n            poses = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n            if (!firstPose) {\n                firstPose = poses;\n                for (i = 0; i < numJoints; ++i) {\n                    endPose = endPoses[i];\n                    if (endPose == null)\n                        endPose = endPoses[i] = new JointPose_1.default();\n                    pose = poses[i];\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    endQuat = endPose.orientation;\n                    endQuat.x = weight * q.x;\n                    endQuat.y = weight * q.y;\n                    endQuat.z = weight * q.z;\n                    endQuat.w = weight * q.w;\n                    endTr = endPose.translation;\n                    endTr.x = weight * tr.x;\n                    endTr.y = weight * tr.y;\n                    endTr.z = weight * tr.z;\n                }\n            }\n            else {\n                for (i = 0; i < skeleton.numJoints; ++i) {\n                    endPose = endPoses[i];\n                    pose = poses[i];\n                    q = firstPose[i].orientation;\n                    x0 = q.x;\n                    y0 = q.y;\n                    z0 = q.z;\n                    w0 = q.w;\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    x1 = q.x;\n                    y1 = q.y;\n                    z1 = q.z;\n                    w1 = q.w;\n                    // find shortest direction\n                    if (x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1 < 0) {\n                        x1 = -x1;\n                        y1 = -y1;\n                        z1 = -z1;\n                        w1 = -w1;\n                    }\n                    endQuat = endPose.orientation;\n                    endQuat.x += weight * x1;\n                    endQuat.y += weight * y1;\n                    endQuat.z += weight * z1;\n                    endQuat.w += weight * w1;\n                    endTr = endPose.translation;\n                    endTr.x += weight * tr.x;\n                    endTr.y += weight * tr.y;\n                    endTr.z += weight * tr.z;\n                }\n            }\n        }\n        for (i = 0; i < skeleton.numJoints; ++i)\n            endPoses[i].orientation.normalize();\n    };\n    return SkeletonNaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/VertexClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipState_1 = require(\"../../animators/states/AnimationClipState\");\n/**\n *\n */\nvar VertexClipState = (function (_super) {\n    __extends(VertexClipState, _super);\n    function VertexClipState(animator, vertexClipNode) {\n        _super.call(this, animator, vertexClipNode);\n        this._vertexClipNode = vertexClipNode;\n        this._frames = this._vertexClipNode.frames;\n    }\n    Object.defineProperty(VertexClipState.prototype, \"currentGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexClipState.prototype, \"nextGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentGraphics = this._frames[this._pCurrentFrame];\n        if (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n            this._nextGraphics = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextGraphics = this._frames[this._pNextFrame];\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdatePositionDelta = function () {\n        //TODO:implement positiondelta functionality for vertex animations\n    };\n    return VertexClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipState;\n\n},{\"../../animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPNode_1 = require(\"../../animators/nodes/SkeletonBinaryLERPNode\");\nvar CrossfadeTransitionState_1 = require(\"../../animators/transitions/CrossfadeTransitionState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar CrossfadeTransitionNode = (function (_super) {\n    __extends(CrossfadeTransitionNode, _super);\n    /**\n     * Creates a new <code>CrossfadeTransitionNode</code> object.\n     */\n    function CrossfadeTransitionNode() {\n        _super.call(this);\n        this._pStateClass = CrossfadeTransitionState_1.default;\n    }\n    return CrossfadeTransitionNode;\n}(SkeletonBinaryLERPNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionNode;\n\n},{\"../../animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"../../animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPState_1 = require(\"../../animators/states/SkeletonBinaryLERPState\");\nvar AnimationStateEvent_1 = require(\"../../animators/../events/AnimationStateEvent\");\n/**\n *\n */\nvar CrossfadeTransitionState = (function (_super) {\n    __extends(CrossfadeTransitionState, _super);\n    function CrossfadeTransitionState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._crossfadeTransitionNode = skeletonAnimationNode;\n    }\n    /**\n     * @inheritDoc\n     */\n    CrossfadeTransitionState.prototype._pUpdateTime = function (time /*int*/) {\n        this.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend) / (1000 * this._crossfadeTransitionNode.blendSpeed);\n        if (this.blendWeight >= 1) {\n            this.blendWeight = 1;\n            if (this._animationStateTransitionComplete == null)\n                this._animationStateTransitionComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n            this._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    return CrossfadeTransitionState;\n}(SkeletonBinaryLERPState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionState;\n\n},{\"../../animators/../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"../../animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\":[function(require,module,exports){\n\"use strict\";\nvar CrossfadeTransitionNode_1 = require(\"../../animators/transitions/CrossfadeTransitionNode\");\n/**\n *\n */\nvar CrossfadeTransition = (function () {\n    function CrossfadeTransition(blendSpeed) {\n        this.blendSpeed = 0.5;\n        this.blendSpeed = blendSpeed;\n    }\n    CrossfadeTransition.prototype.getAnimationNode = function (animator, startNode, endNode, startBlend /*int*/) {\n        var crossFadeTransitionNode = new CrossfadeTransitionNode_1.default();\n        crossFadeTransitionNode.inputA = startNode;\n        crossFadeTransitionNode.inputB = endNode;\n        crossFadeTransitionNode.blendSpeed = this.blendSpeed;\n        crossFadeTransitionNode.startBlend = startBlend;\n        return crossFadeTransitionNode;\n    };\n    return CrossfadeTransition;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransition;\n\n},{\"../../animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\"}],\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar AnimationElements_1 = require(\"./animators/data/AnimationElements\");\nexports.AnimationElements = AnimationElements_1.default;\nvar AnimationRegisterCache_1 = require(\"./animators/data/AnimationRegisterCache\");\nexports.AnimationRegisterCache = AnimationRegisterCache_1.default;\nvar ColorSegmentPoint_1 = require(\"./animators/data/ColorSegmentPoint\");\nexports.ColorSegmentPoint = ColorSegmentPoint_1.default;\nvar JointPose_1 = require(\"./animators/data/JointPose\");\nexports.JointPose = JointPose_1.default;\nvar ParticleAnimationData_1 = require(\"./animators/data/ParticleAnimationData\");\nexports.ParticleAnimationData = ParticleAnimationData_1.default;\nvar ParticleProperties_1 = require(\"./animators/data/ParticleProperties\");\nexports.ParticleProperties = ParticleProperties_1.default;\nvar ParticlePropertiesMode_1 = require(\"./animators/data/ParticlePropertiesMode\");\nexports.ParticlePropertiesMode = ParticlePropertiesMode_1.default;\nvar Skeleton_1 = require(\"./animators/data/Skeleton\");\nexports.Skeleton = Skeleton_1.default;\nvar SkeletonJoint_1 = require(\"./animators/data/SkeletonJoint\");\nexports.SkeletonJoint = SkeletonJoint_1.default;\nvar SkeletonPose_1 = require(\"./animators/data/SkeletonPose\");\nexports.SkeletonPose = SkeletonPose_1.default;\nvar VertexAnimationMode_1 = require(\"./animators/data/VertexAnimationMode\");\nexports.VertexAnimationMode = VertexAnimationMode_1.default;\nvar AnimationClipNodeBase_1 = require(\"./animators/nodes/AnimationClipNodeBase\");\nexports.AnimationClipNodeBase = AnimationClipNodeBase_1.default;\nvar ParticleAccelerationNode_1 = require(\"./animators/nodes/ParticleAccelerationNode\");\nexports.ParticleAccelerationNode = ParticleAccelerationNode_1.default;\nvar ParticleBezierCurveNode_1 = require(\"./animators/nodes/ParticleBezierCurveNode\");\nexports.ParticleBezierCurveNode = ParticleBezierCurveNode_1.default;\nvar ParticleBillboardNode_1 = require(\"./animators/nodes/ParticleBillboardNode\");\nexports.ParticleBillboardNode = ParticleBillboardNode_1.default;\nvar ParticleColorNode_1 = require(\"./animators/nodes/ParticleColorNode\");\nexports.ParticleColorNode = ParticleColorNode_1.default;\nvar ParticleFollowNode_1 = require(\"./animators/nodes/ParticleFollowNode\");\nexports.ParticleFollowNode = ParticleFollowNode_1.default;\nvar ParticleInitialColorNode_1 = require(\"./animators/nodes/ParticleInitialColorNode\");\nexports.ParticleInitialColorNode = ParticleInitialColorNode_1.default;\nvar ParticleNodeBase_1 = require(\"./animators/nodes/ParticleNodeBase\");\nexports.ParticleNodeBase = ParticleNodeBase_1.default;\nvar ParticleOrbitNode_1 = require(\"./animators/nodes/ParticleOrbitNode\");\nexports.ParticleOrbitNode = ParticleOrbitNode_1.default;\nvar ParticleOscillatorNode_1 = require(\"./animators/nodes/ParticleOscillatorNode\");\nexports.ParticleOscillatorNode = ParticleOscillatorNode_1.default;\nvar ParticlePositionNode_1 = require(\"./animators/nodes/ParticlePositionNode\");\nexports.ParticlePositionNode = ParticlePositionNode_1.default;\nvar ParticleRotateToHeadingNode_1 = require(\"./animators/nodes/ParticleRotateToHeadingNode\");\nexports.ParticleRotateToHeadingNode = ParticleRotateToHeadingNode_1.default;\nvar ParticleRotateToPositionNode_1 = require(\"./animators/nodes/ParticleRotateToPositionNode\");\nexports.ParticleRotateToPositionNode = ParticleRotateToPositionNode_1.default;\nvar ParticleRotationalVelocityNode_1 = require(\"./animators/nodes/ParticleRotationalVelocityNode\");\nexports.ParticleRotationalVelocityNode = ParticleRotationalVelocityNode_1.default;\nvar ParticleScaleNode_1 = require(\"./animators/nodes/ParticleScaleNode\");\nexports.ParticleScaleNode = ParticleScaleNode_1.default;\nvar ParticleSegmentedColorNode_1 = require(\"./animators/nodes/ParticleSegmentedColorNode\");\nexports.ParticleSegmentedColorNode = ParticleSegmentedColorNode_1.default;\nvar ParticleSpriteSheetNode_1 = require(\"./animators/nodes/ParticleSpriteSheetNode\");\nexports.ParticleSpriteSheetNode = ParticleSpriteSheetNode_1.default;\nvar ParticleTimeNode_1 = require(\"./animators/nodes/ParticleTimeNode\");\nexports.ParticleTimeNode = ParticleTimeNode_1.default;\nvar ParticleUVNode_1 = require(\"./animators/nodes/ParticleUVNode\");\nexports.ParticleUVNode = ParticleUVNode_1.default;\nvar ParticleVelocityNode_1 = require(\"./animators/nodes/ParticleVelocityNode\");\nexports.ParticleVelocityNode = ParticleVelocityNode_1.default;\nvar SkeletonBinaryLERPNode_1 = require(\"./animators/nodes/SkeletonBinaryLERPNode\");\nexports.SkeletonBinaryLERPNode = SkeletonBinaryLERPNode_1.default;\nvar SkeletonClipNode_1 = require(\"./animators/nodes/SkeletonClipNode\");\nexports.SkeletonClipNode = SkeletonClipNode_1.default;\nvar SkeletonDifferenceNode_1 = require(\"./animators/nodes/SkeletonDifferenceNode\");\nexports.SkeletonDifferenceNode = SkeletonDifferenceNode_1.default;\nvar SkeletonDirectionalNode_1 = require(\"./animators/nodes/SkeletonDirectionalNode\");\nexports.SkeletonDirectionalNode = SkeletonDirectionalNode_1.default;\nvar SkeletonNaryLERPNode_1 = require(\"./animators/nodes/SkeletonNaryLERPNode\");\nexports.SkeletonNaryLERPNode = SkeletonNaryLERPNode_1.default;\nvar VertexClipNode_1 = require(\"./animators/nodes/VertexClipNode\");\nexports.VertexClipNode = VertexClipNode_1.default;\nvar AnimationClipState_1 = require(\"./animators/states/AnimationClipState\");\nexports.AnimationClipState = AnimationClipState_1.default;\nvar AnimationStateBase_1 = require(\"./animators/states/AnimationStateBase\");\nexports.AnimationStateBase = AnimationStateBase_1.default;\nvar ParticleAccelerationState_1 = require(\"./animators/states/ParticleAccelerationState\");\nexports.ParticleAccelerationState = ParticleAccelerationState_1.default;\nvar ParticleBezierCurveState_1 = require(\"./animators/states/ParticleBezierCurveState\");\nexports.ParticleBezierCurveState = ParticleBezierCurveState_1.default;\nvar ParticleBillboardState_1 = require(\"./animators/states/ParticleBillboardState\");\nexports.ParticleBillboardState = ParticleBillboardState_1.default;\nvar ParticleColorState_1 = require(\"./animators/states/ParticleColorState\");\nexports.ParticleColorState = ParticleColorState_1.default;\nvar ParticleFollowState_1 = require(\"./animators/states/ParticleFollowState\");\nexports.ParticleFollowState = ParticleFollowState_1.default;\nvar ParticleInitialColorState_1 = require(\"./animators/states/ParticleInitialColorState\");\nexports.ParticleInitialColorState = ParticleInitialColorState_1.default;\nvar ParticleStateBase_1 = require(\"./animators/states/ParticleStateBase\");\nexports.ParticleStateBase = ParticleStateBase_1.default;\nvar ParticleOrbitState_1 = require(\"./animators/states/ParticleOrbitState\");\nexports.ParticleOrbitState = ParticleOrbitState_1.default;\nvar ParticleOscillatorState_1 = require(\"./animators/states/ParticleOscillatorState\");\nexports.ParticleOscillatorState = ParticleOscillatorState_1.default;\nvar ParticlePositionState_1 = require(\"./animators/states/ParticlePositionState\");\nexports.ParticlePositionState = ParticlePositionState_1.default;\nvar ParticleRotateToHeadingState_1 = require(\"./animators/states/ParticleRotateToHeadingState\");\nexports.ParticleRotateToHeadingState = ParticleRotateToHeadingState_1.default;\nvar ParticleRotateToPositionState_1 = require(\"./animators/states/ParticleRotateToPositionState\");\nexports.ParticleRotateToPositionState = ParticleRotateToPositionState_1.default;\nvar ParticleRotationalVelocityState_1 = require(\"./animators/states/ParticleRotationalVelocityState\");\nexports.ParticleRotationalVelocityState = ParticleRotationalVelocityState_1.default;\nvar ParticleScaleState_1 = require(\"./animators/states/ParticleScaleState\");\nexports.ParticleScaleState = ParticleScaleState_1.default;\nvar ParticleSegmentedColorState_1 = require(\"./animators/states/ParticleSegmentedColorState\");\nexports.ParticleSegmentedColorState = ParticleSegmentedColorState_1.default;\nvar ParticleSpriteSheetState_1 = require(\"./animators/states/ParticleSpriteSheetState\");\nexports.ParticleSpriteSheetState = ParticleSpriteSheetState_1.default;\nvar ParticleTimeState_1 = require(\"./animators/states/ParticleTimeState\");\nexports.ParticleTimeState = ParticleTimeState_1.default;\nvar ParticleUVState_1 = require(\"./animators/states/ParticleUVState\");\nexports.ParticleUVState = ParticleUVState_1.default;\nvar ParticleVelocityState_1 = require(\"./animators/states/ParticleVelocityState\");\nexports.ParticleVelocityState = ParticleVelocityState_1.default;\nvar SkeletonBinaryLERPState_1 = require(\"./animators/states/SkeletonBinaryLERPState\");\nexports.SkeletonBinaryLERPState = SkeletonBinaryLERPState_1.default;\nvar SkeletonClipState_1 = require(\"./animators/states/SkeletonClipState\");\nexports.SkeletonClipState = SkeletonClipState_1.default;\nvar SkeletonDifferenceState_1 = require(\"./animators/states/SkeletonDifferenceState\");\nexports.SkeletonDifferenceState = SkeletonDifferenceState_1.default;\nvar SkeletonDirectionalState_1 = require(\"./animators/states/SkeletonDirectionalState\");\nexports.SkeletonDirectionalState = SkeletonDirectionalState_1.default;\nvar SkeletonNaryLERPState_1 = require(\"./animators/states/SkeletonNaryLERPState\");\nexports.SkeletonNaryLERPState = SkeletonNaryLERPState_1.default;\nvar VertexClipState_1 = require(\"./animators/states/VertexClipState\");\nexports.VertexClipState = VertexClipState_1.default;\nvar CrossfadeTransition_1 = require(\"./animators/transitions/CrossfadeTransition\");\nexports.CrossfadeTransition = CrossfadeTransition_1.default;\nvar CrossfadeTransitionNode_1 = require(\"./animators/transitions/CrossfadeTransitionNode\");\nexports.CrossfadeTransitionNode = CrossfadeTransitionNode_1.default;\nvar CrossfadeTransitionState_1 = require(\"./animators/transitions/CrossfadeTransitionState\");\nexports.CrossfadeTransitionState = CrossfadeTransitionState_1.default;\nvar AnimationSetBase_1 = require(\"./animators/AnimationSetBase\");\nexports.AnimationSetBase = AnimationSetBase_1.default;\nvar AnimatorBase_1 = require(\"./animators/AnimatorBase\");\nexports.AnimatorBase = AnimatorBase_1.default;\nvar ParticleAnimationSet_1 = require(\"./animators/ParticleAnimationSet\");\nexports.ParticleAnimationSet = ParticleAnimationSet_1.default;\nvar ParticleAnimator_1 = require(\"./animators/ParticleAnimator\");\nexports.ParticleAnimator = ParticleAnimator_1.default;\nvar SkeletonAnimationSet_1 = require(\"./animators/SkeletonAnimationSet\");\nexports.SkeletonAnimationSet = SkeletonAnimationSet_1.default;\nvar SkeletonAnimator_1 = require(\"./animators/SkeletonAnimator\");\nexports.SkeletonAnimator = SkeletonAnimator_1.default;\nvar VertexAnimationSet_1 = require(\"./animators/VertexAnimationSet\");\nexports.VertexAnimationSet = VertexAnimationSet_1.default;\nvar VertexAnimator_1 = require(\"./animators/VertexAnimator\");\nexports.VertexAnimator = VertexAnimator_1.default;\n\n},{\"./animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"./animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"./animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"./animators/ParticleAnimator\":\"awayjs-renderergl/lib/animators/ParticleAnimator\",\"./animators/SkeletonAnimationSet\":\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\",\"./animators/SkeletonAnimator\":\"awayjs-renderergl/lib/animators/SkeletonAnimator\",\"./animators/VertexAnimationSet\":\"awayjs-renderergl/lib/animators/VertexAnimationSet\",\"./animators/VertexAnimator\":\"awayjs-renderergl/lib/animators/VertexAnimator\",\"./animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"./animators/data/AnimationRegisterCache\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\",\"./animators/data/ColorSegmentPoint\":\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\",\"./animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"./animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"./animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"./animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"./animators/data/Skeleton\":\"awayjs-renderergl/lib/animators/data/Skeleton\",\"./animators/data/SkeletonJoint\":\"awayjs-renderergl/lib/animators/data/SkeletonJoint\",\"./animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"./animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"./animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"./animators/nodes/ParticleAccelerationNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\",\"./animators/nodes/ParticleBezierCurveNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\",\"./animators/nodes/ParticleBillboardNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\",\"./animators/nodes/ParticleColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\",\"./animators/nodes/ParticleFollowNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\",\"./animators/nodes/ParticleInitialColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\",\"./animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"./animators/nodes/ParticleOrbitNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\",\"./animators/nodes/ParticleOscillatorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\",\"./animators/nodes/ParticlePositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\",\"./animators/nodes/ParticleRotateToHeadingNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\",\"./animators/nodes/ParticleRotateToPositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\",\"./animators/nodes/ParticleRotationalVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\",\"./animators/nodes/ParticleScaleNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\",\"./animators/nodes/ParticleSegmentedColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\",\"./animators/nodes/ParticleSpriteSheetNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\",\"./animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\",\"./animators/nodes/ParticleUVNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\",\"./animators/nodes/ParticleVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\",\"./animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"./animators/nodes/SkeletonClipNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\",\"./animators/nodes/SkeletonDifferenceNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\",\"./animators/nodes/SkeletonDirectionalNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\",\"./animators/nodes/SkeletonNaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\",\"./animators/nodes/VertexClipNode\":\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\",\"./animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"./animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"./animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"./animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"./animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\",\"./animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"./animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\",\"./animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"./animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"./animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"./animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"./animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"./animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"./animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"./animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\",\"./animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"./animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"./animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"./animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\",\"./animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"./animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"./animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"./animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\",\"./animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"./animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"./animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"./animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"./animators/transitions/CrossfadeTransition\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\",\"./animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\",\"./animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/elements/ElementsPool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar ElementsPool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function ElementsPool(shader, elementsClass) {\n        this._abstractionPool = new Object();\n        this._shader = shader;\n        this._elementsClass = elementsClass;\n    }\n    /**\n     * //TODO\n     *\n     * @param renderable\n     * @returns IRenderable\n     */\n    ElementsPool.prototype.getAbstraction = function (elements) {\n        return (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param renderable\n     */\n    ElementsPool.prototype.clearAbstraction = function (elements) {\n        delete this._abstractionPool[elements.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ElementsPool.registerAbstraction = function (elementsClass, assetClass) {\n        ElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n    };\n    ElementsPool._abstractionClassPool = new Object();\n    return ElementsPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsPool;\n\n},{}],\"awayjs-renderergl/lib/elements/GL_ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nvar GL_ElementsBase = (function (_super) {\n    __extends(GL_ElementsBase, _super);\n    function GL_ElementsBase(elements, shader, pool) {\n        var _this = this;\n        _super.call(this, elements, pool);\n        this.usages = 0;\n        this._vertices = new Object();\n        this._verticesUpdated = new Object();\n        this._indexMappings = Array();\n        this._numIndices = 0;\n        this._elements = elements;\n        this._shader = shader;\n        this._stage = shader._stage;\n        this._onInvalidateIndicesDelegate = function (event) { return _this._onInvalidateIndices(event); };\n        this._onClearIndicesDelegate = function (event) { return _this._onClearIndices(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n        this._onClearVerticesDelegate = function (event) { return _this._onClearVertices(event); };\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n    }\n    Object.defineProperty(GL_ElementsBase.prototype, \"elements\", {\n        get: function () {\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numVertices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexMappings = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indexMappings;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexBufferGL = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indices;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getVertexBufferGL = function (attributesView) {\n        //first check if indices need updating which may affect vertices\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        var bufferId = attributesView.buffer.id;\n        if (!this._verticesUpdated[bufferId])\n            this._updateVertices(attributesView);\n        return this._vertices[bufferId];\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.activateVertexBufferVO = function (index, attributesView, dimensions, offset) {\n        if (dimensions === void 0) { dimensions = 0; }\n        if (offset === void 0) { offset = 0; }\n        this.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this._elements = null;\n        if (this._overflow) {\n            this._overflow.onClear(event);\n            this._overflow = null;\n        }\n    };\n    GL_ElementsBase.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        if (!this._verticesUpdated)\n            this._updateIndices();\n        //TODO replace overflow system with something sensible\n        //this._render(renderable, camera, viewProjection);\n        //\n        // if (this._overflow)\n        // \tthis._overflow._iRender(renderable, camera, viewProjection);\n    };\n    GL_ElementsBase.prototype.draw = function (renderable, camera, viewProjection, count, offset) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_ElementsBase.prototype._updateIndices = function (indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var indices = this._elements.indices;\n        if (indices) {\n            this._indices = this._stage.getAbstraction(ElementsUtils_1.default.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n            this._numIndices = this._indices._attributesBuffer.count * indices.dimensions;\n        }\n        else {\n            this._indices = null;\n            this._numIndices = 0;\n            this._indexMappings = Array();\n        }\n        indexOffset += this._numIndices;\n        //check if there is more to split\n        if (indices && indexOffset < indices.count * this._elements.indices.dimensions) {\n            if (!this._overflow)\n                this._overflow = this._pGetOverflowElements();\n            this._overflow._updateIndices(indexOffset);\n        }\n        else if (this._overflow) {\n            this._overflow.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._elements));\n            this._overflow = null;\n        }\n        this._indicesUpdated = true;\n        //invalidate vertices if index mappings exist\n        if (this._indexMappings.length)\n            for (var key in this._verticesUpdated)\n                this._verticesUpdated[key] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param attributesView\n     * @private\n     */\n    GL_ElementsBase.prototype._updateVertices = function (attributesView) {\n        this._numVertices = this._elements.numVertices;\n        var bufferId = attributesView.buffer.id;\n        this._vertices[bufferId] = this._stage.getAbstraction(ElementsUtils_1.default.getSubVertices(attributesView.buffer, this._indexMappings));\n        this._verticesUpdated[bufferId] = true;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indicesUpdated = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indices.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n        this._indices = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        this._verticesUpdated[bufferId] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        if (this._vertices[bufferId]) {\n            this._vertices[bufferId].onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n            delete this._vertices[bufferId];\n            delete this._verticesUpdated[bufferId];\n        }\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_ElementsBase.prototype._pGetOverflowElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return GL_ElementsBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_ElementsBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/ElementsEvent\":undefined,\"awayjs-display/lib/utils/ElementsUtils\":undefined}],\"awayjs-renderergl/lib/elements/GL_LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"../elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_LineElements\n */\nvar GL_LineElements = (function (_super) {\n    __extends(GL_LineElements, _super);\n    function GL_LineElements(lineElements, shader, pool) {\n        _super.call(this, lineElements, shader, pool);\n        this._constants = new Float32Array([0, 0, 0, 0]);\n        this._calcMatrix = new Matrix3D_1.default();\n        this._thickness = 1.25;\n        this._lineElements = lineElements;\n        this._constants[1] = 1 / 255;\n    }\n    GL_LineElements._iIncludeDependencies = function (shader) {\n        shader.colorDependencies++;\n    };\n    GL_LineElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"m44 vt0, va0, vc8\t\t\t\\n\" +\n            \"m44 vt1, va1, vc8\t\t\t\\n\" +\n            \"sub vt2, vt1, vt0 \t\t\t\\n\" +\n            // test if behind camera near plane\n            // if 0 - Q0.z < Camera.near then the point needs to be clipped\n            //\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n            \"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" +\n            \"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" +\n            // p = point on the plane (0,0,-near)\n            // n = plane normal (0,0,-1)\n            // D = Q1 - Q0\n            // t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n            // solve for t where line crosses Camera.near\n            \"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" +\n            \"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" +\n            // fix divide by zero for horizontal lines\n            \"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" +\n            \"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" +\n            \"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" +\n            \"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" +\n            \"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" +\n            \"mov vt3.w, vc5.x\t\t\t\\n\" +\n            // If necessary, replace Q0 with new Qclipped\n            \"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" +\n            \"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" +\n            \"add vt0, vt0, vt3\t\t\t\t\\n\" +\n            // calculate side vector for line\n            \"sub vt2, vt1, vt0 \t\t\t\\n\" +\n            \"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" +\n            \"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" +\n            \"mov vt5.w, vc5.x\t\t\t\t\\n\" +\n            \"crs vt3.xyz, vt2, vt5\t\t\t\\n\" +\n            \"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" +\n            // face the side vector properly for the given point\n            \"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" +\n            \"mov vt3.w, vc5.x\t\t\t\\n\" +\n            // calculate the amount required to move at the point's distance to correspond to the line's pixel width\n            // scale the side vector by that amount\n            \"dp3 vt4.x, vt0, vc6\t\t\t\\n\" +\n            \"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" +\n            \"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" +\n            // add scaled side vector to Q0 and transform to clip space\n            \"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" +\n            \"m44 op, vt0, vc0\t\t\t\\n\"; // transform Q0 to clip space\n    };\n    GL_LineElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_LineElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineElements = null;\n    };\n    GL_LineElements.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        if (this._shader.colorBufferIndex >= 0)\n            this.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n        this.activateVertexBufferVO(0, this._lineElements.positions, 3);\n        this.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n        this.activateVertexBufferVO(2, this._lineElements.thickness);\n        this._constants[0] = this._thickness / ((this._stage.scissorRect) ? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n        // value to convert distance from camera to model length per pixel width\n        this._constants[2] = camera.projection.near;\n        var context = this._stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 7, this._constants, 1);\n    };\n    GL_LineElements.prototype.draw = function (renderable, camera, viewProjection, count, offset) {\n        var context = this._stage.context;\n        // projection matrix\n        context.setProgramConstantsFromMatrix(ContextGLProgramType_1.default.VERTEX, 0, camera.projection.matrix, true);\n        this._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n        this._calcMatrix.append(camera.inverseSceneTransform);\n        context.setProgramConstantsFromMatrix(ContextGLProgramType_1.default.VERTEX, 8, this._calcMatrix, true);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @protected\n     */\n    GL_LineElements.prototype._pGetOverflowElements = function () {\n        return new GL_LineElements(this._lineElements, this._shader, this._pool);\n    };\n    GL_LineElements.pONE_VECTOR = new Float32Array([1, 1, 1, 1]);\n    GL_LineElements.pFRONT_VECTOR = new Float32Array([0, 0, -1, 0]);\n    GL_LineElements.vertexAttributesOffset = 3;\n    return GL_LineElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineElements;\n\n},{\"../elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/GL_SkyboxElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TriangleElements_1 = require(\"../elements/GL_TriangleElements\");\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nvar GL_SkyboxElements = (function (_super) {\n    __extends(GL_SkyboxElements, _super);\n    function GL_SkyboxElements() {\n        _super.apply(this, arguments);\n    }\n    GL_SkyboxElements._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"mul vt0, va0, vc5\\n\" +\n            \"add vt0, vt0, vc4\\n\" +\n            \"m44 op, vt0, vc0\\n\";\n    };\n    GL_SkyboxElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SkyboxElements.vertexAttributesOffset = 1;\n    return GL_SkyboxElements;\n}(GL_TriangleElements_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxElements;\n\n},{\"../elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/elements/GL_TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"../elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nvar GL_TriangleElements = (function (_super) {\n    __extends(GL_TriangleElements, _super);\n    function GL_TriangleElements(triangleElements, shader, pool) {\n        _super.call(this, triangleElements, shader, pool);\n        this._triangleElements = triangleElements;\n    }\n    GL_TriangleElements._iIncludeDependencies = function (shader) {\n    };\n    GL_TriangleElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        //get the projection coordinates\n        var position = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        if (shader.projectionDependencies > 0) {\n            sharedRegisters.projectionFragment = registerCache.getFreeVarying();\n            var temp = registerCache.getFreeVertexVectorTemp();\n            code += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n                \"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n                \"mov op, \" + temp + \"\\n\";\n        }\n        else {\n            code += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n        }\n        return code;\n    };\n    GL_TriangleElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_TriangleElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._triangleElements = null;\n    };\n    GL_TriangleElements.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        //set buffers\n        //TODO: find a better way to update a concatenated buffer when autoderiving\n        if (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n            this._triangleElements.normals;\n        if (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n            this._triangleElements.tangents;\n        if (this._shader.curvesIndex >= 0)\n            this.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n        if (this._shader.uvIndex >= 0)\n            this.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n        if (this._shader.secondaryUVIndex >= 0)\n            this.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n        if (this._shader.normalIndex >= 0)\n            this.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n        if (this._shader.tangentIndex >= 0)\n            this.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n        if (this._shader.jointIndexIndex >= 0)\n            this.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n        if (this._shader.jointWeightIndex >= 0)\n            this.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n        this.activateVertexBufferVO(0, this._triangleElements.positions);\n    };\n    GL_TriangleElements.prototype.draw = function (renderable, camera, viewProjection, count, offset) {\n        //set constants\n        if (this._shader.sceneMatrixIndex >= 0) {\n            renderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n            viewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        }\n        else {\n            var matrix3D = Matrix3DUtils_1.default.CALCULATION_MATRIX;\n            matrix3D.copyFrom(renderable.renderSceneTransform);\n            matrix3D.append(viewProjection);\n            matrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        }\n        var context = this._stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_TriangleElements.prototype._pGetOverflowElements = function () {\n        return new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n    };\n    GL_TriangleElements.vertexAttributesOffset = 1;\n    return GL_TriangleElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TriangleElements;\n\n},{\"../elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/IElementsClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/elements\":[function(require,module,exports){\n\"use strict\";\nvar ElementsPool_1 = require(\"./elements/ElementsPool\");\nexports.ElementsPool = ElementsPool_1.default;\nvar GL_ElementsBase_1 = require(\"./elements/GL_ElementsBase\");\nexports.GL_ElementsBase = GL_ElementsBase_1.default;\nvar GL_LineElements_1 = require(\"./elements/GL_LineElements\");\nexports.GL_LineElements = GL_LineElements_1.default;\nvar GL_SkyboxElements_1 = require(\"./elements/GL_SkyboxElements\");\nexports.GL_SkyboxElements = GL_SkyboxElements_1.default;\nvar GL_TriangleElements_1 = require(\"./elements/GL_TriangleElements\");\nexports.GL_TriangleElements = GL_TriangleElements_1.default;\n\n},{\"./elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"./elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"./elements/GL_LineElements\":\"awayjs-renderergl/lib/elements/GL_LineElements\",\"./elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"./elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/errors/AnimationSetError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar AnimationSetError = (function (_super) {\n    __extends(AnimationSetError, _super);\n    function AnimationSetError(message) {\n        _super.call(this, message);\n    }\n    return AnimationSetError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-renderergl/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar AnimationSetError_1 = require(\"./errors/AnimationSetError\");\nexports.AnimationSetError = AnimationSetError_1.default;\n\n},{\"./errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\"}],\"awayjs-renderergl/lib/events/AnimationStateEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nvar AnimationStateEvent = (function (_super) {\n    __extends(AnimationStateEvent, _super);\n    /**\n     * Create a new <code>AnimatonStateEvent</code>\n     *\n     * @param type The event type.\n     * @param animator The animation state object that is the subject of this event.\n     * @param animationNode The animation node inside the animation state from which the event originated.\n     */\n    function AnimationStateEvent(type, animator, animationState, animationNode) {\n        _super.call(this, type);\n        this._animator = animator;\n        this._animationState = animationState;\n        this._animationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateEvent.prototype, \"animator\", {\n        /**\n         * The animator object that is the subject of this event.\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationState\", {\n        /**\n         * The animation state object that is the subject of this event.\n         */\n        get: function () {\n            return this._animationState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationNode\", {\n        /**\n         * The animation node inside the animation state from which the event originated.\n         */\n        get: function () {\n            return this._animationNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    AnimationStateEvent.prototype.clone = function () {\n        return new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n    };\n    /**\n     * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n     */\n    AnimationStateEvent.PLAYBACK_COMPLETE = \"playbackComplete\";\n    AnimationStateEvent.TRANSITION_COMPLETE = \"transitionComplete\";\n    return AnimationStateEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/AnimatorEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animator's state.\n */\nvar AnimatorEvent = (function (_super) {\n    __extends(AnimatorEvent, _super);\n    /**\n     * Create a new <code>AnimatorEvent</code> object.\n     *\n     * @param type The event type.\n     * @param animator The animator object that is the subject of this event.\n     */\n    function AnimatorEvent(type, animator) {\n        _super.call(this, type);\n        this._animator = animator;\n    }\n    Object.defineProperty(AnimatorEvent.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current event object.\n     */\n    AnimatorEvent.prototype.clone = function () {\n        return new AnimatorEvent(this.type, this._animator);\n    };\n    /**\n     * Defines the value of the type property of a start event object.\n     */\n    AnimatorEvent.START = \"animatorStart\";\n    /**\n     * Defines the value of the type property of a stop event object.\n     */\n    AnimatorEvent.STOP = \"animatorStop\";\n    /**\n     * Defines the value of the type property of a cycle complete event object.\n     */\n    AnimatorEvent.CYCLE_COMPLETE = \"animatorCycleComplete\";\n    return AnimatorEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/PassEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar PassEvent = (function (_super) {\n    __extends(PassEvent, _super);\n    function PassEvent(type, pass) {\n        _super.call(this, type);\n        this._pass = pass;\n    }\n    Object.defineProperty(PassEvent.prototype, \"pass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    PassEvent.prototype.clone = function () {\n        return new PassEvent(this.type, this._pass);\n    };\n    /**\n     *\n     */\n    PassEvent.INVALIDATE = \"invalidatePass\";\n    return PassEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/RTTEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RTTEvent = (function (_super) {\n    __extends(RTTEvent, _super);\n    function RTTEvent(type, rttManager) {\n        _super.call(this, type);\n        this._rttManager = rttManager;\n    }\n    Object.defineProperty(RTTEvent.prototype, \"rttManager\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._rttManager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    RTTEvent.prototype.clone = function () {\n        return new RTTEvent(this.type, this._rttManager);\n    };\n    /**\n     *\n     */\n    RTTEvent.RESIZE = \"rttManagerResize\";\n    return RTTEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/ShadingMethodEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ShadingMethodEvent = (function (_super) {\n    __extends(ShadingMethodEvent, _super);\n    function ShadingMethodEvent(type) {\n        _super.call(this, type);\n    }\n    ShadingMethodEvent.SHADER_INVALIDATED = \"ShaderInvalidated\";\n    return ShadingMethodEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShadingMethodEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar AnimationStateEvent_1 = require(\"./events/AnimationStateEvent\");\nexports.AnimationStateEvent = AnimationStateEvent_1.default;\nvar AnimatorEvent_1 = require(\"./events/AnimatorEvent\");\nexports.AnimatorEvent = AnimatorEvent_1.default;\nvar PassEvent_1 = require(\"./events/PassEvent\");\nexports.PassEvent = PassEvent_1.default;\nvar RTTEvent_1 = require(\"./events/RTTEvent\");\nexports.RTTEvent = RTTEvent_1.default;\nvar ShadingMethodEvent_1 = require(\"./events/ShadingMethodEvent\");\nexports.ShadingMethodEvent = ShadingMethodEvent_1.default;\n\n},{\"./events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"./events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"./events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"./events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"./events/ShadingMethodEvent\":\"awayjs-renderergl/lib/events/ShadingMethodEvent\"}],\"awayjs-renderergl/lib/filters/BlurFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DHBlurTask_1 = require(\"../filters/tasks/Filter3DHBlurTask\");\nvar Filter3DVBlurTask_1 = require(\"../filters/tasks/Filter3DVBlurTask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar BlurFilter3D = (function (_super) {\n    __extends(BlurFilter3D, _super);\n    /**\n     * Creates a new BlurFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function BlurFilter3D(blurX, blurY, stepSize) {\n        if (blurX === void 0) { blurX = 3; }\n        if (blurY === void 0) { blurY = 3; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._hBlurTask = new Filter3DHBlurTask_1.default(blurX, stepSize);\n        this._vBlurTask = new Filter3DVBlurTask_1.default(blurY, stepSize);\n        this.addTask(this._hBlurTask);\n        this.addTask(this._vBlurTask);\n    }\n    Object.defineProperty(BlurFilter3D.prototype, \"blurX\", {\n        get: function () {\n            return this._hBlurTask.amount;\n        },\n        set: function (value) {\n            this._hBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"blurY\", {\n        get: function () {\n            return this._vBlurTask.amount;\n        },\n        set: function (value) {\n            this._vBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"stepSize\", {\n        /**\n         * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n         * Higher values provide better performance at the cost of reduces quality.\n         */\n        get: function () {\n            return this._hBlurTask.stepSize;\n        },\n        set: function (value) {\n            this._hBlurTask.stepSize = value;\n            this._vBlurTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BlurFilter3D.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n        _super.prototype.setRenderTargets.call(this, mainTarget, stage);\n    };\n    return BlurFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BlurFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"../filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/filters/CompositeFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DCompositeTask_1 = require(\"../filters/tasks/Filter3DCompositeTask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar CompositeFilter3D = (function (_super) {\n    __extends(CompositeFilter3D, _super);\n    /**\n     * Creates a new CompositeFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function CompositeFilter3D(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._compositeTask = new Filter3DCompositeTask_1.default(blendMode, exposure);\n        this.addTask(this._compositeTask);\n    }\n    Object.defineProperty(CompositeFilter3D.prototype, \"exposure\", {\n        get: function () {\n            return this._compositeTask.exposure;\n        },\n        set: function (value) {\n            this._compositeTask.exposure = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompositeFilter3D.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._compositeTask.overlayTexture;\n        },\n        set: function (value) {\n            this._compositeTask.overlayTexture = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompositeFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompositeFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\"}],\"awayjs-renderergl/lib/filters/FXAAFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DFXAATask_1 = require(\"../filters/tasks/Filter3DFXAATask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar FXAAFilter3D = (function (_super) {\n    __extends(FXAAFilter3D, _super);\n    /**\n     * Creates a new FXAAFilter3D object\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function FXAAFilter3D(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._fxaaTask = new Filter3DFXAATask_1.default(amount, stepSize);\n        this.addTask(this._fxaaTask);\n    }\n    Object.defineProperty(FXAAFilter3D.prototype, \"amount\", {\n        get: function () {\n            return this._fxaaTask.amount;\n        },\n        set: function (value) {\n            this._fxaaTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FXAAFilter3D.prototype, \"stepSize\", {\n        get: function () {\n            return this._fxaaTask.stepSize;\n        },\n        set: function (value) {\n            this._fxaaTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FXAAFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FXAAFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\"}],\"awayjs-renderergl/lib/filters/Filter3DBase\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DBase = (function () {\n    function Filter3DBase() {\n        this._tasks = new Array();\n    }\n    Object.defineProperty(Filter3DBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.addTask = function (filter) {\n        this._tasks.push(filter);\n        if (this._requireDepthRender == null)\n            this._requireDepthRender = filter.requireDepthRender;\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"tasks\", {\n        get: function () {\n            return this._tasks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.getMainInputTexture = function (stage) {\n        return this._tasks[0].getMainInputTexture(stage);\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            this._textureWidth = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            this._rttManager = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].rttManager = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            this._textureHeight = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // link up the filters correctly with the next filter\n    Filter3DBase.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._tasks[this._tasks.length - 1].target = mainTarget;\n    };\n    Filter3DBase.prototype.dispose = function () {\n        for (var i = 0; i < this._tasks.length; ++i)\n            this._tasks[i].dispose();\n    };\n    Filter3DBase.prototype.update = function (stage, camera) {\n    };\n    return Filter3DBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DBase;\n\n},{}],\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DCompositeTask = (function (_super) {\n    __extends(Filter3DCompositeTask, _super);\n    function Filter3DCompositeTask(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0]);\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._overlayTexture;\n        },\n        set: function (value) {\n            this._overlayTexture = value;\n            this._overlayWidth = this._overlayTexture.width;\n            this._overlayHeight = this._overlayTexture.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"exposure\", {\n        get: function () {\n            return this._data[0];\n        },\n        set: function (value) {\n            this._data[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DCompositeTask.prototype.getFragmentCode = function () {\n        var code;\n        var op;\n        code = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n            \"mul ft1, v0, fc1.zw\\n\" +\n            \"add ft1, ft1, fc1.xy\\n\" +\n            \"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n            \"mul ft1, ft1, fc0.xxx\\n\" +\n            \"add ft1, ft1, fc0.xxx\\n\";\n        switch (this._blendMode) {\n            case \"multiply\":\n                code += \"mul oc, ft0, ft1\\n\";\n                break;\n            case \"add\":\n                code += \"add oc, ft0, ft1\\n\";\n                break;\n            case \"subtract\":\n                code += \"sub oc, ft0, ft1\\n\";\n                break;\n            case \"overlay\":\n                code += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n                code += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n                code += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n                code += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n                code += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n                code += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n                code += \"add oc, ft1, ft2\\n\";\n                break;\n            case \"normal\":\n                // for debugging purposes\n                code += \"mov oc, ft0\\n\";\n                break;\n            default:\n                throw new Error(\"Unknown blend mode\");\n        }\n        return code;\n    };\n    Filter3DCompositeTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        this._data[4] = -0.5 * (this._scaledTextureWidth - this._overlayWidth) / this._overlayWidth;\n        this._data[5] = -0.5 * (this._scaledTextureHeight - this._overlayHeight) / this._overlayHeight;\n        this._data[6] = this._scaledTextureWidth / this._overlayWidth;\n        this._data[7] = this._scaledTextureHeight / this._overlayHeight;\n        var context = stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 2);\n        stage.getAbstraction(this._overlayTexture).activate(1, false);\n    };\n    Filter3DCompositeTask.prototype.deactivate = function (stage) {\n        stage.context.setTextureAt(1, null);\n    };\n    return Filter3DCompositeTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DCompositeTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DFXAATask = (function (_super) {\n    __extends(Filter3DFXAATask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DFXAATask(amount, stepSize) {\n        if (amount === void 0) { amount = 1; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._data = new Float32Array(20);\n        //luma\n        this._data.set([0.299, 0.587, 0.114, 0], 0); //0.212, 0.716, 0.072\n        //helpers\n        this._data.set([0.25, 0.5, 0.75, 1], 4);\n        //settings (screen x, screen y, ...)\n        this._data.set([1 / 1024, 1 / 1024, -1, 1], 8);\n        //deltas\n        this._data.set([1 / 128, 1 / 8, 8, 0], 12);\n        //deltas\n        this._data.set([1.0 / 3.0 - 0.5, 2.0 / 3.0 - 0.5, 0.0 / 3.0 - 0.5, 3.0 / 3.0 - 0.5], 16);\n        this.amount = amount;\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DFXAATask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DFXAATask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DFXAATask.prototype.getFragmentCode = function () {\n        var lum = \"fc0\"; //\t0.299, 0.587, 0.114\n        var _0 = \"fc0.w\";\n        var _025 = \"fc1.x\";\n        var _05 = \"fc1.y\";\n        var _075 = \"fc1.z\";\n        var _1 = \"fc1.w\";\n        var pix = \"fc2.xy\";\n        var dx = \"fc2.x\"; // 1/1024\n        var dy = \"fc2.y\"; // 1/1024\n        var mOne = \"fc2.z\"; // -1.0\n        var mul = \"fc2.w\"; // 1.0  -- one for now\n        var fxaaReduceMin = \"fc3.x\"; //1/128\n        var fxaaReduceMul = \"fc3.y\"; //1/8\n        var fxaaSpanMax = \"fc3.z\"; //8\n        var delta1 = \"fc4.x\"; //1.0/3.0 - 0.5\n        var delta2 = \"fc4.y\"; //2.0/3.0 - 0.5\n        var delta3 = \"fc4.z\"; //0.0/3.0 - 0.5\n        var delta4 = \"fc4.w\"; //3.0/3.0 - 0.5\n        var uv_in = \"v0\";\n        var uv = \"ft0.xy\";\n        var uvx = \"ft0.x\";\n        var uvy = \"ft0.y\";\n        var TL = \"ft2.x\";\n        var TR = \"ft2.y\";\n        var BL = \"ft2.z\";\n        var BR = \"ft2.w\";\n        var M = \"ft3.x\";\n        var tempf1 = \"ft3.y\";\n        var tempf2 = \"ft3.z\";\n        var tempf3 = \"ft3.w\";\n        var tex = \"ft1\";\n        var dir = \"ft4\";\n        var dirx = \"ft4.x\";\n        var diry = \"ft4.y\";\n        var dirxy = \"ft4.xy\";\n        var dirReduce = \"ft5.x\";\n        var inverseDirAdjustment = \"ft5.y\";\n        var result1 = \"ft6\";\n        var result2 = \"ft7\";\n        var lumaMin = \"ft5.x\";\n        var lumaMax = \"ft5.y\";\n        var sample = \"fs0\";\n        var temp = tex;\n        var tempxy = temp + \".xy\";\n        var code = new Array();\n        //lumas\n        code.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", M, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TL, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uvy, uvy, dy, \"\\n\");\n        code.push(\"add\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uvy, uvy, dy, \"\\n\");\n        code.push(\"sub\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BL, tex, lum, \"\\n\");\n        //dir\n        code.push(\"add\", tempf1, TL, TR, \"\\n\");\n        code.push(\"add\", tempf2, BL, BR, \"\\n\");\n        code.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n        code.push(\"neg\", dirx, dirx, \"\\n\");\n        code.push(\"add\", tempf1, TL, BL, \"\\n\");\n        code.push(\"add\", tempf2, TR, BR, \"\\n\");\n        code.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n        code.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n        code.push(\"abs\", tempf1, dirx, \"\\n\");\n        code.push(\"abs\", tempf2, diry, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n        code.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n        code.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n        code.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", diry, tempf1, dy, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result1, result1, tex, \"\\n\");\n        code.push(\"mul\", result1, result1, _05, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"mul\", result2, result2, _025, \"\\n\");\n        code.push(\"mul\", tex, result1, _05, \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"min\", tempf1, BL, BR, \"\\n\");\n        code.push(\"min\", tempf2, TL, TR, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n        code.push(\"max\", tempf1, BL, BR, \"\\n\");\n        code.push(\"max\", tempf2, TL, TR, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n        code.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n        code.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n        code.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n        code.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n        code.push(\"mul\", result1, result1, tempf2, \"\\n\");\n        code.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n        code.push(\"mul\", result2, result2, tempf2, \"\\n\");\n        code.push(\"add\", \"oc\", result1, result2, \"\\n\");\n        //this._data[2] = 1/numSamples;\n        return code.join(\" \");\n    };\n    Filter3DFXAATask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 6);\n    };\n    Filter3DFXAATask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DFXAATask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        if (this._rttManager) {\n            this._data[8] = 1 / this._textureWidth;\n            this._data[9] = 1 / this._textureHeight;\n        }\n    };\n    Filter3DFXAATask.prototype.calculateStepSize = function () {\n        this._realStepSize = 1; //this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    //TODO - remove blur variables and create setters/getters for FXAA\n    Filter3DFXAATask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DFXAATask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DFXAATask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DHBlurTask = (function (_super) {\n    __extends(Filter3DHBlurTask, _super);\n    /**\n     * Creates a new Filter3DHDepthOfFFieldTask\n     * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DHBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n            this.calculateStepSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DHBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.x, v0.x, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.x, ft0.x, fc0.y\\n\" +\n                \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DHBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 1);\n    };\n    Filter3DHBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DHBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invW = 1 / this._textureWidth;\n        this._data[0] = this._amount * .5 * invW;\n        this._data[1] = this._realStepSize * invW;\n    };\n    Filter3DHBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DHBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DHBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DHBlurTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar Filter3DTaskBase = (function () {\n    function Filter3DTaskBase(requireDepthRender) {\n        if (requireDepthRender === void 0) { requireDepthRender = false; }\n        this._scaledTextureWidth = -1;\n        this._scaledTextureHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._textureDimensionsInvalid = true;\n        this._program3DInvalid = true;\n        this._textureScale = 0;\n        this._requireDepthRender = requireDepthRender;\n    }\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureScale\", {\n        /**\n         * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n         */\n        get: function () {\n            return this._textureScale;\n        },\n        set: function (value) {\n            if (this._textureScale == value)\n                return;\n            this._textureScale = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"target\", {\n        get: function () {\n            return this._target;\n        },\n        set: function (value) {\n            this._target = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            if (this._rttManager == value)\n                return;\n            this._rttManager = value;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            if (this._textureWidth == value)\n                return;\n            this._textureWidth = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            if (this._textureHeight == value)\n                return;\n            this._textureHeight = value;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DTaskBase.prototype.getMainInputTexture = function (stage) {\n        if (this._textureDimensionsInvalid)\n            this.updateTextures(stage);\n        return this._mainInputTexture;\n    };\n    Filter3DTaskBase.prototype.dispose = function () {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        if (this._program3D)\n            this._program3D.dispose();\n    };\n    Filter3DTaskBase.prototype.invalidateProgram = function () {\n        this._program3DInvalid = true;\n    };\n    Filter3DTaskBase.prototype.updateProgram = function (stage) {\n        if (this._program3D)\n            this._program3D.dispose();\n        this._program3D = stage.context.createProgram();\n        var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n        var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n        this._program3D.upload(vertexByteCode, fragmentByteCode);\n        this._program3DInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getVertexCode = function () {\n        return \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n    };\n    Filter3DTaskBase.prototype.getFragmentCode = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Filter3DTaskBase.prototype.updateTextures = function (stage) {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        this._mainInputTexture = new Image2D_1.default(this._scaledTextureWidth, this._scaledTextureHeight);\n        this._textureDimensionsInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getProgram = function (stage) {\n        if (this._program3DInvalid)\n            this.updateProgram(stage);\n        return this._program3D;\n    };\n    Filter3DTaskBase.prototype.activate = function (stage, camera, depthTexture) {\n    };\n    Filter3DTaskBase.prototype.deactivate = function (stage) {\n    };\n    Object.defineProperty(Filter3DTaskBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Filter3DTaskBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DTaskBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DVBlurTask = (function (_super) {\n    __extends(Filter3DVBlurTask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DVBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DVBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.y, v0.y, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.y, ft0.y, fc0.y\\n\";\n            code += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DVBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 1);\n    };\n    Filter3DVBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DVBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invH = 1 / this._textureHeight;\n        this._data[0] = this._amount * .5 * invH;\n        this._data[1] = this._realStepSize * invH;\n    };\n    Filter3DVBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DVBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DVBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DVBlurTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DCompositeTask_1 = require(\"./filters/tasks/Filter3DCompositeTask\");\nexports.Filter3DCompositeTask = Filter3DCompositeTask_1.default;\nvar Filter3DFXAATask_1 = require(\"./filters/tasks/Filter3DFXAATask\");\nexports.Filter3DFXAATask = Filter3DFXAATask_1.default;\nvar Filter3DHBlurTask_1 = require(\"./filters/tasks/Filter3DHBlurTask\");\nexports.Filter3DHBlurTask = Filter3DHBlurTask_1.default;\nvar Filter3DTaskBase_1 = require(\"./filters/tasks/Filter3DTaskBase\");\nexports.Filter3DTaskBase = Filter3DTaskBase_1.default;\nvar Filter3DVBlurTask_1 = require(\"./filters/tasks/Filter3DVBlurTask\");\nexports.Filter3DVBlurTask = Filter3DVBlurTask_1.default;\nvar BlurFilter3D_1 = require(\"./filters/BlurFilter3D\");\nexports.BlurFilter3D = BlurFilter3D_1.default;\nvar CompositeFilter3D_1 = require(\"./filters/CompositeFilter3D\");\nexports.CompositeFilter3D = CompositeFilter3D_1.default;\nvar Filter3DBase_1 = require(\"./filters/Filter3DBase\");\nexports.Filter3DBase = Filter3DBase_1.default;\nvar FXAAFilter3D_1 = require(\"./filters/FXAAFilter3D\");\nexports.FXAAFilter3D = FXAAFilter3D_1.default;\n\n},{\"./filters/BlurFilter3D\":\"awayjs-renderergl/lib/filters/BlurFilter3D\",\"./filters/CompositeFilter3D\":\"awayjs-renderergl/lib/filters/CompositeFilter3D\",\"./filters/FXAAFilter3D\":\"awayjs-renderergl/lib/filters/FXAAFilter3D\",\"./filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"./filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\",\"./filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\",\"./filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"./filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"./filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/managers/RTTBufferManager\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar RTTEvent_1 = require(\"../events/RTTEvent\");\nvar RTTBufferManager = (function (_super) {\n    __extends(RTTBufferManager, _super);\n    function RTTBufferManager(stage) {\n        _super.call(this);\n        this._viewWidth = -1;\n        this._viewHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._buffersInvalid = true;\n        this._renderToTextureRect = new Rectangle_1.default();\n        this._stage = stage;\n    }\n    RTTBufferManager.getInstance = function (stage) {\n        if (!stage)\n            throw new Error(\"stage key cannot be null!\");\n        if (RTTBufferManager._instances == null)\n            RTTBufferManager._instances = new Array();\n        var rttBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n        if (rttBufferManager == null) {\n            rttBufferManager = new RTTBufferManager(stage);\n            var vo = new RTTBufferManagerVO();\n            vo.stage3d = stage;\n            vo.rttbfm = rttBufferManager;\n            RTTBufferManager._instances.push(vo);\n        }\n        return rttBufferManager;\n    };\n    RTTBufferManager.getRTTBufferManagerFromStage = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage)\n                return r.rttbfm;\n        }\n        return null;\n    };\n    RTTBufferManager.deleteRTTBufferManager = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage) {\n                RTTBufferManager._instances.splice(c, 1);\n                return;\n            }\n        }\n    };\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioX\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioY\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewWidth\", {\n        get: function () {\n            return this._viewWidth;\n        },\n        set: function (value) {\n            if (value == this._viewWidth)\n                return;\n            this._viewWidth = value;\n            this._buffersInvalid = true;\n            this._textureWidth = ImageUtils_1.default.getBestPowerOf2(this._viewWidth);\n            if (this._textureWidth > this._viewWidth) {\n                this._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth) * .5);\n                this._renderToTextureRect.width = this._viewWidth;\n            }\n            else {\n                this._renderToTextureRect.x = 0;\n                this._renderToTextureRect.width = this._textureWidth;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewHeight\", {\n        get: function () {\n            return this._viewHeight;\n        },\n        set: function (value) {\n            if (value == this._viewHeight)\n                return;\n            this._viewHeight = value;\n            this._buffersInvalid = true;\n            this._textureHeight = ImageUtils_1.default.getBestPowerOf2(this._viewHeight);\n            if (this._textureHeight > this._viewHeight) {\n                this._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight) * .5);\n                this._renderToTextureRect.height = this._viewHeight;\n            }\n            else {\n                this._renderToTextureRect.y = 0;\n                this._renderToTextureRect.height = this._textureHeight;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToScreenVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToScreenVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"indexBuffer\", {\n        get: function () {\n            return this._indexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureRect\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RTTBufferManager.prototype.dispose = function () {\n        RTTBufferManager.deleteRTTBufferManager(this._stage);\n        if (this._indexBuffer) {\n            this._indexBuffer.dispose();\n            this._renderToScreenVertexBuffer.dispose();\n            this._renderToTextureVertexBuffer.dispose();\n            this._renderToScreenVertexBuffer = null;\n            this._renderToTextureVertexBuffer = null;\n            this._indexBuffer = null;\n        }\n    };\n    // todo: place all this in a separate model, since it's used all over the place\n    // maybe it even has a place in the core (together with screenRect etc)?\n    // needs to be stored per view of course\n    RTTBufferManager.prototype.updateRTTBuffers = function () {\n        var context = this._stage.context;\n        var textureVerts;\n        var screenVerts;\n        var x;\n        var y;\n        if (this._renderToTextureVertexBuffer == null)\n            this._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n        if (this._renderToScreenVertexBuffer == null)\n            this._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n        if (!this._indexBuffer) {\n            this._indexBuffer = context.createIndexBuffer(6);\n            this._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n        }\n        this._textureRatioX = x = Math.min(this._viewWidth / this._textureWidth, 1);\n        this._textureRatioY = y = Math.min(this._viewHeight / this._textureHeight, 1);\n        var u1 = (1 - x) * .5;\n        var u2 = (x + 1) * .5;\n        var v1 = (1 - y) * .5;\n        var v2 = (y + 1) * .5;\n        // last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n        textureVerts = [-x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3];\n        screenVerts = [-1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3];\n        this._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n        this._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n        this._buffersInvalid = false;\n    };\n    return RTTBufferManager;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTBufferManager;\nvar RTTBufferManagerVO = (function () {\n    function RTTBufferManagerVO() {\n    }\n    return RTTBufferManagerVO;\n}());\n\n},{\"../events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined}],\"awayjs-renderergl/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\nexports.RTTBufferManager = RTTBufferManager_1.default;\n\n},{\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\"}],\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.RenderableListItem\n */\nvar GL_Billboard = (function (_super) {\n    __extends(GL_Billboard, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param billboard\n     */\n    function GL_Billboard(billboard, renderer) {\n        _super.call(this, billboard, renderer);\n        this._billboard = billboard;\n    }\n    GL_Billboard.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._billboard = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     */\n    GL_Billboard.prototype._pGetElements = function () {\n        var texture = this._billboard.material.getTextureAt(0);\n        var id = -1;\n        if (texture)\n            id = ((this.renderable.style ? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager_1.default.getDefaultSampler()).id;\n        this._id = id;\n        var elements = GL_Billboard._samplerElements[id];\n        var width = this._billboard.billboardWidth;\n        var height = this._billboard.billboardHeight;\n        var billboardRect = this._billboard.billboardRect;\n        if (!elements) {\n            elements = GL_Billboard._samplerElements[id] = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(Array(0, 1, 2, 0, 2, 3));\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n            elements.setNormals(Array(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n            elements.setTangents(Array(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n            elements.setUVs(Array(0, 0, 1, 0, 1, 1, 0, 1));\n        }\n        else {\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n        }\n        return elements;\n    };\n    GL_Billboard.prototype._pGetSurface = function () {\n        return this._billboard.material;\n    };\n    GL_Billboard._samplerElements = new Object();\n    return GL_Billboard;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Billboard;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nvar GL_GraphicRenderable = (function (_super) {\n    __extends(GL_GraphicRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param indexOffset\n     */\n    function GL_GraphicRenderable(graphic, renderer) {\n        _super.call(this, graphic, renderer);\n        this.graphic = graphic;\n    }\n    GL_GraphicRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.graphic = null;\n    };\n    /**\n     *\n     * @returns {ElementsBase}\n     * @protected\n     */\n    GL_GraphicRenderable.prototype._pGetElements = function () {\n        this._offset = this.graphic.offset;\n        this._count = this.graphic.count;\n        return this.graphic.elements;\n    };\n    GL_GraphicRenderable.prototype._pGetSurface = function () {\n        return this.graphic.material;\n    };\n    return GL_GraphicRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_GraphicRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\"}],\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nvar GL_LineSegmentRenderable = (function (_super) {\n    __extends(GL_LineSegmentRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param dataOffset\n     */\n    function GL_LineSegmentRenderable(lineSegment, renderer) {\n        _super.call(this, lineSegment, renderer);\n        this._lineSegment = lineSegment;\n    }\n    GL_LineSegmentRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineSegment = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {base.LineElements}\n     * @protected\n     */\n    GL_LineSegmentRenderable.prototype._pGetElements = function () {\n        var geometry = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements_1.default());\n        var start = this._lineSegment.startPostion;\n        var end = this._lineSegment.endPosition;\n        var positions;\n        var thickness;\n        //if (geometry.indices != null) {\n        //\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n        //\tthickness = geometry.thickness.get(geometry.numVertices);\n        //} else {\n        positions = new Float32Array(6);\n        thickness = new Float32Array(1);\n        //}\n        positions[0] = start.x;\n        positions[1] = start.y;\n        positions[2] = start.z;\n        positions[3] = end.x;\n        positions[4] = end.y;\n        positions[5] = end.z;\n        thickness[0] = this._lineSegment.thickness;\n        geometry.setPositions(positions);\n        geometry.setThickness(thickness);\n        return geometry;\n    };\n    GL_LineSegmentRenderable.prototype._pGetSurface = function () {\n        return this._lineSegment.material;\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @private\n     */\n    GL_LineSegmentRenderable.prototype._pGetOverflowRenderable = function (indexOffset) {\n        return new GL_LineSegmentRenderable(this.renderable, this._renderer);\n    };\n    GL_LineSegmentRenderable._lineGraphics = new Object();\n    return GL_LineSegmentRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineSegmentRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-display/lib/graphics/LineElements\":undefined}],\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n/**\n * @class RenderableListItem\n */\nvar GL_RenderableBase = (function (_super) {\n    __extends(GL_RenderableBase, _super);\n    /**\n     *\n     * @param renderable\n     * @param sourceEntity\n     * @param surface\n     * @param renderer\n     */\n    function GL_RenderableBase(renderable, renderer) {\n        var _this = this;\n        _super.call(this, renderable, renderer);\n        this._count = 0;\n        this._offset = 0;\n        this._elementsDirty = true;\n        this._surfaceDirty = true;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onSurfaceUpdatedDelegate = function (event) { return _this._onSurfaceUpdated(event); };\n        this._onInvalidateElementsDelegate = function (event) { return _this.onInvalidateElements(event); };\n        //store a reference to the pool for later disposal\n        this._renderer = renderer;\n        this._stage = renderer.stage;\n        this.renderable = renderable;\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n    }\n    Object.defineProperty(GL_RenderableBase.prototype, \"elements\", {\n        get: function () {\n            if (this._elementsDirty)\n                this._updateElements();\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_RenderableBase.prototype, \"surfaceGL\", {\n        get: function () {\n            if (this._surfaceDirty)\n                this._updateSurface();\n            return this._surfaceGL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_RenderableBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.next = null;\n        this.masksConfig = null;\n        this.renderSceneTransform = null;\n        this._renderer = null;\n        this._stage = null;\n        this.sourceEntity = null;\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n        this.renderable = null;\n        this._surfaceGL.usages--;\n        if (!this._surfaceGL.usages)\n            this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n        this._surfaceGL = null;\n        this._elements = null;\n    };\n    GL_RenderableBase.prototype.onInvalidateElements = function (event) {\n        this._elementsDirty = true;\n    };\n    GL_RenderableBase.prototype._onSurfaceUpdated = function (event) {\n        this._surfaceDirty = true;\n    };\n    GL_RenderableBase.prototype._pGetElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    GL_RenderableBase.prototype._pGetSurface = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_RenderableBase.prototype._iActivate = function (pass, camera) {\n        pass._iActivate(camera);\n    };\n    /**\n     * Renders an object to the current render target.\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iRender = function (pass, camera, viewProjection) {\n        this._setRenderState(pass, camera, viewProjection);\n        if (this._elementsDirty)\n            this._updateElements();\n        var elements = pass.shader._elementsPool.getAbstraction((this.renderable.animator) ? this.renderable.animator.getRenderableElements(this, this._elements) : this._elements);\n        if (elements != pass.shader.activeElements)\n            elements._setRenderState(this, camera, viewProjection);\n        elements.draw(this, camera, viewProjection, this._count, this._offset);\n    };\n    GL_RenderableBase.prototype._setRenderState = function (pass, camera, viewProjection) {\n        pass._iRender(this, camera, viewProjection);\n    };\n    /**\n     * Clears the surface state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iDeactivate = function (pass) {\n        pass._iDeactivate();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._updateElements = function () {\n        this._elements = this._pGetElements();\n        this._elementsDirty = false;\n    };\n    GL_RenderableBase.prototype._updateSurface = function () {\n        var surface = this._pGetSurface() || DefaultMaterialManager_1.default.getDefaultMaterial(this.renderable);\n        var surfaceGL = this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n        if (this._surfaceGL != surfaceGL) {\n            if (this._surfaceGL) {\n                this._surfaceGL.usages--;\n                //dispose current surfaceGL object\n                if (!this._surfaceGL.usages)\n                    this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n            }\n            this._surfaceGL = surfaceGL;\n            this._surfaceGL.usages++;\n        }\n        //create a cache of image & sampler objects for the renderable\n        var numImages = surfaceGL.numImages;\n        this.images.length = numImages;\n        this.samplers.length = numImages;\n        this.uvMatrix = this.renderable.style ? this.renderable.style.uvMatrix : surface.style ? surface.style.uvMatrix : null;\n        var numTextures = surface.getNumTextures();\n        var texture;\n        var numImages;\n        var image;\n        var sampler;\n        var index;\n        for (var i = 0; i < numTextures; i++) {\n            texture = surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            for (var j = 0; j < numImages; j++) {\n                index = surfaceGL.getImageIndex(texture, j);\n                image = this.renderable.style ? this.renderable.style.getImageAt(texture, j) : null;\n                this.images[index] = image ? this._stage.getAbstraction(image) : null;\n                sampler = this.renderable.style ? this.renderable.style.getSamplerAt(texture, j) : null;\n                this.samplers[index] = sampler ? this._stage.getAbstraction(sampler) : null;\n            }\n        }\n        this._surfaceDirty = false;\n    };\n    return GL_RenderableBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_RenderableBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/RenderableEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nvar GL_SkyboxRenderable = (function (_super) {\n    __extends(GL_SkyboxRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param skybox\n     */\n    function GL_SkyboxRenderable(skybox, renderer) {\n        _super.call(this, skybox, renderer);\n        this._skybox = skybox;\n        this._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n    }\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     * @private\n     */\n    GL_SkyboxRenderable.prototype._pGetElements = function () {\n        var geometry = GL_SkyboxRenderable._geometry;\n        if (!geometry) {\n            geometry = GL_SkyboxRenderable._geometry = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            geometry.autoDeriveNormals = false;\n            geometry.autoDeriveTangents = false;\n            geometry.setIndices(Array(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n            geometry.setPositions(Array(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n        }\n        return geometry;\n    };\n    GL_SkyboxRenderable.prototype._pGetSurface = function () {\n        return this._skybox;\n    };\n    GL_SkyboxRenderable._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxRenderable._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"mul vt0, va0, vc5\\n\" +\n            \"add vt0, vt0, vc4\\n\" +\n            \"m44 op, vt0, vc0\\n\";\n    };\n    GL_SkyboxRenderable._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxRenderable.prototype._setRenderState = function (pass, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, pass, camera, viewProjection);\n        var context = this._stage.context;\n        var pos = camera.scenePosition;\n        this._vertexArray[0] = pos.x;\n        this._vertexArray[1] = pos.y;\n        this._vertexArray[2] = pos.z;\n        this._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far / Math.sqrt(3);\n        context.setProgramConstantsFromMatrix(ContextGLProgramType_1.default.VERTEX, 0, viewProjection, true);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 4, this._vertexArray, 2);\n    };\n    GL_SkyboxRenderable.vertexAttributesOffset = 1;\n    return GL_SkyboxRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/renderables\":[function(require,module,exports){\n\"use strict\";\nvar GL_BillboardRenderable_1 = require(\"./renderables/GL_BillboardRenderable\");\nexports.GL_BillboardRenderable = GL_BillboardRenderable_1.default;\nvar GL_GraphicRenderable_1 = require(\"./renderables/GL_GraphicRenderable\");\nexports.GL_GraphicRenderable = GL_GraphicRenderable_1.default;\nvar GL_LineSegmentRenderable_1 = require(\"./renderables/GL_LineSegmentRenderable\");\nexports.GL_LineSegmentRenderable = GL_LineSegmentRenderable_1.default;\nvar GL_RenderableBase_1 = require(\"./renderables/GL_RenderableBase\");\nexports.GL_RenderableBase = GL_RenderableBase_1.default;\nvar GL_SkyboxRenderable_1 = require(\"./renderables/GL_SkyboxRenderable\");\nexports.GL_SkyboxRenderable = GL_SkyboxRenderable_1.default;\n\n},{\"./renderables/GL_BillboardRenderable\":\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\",\"./renderables/GL_GraphicRenderable\":\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\",\"./renderables/GL_LineSegmentRenderable\":\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\",\"./renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"./renderables/GL_SkyboxRenderable\":\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\"}],\"awayjs-renderergl/lib/shaders/LightingShader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LightSources_1 = require(\"awayjs-display/lib/materials/LightSources\");\nvar ContextGLProfile_1 = require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\nvar LightingCompiler_1 = require(\"../shaders/compilers/LightingCompiler\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar LightingShader = (function (_super) {\n    __extends(LightingShader, _super);\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function LightingShader(elementsClass, lightingPass, stage) {\n        _super.call(this, elementsClass, lightingPass, stage);\n        this._includeCasters = true;\n        this._lightingPass = lightingPass;\n    }\n    LightingShader.prototype._iIncludeDependencies = function () {\n        this.numPointLights = this._lightingPass.numPointLights;\n        this.numDirectionalLights = this._lightingPass.numDirectionalLights;\n        this.numLightProbes = this._lightingPass.numLightProbes;\n        var numAllLights = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n        var numLightProbes = this._lightingPass.numLightProbes;\n        var diffuseLightSources = this._lightingPass._iUsesDiffuse(this) ? this._lightingPass.diffuseLightSources : 0x00;\n        var specularLightSources = this._lightingPass._iUsesSpecular(this) ? this._lightingPass.specularLightSources : 0x00;\n        var combinedLightSources = diffuseLightSources | specularLightSources;\n        this.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile_1.default.BASELINE_CONSTRAINED;\n        this.usesCommonData = this.usesLightFallOff;\n        this.numLights = numAllLights + numLightProbes;\n        this.usesLights = numAllLights > 0 && (combinedLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesShadows = this._lightingPass._iUsesShadows(this);\n        //IMPORTANT this must occur after shader lighting initialisation above\n        _super.prototype._iIncludeDependencies.call(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param materialPassVO\n     * @returns {away.materials.LightingCompiler}\n     */\n    LightingShader.prototype.createCompiler = function (elementsClass, pass) {\n        return new LightingCompiler_1.default(elementsClass, pass, this);\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    LightingShader.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        if (this._lightingPass.lightPicker)\n            this._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n        if (this.usesLights)\n            this.updateLights();\n        if (this.usesProbes)\n            this.updateProbes();\n    };\n    /**\n     * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateLights = function () {\n        var dirLight;\n        var pointLight;\n        var i = 0;\n        var k = 0;\n        var len;\n        var dirPos;\n        var total = 0;\n        var numLightTypes = this.usesShadows ? 2 : 1;\n        var l;\n        var offset;\n        this.ambientR = this.ambientG = this.ambientB = 0;\n        l = this.lightVertexConstantIndex;\n        k = this.lightFragmentConstantIndex;\n        var cast = 0;\n        var dirLights = this._lightingPass.lightPicker.directionalLights;\n        offset = this._lightingPass.directionalLightsOffset;\n        len = this._lightingPass.lightPicker.directionalLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                dirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n            len = dirLights.length;\n            if (len > this.numDirectionalLights)\n                len = this.numDirectionalLights;\n            for (i = 0; i < len; ++i) {\n                dirLight = dirLights[offset + i];\n                dirPos = dirLight.sceneDirection;\n                this.ambientR += dirLight._iAmbientR;\n                this.ambientG += dirLight._iAmbientG;\n                this.ambientB += dirLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    var x = -dirPos.x;\n                    var y = -dirPos.y;\n                    var z = -dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = -dirPos.x;\n                    this.fragmentConstantData[k++] = -dirPos.y;\n                    this.fragmentConstantData[k++] = -dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = dirLight._iDiffuseR;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseG;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseB;\n                this.fragmentConstantData[k++] = 1;\n                this.fragmentConstantData[k++] = dirLight._iSpecularR;\n                this.fragmentConstantData[k++] = dirLight._iSpecularG;\n                this.fragmentConstantData[k++] = dirLight._iSpecularB;\n                this.fragmentConstantData[k++] = 1;\n                if (++total == this.numDirectionalLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numDirectionalLights > total) {\n            i = k + (this.numDirectionalLights - total) * 12;\n            while (k < i)\n                this.fragmentConstantData[k++] = 0;\n        }\n        total = 0;\n        var pointLights = this._lightingPass.lightPicker.pointLights;\n        offset = this._lightingPass.pointLightsOffset;\n        len = this._lightingPass.lightPicker.pointLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        else {\n            cast = 0;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                pointLights = this._lightingPass.lightPicker.castingPointLights;\n            len = pointLights.length;\n            for (i = 0; i < len; ++i) {\n                pointLight = pointLights[offset + i];\n                dirPos = pointLight.scenePosition;\n                this.ambientR += pointLight._iAmbientR;\n                this.ambientG += pointLight._iAmbientG;\n                this.ambientB += pointLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    x = dirPos.x;\n                    y = dirPos.y;\n                    z = dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n                    this.vertexConstantData[l++] = 1;\n                }\n                else if (!this.usesGlobalPosFragment) {\n                    this.vertexConstantData[l++] = dirPos.x;\n                    this.vertexConstantData[l++] = dirPos.y;\n                    this.vertexConstantData[l++] = dirPos.z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = dirPos.x;\n                    this.fragmentConstantData[k++] = dirPos.y;\n                    this.fragmentConstantData[k++] = dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = pointLight._iDiffuseR;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseG;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseB;\n                var radius = pointLight._pRadius;\n                this.fragmentConstantData[k++] = radius * radius;\n                this.fragmentConstantData[k++] = pointLight._iSpecularR;\n                this.fragmentConstantData[k++] = pointLight._iSpecularG;\n                this.fragmentConstantData[k++] = pointLight._iSpecularB;\n                this.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n                if (++total == this.numPointLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numPointLights > total) {\n            i = k + (total - this.numPointLights) * 12;\n            for (; k < i; ++k)\n                this.fragmentConstantData[k] = 0;\n        }\n    };\n    /**\n     * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateProbes = function () {\n        var probe;\n        var lightProbes = this._lightingPass.lightPicker.lightProbes;\n        var weights = this._lightingPass.lightPicker.lightProbeWeights;\n        var len = lightProbes.length - this._lightingPass.lightProbesOffset;\n        var addDiff = this.usesProbesForDiffuse;\n        var addSpec = this.usesProbesForSpecular;\n        if (!(addDiff || addSpec))\n            return;\n        if (len > this.numLightProbes)\n            len = this.numLightProbes;\n        for (var i = 0; i < len; ++i) {\n            probe = lightProbes[this._lightingPass.lightProbesOffset + i];\n            if (addDiff)\n                this._stage.getAbstraction(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n            if (addSpec)\n                this._stage.getAbstraction(probe.specularMap).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n        }\n        for (i = 0; i < len; ++i)\n            this.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n    };\n    return LightingShader;\n}(ShaderBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingShader;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\",\"awayjs-display/lib/materials/LightSources\":undefined,\"awayjs-stagegl/lib/base/ContextGLProfile\":undefined}],\"awayjs-renderergl/lib/shaders/RegisterPool\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterElement_1 = require(\"../shaders/ShaderRegisterElement\");\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nvar RegisterPool = (function () {\n    /**\n     * Creates a new RegisterPool object.\n     * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n     * @param regCount The amount of available registers of this type.\n     * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n     */\n    function RegisterPool(regName, regCount, persistent) {\n        if (persistent === void 0) { persistent = true; }\n        this._regName = regName;\n        this._regCount = regCount;\n        this._persistent = persistent;\n        this.initRegisters(regName, regCount);\n    }\n    /**\n     * Retrieve an entire vector register that's still available.\n     */\n    RegisterPool.prototype.requestFreeVectorReg = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (!this.isRegisterUsed(i)) {\n                if (this._persistent)\n                    this._usedVectorCount[i]++;\n                return this._vectorRegisters[i];\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Retrieve a single vector component that's still available.\n     */\n    RegisterPool.prototype.requestFreeRegComponent = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (this._usedVectorCount[i] > 0)\n                continue;\n            for (var j = 0; j < 4; ++j) {\n                if (this._usedSingleCount[j][i] == 0) {\n                    if (this._persistent)\n                        this._usedSingleCount[j][i]++;\n                    return this._registerComponents[j][i];\n                }\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    RegisterPool.prototype.addUsage = function (register, usageCount) {\n        if (register._component > -1)\n            this._usedSingleCount[register._component][register.index] += usageCount;\n        else\n            this._usedVectorCount[register.index] += usageCount;\n    };\n    /**\n     * Removes a usage from a register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    RegisterPool.prototype.removeUsage = function (register) {\n        if (register._component > -1) {\n            if (--this._usedSingleCount[register._component][register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n        else {\n            if (--this._usedVectorCount[register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n    };\n    /**\n     * Disposes any resources used by the current RegisterPool object.\n     */\n    RegisterPool.prototype.dispose = function () {\n        this._vectorRegisters = null;\n        this._registerComponents = null;\n        this._usedSingleCount = null;\n        this._usedVectorCount = null;\n    };\n    /**\n     * Indicates whether or not any registers are in use.\n     */\n    RegisterPool.prototype.hasRegisteredRegs = function () {\n        for (var i = 0; i < this._regCount; ++i)\n            if (this.isRegisterUsed(i))\n                return true;\n        return false;\n    };\n    /**\n     * Initializes all registers.\n     */\n    RegisterPool.prototype.initRegisters = function (regName, regCount) {\n        var hash = RegisterPool._initPool(regName, regCount);\n        this._vectorRegisters = RegisterPool._regPool[hash];\n        this._registerComponents = RegisterPool._regCompsPool[hash];\n        this._usedVectorCount = this._initArray(Array(regCount), 0);\n        this._usedSingleCount = new Array(4);\n        this._usedSingleCount[0] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[1] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[2] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[3] = this._initArray(new Array(regCount), 0);\n    };\n    RegisterPool._initPool = function (regName, regCount) {\n        var hash = regName + regCount;\n        if (RegisterPool._regPool[hash] != undefined)\n            return hash;\n        var vectorRegisters = new Array(regCount);\n        RegisterPool._regPool[hash] = vectorRegisters;\n        var registerComponents = [\n            [],\n            [],\n            [],\n            []\n        ];\n        RegisterPool._regCompsPool[hash] = registerComponents;\n        for (var i = 0; i < regCount; ++i) {\n            vectorRegisters[i] = new ShaderRegisterElement_1.default(regName, i);\n            for (var j = 0; j < 4; ++j)\n                registerComponents[j][i] = new ShaderRegisterElement_1.default(regName, i, j);\n        }\n        return hash;\n    };\n    /**\n     * Check if the temp register is either used for single or vector use\n     */\n    RegisterPool.prototype.isRegisterUsed = function (index) {\n        if (this._usedVectorCount[index] > 0)\n            return true;\n        for (var i = 0; i < 4; ++i)\n            if (this._usedSingleCount[i][index] > 0)\n                return true;\n        return false;\n    };\n    RegisterPool.prototype._initArray = function (a, val) {\n        var l = a.length;\n        for (var c = 0; c < l; c++)\n            a[c] = val;\n        return a;\n    };\n    RegisterPool._regPool = new Object();\n    RegisterPool._regCompsPool = new Object();\n    return RegisterPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RegisterPool;\n\n},{\"../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderBase\":[function(require,module,exports){\n\"use strict\";\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLTriangleFace_1 = require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nvar ElementsPool_1 = require(\"../elements/ElementsPool\");\nvar CompilerBase_1 = require(\"../shaders/compilers/CompilerBase\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar ShaderBase = (function () {\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function ShaderBase(elementsClass, pass, stage) {\n        this._abstractionPool = new Object();\n        this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n        this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n        this._invalidShader = true;\n        this._invalidProgram = true;\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        this.usesBlending = false;\n        this.useImageRect = false;\n        this.usesCurves = false;\n        /**\n         * The depth compare mode used to render the renderables using this material.\n         *\n         * @see away.stagegl.ContextGLCompareMode\n         */\n        this.depthCompareMode = ContextGLCompareMode_1.default.LESS_EQUAL;\n        /**\n         * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n         */\n        this.writeDepth = true;\n        this._defaultCulling = ContextGLTriangleFace_1.default.BACK;\n        this._pInverseSceneMatrix = new Float32Array(16);\n        //set ambient values to default\n        this.ambientR = 0xFF;\n        this.ambientG = 0xFF;\n        this.ambientB = 0xFF;\n        /**\n         * Indicates whether there are any dependencies on the world-space position vector.\n         */\n        this.usesGlobalPosFragment = false;\n        /**\n         * Indicates whether there are any dependencies on the local position vector.\n         */\n        this.usesPositionFragment = false;\n        /**\n         *\n         */\n        this.imageIndices = new Array();\n        this._elementsClass = elementsClass;\n        this._pass = pass;\n        this._stage = stage;\n        this.profile = this._stage.profile;\n        this._elementsPool = new ElementsPool_1.default(this, elementsClass);\n    }\n    Object.defineProperty(ShaderBase.prototype, \"programData\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._programData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderBase.prototype.getAbstraction = function (texture) {\n        return (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new ShaderBase._abstractionClassPool[texture.assetType](texture, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    ShaderBase.prototype.clearAbstraction = function (texture) {\n        this._abstractionPool[texture.id] = null;\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ShaderBase.registerAbstraction = function (gl_assetClass, assetClass) {\n        ShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n    };\n    ShaderBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._pass.getImageIndex(texture, index);\n    };\n    ShaderBase.prototype._iIncludeDependencies = function () {\n        this._pass._iIncludeDependencies(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param elementsClass\n     * @param pass\n     * @param stage\n     * @returns {CompilerBase}\n     */\n    ShaderBase.prototype.createCompiler = function (elementsClass, pass) {\n        return new CompilerBase_1.default(elementsClass, pass, this);\n    };\n    /**\n     * Clears dependency counts for all registers. Called when recompiling a pass.\n     */\n    ShaderBase.prototype.reset = function () {\n        this.projectionDependencies = 0;\n        this.normalDependencies = 0;\n        this.colorDependencies = 0;\n        this.viewDirDependencies = 0;\n        this.uvDependencies = 0;\n        this.secondaryUVDependencies = 0;\n        this.globalPosDependencies = 0;\n        this.tangentDependencies = 0;\n        this.usesCommonData = false;\n        this.usesGlobalPosFragment = false;\n        this.usesPositionFragment = false;\n        this.usesFragmentAnimation = false;\n        this.usesTangentSpace = false;\n        this.outputsNormals = false;\n        this.outputsTangentNormals = false;\n    };\n    ShaderBase.prototype.pInitRegisterIndices = function () {\n        this.commonsDataIndex = -1;\n        this.cameraPositionIndex = -1;\n        this.curvesIndex = -1;\n        this.uvIndex = -1;\n        this.uvMatrixIndex = -1;\n        this.colorTransformIndex = -1;\n        this.secondaryUVIndex = -1;\n        this.normalIndex = -1;\n        this.colorBufferIndex = -1;\n        this.tangentIndex = -1;\n        this.sceneMatrixIndex = -1;\n        this.sceneNormalMatrixIndex = -1;\n        this.jointIndexIndex = -1;\n        this.jointWeightIndex = -1;\n        this.imageIndices.length = 0;\n    };\n    /**\n     * Initializes the unchanging constant data for this shader object.\n     */\n    ShaderBase.prototype.initConstantData = function (registerCache, animatableAttributes, animationTargetRegisters, uvSource, uvTarget) {\n        //Updates the amount of used register indices.\n        this.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n        this.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n        this.numUsedStreams = registerCache.numUsedStreams;\n        this.numUsedTextures = registerCache.numUsedTextures;\n        this.numUsedVaryings = registerCache.numUsedVaryings;\n        this.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n        this.animatableAttributes = animatableAttributes;\n        this.animationTargetRegisters = animationTargetRegisters;\n        this.uvSource = uvSource;\n        this.uvTarget = uvTarget;\n        this.vertexConstantData = new Float32Array(this.numUsedVertexConstants * 4);\n        this.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants * 4);\n        //Initializes commonly required constant values.\n        if (this.commonsDataIndex >= 0) {\n            this.fragmentConstantData[this.commonsDataIndex] = .5;\n            this.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n            this.fragmentConstantData[this.commonsDataIndex + 2] = 1 / 255;\n            this.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n        }\n        //Initializes the default UV transformation matrix.\n        if (this.uvMatrixIndex >= 0) {\n            this.vertexConstantData[this.uvMatrixIndex] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n        }\n        //Initializes the default colorTransform.\n        if (this.colorTransformIndex >= 0) {\n            this.fragmentConstantData[this.colorTransformIndex] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n        }\n        if (this.cameraPositionIndex >= 0)\n            this.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n    };\n    /**\n     * The blend mode to use when drawing this renderable. The following blend modes are supported:\n     * <ul>\n     * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n     * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n     * <li>BlendMode.MULTIPLY</li>\n     * <li>BlendMode.ADD</li>\n     * <li>BlendMode.ALPHA</li>\n     * </ul>\n     */\n    ShaderBase.prototype.setBlendMode = function (value) {\n        switch (value) {\n            case BlendMode_1.default.NORMAL:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n                this.usesBlending = false;\n                break;\n            case BlendMode_1.default.LAYER:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.MULTIPLY:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_COLOR;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ADD:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ALPHA:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            default:\n                throw new ArgumentError_1.default(\"Unsupported blend mode!\");\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iActivate = function (camera) {\n        if (this.usesAnimation)\n            this._pass.animationSet.activate(this, this._stage);\n        this._stage.context.setCulling(this.useBothSides ? ContextGLTriangleFace_1.default.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n        if (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            var pos = camera.scenePosition;\n            this.vertexConstantData[this.cameraPositionIndex] = pos.x;\n            this.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n            this.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n        }\n        this._stage.context.setDepthTest((this.writeDepth && !this.usesBlending), this.depthCompareMode);\n        if (this.usesBlending)\n            this._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n        this.activeElements = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iDeactivate = function () {\n        if (this.usesAnimation)\n            this._pass.animationSet.deactivate(this, this._stage);\n        //For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n        this._stage.context.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this.activeElements = null;\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    ShaderBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        if (renderable.renderable.animator)\n            renderable.renderable.animator.setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n        if (this.usesUVTransform) {\n            var uvMatrix = renderable.uvMatrix;\n            if (uvMatrix) {\n                this.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n            }\n            else {\n                this.vertexConstantData[this.uvMatrixIndex] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n            }\n        }\n        if (this.usesColorTransform) {\n            var colorTransform = renderable.sourceEntity._iAssignedColorTransform();\n            if (colorTransform) {\n                this.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset / 255;\n            }\n            else {\n                this.fragmentConstantData[this.colorTransformIndex] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n            }\n        }\n        if (this.sceneNormalMatrixIndex >= 0)\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n        if (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n            var pos = camera.scenePosition;\n            var x = pos.x;\n            var y = pos.y;\n            var z = pos.z;\n            this.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n            this.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n            this.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n        }\n    };\n    ShaderBase.prototype.invalidateProgram = function () {\n        this._invalidProgram = true;\n    };\n    ShaderBase.prototype.invalidateShader = function () {\n        this._invalidShader = true;\n        this._invalidProgram = true;\n    };\n    ShaderBase.prototype.dispose = function () {\n        this._programData.dispose();\n        this._programData = null;\n    };\n    ShaderBase.prototype._updateProgram = function () {\n        this._invalidProgram = false;\n        var compiler;\n        if (this._invalidShader) {\n            this._invalidShader = false;\n            compiler = this.createCompiler(this._elementsClass, this._pass);\n            compiler.compile();\n        }\n        this._calcAnimationCode(compiler.shadedTarget);\n        var programData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n        //check program data hasn't changed, keep count of program usages\n        if (this._programData != programData) {\n            if (this._programData)\n                this._programData.dispose();\n            this._programData = programData;\n            programData.usages++;\n        }\n    };\n    ShaderBase.prototype._calcAnimationCode = function (shadedTarget) {\n        //reset code\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        //check to see if GPU animation is used\n        if (this.usesAnimation) {\n            var animationSet = this._pass.animationSet;\n            this._animationVertexCode += animationSet.getAGALVertexCode(this);\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += animationSet.getAGALUVCode(this);\n            if (this.usesFragmentAnimation)\n                this._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n            animationSet.doneAGALCode(this);\n        }\n        else {\n            // simply write attributes to targets, do not animate them\n            // projection will pick up on targets[0] to do the projection\n            var len = this.animatableAttributes.length;\n            for (var i = 0; i < len; ++i)\n                this._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n        }\n    };\n    ShaderBase._abstractionClassPool = new Object();\n    return ShaderBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderBase;\n\n},{\"../elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"../shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLTriangleFace\":undefined}],\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\":[function(require,module,exports){\n\"use strict\";\nvar RegisterPool_1 = require(\"../shaders/RegisterPool\");\nvar ShaderRegisterElement_1 = require(\"../shaders/ShaderRegisterElement\");\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nvar ShaderRegisterCache = (function () {\n    /**\n     * Create a new ShaderRegisterCache object.\n     *\n     * @param profile The compatibility profile used by the renderer.\n     */\n    function ShaderRegisterCache(profile) {\n        this._numUsedVertexConstants = 0;\n        this._numUsedFragmentConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._profile = profile;\n    }\n    /**\n     * Resets all registers.\n     */\n    ShaderRegisterCache.prototype.reset = function () {\n        this._fragmentTempCache = new RegisterPool_1.default(\"ft\", 8, false);\n        this._vertexTempCache = new RegisterPool_1.default(\"vt\", 8, false);\n        this._varyingCache = new RegisterPool_1.default(\"v\", 8);\n        this._textureCache = new RegisterPool_1.default(\"fs\", 8);\n        this._vertexAttributesCache = new RegisterPool_1.default(\"va\", 8);\n        this._fragmentConstantsCache = new RegisterPool_1.default(\"fc\", 28);\n        this._vertexConstantsCache = new RegisterPool_1.default(\"vc\", 128);\n        this._fragmentOutputRegister = new ShaderRegisterElement_1.default(\"oc\", -1);\n        this._vertexOutputRegister = new ShaderRegisterElement_1.default(\"op\", -1);\n        this._numUsedVertexConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._numUsedFragmentConstants = 0;\n        var i;\n        for (i = 0; i < this._vertexAttributesOffset; ++i)\n            this.getFreeVertexAttribute();\n        for (i = 0; i < this._vertexConstantOffset; ++i)\n            this.getFreeVertexConstant();\n        for (i = 0; i < this._varyingsOffset; ++i)\n            this.getFreeVarying();\n        for (i = 0; i < this._fragmentConstantOffset; ++i)\n            this.getFreeFragmentConstant();\n    };\n    /**\n     * Disposes all resources used.\n     */\n    ShaderRegisterCache.prototype.dispose = function () {\n        this._fragmentTempCache.dispose();\n        this._vertexTempCache.dispose();\n        this._varyingCache.dispose();\n        this._fragmentConstantsCache.dispose();\n        this._vertexAttributesCache.dispose();\n        this._fragmentTempCache = null;\n        this._vertexTempCache = null;\n        this._varyingCache = null;\n        this._fragmentConstantsCache = null;\n        this._vertexAttributesCache = null;\n        this._fragmentOutputRegister = null;\n        this._vertexOutputRegister = null;\n    };\n    /**\n     * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addFragmentTempUsages = function (register, usageCount) {\n        this._fragmentTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeFragmentTempUsage = function (register) {\n        this._fragmentTempCache.removeUsage(register);\n    };\n    /**\n     * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n     * until removeUsage has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addVertexTempUsages = function (register, usageCount) {\n        this._vertexTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeVertexTempUsage = function (register) {\n        this._vertexTempCache.removeUsage(register);\n    };\n    /**\n     * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentVectorTemp = function () {\n        return this._fragmentTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a fragment temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentSingleTemp = function () {\n        return this._fragmentTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available varying register\n     */\n    ShaderRegisterCache.prototype.getFreeVarying = function () {\n        ++this._numUsedVaryings;\n        return this._varyingCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available fragment constant register\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentConstant = function () {\n        ++this._numUsedFragmentConstants;\n        return this._fragmentConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available vertex constant register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexConstant = function () {\n        ++this._numUsedVertexConstants;\n        return this._vertexConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an entire vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexVectorTemp = function () {\n        return this._vertexTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexSingleTemp = function () {\n        return this._vertexTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available vertex attribute register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexAttribute = function () {\n        ++this._numUsedStreams;\n        return this._vertexAttributesCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available texture register\n     */\n    ShaderRegisterCache.prototype.getFreeTextureReg = function () {\n        ++this._numUsedTextures;\n        return this._textureCache.requestFreeVectorReg();\n    };\n    Object.defineProperty(ShaderRegisterCache.prototype, \"vertexConstantOffset\", {\n        /**\n         * Indicates the start index from which to retrieve vertex constants.\n         */\n        get: function () {\n            return this._vertexConstantOffset;\n        },\n        set: function (vertexConstantOffset) {\n            this._vertexConstantOffset = vertexConstantOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"vertexAttributesOffset\", {\n        /**\n         * Indicates the start index from which to retrieve vertex attributes.\n         */\n        get: function () {\n            return this._vertexAttributesOffset;\n        },\n        set: function (value) {\n            this._vertexAttributesOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"varyingsOffset\", {\n        /**\n         * Indicates the start index from which to retrieve varying registers.\n         */\n        get: function () {\n            return this._varyingsOffset;\n        },\n        set: function (value) {\n            this._varyingsOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"fragmentConstantOffset\", {\n        /**\n         * Indicates the start index from which to retrieve fragment constants.\n         */\n        get: function () {\n            return this._fragmentConstantOffset;\n        },\n        set: function (value) {\n            this._fragmentConstantOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"fragmentOutputRegister\", {\n        /**\n         * The fragment output register.\n         */\n        get: function () {\n            return this._fragmentOutputRegister;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVertexConstants\", {\n        /**\n         * The amount of used vertex constant registers.\n         */\n        get: function () {\n            return this._numUsedVertexConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedFragmentConstants\", {\n        /**\n         * The amount of used fragment constant registers.\n         */\n        get: function () {\n            return this._numUsedFragmentConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedStreams\", {\n        /**\n         * The amount of used vertex streams.\n         */\n        get: function () {\n            return this._numUsedStreams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedTextures\", {\n        /**\n         * The amount of used texture slots.\n         */\n        get: function () {\n            return this._numUsedTextures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVaryings\", {\n        /**\n         * The amount of used varying registers.\n         */\n        get: function () {\n            return this._numUsedVaryings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ShaderRegisterCache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterCache;\n\n},{\"../shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderRegisterData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nvar ShaderRegisterData = (function () {\n    function ShaderRegisterData() {\n        this.textures = Array();\n    }\n    return ShaderRegisterData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterData;\n\n},{}],\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":[function(require,module,exports){\n\"use strict\";\n/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nvar ShaderRegisterElement = (function () {\n    /**\n     * Creates a new ShaderRegisterElement object.\n     *\n     * @param regName The name of the register.\n     * @param index The index of the register.\n     * @param component The register's component, if not the entire register is represented.\n     */\n    function ShaderRegisterElement(regName, index, component) {\n        if (component === void 0) { component = -1; }\n        this._component = component;\n        this._regName = regName;\n        this._index = index;\n        this._toStr = this._regName;\n        if (this._index >= 0)\n            this._toStr += this._index;\n        if (component > -1)\n            this._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n    }\n    /**\n     * Converts the register or the components AGAL string representation.\n     */\n    ShaderRegisterElement.prototype.toString = function () {\n        return this._toStr;\n    };\n    Object.defineProperty(ShaderRegisterElement.prototype, \"regName\", {\n        /**\n         * The register's name.\n         */\n        get: function () {\n            return this._regName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterElement.prototype, \"index\", {\n        /**\n         * The register's index.\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderRegisterElement.COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n    return ShaderRegisterElement;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterElement;\n\n},{}],\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterCache_1 = require(\"../../shaders/ShaderRegisterCache\");\nvar ShaderRegisterData_1 = require(\"../../shaders/ShaderRegisterData\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar CompilerBase = (function () {\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function CompilerBase(elementsClass, pass, shader) {\n        this._pVertexCode = ''; // Changed to emtpy string- AwayTS\n        this._pFragmentCode = ''; // Changed to emtpy string - AwayTS\n        this._pPostAnimationFragmentCode = ''; // Changed to emtpy string - AwayTS\n        //The attributes that need to be animated by animators.\n        this._pAnimatableAttributes = new Array();\n        //The target registers for animated properties, written to by the animators.\n        this._pAnimationTargetRegisters = new Array();\n        this._pElementsClass = elementsClass;\n        this._pRenderPass = pass;\n        this._pShader = shader;\n        this._pSharedRegisters = new ShaderRegisterData_1.default();\n        this._pRegisterCache = new ShaderRegisterCache_1.default(shader.profile);\n        this._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n        this._pRegisterCache.reset();\n    }\n    /**\n     * Compiles the code after all setup on the compiler has finished.\n     */\n    CompilerBase.prototype.compile = function () {\n        this._pShader.reset();\n        this._pShader._iIncludeDependencies();\n        this.pInitRegisterIndices();\n        this.pCompileDependencies();\n        //compile custom vertex & fragment codes\n        this._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        if (this._pShader.usesColorTransform)\n            this.compileColorTransformCode();\n        else\n            this._pShader.colorTransformIndex = -1;\n        //assign the final output color to the output register\n        this._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n        this._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n        //initialise the required shader constants\n        this._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n        this._pRenderPass._iInitConstantData(this._pShader);\n    };\n    /**\n     * Calculate the transformed colours\n     */\n    CompilerBase.prototype.compileColorTransformCode = function () {\n        // rm, gm, bm, am - multiplier\n        // ro, go, bo, ao - offset\n        var ct1 = this._pRegisterCache.getFreeFragmentConstant();\n        var ct2 = this._pRegisterCache.getFreeFragmentConstant();\n        this._pShader.colorTransformIndex = ct1.index * 4;\n        this._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n        this._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n    };\n    /**\n     * Compile the code for the methods.\n     */\n    CompilerBase.prototype.pCompileDependencies = function () {\n        this._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n        //compile the world-space position if required\n        if (this._pShader.globalPosDependencies > 0)\n            this.compileGlobalPositionCode();\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n        if (this._pShader.usesCurves)\n            this.compileCurvesCode();\n        //Calculate the (possibly animated) UV coordinates.\n        if (this._pShader.uvDependencies > 0)\n            this.compileUVCode();\n        if (this._pShader.secondaryUVDependencies > 0)\n            this.compileSecondaryUVCode();\n        if (this._pShader.normalDependencies > 0)\n            this.compileNormalCode();\n        if (this._pShader.viewDirDependencies > 0)\n            this.compileViewDirCode();\n        //collect code from material\n        this._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        //collect code from pass\n        this._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n    };\n    CompilerBase.prototype.compileGlobalPositionCode = function () {\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n        var sceneMatrixReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pShader.sceneMatrixIndex = sceneMatrixReg.index * 4;\n        this._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n        if (this._pShader.usesGlobalPosFragment) {\n            this._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n        }\n    };\n    CompilerBase.prototype.compilePositionCode = function () {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    };\n    CompilerBase.prototype.compileCurvesCode = function () {\n        this._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n        this._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n        var temp = this._pRegisterCache.getFreeFragmentSingleTemp();\n        this._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n            \"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n            \"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n            \"kil \" + temp + \"\\n\";\n    };\n    /**\n     * Calculate the (possibly animated) UV coordinates.\n     */\n    CompilerBase.prototype.compileUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.uvIndex = uvAttributeReg.index;\n        var varying = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n        if (this._pShader.usesUVTransform) {\n            // a, b, 0, tx\n            // c, d, 0, ty\n            var uvTransform1 = this._pRegisterCache.getFreeVertexConstant();\n            var uvTransform2 = this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.uvMatrixIndex = uvTransform1.index * 4;\n            this._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n                \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n                \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n        }\n        else {\n            this._pShader.uvMatrixIndex = -1;\n            this._uvTarget = varying.toString();\n            this._uvSource = uvAttributeReg.toString();\n        }\n    };\n    /**\n     * Provide the secondary UV coordinates.\n     */\n    CompilerBase.prototype.compileSecondaryUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.secondaryUVIndex = uvAttributeReg.index;\n        this._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n    };\n    /**\n     * Calculate the view direction.\n     */\n    CompilerBase.prototype.compileViewDirCode = function () {\n        var cameraPositionReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n        this._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n        this._pShader.cameraPositionIndex = cameraPositionReg.index * 4;\n        if (this._pShader.usesTangentSpace) {\n            var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                \"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n        }\n        else {\n            this._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n        }\n        //TODO is this required in all cases? (re: distancemappass)\n        this._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n            \"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n    };\n    /**\n     * Calculate the normal.\n     */\n    CompilerBase.prototype.compileNormalCode = function () {\n        this._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n        //simple normal aquisition if no tangent space is being used\n        if (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n            this._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            return;\n        }\n        var normalMatrix;\n        if (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n            normalMatrix = new Array(3);\n            normalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n            this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.sceneNormalMatrixIndex = normalMatrix[0].index * 4;\n            this._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n        }\n        if (this._pShader.outputsNormals) {\n            if (this._pShader.usesTangentSpace) {\n                // normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n                this._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            }\n            else {\n                //Compiles the vertex shader code for tangent-space normal maps.\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n                    \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n                this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n                //Compiles the fragment shader code for tangent-space normal maps.\n                var t;\n                var b;\n                var n;\n                t = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(t, 1);\n                b = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(b, 1);\n                n = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(n, 1);\n                this._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n                    \"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n                    \"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n                    \"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n                //compile custom fragment code for normal calcs\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n                    \"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n                this._pRegisterCache.removeFragmentTempUsage(b);\n                this._pRegisterCache.removeFragmentTempUsage(t);\n                this._pRegisterCache.removeFragmentTempUsage(n);\n            }\n        }\n        else {\n            // no output, world space is enough\n            this._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n            this._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n            if (this._pShader.tangentDependencies > 0) {\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n            }\n        }\n        if (!this._pShader.usesTangentSpace)\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    CompilerBase.prototype.pInitRegisterIndices = function () {\n        this._pShader.pInitRegisterIndices();\n        this._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp();\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n        this._pAnimatableAttributes.push(\"va0\");\n        this._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n        this._pVertexCode = \"\";\n        this._pFragmentCode = \"\";\n        this._pPostAnimationFragmentCode = \"\";\n        //create commonly shared constant registers\n        if (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n            this._pShader.commonsDataIndex = this._pSharedRegisters.commons.index * 4;\n        }\n        //Creates the registers to contain the tangent data.\n        //Needs to be created FIRST and in this order (for when using tangent space)\n        if (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n            this._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n            this._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n            if (this._pShader.usesTangentSpace) {\n                this._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n            }\n            this._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n            this._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n        }\n        if (this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n            this._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n            this._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n            this._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n        }\n        if (this._pShader.colorDependencies > 0) {\n            this._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n            this._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n        }\n    };\n    /**\n     * Disposes all resources used by the compiler.\n     */\n    CompilerBase.prototype.dispose = function () {\n        this._pRegisterCache.dispose();\n        this._pRegisterCache = null;\n        this._pSharedRegisters = null;\n    };\n    Object.defineProperty(CompilerBase.prototype, \"vertexCode\", {\n        /**\n         * The generated vertex code.\n         */\n        get: function () {\n            return this._pVertexCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"fragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"postAnimationFragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pPostAnimationFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"shadedTarget\", {\n        /**\n         * The register name containing the final shaded colour.\n         */\n        get: function () {\n            return this._pSharedRegisters.shadedTarget.toString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompilerBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompilerBase;\n\n},{\"../../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"../../shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\"}],\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar CompilerBase_1 = require(\"../../shaders/compilers/CompilerBase\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar LightingCompiler = (function (_super) {\n    __extends(LightingCompiler, _super);\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function LightingCompiler(elementsClass, lightingPass, shaderLightingObject) {\n        _super.call(this, elementsClass, lightingPass, shaderLightingObject);\n        this._shaderLightingObject = shaderLightingObject;\n        this._lightingPass = lightingPass;\n    }\n    /**\n     * Compile the code for the methods.\n     */\n    LightingCompiler.prototype.pCompileDependencies = function () {\n        _super.prototype.pCompileDependencies.call(this);\n        //compile the lighting code\n        if (this._shaderLightingObject.usesShadows)\n            this.pCompileShadowCode();\n        if (this._shaderLightingObject.usesLights) {\n            this.initLightRegisters();\n            this.compileLightCode();\n        }\n        if (this._shaderLightingObject.usesProbes)\n            this.compileLightProbeCode();\n        this._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n    };\n    /**\n     * Provides the code to provide shadow mapping.\n     */\n    LightingCompiler.prototype.pCompileShadowCode = function () {\n        if (this._shaderLightingObject.normalDependencies > 0) {\n            this._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n        }\n        else {\n            this._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n        }\n    };\n    /**\n     * Initializes constant registers to contain light data.\n     */\n    LightingCompiler.prototype.initLightRegisters = function () {\n        // init these first so we're sure they're in sequence\n        var i, len;\n        if (this._dirLightVertexConstants) {\n            len = this._dirLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index * 4;\n            }\n        }\n        if (this._pointLightVertexConstants) {\n            len = this._pointLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index * 4;\n            }\n        }\n        len = this._dirLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index * 4;\n        }\n        len = this._pointLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index * 4;\n        }\n    };\n    /**\n     * Compiles the shading code for directional and point lights.\n     */\n    LightingCompiler.prototype.compileLightCode = function () {\n        var diffuseColorReg;\n        var specularColorReg;\n        var lightPosReg;\n        var lightDirReg;\n        var vertexRegIndex = 0;\n        var fragmentRegIndex = 0;\n        var addSpec = this._shaderLightingObject.usesLightsForSpecular;\n        var addDiff = this._shaderLightingObject.usesLightsForDiffuse;\n        //compile the shading code for directional lights.\n        for (var i = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n                var lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n                lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            else {\n                lightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            }\n            diffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (this._shaderLightingObject.usesTangentSpace)\n                this._pRegisterCache.removeVertexTempUsage(lightDirReg);\n        }\n        vertexRegIndex = 0;\n        fragmentRegIndex = 0;\n        //compile the shading code for point lights\n        for (var i = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n                lightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n            else\n                lightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            diffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n            var lightVarying;\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                    \"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n            }\n            else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            }\n            else {\n                lightVarying = lightDirReg;\n                this._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n            }\n            if (this._shaderLightingObject.usesLightFallOff) {\n                // calculate attenuation\n                this._pFragmentCode +=\n                    \"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" +\n                        \"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" +\n                        \"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n            }\n            else {\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index * 4;\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            this._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n        }\n    };\n    /**\n     * Compiles shading code for light probes.\n     */\n    LightingCompiler.prototype.compileLightProbeCode = function () {\n        var weightReg;\n        var weightComponents = [\".x\", \".y\", \".z\", \".w\"];\n        var weightRegisters = new Array();\n        var i;\n        var texReg;\n        var addSpec = this._shaderLightingObject.usesProbesForSpecular;\n        var addDiff = this._shaderLightingObject.usesProbesForDiffuse;\n        if (addDiff)\n            this._shaderLightingObject.lightProbeDiffuseIndices = new Array();\n        if (addSpec)\n            this._shaderLightingObject.lightProbeSpecularIndices = new Array();\n        for (i = 0; i < this._pNumProbeRegisters; ++i) {\n            weightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (i == 0)\n                this._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index * 4;\n        }\n        for (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n            weightReg = weightRegisters[Math.floor(i / 4)].toString() + weightComponents[i % 4];\n            if (addDiff) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n            if (addSpec) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n        }\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    LightingCompiler.prototype.pInitRegisterIndices = function () {\n        _super.prototype.pInitRegisterIndices.call(this);\n        this._shaderLightingObject.lightVertexConstantIndex = -1;\n        this._shaderLightingObject.lightFragmentConstantIndex = -1;\n        this._shaderLightingObject.probeWeightsIndex = -1;\n        this._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes / 4);\n        //init light data\n        if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n            this._pointLightVertexConstants = new Array(this._shaderLightingObject.numPointLights);\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 2);\n        }\n        else {\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 3);\n        }\n        if (this._shaderLightingObject.usesTangentSpace) {\n            this._dirLightVertexConstants = new Array(this._shaderLightingObject.numDirectionalLights);\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 2);\n        }\n        else {\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 3);\n        }\n    };\n    return LightingCompiler;\n}(CompilerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingCompiler;\n\n},{\"../../shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\"}],\"awayjs-renderergl/lib/shaders\":[function(require,module,exports){\n\"use strict\";\nvar CompilerBase_1 = require(\"./shaders/compilers/CompilerBase\");\nexports.CompilerBase = CompilerBase_1.default;\nvar LightingCompiler_1 = require(\"./shaders/compilers/LightingCompiler\");\nexports.LightingCompiler = LightingCompiler_1.default;\nvar LightingShader_1 = require(\"./shaders/LightingShader\");\nexports.LightingShader = LightingShader_1.default;\nvar RegisterPool_1 = require(\"./shaders/RegisterPool\");\nexports.RegisterPool = RegisterPool_1.default;\nvar ShaderBase_1 = require(\"./shaders/ShaderBase\");\nexports.ShaderBase = ShaderBase_1.default;\nvar ShaderRegisterCache_1 = require(\"./shaders/ShaderRegisterCache\");\nexports.ShaderRegisterCache = ShaderRegisterCache_1.default;\nvar ShaderRegisterData_1 = require(\"./shaders/ShaderRegisterData\");\nexports.ShaderRegisterData = ShaderRegisterData_1.default;\nvar ShaderRegisterElement_1 = require(\"./shaders/ShaderRegisterElement\");\nexports.ShaderRegisterElement = ShaderRegisterElement_1.default;\n\n},{\"./shaders/LightingShader\":\"awayjs-renderergl/lib/shaders/LightingShader\",\"./shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"./shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"./shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"./shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\",\"./shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"./shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"./shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\"}],\"awayjs-renderergl/lib/sort/IEntitySorter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableMergeSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nvar RenderableMergeSort = (function () {\n    function RenderableMergeSort() {\n    }\n    RenderableMergeSort.prototype.sortBlendedRenderables = function (head) {\n        var headB;\n        var fast;\n        var slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortBlendedRenderables(head);\n        headB = this.sortBlendedRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB) {\n            if (head.zIndex < headB.zIndex) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result)\n                result = l;\n            else\n                curr.next = l;\n            curr = l;\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    RenderableMergeSort.prototype.sortOpaqueRenderables = function (head) {\n        var headB;\n        var fast, slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortOpaqueRenderables(head);\n        headB = this.sortOpaqueRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        var cmp = 0;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB && head != null && headB != null) {\n            // first sort per render order id (reduces program3D switches),\n            // then on render object id (reduces setting props),\n            // then on zIndex (reduces overdraw)\n            var aid = head.renderOrderId;\n            var bid = headB.renderOrderId;\n            if (aid == bid) {\n                var ma = head.surfaceID;\n                var mb = headB.surfaceID;\n                if (ma == mb) {\n                    if (head.zIndex < headB.zIndex)\n                        cmp = 1;\n                    else\n                        cmp = -1;\n                }\n                else if (ma > mb) {\n                    cmp = 1;\n                }\n                else {\n                    cmp = -1;\n                }\n            }\n            else if (aid > bid) {\n                cmp = 1;\n            }\n            else {\n                cmp = -1;\n            }\n            if (cmp < 0) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result) {\n                result = l;\n                curr = l;\n            }\n            else {\n                curr.next = l;\n                curr = l;\n            }\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    return RenderableMergeSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableMergeSort;\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableNullSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.NullSort\n */\nvar RenderableNullSort = (function () {\n    function RenderableNullSort() {\n    }\n    RenderableNullSort.prototype.sortBlendedRenderables = function (head) {\n        return head;\n    };\n    RenderableNullSort.prototype.sortOpaqueRenderables = function (head) {\n        return head;\n    };\n    return RenderableNullSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableNullSort;\n\n},{}],\"awayjs-renderergl/lib/sort\":[function(require,module,exports){\n\"use strict\";\nvar RenderableMergeSort_1 = require(\"./sort/RenderableMergeSort\");\nexports.RenderableMergeSort = RenderableMergeSort_1.default;\nvar RenderableNullSort_1 = require(\"./sort/RenderableNullSort\");\nexports.RenderableNullSort = RenderableNullSort_1.default;\n\n},{\"./sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"./sort/RenderableNullSort\":\"awayjs-renderergl/lib/sort/RenderableNullSort\"}],\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar BasicMaterialPass_1 = require(\"../surfaces/passes/BasicMaterialPass\");\nvar GL_SurfaceBase_1 = require(\"../surfaces/GL_SurfaceBase\");\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_BasicMaterialSurface = (function (_super) {\n    __extends(GL_BasicMaterialSurface, _super);\n    function GL_BasicMaterialSurface(material, elementsClass, renderPool) {\n        _super.call(this, material, elementsClass, renderPool);\n        this._material = material;\n        this._pAddPass(this._pass = new BasicMaterialPass_1.default(this, material, elementsClass, this._stage));\n    }\n    GL_BasicMaterialSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._material = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_BasicMaterialSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._material.blendMode != BlendMode_1.default.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n        this._pass.preserveAlpha = this._material.preserveAlpha; //this._pRequiresBlending;\n        this._pass.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._material.blendMode);\n        //this._pass.forceSeparateMVP = false;\n    };\n    return GL_BasicMaterialSurface;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_BasicMaterialSurface;\n\n},{\"../surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"../surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"awayjs-core/lib/image/BlendMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_DepthSurface = (function (_super) {\n    __extends(GL_DepthSurface, _super);\n    /**\n     *\n     * @param pool\n     * @param surface\n     * @param elementsClass\n     * @param stage\n     */\n    function GL_DepthSurface(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    GL_DepthSurface.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    GL_DepthSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n    };\n    GL_DepthSurface.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index] = 1.0;\n        data[index + 1] = 255.0;\n        data[index + 2] = 65025.0;\n        data[index + 3] = 16581375.0;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        code += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        //codeF += \"mov ft1.w, fc1.w\t\\n\" +\n        //    \"mov ft0.w, fc0.x\t\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        registerCache.removeFragmentTempUsage(temp1);\n        registerCache.removeFragmentTempUsage(temp2);\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            this._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return GL_DepthSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_DepthSurface;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nvar DistanceRender = (function (_super) {\n    __extends(DistanceRender, _super);\n    /**\n     * Creates a new DistanceRender object.\n     *\n     * @param material The material to which this pass belongs.\n     */\n    function DistanceRender(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    DistanceRender.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    /**\n     * Initializes the unchanging constant data for this material.\n     */\n    DistanceRender.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    DistanceRender.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        shader.viewDirDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n        if (shader.viewDirDependencies > 0)\n            shader.globalPosDependencies++;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code;\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        // squared distance to view\n        code = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        var f = camera.projection.far;\n        f = 1 / (2 * f * f);\n        // sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n        var index = this._fragmentConstantsIndex;\n        var data = this._shader.fragmentConstantData;\n        data[index] = 1.0 * f;\n        data[index + 1] = 255.0 * f;\n        data[index + 2] = 65025.0 * f;\n        data[index + 3] = 16581375.0 * f;\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            data[index + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return DistanceRender;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRender;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_SkyboxSurface = (function (_super) {\n    __extends(GL_SkyboxSurface, _super);\n    function GL_SkyboxSurface(skybox, elementsClass, renderPool) {\n        _super.call(this, skybox, elementsClass, renderPool);\n        this._skybox = skybox;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._texture = this._shader.getAbstraction(this._skybox.texture);\n        this._pAddPass(this);\n    }\n    GL_SkyboxSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._skybox.texture));\n        this._texture = null;\n        this._skybox = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._surface.blendMode != BlendMode_1.default.NORMAL);\n        this.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._surface.blendMode);\n    };\n    GL_SkyboxSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.usesPositionFragment = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n    };\n    GL_SkyboxSurface.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        this._texture._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        this._stage.context.setDepthTest(false, ContextGLCompareMode_1.default.LESS);\n        this._texture.activate(this);\n    };\n    return GL_SkyboxSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxSurface;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar MaterialBase_1 = require(\"awayjs-display/lib/materials/MaterialBase\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar PassEvent_1 = require(\"../events/PassEvent\");\n/**\n *\n * @class away.pool.Passes\n */\nvar GL_SurfaceBase = (function (_super) {\n    __extends(GL_SurfaceBase, _super);\n    function GL_SurfaceBase(surface, elementsClass, renderPool) {\n        var _this = this;\n        _super.call(this, surface, renderPool);\n        this.usages = 0;\n        this._forceSeparateMVP = false;\n        this._invalidAnimation = true;\n        this._invalidRender = true;\n        this._invalidImages = true;\n        this._passes = new Array();\n        this._imageIndices = new Object();\n        this._pRequiresBlending = false;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onInvalidateAnimationDelegate = function (event) { return _this.onInvalidateAnimation(event); };\n        this._onInvalidatePassesDelegate = function (event) { return _this.onInvalidatePasses(event); };\n        this.surfaceID = surface.id;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = renderPool.stage;\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n        this._onPassInvalidateDelegate = function (event) { return _this.onPassInvalidate(event); };\n    }\n    Object.defineProperty(GL_SurfaceBase.prototype, \"requiresBlending\", {\n        /**\n         * Indicates whether or not the renderable requires alpha blending during rendering.\n         */\n        get: function () {\n            return this._pRequiresBlending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"renderOrderId\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._renderOrderId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"passes\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._passes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"surface\", {\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"numImages\", {\n        get: function () {\n            if (this._invalidImages)\n                this._updateImages();\n            return this._numImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_SurfaceBase.prototype._iIncludeDependencies = function (shader) {\n        this._elementsClass._iIncludeDependencies(shader);\n        shader.alphaThreshold = this._surface.alphaThreshold;\n        shader.useImageRect = this._surface.imageRect;\n        shader.usesCurves = this._surface.curves;\n        if (this._surface instanceof MaterialBase_1.default) {\n            var material = this._surface;\n            shader.useAlphaPremultiplied = material.alphaPremultiplied;\n            shader.useBothSides = material.bothSides;\n            shader.usesUVTransform = material.animateUVs;\n            shader.usesColorTransform = material.useColorTransform;\n        }\n    };\n    GL_SurfaceBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (this._invalidImages)\n            this._updateImages();\n        return this._imageIndices[texture.id][index];\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n            this._passes[i].dispose();\n        }\n        this._passes = null;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        this._invalidRender = true;\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidatePasses = function (event) {\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++)\n            this._passes[i].invalidate();\n        this._invalidAnimation = true;\n        this._invalidImages = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidateAnimation = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     * @param surface\n     */\n    GL_SurfaceBase.prototype._updateAnimation = function () {\n        if (this._invalidRender)\n            this._pUpdateRender();\n        this._invalidAnimation = false;\n        var enabledGPUAnimation = this._getEnabledGPUAnimation();\n        var renderOrderId = 0;\n        var mult = 1;\n        var shader;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            shader = this._passes[i].shader;\n            if (shader.usesAnimation != enabledGPUAnimation) {\n                shader.usesAnimation = enabledGPUAnimation;\n                shader.invalidateProgram();\n            }\n            renderOrderId += shader.programData.id * mult;\n            mult *= 1000;\n        }\n        this._renderOrderId = renderOrderId;\n    };\n    GL_SurfaceBase.prototype._updateImages = function () {\n        this._invalidImages = false;\n        var numTextures = this._surface.getNumTextures();\n        var texture;\n        var numImages;\n        var images;\n        var image;\n        var sampler;\n        var index = 0;\n        for (var i = 0; i < numTextures; i++) {\n            texture = this._surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            images = this._imageIndices[texture.id] = new Array();\n            for (var j = 0; j < numImages; j++) {\n                image = texture.getImageAt(j) || (this._surface.style ? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultImage2D();\n                this.images[index] = this._stage.getAbstraction(image);\n                sampler = texture.getSamplerAt(j) || (this._surface.style ? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultSampler();\n                this.samplers[index] = this._stage.getAbstraction(sampler);\n                images[j] = index++;\n            }\n        }\n        this._numImages = index;\n    };\n    /**\n     * Performs any processing that needs to occur before any of its passes are used.\n     *\n     * @private\n     */\n    GL_SurfaceBase.prototype._pUpdateRender = function () {\n        this._invalidRender = false;\n        //overrride to update shader object properties\n    };\n    /**\n     * Removes a pass from the surface.\n     * @param pass The pass to be removed.\n     */\n    GL_SurfaceBase.prototype._pRemovePass = function (pass) {\n        pass.removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.splice(this._passes.indexOf(pass), 1);\n    };\n    /**\n     * Removes all passes from the surface\n     */\n    GL_SurfaceBase.prototype._pClearPasses = function () {\n        var len = this._passes.length;\n        for (var i = 0; i < len; ++i)\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.length = 0;\n    };\n    /**\n     * Adds a pass to the surface\n     * @param pass\n     */\n    GL_SurfaceBase.prototype._pAddPass = function (pass) {\n        this._passes.push(pass);\n        pass.addEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n    };\n    /**\n     * Listener for when a pass's shader code changes. It recalculates the render order id.\n     */\n    GL_SurfaceBase.prototype.onPassInvalidate = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     * test if animation will be able to run on gpu BEFORE compiling materials\n     * test if the shader objects supports animating the animation set in the vertex shader\n     * if any object using this material fails to support accelerated animations for any of the shader objects,\n     * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n     */\n    GL_SurfaceBase.prototype._getEnabledGPUAnimation = function () {\n        if (this._surface.animationSet) {\n            this._surface.animationSet.resetGPUCompatibility();\n            var owners = this._surface.iOwners;\n            var numOwners = owners.length;\n            var len = this._passes.length;\n            for (var i = 0; i < len; i++)\n                for (var j = 0; j < numOwners; j++)\n                    if (owners[j].animator)\n                        owners[j].animator.testGPUCompatibility(this._passes[i].shader);\n            return !this._surface.animationSet.usesCPU;\n        }\n        return false;\n    };\n    return GL_SurfaceBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfaceBase;\n\n},{\"../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/SurfaceEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined,\"awayjs-display/lib/materials/MaterialBase\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PassEvent_1 = require(\"../events/PassEvent\");\nvar GL_SurfaceBase_1 = require(\"../surfaces/GL_SurfaceBase\");\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar GL_SurfacePassBase = (function (_super) {\n    __extends(GL_SurfacePassBase, _super);\n    function GL_SurfacePassBase() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    GL_SurfacePassBase.prototype.invalidate = function () {\n        this._shader.invalidateShader();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    GL_SurfacePassBase.prototype.dispose = function () {\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    GL_SurfacePassBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        this._shader._iRender(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    GL_SurfacePassBase.prototype._iInitConstantData = function (shader) {\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return GL_SurfacePassBase;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfacePassBase;\n\n},{\"../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"../surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\"}],\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/SurfacePool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar SurfacePool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function SurfacePool(elementsClass, stage, surfaceClassGL) {\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        this._abstractionPool = new Object();\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n        this._surfaceClassGL = surfaceClassGL;\n    }\n    Object.defineProperty(SurfacePool.prototype, \"stage\", {\n        get: function () {\n            return this._stage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     * @returns IElements\n     */\n    SurfacePool.prototype.getAbstraction = function (surface) {\n        return (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     */\n    SurfacePool.prototype.clearAbstraction = function (surface) {\n        delete this._abstractionPool[surface.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    SurfacePool.registerAbstraction = function (surfaceClassGL, assetClass) {\n        SurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n    };\n    SurfacePool._abstractionClassPool = new Object();\n    return SurfacePool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SurfacePool;\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ShaderBase_1 = require(\"../../shaders/ShaderBase\");\nvar PassBase_1 = require(\"../../surfaces/passes/PassBase\");\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterialPass = (function (_super) {\n    __extends(BasicMaterialPass, _super);\n    function BasicMaterialPass(render, surface, elementsClass, stage) {\n        _super.call(this, render, surface, elementsClass, stage);\n        this._diffuseR = 1;\n        this._diffuseG = 1;\n        this._diffuseB = 1;\n        this._diffuseA = 1;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this.invalidate();\n    }\n    BasicMaterialPass.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        if (this._textureVO != null)\n            shader.uvDependencies++;\n    };\n    BasicMaterialPass.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    BasicMaterialPass.prototype.dispose = function () {\n        if (this._textureVO) {\n            this._textureVO.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surface.getTextureAt(0)));\n            this._textureVO = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iGetFragmentCode = function (shader, regCache, sharedReg) {\n        var code = \"\";\n        var alphaReg;\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n        var targetReg = sharedReg.shadedTarget;\n        if (this._textureVO != null) {\n            code += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n            if (shader.alphaThreshold > 0) {\n                var cutOffReg = regCache.getFreeFragmentConstant();\n                this._fragmentConstantsIndex = cutOffReg.index * 4;\n                code += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n            }\n        }\n        else if (shader.colorBufferIndex != -1) {\n            code += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n        }\n        else {\n            var diffuseInputReg = regCache.getFreeFragmentConstant();\n            this._fragmentConstantsIndex = diffuseInputReg.index * 4;\n            code += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n        }\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n        return code;\n    };\n    BasicMaterialPass.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        if (this._textureVO != null)\n            this._textureVO._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO != null) {\n            this._textureVO.activate(this._render);\n            if (this._shader.alphaThreshold > 0)\n                this._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n        }\n        else if (this._shader.colorBufferIndex == -1) {\n            var index = this._fragmentConstantsIndex;\n            var data = this._shader.fragmentConstantData;\n            data[index] = this._diffuseR;\n            data[index + 1] = this._diffuseG;\n            data[index + 2] = this._diffuseB;\n            data[index + 3] = this._diffuseA;\n        }\n    };\n    return BasicMaterialPass;\n}(PassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicMaterialPass;\n\n},{\"../../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../../surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/IPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/PassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar PassEvent_1 = require(\"../../events/PassEvent\");\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar PassBase = (function (_super) {\n    __extends(PassBase, _super);\n    /**\n     * Creates a new PassBase object.\n     */\n    function PassBase(render, surface, elementsClass, stage) {\n        _super.call(this);\n        this._preserveAlpha = true;\n        this._forceSeparateMVP = false;\n        this._render = render;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n    }\n    Object.defineProperty(PassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"forceSeparateMVP\", {\n        /**\n         * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n         * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n         * projection code.\n         */\n        get: function () {\n            return this._forceSeparateMVP;\n        },\n        set: function (value) {\n            if (this._forceSeparateMVP == value)\n                return;\n            this._forceSeparateMVP = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PassBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._render.getImageIndex(texture, index);\n    };\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    PassBase.prototype.invalidate = function () {\n        this._shader.invalidateShader();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n     */\n    PassBase.prototype.dispose = function () {\n        this._render = null;\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    PassBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        this._shader._iRender(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    PassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    PassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    PassBase.prototype._iIncludeDependencies = function (shader) {\n        this._render._iIncludeDependencies(shader);\n        if (this._forceSeparateMVP)\n            shader.globalPosDependencies++;\n    };\n    PassBase.prototype._iInitConstantData = function (shader) {\n    };\n    PassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return PassBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassBase;\n\n},{\"../../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-renderergl/lib/surfaces\":[function(require,module,exports){\n\"use strict\";\nvar BasicMaterialPass_1 = require(\"./surfaces/passes/BasicMaterialPass\");\nexports.BasicMaterialPass = BasicMaterialPass_1.default;\nvar PassBase_1 = require(\"./surfaces/passes/PassBase\");\nexports.PassBase = PassBase_1.default;\nvar GL_BasicMaterialSurface_1 = require(\"./surfaces/GL_BasicMaterialSurface\");\nexports.GL_BasicMaterialSurface = GL_BasicMaterialSurface_1.default;\nvar GL_DepthSurface_1 = require(\"./surfaces/GL_DepthSurface\");\nexports.GL_DepthSurface = GL_DepthSurface_1.default;\nvar GL_DistanceSurface_1 = require(\"./surfaces/GL_DistanceSurface\");\nexports.GL_DistanceSurface = GL_DistanceSurface_1.default;\nvar GL_SkyboxSurface_1 = require(\"./surfaces/GL_SkyboxSurface\");\nexports.GL_SkyboxSurface = GL_SkyboxSurface_1.default;\nvar GL_SurfaceBase_1 = require(\"./surfaces/GL_SurfaceBase\");\nexports.GL_SurfaceBase = GL_SurfaceBase_1.default;\nvar GL_SurfacePassBase_1 = require(\"./surfaces/GL_SurfacePassBase\");\nexports.GL_SurfacePassBase = GL_SurfacePassBase_1.default;\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\nexports.SurfacePool = SurfacePool_1.default;\n\n},{\"./surfaces/GL_BasicMaterialSurface\":\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\",\"./surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\",\"./surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\",\"./surfaces/GL_SkyboxSurface\":\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\",\"./surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"./surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"./surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"./surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\"}],\"awayjs-renderergl/lib/textures/GL_Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MappingMode_1 = require(\"awayjs-display/lib/textures/MappingMode\");\nvar GL_TextureBase_1 = require(\"../textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nvar GL_Single2DTexture = (function (_super) {\n    __extends(GL_Single2DTexture, _super);\n    function GL_Single2DTexture(single2DTexture, shader) {\n        _super.call(this, single2DTexture, shader);\n        this._single2DTexture = single2DTexture;\n    }\n    GL_Single2DTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._single2DTexture = null;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The uv coordinate vector with which to sample the texture map.\n     * @returns {string}\n     * @private\n     */\n    GL_Single2DTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var code = \"\";\n        var wrap = \"wrap\";\n        var format = \"\"; //this.getFormatString(this._single2DTexture.image2D);\n        var filter = \"linear,miplinear\";\n        var temp;\n        //modify depending on mapping mode\n        if (this._single2DTexture.mappingMode == MappingMode_1.default.RADIAL_GRADIENT) {\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n            code += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n            code += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n            inputReg = temp;\n        }\n        //handles texture atlasing\n        if (this._shader.useImageRect) {\n            var samplerReg = regCache.getFreeFragmentConstant();\n            this._samplerIndex = samplerReg.index * 4;\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n            code += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n            inputReg = temp;\n        }\n        this._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        code += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n        return code;\n    };\n    GL_Single2DTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        sampler.activate(this._textureIndex);\n        var image = render.images[this._imageIndex];\n        image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    GL_Single2DTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        var image = renderable.images[this._imageIndex];\n        if (image)\n            image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect && sampler) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    return GL_Single2DTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Single2DTexture;\n\n},{\"../textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\",\"awayjs-display/lib/textures/MappingMode\":undefined}],\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TextureBase_1 = require(\"../textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.TextureDataBase\n */\nvar GL_SingleCubeTexture = (function (_super) {\n    __extends(GL_SingleCubeTexture, _super);\n    function GL_SingleCubeTexture(singleCubeTexture, shader) {\n        _super.call(this, singleCubeTexture, shader);\n        this._singleCubeTexture = singleCubeTexture;\n    }\n    GL_SingleCubeTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._singleCubeTexture = null;\n    };\n    GL_SingleCubeTexture.prototype._iIncludeDependencies = function (includeInput) {\n        if (includeInput === void 0) { includeInput = true; }\n        if (includeInput)\n            this._shader.usesPositionFragment = true;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The direction vector with which to sample the cube map.\n     * @returns {string}\n     * @private\n     */\n    GL_SingleCubeTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var format = \"\"; //this.getFormatString(this._singleCubeTexture.imageCube);\n        var filter = \"linear,miplinear\";\n        this._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        return \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n    };\n    GL_SingleCubeTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (render.images[this._imageIndex])\n            render.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    GL_SingleCubeTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (renderable.images[this._imageIndex] && sampler)\n            renderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    return GL_SingleCubeTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SingleCubeTexture;\n\n},{\"../textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/textures/GL_TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar ContextGLTextureFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nvar GL_TextureBase = (function (_super) {\n    __extends(GL_TextureBase, _super);\n    function GL_TextureBase(texture, shader) {\n        _super.call(this, texture, shader);\n        this._texture = texture;\n        this._shader = shader;\n        this._stage = shader._stage;\n    }\n    /**\n     *\n     */\n    GL_TextureBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture = null;\n        this._shader = null;\n        this._stage = null;\n    };\n    GL_TextureBase.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        if (inputReg === void 0) { inputReg = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    GL_TextureBase.prototype._setRenderState = function (renderable) {\n        //overidden for state logic\n    };\n    GL_TextureBase.prototype.activate = function (render) {\n        //overridden for activation logic\n    };\n    GL_TextureBase.prototype.getTextureReg = function (imageIndex, regCache, sharedReg) {\n        var index = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n        if (index == -1) {\n            var textureReg = regCache.getFreeTextureReg();\n            sharedReg.textures.push(textureReg);\n            this._shader.imageIndices.push(imageIndex);\n            return textureReg;\n        }\n        return sharedReg.textures[index];\n    };\n    GL_TextureBase.prototype.getFormatString = function (image) {\n        switch (image.format) {\n            case ContextGLTextureFormat_1.default.COMPRESSED:\n                return \"dxt1,\";\n            case ContextGLTextureFormat_1.default.COMPRESSED_ALPHA:\n                return \"dxt5,\";\n            default:\n                return \"\";\n        }\n    };\n    return GL_TextureBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TextureBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-stagegl/lib/base/ContextGLTextureFormat\":undefined}],\"awayjs-renderergl/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar GL_Single2DTexture_1 = require(\"./textures/GL_Single2DTexture\");\nexports.GL_Single2DTexture = GL_Single2DTexture_1.default;\nvar GL_SingleCubeTexture_1 = require(\"./textures/GL_SingleCubeTexture\");\nexports.GL_SingleCubeTexture = GL_SingleCubeTexture_1.default;\nvar GL_TextureBase_1 = require(\"./textures/GL_TextureBase\");\nexports.GL_TextureBase = GL_TextureBase_1.default;\n\n},{\"./textures/GL_Single2DTexture\":\"awayjs-renderergl/lib/textures/GL_Single2DTexture\",\"./textures/GL_SingleCubeTexture\":\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\",\"./textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/tools/commands/Merge\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nvar Merge = (function () {\n    /**\n     * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n     * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n     * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n     * If true, only receiver geometry and resulting sprite are kept in  memory.\n     * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n     */\n    function Merge(keepMaterial, disposeSources, objectSpace) {\n        if (keepMaterial === void 0) { keepMaterial = false; }\n        if (disposeSources === void 0) { disposeSources = false; }\n        if (objectSpace === void 0) { objectSpace = false; }\n        this._keepMaterial = keepMaterial;\n        this._disposeSources = disposeSources;\n        this._objectSpace = objectSpace;\n    }\n    Object.defineProperty(Merge.prototype, \"disposeSources\", {\n        get: function () {\n            return this._disposeSources;\n        },\n        /**\n         * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._disposeSources = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"keepMaterial\", {\n        get: function () {\n            return this._keepMaterial;\n        },\n        /**\n         * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._keepMaterial = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"objectSpace\", {\n        get: function () {\n            return this._objectSpace;\n        },\n        /**\n         * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n         */\n        set: function (b) {\n            this._objectSpace = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n     *\n     * @param    receiver           The Sprite to receive the merged contents of the container.\n     * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n     *\n     * @return The merged Sprite instance.\n     */\n    Merge.prototype.applyToContainer = function (receiver, objectContainer) {\n        this.reset();\n        //collect container sprites\n        this.parseContainer(receiver, objectContainer);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of the sprites.\n     * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n     */\n    Merge.prototype.applyToSpritees = function (receiver, sprites) {\n        this.reset();\n        if (!sprites.length)\n            return;\n        //collect sprites in vector\n        for (var i = 0; i < sprites.length; i++)\n            if (sprites[i] != receiver)\n                this.collect(sprites[i], this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of both sprites.\n     * @param    sprite        The Sprite to be merged with the receiver sprite\n     */\n    Merge.prototype.apply = function (receiver, sprite) {\n        this.reset();\n        //collect sprite\n        this.collect(sprite, this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    Merge.prototype.reset = function () {\n        this._toDispose = new Array();\n        this._graphicVOs = new Array();\n    };\n    Merge.prototype.merge = function (destSprite, dispose) {\n        var i;\n        //var oldGraphics:Graphics;\n        var destGraphics;\n        var useSubMaterials;\n        //oldGraphics = destSprite.graphics.clone();\n        destGraphics = destSprite.graphics;\n        // Only apply materials directly to sub-sprites if necessary,\n        // i.e. if there is more than one material available.\n        useSubMaterials = (this._graphicVOs.length > 1);\n        for (i = 0; i < this._graphicVOs.length; i++) {\n            var elements = new TriangleElements_1.default(new AttributesBuffer_1.default());\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            var data = this._graphicVOs[i];\n            elements.setIndices(data.indices);\n            elements.setPositions(data.vertices);\n            elements.setNormals(data.normals);\n            elements.setTangents(data.tangents);\n            elements.setUVs(data.uvs);\n            destGraphics.addGraphic(elements);\n            if (this._keepMaterial && useSubMaterials)\n                destSprite.graphics[i].material = data.material;\n        }\n        if (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n            destSprite.material = this._graphicVOs[0].material;\n        if (dispose) {\n            var len = this._toDispose.length;\n            for (var i; i < len; i++)\n                this._toDispose[i].dispose();\n            ;\n        }\n        this._toDispose = null;\n    };\n    Merge.prototype.collect = function (sprite, dispose) {\n        var subIdx;\n        var calc;\n        for (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n            var i;\n            var len;\n            var iIdx /*uint*/, vIdx /*uint*/, nIdx /*uint*/, tIdx /*uint*/, uIdx;\n            var indexOffset;\n            var elements;\n            var vo;\n            var vertices;\n            var normals;\n            var tangents;\n            var ind, pd, nd, td, ud;\n            elements = sprite.graphics.getGraphicAt(subIdx).elements;\n            pd = elements.positions.get(elements.numVertices);\n            nd = elements.normals.get(elements.numVertices);\n            td = elements.tangents.get(elements.numVertices);\n            ud = elements.uvs.get(elements.numVertices);\n            // Get (or create) a VO for this material\n            vo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n            // Vertices and normals are copied to temporary vectors, to be transformed\n            // before concatenated onto those of the data. This is unnecessary if no\n            // transformation will be performed, i.e. for object space merging.\n            vertices = (this._objectSpace) ? vo.vertices : new Array();\n            normals = (this._objectSpace) ? vo.normals : new Array();\n            tangents = (this._objectSpace) ? vo.tangents : new Array();\n            // Copy over vertex attributes\n            vIdx = vertices.length;\n            nIdx = normals.length;\n            tIdx = tangents.length;\n            uIdx = vo.uvs.length;\n            len = elements.numVertices;\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                // Position\n                vertices[vIdx++] = pd[calc];\n                vertices[vIdx++] = pd[calc + 1];\n                vertices[vIdx++] = pd[calc + 2];\n                // Normal\n                normals[nIdx++] = nd[calc];\n                normals[nIdx++] = nd[calc + 1];\n                normals[nIdx++] = nd[calc + 2];\n                // Tangent\n                tangents[tIdx++] = td[calc];\n                tangents[tIdx++] = td[calc + 1];\n                tangents[tIdx++] = td[calc + 2];\n                // UV\n                vo.uvs[uIdx++] = ud[i * 2];\n                vo.uvs[uIdx++] = ud[i * 2 + 1];\n            }\n            // Copy over triangle indices\n            indexOffset = (!this._objectSpace) ? vo.vertices.length / 3 : 0;\n            iIdx = vo.indices.length;\n            len = elements.numElements;\n            ind = elements.indices.get(len);\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                vo.indices[iIdx++] = ind[calc] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n            }\n            if (!this._objectSpace) {\n                sprite.sceneTransform.transformVectors(vertices, vertices);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n                // Copy vertex data from temporary (transformed) vectors\n                vIdx = vo.vertices.length;\n                nIdx = vo.normals.length;\n                tIdx = vo.tangents.length;\n                len = vertices.length;\n                for (i = 0; i < len; i++) {\n                    vo.vertices[vIdx++] = vertices[i];\n                    vo.normals[nIdx++] = normals[i];\n                    vo.tangents[tIdx++] = tangents[i];\n                }\n            }\n        }\n        if (dispose)\n            this._toDispose.push(sprite);\n    };\n    Merge.prototype.getGraphicData = function (material) {\n        var data;\n        if (this._keepMaterial) {\n            var i;\n            var len;\n            len = this._graphicVOs.length;\n            for (i = 0; i < len; i++) {\n                if (this._graphicVOs[i].material == material) {\n                    data = this._graphicVOs[i];\n                    break;\n                }\n            }\n        }\n        else if (this._graphicVOs.length) {\n            // If materials are not to be kept, all data can be\n            // put into a single VO, so return that one.\n            data = this._graphicVOs[0];\n        }\n        // No data (for this material) found, create new.\n        if (!data) {\n            data = new GraphicVO();\n            data.vertices = new Array();\n            data.normals = new Array();\n            data.tangents = new Array();\n            data.uvs = new Array();\n            data.indices = new Array();\n            data.material = material;\n            this._graphicVOs.push(data);\n        }\n        return data;\n    };\n    Merge.prototype.parseContainer = function (receiver, object) {\n        var child;\n        var i;\n        if (object instanceof Sprite_1.default && object != receiver)\n            this.collect(object, this._disposeSources);\n        for (i = 0; i < object.numChildren; ++i) {\n            child = object.getChildAt(i);\n            this.parseContainer(receiver, child);\n        }\n    };\n    return Merge;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Merge;\nvar GraphicVO = (function () {\n    function GraphicVO() {\n    }\n    return GraphicVO;\n}());\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-display/lib/display/Sprite\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleGraphicsTransform = (function () {\n    function ParticleGraphicsTransform() {\n    }\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"vertexTransform\", {\n        get: function () {\n            return this._defaultVertexTransform;\n        },\n        set: function (value) {\n            this._defaultVertexTransform = value;\n            this._defaultInvVertexTransform = value.clone();\n            this._defaultInvVertexTransform.invert();\n            this._defaultInvVertexTransform.transpose();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"UVTransform\", {\n        get: function () {\n            return this._defaultUVTransform;\n        },\n        set: function (value) {\n            this._defaultUVTransform = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"invVertexTransform\", {\n        get: function () {\n            return this._defaultInvVertexTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ParticleGraphicsTransform;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsTransform;\n\n},{}],\"awayjs-renderergl/lib/tools\":[function(require,module,exports){\n\"use strict\";\nvar Merge_1 = require(\"./tools/commands/Merge\");\nexports.Merge = Merge_1.default;\nvar ParticleGraphicsTransform_1 = require(\"./tools/data/ParticleGraphicsTransform\");\nexports.ParticleGraphicsTransform = ParticleGraphicsTransform_1.default;\n\n},{\"./tools/commands/Merge\":\"awayjs-renderergl/lib/tools/commands/Merge\",\"./tools/data/ParticleGraphicsTransform\":\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\"}],\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleData_1 = require(\"awayjs-display/lib/animators/data/ParticleData\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\n/**\n * ...\n */\nvar ParticleGraphicsHelper = (function () {\n    function ParticleGraphicsHelper() {\n    }\n    ParticleGraphicsHelper.generateGraphics = function (output, graphicsArray, transforms) {\n        if (transforms === void 0) { transforms = null; }\n        var indicesVector = new Array();\n        var positionsVector = new Array();\n        var normalsVector = new Array();\n        var tangentsVector = new Array();\n        var uvsVector = new Array();\n        var vertexCounters = new Array();\n        var particles = new Array();\n        var elementsArray = new Array();\n        var numParticles = graphicsArray.length;\n        var sourceGraphics;\n        var sourceElements;\n        var numGraphics;\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var uvs;\n        var vertexCounter;\n        var elements;\n        var i;\n        var j;\n        var sub2SubMap = new Array();\n        var tempVertex = new Vector3D_1.default;\n        var tempNormal = new Vector3D_1.default;\n        var tempTangents = new Vector3D_1.default;\n        var tempUV = new Point_1.default;\n        for (i = 0; i < numParticles; i++) {\n            sourceGraphics = graphicsArray[i];\n            numGraphics = sourceGraphics.count;\n            for (var srcIndex = 0; srcIndex < numGraphics; srcIndex++) {\n                //create a different particle subgeometry group for each source subgeometry in a particle.\n                if (sub2SubMap.length <= srcIndex) {\n                    sub2SubMap.push(elementsArray.length);\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                sourceElements = sourceGraphics.getGraphicAt(srcIndex).elements;\n                //add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n                if (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n                    //update submap and add new subgeom vectors\n                    sub2SubMap[srcIndex] = elementsArray.length;\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                j = sub2SubMap[srcIndex];\n                //select the correct vector\n                indices = indicesVector[j];\n                positions = positionsVector[j];\n                normals = normalsVector[j];\n                tangents = tangentsVector[j];\n                uvs = uvsVector[j];\n                vertexCounter = vertexCounters[j];\n                elements = elementsArray[j];\n                var particleData = new ParticleData_1.default();\n                particleData.numVertices = sourceElements.numVertices;\n                particleData.startVertexIndex = vertexCounter;\n                particleData.particleIndex = i;\n                particleData.elements = elements;\n                particles.push(particleData);\n                vertexCounters[j] += sourceElements.numVertices;\n                var k;\n                var tempLen;\n                var compact = sourceElements;\n                var product;\n                var sourcePositions;\n                var sourceNormals;\n                var sourceTangents;\n                var sourceUVs;\n                if (compact) {\n                    tempLen = compact.numVertices;\n                    sourcePositions = compact.positions.get(tempLen);\n                    sourceNormals = compact.normals.get(tempLen);\n                    sourceTangents = compact.tangents.get(tempLen);\n                    sourceUVs = compact.uvs.get(tempLen);\n                    if (transforms) {\n                        var particleGraphicsTransform = transforms[i];\n                        var vertexTransform = particleGraphicsTransform.vertexTransform;\n                        var invVertexTransform = particleGraphicsTransform.invVertexTransform;\n                        var UVTransform = particleGraphicsTransform.UVTransform;\n                        for (k = 0; k < tempLen; k++) {\n                            /*\n                             * 0 - 2: vertex position X, Y, Z\n                             * 3 - 5: normal X, Y, Z\n                             * 6 - 8: tangent X, Y, Z\n                             * 9 - 10: U V\n                             * 11 - 12: Secondary U V*/\n                            product = k * 3;\n                            tempVertex.x = sourcePositions[product];\n                            tempVertex.y = sourcePositions[product + 1];\n                            tempVertex.z = sourcePositions[product + 2];\n                            tempNormal.x = sourceNormals[product];\n                            tempNormal.y = sourceNormals[product + 1];\n                            tempNormal.z = sourceNormals[product + 2];\n                            tempTangents.x = sourceTangents[product];\n                            tempTangents.y = sourceTangents[product + 1];\n                            tempTangents.z = sourceTangents[product + 2];\n                            tempUV.x = sourceUVs[k * 2];\n                            tempUV.y = sourceUVs[k * 2 + 1];\n                            if (vertexTransform) {\n                                tempVertex = vertexTransform.transformVector(tempVertex);\n                                tempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n                                tempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n                            }\n                            if (UVTransform)\n                                tempUV = UVTransform.transformPoint(tempUV);\n                            //this is faster than that only push one data\n                            positions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n                            normals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n                            tangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n                            uvs.push(tempUV.x, tempUV.y);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < tempLen; k++) {\n                            product = k * 3;\n                            //this is faster than that only push one data\n                            positions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n                            normals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n                            tangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n                            uvs.push(sourceUVs[k * 2], sourceUVs[k * 2 + 1]);\n                        }\n                    }\n                }\n                else {\n                }\n                tempLen = sourceElements.numElements;\n                var sourceIndices = sourceElements.indices.get(tempLen);\n                for (k = 0; k < tempLen; k++) {\n                    product = k * 3;\n                    indices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n                }\n            }\n        }\n        output.particles = particles;\n        output.numParticles = numParticles;\n        numParticles = elementsArray.length;\n        for (i = 0; i < numParticles; i++) {\n            elements = elementsArray[i];\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(indicesVector[i]);\n            elements.setPositions(positionsVector[i]);\n            elements.setNormals(normalsVector[i]);\n            elements.setTangents(tangentsVector[i]);\n            elements.setUVs(uvsVector[i]);\n            output.addGraphic(elements);\n        }\n    };\n    ParticleGraphicsHelper.MAX_VERTEX = 65535;\n    return ParticleGraphicsHelper;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsHelper;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/data/ParticleData\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\n/**\n *\n */\nvar PerspectiveMatrix3D = (function (_super) {\n    __extends(PerspectiveMatrix3D, _super);\n    function PerspectiveMatrix3D(v) {\n        if (v === void 0) { v = null; }\n        _super.call(this, v);\n    }\n    PerspectiveMatrix3D.prototype.perspectiveFieldOfViewLH = function (fieldOfViewY, aspectRatio, zNear, zFar) {\n        var yScale = 1 / Math.tan(fieldOfViewY / 2);\n        var xScale = yScale / aspectRatio;\n        this.rawData[0] = xScale;\n        this.rawData[1] = 0.0;\n        this.rawData[2] = 0.0;\n        this.rawData[3] = 0.0;\n        this.rawData[4] = 0.0;\n        this.rawData[5] = yScale;\n        this.rawData[6] = 0.0;\n        this.rawData[7] = 0.0;\n        this.rawData[8] = 0.0;\n        this.rawData[9] = 0.0;\n        this.rawData[10] = zFar / (zFar - zNear);\n        this.rawData[11] = 1.0;\n        this.rawData[12] = 0.0;\n        this.rawData[13] = 0.0;\n        this.rawData[14] = (zNear * zFar) / (zNear - zFar);\n        this.rawData[15] = 0.0;\n    };\n    return PerspectiveMatrix3D;\n}(Matrix3D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PerspectiveMatrix3D;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar ParticleGraphicsHelper_1 = require(\"./utils/ParticleGraphicsHelper\");\nexports.ParticleGraphicsHelper = ParticleGraphicsHelper_1.default;\nvar PerspectiveMatrix3D_1 = require(\"./utils/PerspectiveMatrix3D\");\nexports.PerspectiveMatrix3D = PerspectiveMatrix3D_1.default;\n\n},{\"./utils/ParticleGraphicsHelper\":\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\",\"./utils/PerspectiveMatrix3D\":\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\"}]},{},[1])\n\n",
    "import * as animators\t\t\t\tfrom \"./lib/animators\";\nimport * as elements\t\t\t\tfrom \"./lib/elements\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as filters\t\t\t\t\tfrom \"./lib/filters\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as renderables\t\t\t\tfrom \"./lib/renderables\";\nimport * as shaders\t\t\t\t\tfrom \"./lib/shaders\";\nimport * as sort\t\t\t\t\tfrom \"./lib/sort\";\nimport * as surfaces\t\t\t\tfrom \"./lib/surfaces\";\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\nimport * as tools\t\t\t\t\tfrom \"./lib/tools\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\nimport DefaultRenderer\t\t\t\tfrom \"./lib/DefaultRenderer\";\nimport DepthRenderer\t\t\t\tfrom \"./lib/DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./lib/DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./lib/Filter3DRenderer\";\nimport RendererBase\t\t\t\t\tfrom \"./lib/RendererBase\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\n\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox);\n\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements);\n\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(renderables.GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(renderables.GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox);\n\nexport {\n\tanimators,\n\telements,\n\terrors,\n\tevents,\n\tfilters,\n\tmanagers,\n\trenderables,\n\tshaders,\n\tsort,\n\tsurfaces,\n\ttextures,\n\ttools,\n\tutils,\n\tDefaultRenderer,\n\tDepthRenderer,\n\tDistanceRenderer,\n\tFilter3DRenderer,\n\tRendererBase\n}",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLClearMask\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLClearMask\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport DepthRenderer\t\t\t\tfrom \"./DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./Filter3DRenderer\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport GL_SkyboxElements\t\t\tfrom \"./elements/GL_SkyboxElements\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _skybox:Skybox;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis.shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = super.enterNode(node);\n\n\t\tif (enter && node.debugVisible)\n\t\t\tthis.applyEntity(node.bounds.boundsPrimitive);\n\n\t\treturn enter;\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this.shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this.shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this.shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tif (this._skybox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(camera);\n\t\t}\n\n\t\tsuper.pDraw(camera);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t **/\n\tprivate drawSkybox(camera:Camera)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(this._skybox);\n\n\t\trenderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar pass:IPass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._skybox = <Skybox> entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this.shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this.shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport default DefaultRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DepthSurface\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DepthRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DistanceSurface\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DistanceRenderer;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLVertexBufferFormat\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport RTTEvent\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport Filter3DTaskBase\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(0, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport default Filter3DRenderer;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport RendererEvent\t\t\t\tfrom \"awayjs-display/lib/events/RendererEvent\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport StageEvent\t\t\t\t\tfrom \"awayjs-stagegl/lib/events/StageEvent\";\nimport StageManager\t\t\t\t\tfrom \"awayjs-stagegl/lib/managers/StageManager\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport ISurfaceClassGL\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"./elements/ElementsPool\";\nimport IEntitySorter\t\t\t\tfrom \"./sort/IEntitySorter\";\nimport RenderableMergeSort\t\t\tfrom \"./sort/RenderableMergeSort\";\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tprivate _cameraPosition:Vector3D;\n\tpublic _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tprivate _sourceEntity:IEntity;\n\tprivate _zIndex:number;\n\tprivate _renderSceneTransform:Matrix3D;\n\n\t\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic shareContext:boolean;\n\t\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this.shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this.shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._sourceEntity = entity;\n\n\t\t// project onto camera's z-axis\n\t\tthis._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n\n\t\t//save sceneTransform\n\t\tthis._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n\n\t\t//collect renderables\n\t\tentity._acceptTraverser(this);\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\trenderableGL.sourceEntity = this._sourceEntity;\n\t\trenderableGL.zIndex = this._zIndex;\n\t\trenderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = this._renderSceneTransform;\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default RendererBase;",
    "import IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetError\t\t\tfrom \"../errors/AnimationSetError\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport default AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport RequestAnimationFrame\t\tfrom \"awayjs-core/lib/utils/RequestAnimationFrame\";\nimport getTimer\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IAnimationSet\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport IAnimationState\t\t\t\tfrom \"../animators/states/IAnimationState\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport AnimatorEvent\t\t\t\tfrom \"../events/AnimatorEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../animators/data/ParticleAnimationData\";\nimport ParticleProperties\t\t\t\tfrom \"../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../animators/nodes/ParticleTimeNode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic)\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport default ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../animators/ParticleAnimationSet\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../animators/states/ParticleStateBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport default ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport default SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport SkeletonAnimationSet\t\t\t\tfrom \"../animators/SkeletonAnimationSet\";\nimport JointPose\t\t\t\t\t\tfrom \"../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../animators/data/Skeleton\";\nimport SkeletonJoint\t\t\t\t\tfrom \"../animators/data/SkeletonJoint\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../animators/data/SkeletonPose\";\nimport ISkeletonAnimationState\t\t\tfrom \"../animators/states/ISkeletonAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport AnimationStateEvent\t\t\t\tfrom \"../events/AnimationStateEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar i0:number /*uint*/ = 0;\n\t\tvar i1:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport default VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport VertexAnimationSet\t\t\t\tfrom \"../animators/VertexAnimationSet\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport IVertexAnimationState\t\t\tfrom \"../animators/states/IVertexAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_ElementsBase\t\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate sprites\n\t\t\tvar sprite:Sprite;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsprite = this._pOwners[i];\n\t\t\t\tsprite.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default VertexAnimator;",
    "import Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IVertexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport default AnimationElements;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ShaderRegisterCache\t\t\tfrom \"../../animators/../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../../animators/../shaders/ShaderRegisterElement\";\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport default AnimationRegisterCache;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport default ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport default JointPose;",
    "import ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport default ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport default ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport default ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport default SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\tfrom \"../../animators/data/SkeletonJoint\";\n\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport default Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport default VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport default AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleAccelerationState\t\tfrom \"../../animators/states/ParticleAccelerationState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport default ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBezierCurveState\t\t\tfrom \"../../animators/states/ParticleBezierCurveState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport default ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBillboardState\t\t\tfrom \"../../animators/states/ParticleBillboardState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport default ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleColorState\t\t\t\tfrom \"../../animators/states/ParticleColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport default ParticleColorNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleFollowState\t\t\t\tfrom \"../../animators/states/ParticleFollowState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport default ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleInitialColorState\t\tfrom \"../../animators/states/ParticleInitialColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport default ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport default ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOrbitState\t\t\t\tfrom \"../../animators/states/ParticleOrbitState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport default ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOscillatorState\t\t\tfrom \"../../animators/states/ParticleOscillatorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport default ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticlePositionState\t\t\tfrom \"../../animators/states/ParticlePositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticlePositionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToHeadingState\t\tfrom \"../../animators/states/ParticleRotateToHeadingState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport default ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToPositionState\tfrom \"../../animators/states/ParticleRotateToPositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotationalVelocityState\tfrom \"../../animators/states/ParticleRotationalVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport default ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleScaleState\t\t\t\tfrom \"../../animators/states/ParticleScaleState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport default ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSegmentedColorState\t\tfrom \"../../animators/states/ParticleSegmentedColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport default ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSpriteSheetState\t\t\tfrom \"../../animators/states/ParticleSpriteSheetState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeState\t\t\t\tfrom \"../../animators/states/ParticleTimeState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t\t\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport default ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleUVState\t\t\t\t\tfrom \"../../animators/states/ParticleUVState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport default ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleVelocityState\t\t\tfrom \"../../animators/states/ParticleVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport default ParticleVelocityNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport SkeletonClipState\t\t\t\tfrom \"../../animators/states/SkeletonClipState\";\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDifferenceState\t\t\tfrom \"../../animators/states/SkeletonDifferenceState\";\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDirectionalState\t\t\tfrom \"../../animators/states/SkeletonDirectionalState\";\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport default SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonNaryLERPState\t\t\tfrom \"../../animators/states/SkeletonNaryLERPState\";\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport VertexClipState\t\t\t\t\tfrom \"../../animators/states/VertexClipState\";\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport default AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../../animators/states/IAnimationState\";\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport default AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleAccelerationNode\t\t\tfrom \"../../animators/nodes/ParticleAccelerationNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport default ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleBezierCurveNode\t\t\tfrom \"../../animators/nodes/ParticleBezierCurveNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport default ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Orientation3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleBillboardNode\t\t\tfrom \"../../animators/nodes/ParticleBillboardNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport default ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleColorNode\t\t\t\tfrom \"../../animators/nodes/ParticleColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleColorState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleFollowNode\t\t\t\tfrom \"../../animators/nodes/ParticleFollowNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleFollowState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleInitialColorNode\t\t\tfrom \"../../animators/nodes/ParticleInitialColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport default ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOrbitNode\t\t\t\tfrom \"../../animators/nodes/ParticleOrbitNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport default ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOscillatorNode\t\t\tfrom \"../../animators/nodes/ParticleOscillatorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport default ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticlePositionNode\t\t\t\tfrom \"../../animators/nodes/ParticlePositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport default ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotateToPositionNode\t\tfrom \"../../animators/nodes/ParticleRotateToPositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport default ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotationalVelocityNode\tfrom \"../../animators/nodes/ParticleRotationalVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport default ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleScaleNode\t\t\t\tfrom \"../../animators/nodes/ParticleScaleNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport default ParticleScaleState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSegmentedColorNode\t\tfrom \"../../animators/nodes/ParticleSegmentedColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport default ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSpriteSheetNode\t\t\tfrom \"../../animators/nodes/ParticleSpriteSheetNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleTimeNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport default ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleUVNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleUVNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport default ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"../../animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleVelocityNode\t\t\t\tfrom \"../../animators/nodes/ParticleVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport default SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonAnimator\t\t\t\t\tfrom \"../../animators/SkeletonAnimator\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonClipNode\t\t\t\t\tfrom \"../../animators/nodes/SkeletonClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport default SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDifferenceNode\t\t\tfrom \"../../animators/nodes/SkeletonDifferenceNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDirectionalNode\t\t\tfrom \"../../animators/nodes/SkeletonDirectionalNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport default SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonNaryLERPNode\t\t\t\tfrom \"../../animators/nodes/SkeletonNaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport default SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport VertexAnimator\t\t\t\t\tfrom \"../../animators/VertexAnimator\";\nimport VertexClipNode\t\t\t\t\tfrom \"../../animators/nodes/VertexClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport IVertexAnimationState\t\t\tfrom \"../../animators/states/IVertexAnimationState\";\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport default VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport CrossfadeTransitionState\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport default CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../animators/../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport default CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport IAnimationTransition\t\t\t\tfrom \"../../animators/transitions/IAnimationTransition\";\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport default CrossfadeTransition;",
    "export {default as AnimationElements}\t\t\t\tfrom \"./animators/data/AnimationElements\";\nexport {default as AnimationRegisterCache}\t\t\tfrom \"./animators/data/AnimationRegisterCache\";\nexport {default as ColorSegmentPoint}\t\t\t\tfrom \"./animators/data/ColorSegmentPoint\";\nexport {default as JointPose}\t\t\t\t\t\tfrom \"./animators/data/JointPose\";\nexport {default as ParticleAnimationData}\t\t\tfrom \"./animators/data/ParticleAnimationData\";\nexport {default as ParticleProperties}\t\t\t\tfrom \"./animators/data/ParticleProperties\";\nexport {default as ParticlePropertiesMode}\t\t\tfrom \"./animators/data/ParticlePropertiesMode\";\nexport {default as Skeleton}\t\t\t\t\t\tfrom \"./animators/data/Skeleton\";\nexport {default as SkeletonJoint}\t\t\t\t\tfrom \"./animators/data/SkeletonJoint\";\nexport {default as SkeletonPose}\t\t\t\t\tfrom \"./animators/data/SkeletonPose\";\nexport {default as VertexAnimationMode}\t\t\t\tfrom \"./animators/data/VertexAnimationMode\";\nexport {default as AnimationClipNodeBase}\t\t\tfrom \"./animators/nodes/AnimationClipNodeBase\";\nexport {default as ParticleAccelerationNode}\t\tfrom \"./animators/nodes/ParticleAccelerationNode\";\nexport {default as ParticleBezierCurveNode}\t\t\tfrom \"./animators/nodes/ParticleBezierCurveNode\";\nexport {default as ParticleBillboardNode}\t\t\tfrom \"./animators/nodes/ParticleBillboardNode\";\nexport {default as ParticleColorNode}\t\t\t\tfrom \"./animators/nodes/ParticleColorNode\";\nexport {default as ParticleFollowNode}\t\t\t\tfrom \"./animators/nodes/ParticleFollowNode\";\nexport {default as ParticleInitialColorNode}\t\tfrom \"./animators/nodes/ParticleInitialColorNode\";\nexport {default as ParticleNodeBase}\t\t\t\tfrom \"./animators/nodes/ParticleNodeBase\";\nexport {default as ParticleOrbitNode}\t\t\t\tfrom \"./animators/nodes/ParticleOrbitNode\";\nexport {default as ParticleOscillatorNode}\t\t\tfrom \"./animators/nodes/ParticleOscillatorNode\";\nexport {default as ParticlePositionNode}\t\t\tfrom \"./animators/nodes/ParticlePositionNode\";\nexport {default as ParticleRotateToHeadingNode}\t\tfrom \"./animators/nodes/ParticleRotateToHeadingNode\";\nexport {default as ParticleRotateToPositionNode}\tfrom \"./animators/nodes/ParticleRotateToPositionNode\";\nexport {default as ParticleRotationalVelocityNode}\tfrom \"./animators/nodes/ParticleRotationalVelocityNode\";\nexport {default as ParticleScaleNode}\t\t\t\tfrom \"./animators/nodes/ParticleScaleNode\";\nexport {default as ParticleSegmentedColorNode}\t\tfrom \"./animators/nodes/ParticleSegmentedColorNode\";\nexport {default as ParticleSpriteSheetNode}\t\t\tfrom \"./animators/nodes/ParticleSpriteSheetNode\";\nexport {default as ParticleTimeNode}\t\t\t\tfrom \"./animators/nodes/ParticleTimeNode\";\nexport {default as ParticleUVNode}\t\t\t\t\tfrom \"./animators/nodes/ParticleUVNode\";\nexport {default as ParticleVelocityNode}\t\t\tfrom \"./animators/nodes/ParticleVelocityNode\";\nexport {default as SkeletonBinaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonBinaryLERPNode\";\nexport {default as SkeletonClipNode}\t\t\t\tfrom \"./animators/nodes/SkeletonClipNode\";\nexport {default as SkeletonDifferenceNode}\t\t\tfrom \"./animators/nodes/SkeletonDifferenceNode\";\nexport {default as SkeletonDirectionalNode}\t\t\tfrom \"./animators/nodes/SkeletonDirectionalNode\";\nexport {default as SkeletonNaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonNaryLERPNode\";\nexport {default as VertexClipNode}\t\t\t\t\tfrom \"./animators/nodes/VertexClipNode\";\nexport {default as AnimationClipState}\t\t\t\tfrom \"./animators/states/AnimationClipState\";\nexport {default as AnimationStateBase}\t\t\t\tfrom \"./animators/states/AnimationStateBase\";\nexport {default as IAnimationState}\t\t\t\t\tfrom \"./animators/states/IAnimationState\";\nexport {default as ISkeletonAnimationState}\t\t\tfrom \"./animators/states/ISkeletonAnimationState\";\nexport {default as IVertexAnimationState}\t\t\tfrom \"./animators/states/IVertexAnimationState\";\nexport {default as ParticleAccelerationState}\t\tfrom \"./animators/states/ParticleAccelerationState\";\nexport {default as ParticleBezierCurveState}\t\tfrom \"./animators/states/ParticleBezierCurveState\";\nexport {default as ParticleBillboardState}\t\t\tfrom \"./animators/states/ParticleBillboardState\";\nexport {default as ParticleColorState}\t\t\t\tfrom \"./animators/states/ParticleColorState\";\nexport {default as ParticleFollowState}\t\t\t\tfrom \"./animators/states/ParticleFollowState\";\nexport {default as ParticleInitialColorState}\t\tfrom \"./animators/states/ParticleInitialColorState\";\nexport {default as ParticleStateBase}\t\t\t\tfrom \"./animators/states/ParticleStateBase\";\nexport {default as ParticleOrbitState}\t\t\t\tfrom \"./animators/states/ParticleOrbitState\";\nexport {default as ParticleOscillatorState}\t\t\tfrom \"./animators/states/ParticleOscillatorState\";\nexport {default as ParticlePositionState}\t\t\tfrom \"./animators/states/ParticlePositionState\";\nexport {default as ParticleRotateToHeadingState}\tfrom \"./animators/states/ParticleRotateToHeadingState\";\nexport {default as ParticleRotateToPositionState}\tfrom \"./animators/states/ParticleRotateToPositionState\";\nexport {default as ParticleRotationalVelocityState}\tfrom \"./animators/states/ParticleRotationalVelocityState\";\nexport {default as ParticleScaleState}\t\t\t\tfrom \"./animators/states/ParticleScaleState\";\nexport {default as ParticleSegmentedColorState}\t\tfrom \"./animators/states/ParticleSegmentedColorState\";\nexport {default as ParticleSpriteSheetState}\t\tfrom \"./animators/states/ParticleSpriteSheetState\";\nexport {default as ParticleTimeState}\t\t\t\tfrom \"./animators/states/ParticleTimeState\";\nexport {default as ParticleUVState}\t\t\t\t\tfrom \"./animators/states/ParticleUVState\";\nexport {default as ParticleVelocityState}\t\t\tfrom \"./animators/states/ParticleVelocityState\";\nexport {default as SkeletonBinaryLERPState}\t\t\tfrom \"./animators/states/SkeletonBinaryLERPState\";\nexport {default as SkeletonClipState}\t\t\t\tfrom \"./animators/states/SkeletonClipState\";\nexport {default as SkeletonDifferenceState}\t\t\tfrom \"./animators/states/SkeletonDifferenceState\";\nexport {default as SkeletonDirectionalState}\t\tfrom \"./animators/states/SkeletonDirectionalState\";\nexport {default as SkeletonNaryLERPState}\t\t\tfrom \"./animators/states/SkeletonNaryLERPState\";\nexport {default as VertexClipState}\t\t\t\t\tfrom \"./animators/states/VertexClipState\";\nexport {default as CrossfadeTransition}\t\t\t\tfrom \"./animators/transitions/CrossfadeTransition\";\nexport {default as CrossfadeTransitionNode}\t\t\tfrom \"./animators/transitions/CrossfadeTransitionNode\";\nexport {default as CrossfadeTransitionState}\t\tfrom \"./animators/transitions/CrossfadeTransitionState\";\nexport {default as IAnimationTransition}\t\t\tfrom \"./animators/transitions/IAnimationTransition\";\nexport {default as AnimationSetBase}\t\t\t\tfrom \"./animators/AnimationSetBase\";\nexport {default as AnimatorBase}\t\t\t\t\tfrom \"./animators/AnimatorBase\";\nexport {default as ParticleAnimationSet}\t\t\tfrom \"./animators/ParticleAnimationSet\";\nexport {default as ParticleAnimator}\t\t\t\tfrom \"./animators/ParticleAnimator\";\nexport {default as SkeletonAnimationSet}\t\t\tfrom \"./animators/SkeletonAnimationSet\";\nexport {default as SkeletonAnimator}\t\t\t\tfrom \"./animators/SkeletonAnimator\";\nexport {default as VertexAnimationSet}\t\t\t\tfrom \"./animators/VertexAnimationSet\";\nexport {default as VertexAnimator}\t\t\t\t\tfrom \"./animators/VertexAnimator\";",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport default ElementsPool;",
    "import Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nimport IAbstractionPool \t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_AttributesBuffer\t\t\tfrom \"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\n\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tpublic _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\t\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferGL():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferGL(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\t//TODO replace overflow system with something sensible\n\t\t//this._render(renderable, camera, viewProjection);\n\t\t//\n\t\t// if (this._overflow)\n\t\t// \tthis._overflow._iRender(renderable, camera, viewProjection);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = this._elements.numVertices;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_ElementsBase;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\t\t\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.thickness);\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\t\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\t\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t\t\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_LineElements;",
    "import ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TriangleElements\t\t\tfrom \"../elements/GL_TriangleElements\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SkyboxElements;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextWebGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextWebGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.renderSceneTransform);\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_TriangleElements;",
    "export {default as ElementsPool}\t\t\t\t\tfrom \"./elements/ElementsPool\";\nexport {default as GL_ElementsBase}\t\t\t\t\tfrom \"./elements/GL_ElementsBase\";\nexport {default as GL_LineElements}\t\t\t\t\tfrom \"./elements/GL_LineElements\";\nexport {default as GL_SkyboxElements}\t\t\t\tfrom \"./elements/GL_SkyboxElements\";\nexport {default as GL_TriangleElements}\t\t\t\tfrom \"./elements/GL_TriangleElements\";\nexport {default as IElementsClassGL}\t\t\t\tfrom \"./elements/IElementsClassGL\";",
    "import ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default AnimationSetError;",
    "export {default as AnimationSetError}\t\t\t\tfrom \"./errors/AnimationSetError\";",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport EventBase\t\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../animators/states/IAnimationState\";\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport default AnimationStateEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport default AnimatorEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IPass\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport default PassEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport RTTBufferManager\t\t\tfrom \"../managers/RTTBufferManager\";\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport default RTTEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport default ShadingMethodEvent;",
    "export {default as AnimationStateEvent}\t\t\t\tfrom \"./events/AnimationStateEvent\";\nexport {default as AnimatorEvent}\t\t\t\t\tfrom \"./events/AnimatorEvent\";\nexport {default as PassEvent}\t\t\t\t\t\tfrom \"./events/PassEvent\";\nexport {default as RTTEvent}\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nexport {default as ShadingMethodEvent}\t\t\t\tfrom \"./events/ShadingMethodEvent\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DHBlurTask\t\t\tfrom \"../filters/tasks/Filter3DHBlurTask\";\nimport Filter3DVBlurTask\t\t\tfrom \"../filters/tasks/Filter3DVBlurTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport default BlurFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DCompositeTask\t\tfrom \"../filters/tasks/Filter3DCompositeTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport default CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DFXAATask\t\t\t\tfrom \"../filters/tasks/Filter3DFXAATask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport default FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../filters/tasks/Filter3DTaskBase\";\nimport RTTBufferManager from \"../managers/RTTBufferManager\";\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport default Filter3DBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\n\t\tvar code:string;\n\t\tvar op:string;\n\t\tcode = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, v0, fc1.zw\\n\" +\n\t\t\t\"add ft1, ft1, fc1.xy\\n\" +\n\t\t\t\"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, ft1, fc0.xxx\\n\" +\n\t\t\t\"add ft1, ft1, fc0.xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, ft1, ft2\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, ft0\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 2);\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(1, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport default Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 6);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport IProgram\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IProgram\";\n\nimport RTTBufferManager\t\t\t\tfrom \"../../managers/RTTBufferManager\";\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport default Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DVBlurTask;",
    "export {default as Filter3DCompositeTask}\t\t\tfrom \"./filters/tasks/Filter3DCompositeTask\";\nexport {default as Filter3DFXAATask}\t\t\t\tfrom \"./filters/tasks/Filter3DFXAATask\";\nexport {default as Filter3DHBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DHBlurTask\";\nexport {default as Filter3DTaskBase}\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\nexport {default as Filter3DVBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DVBlurTask\";\nexport {default as BlurFilter3D}\t\t\t\t\tfrom \"./filters/BlurFilter3D\";\nexport {default as CompositeFilter3D}\t\t\t\tfrom \"./filters/CompositeFilter3D\";\nexport {default as Filter3DBase}\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nexport {default as FXAAFilter3D}\t\t\t\t\tfrom \"./filters/FXAAFilter3D\";",
    "import Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ImageUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\nimport RTTEvent\t\t\t\t\t\tfrom \"../events/RTTEvent\";\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport default RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "export {default as RTTBufferManager}\t\t\t\tfrom \"./managers/RTTBufferManager\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport default GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthis._offset = this.graphic.offset;\n\t\tthis._count = this.graphic.count;\n\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport default GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport default GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport RenderableEvent\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onSurfaceUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _count:number = 0;\n\tpublic _offset:number = 0;\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onSurfaceUpdatedDelegate = (event:RenderableEvent) => this._onSurfaceUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onSurfaceUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tvar elements:GL_ElementsBase = pass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements);\n\n\t\tif (elements != pass.shader.activeElements)\n\t\t\telements._setRenderState(this, camera, viewProjection);\n\n\t\telements.draw(this, camera, viewProjection, this._count, this._offset)\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surface:ISurface = this._pGetSurface() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport default GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"../surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport default GL_SkyboxRenderable;",
    "export {default as GL_BillboardRenderable}\t\t\tfrom \"./renderables/GL_BillboardRenderable\";\nexport {default as GL_GraphicRenderable}\t\t\tfrom \"./renderables/GL_GraphicRenderable\";\nexport {default as GL_LineSegmentRenderable}\t\tfrom \"./renderables/GL_LineSegmentRenderable\";\nexport {default as GL_RenderableBase}\t\t\t\tfrom \"./renderables/GL_RenderableBase\";\nexport {default as GL_SkyboxRenderable}\t\t\t\tfrom \"./renderables/GL_SkyboxRenderable\";",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport LightSources\t\t\t\t\tfrom \"awayjs-display/lib/materials/LightSources\";\n\nimport ContextGLProfile\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProfile\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport ILightingPass\t\t\t\tfrom \"../surfaces/passes/ILightingPass\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport LightingCompiler\t\t\t\tfrom \"../shaders/compilers/LightingCompiler\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport default LightingShader;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport default RegisterPool;\n",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLTriangleFace\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTriangleFace\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterCache\t\tfrom \"../animators/data/AnimationRegisterCache\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"../elements/ElementsPool\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic numLights:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * \n\t */\n\tpublic activeElements:GL_ElementsBase;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\tthis.activeElements = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.activeElements = null;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._elementsClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport default ShaderBase;",
    "import RegisterPool\t\t\t\t\tfrom \"../shaders/RegisterPool\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport default ShaderRegisterCache;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = Array<ShaderRegisterElement>();\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport default ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport default ShaderRegisterElement;",
    "import ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string> = new Array<string>();\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string> = new Array<string>();\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp()\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pAnimatableAttributes.push(\"va0\");\n\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport default CompilerBase;",
    "import LightingShader\t\t\t\tfrom \"../../shaders/LightingShader\";\nimport CompilerBase\t\t\t\t\tfrom \"../../shaders/compilers/CompilerBase\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport ILightingPass\t\t\t\tfrom \"../../surfaces/passes/ILightingPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport default LightingCompiler;",
    "export {default as CompilerBase}\t\t\t\t\tfrom \"./shaders/compilers/CompilerBase\";\nexport {default as LightingCompiler}\t\t\t\tfrom \"./shaders/compilers/LightingCompiler\";\nexport {default as LightingShader}\t\t\t\t\tfrom \"./shaders/LightingShader\";\nexport {default as RegisterPool}\t\t\t\t\tfrom \"./shaders/RegisterPool\";\nexport {default as ShaderBase}\t\t\t\t\t\tfrom \"./shaders/ShaderBase\";\nexport {default as ShaderRegisterCache}\t\t\t\tfrom \"./shaders/ShaderRegisterCache\";\nexport {default as ShaderRegisterData}\t\t\t\tfrom \"./shaders/ShaderRegisterData\";\nexport {default as ShaderRegisterElement}\t\t\tfrom \"./shaders/ShaderRegisterElement\";",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport default RenderableMergeSort;",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport default RenderableNullSort;",
    "export {default as IEntitySorter}\t\t\t\t\tfrom \"./sort/IEntitySorter\";\nexport {default as RenderableMergeSort}\t\t\t\tfrom \"./sort/RenderableMergeSort\";\nexport {default as RenderableNullSort}\t\t\t\tfrom \"./sort/RenderableNullSort\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\n\nimport BasicMaterialPass\t\t\tfrom \"../surfaces/passes/BasicMaterialPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport default GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default DistanceRender;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\n\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport default GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ISurfaceClassGL\t\t\t\tfrom \"../surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport default SurfacePool;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport PassBase\t\t\t\t\t\tfrom \"../../surfaces/passes/PassBase\";\nimport GL_TextureBase\t\t\t\tfrom \"../../textures/GL_TextureBase\";\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport default BasicMaterialPass;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default PassBase;",
    "export {default as BasicMaterialPass}\t\t\t\tfrom \"./surfaces/passes/BasicMaterialPass\";\nexport {default as ILightingPass}\t\t\t\t\tfrom \"./surfaces/passes/ILightingPass\";\nexport {default as IPass}\t\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nexport {default as PassBase}\t\t\t\t\t\tfrom \"./surfaces/passes/PassBase\";\nexport {default as GL_BasicMaterialSurface}\t\t\tfrom \"./surfaces/GL_BasicMaterialSurface\";\nexport {default as GL_DepthSurface}\t\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\nexport {default as GL_DistanceSurface}\t\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\nexport {default as GL_SkyboxSurface}\t\t\t\tfrom \"./surfaces/GL_SkyboxSurface\";\nexport {default as GL_SurfaceBase}\t\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nexport {default as GL_SurfacePassBase}\t\t\t\tfrom \"./surfaces/GL_SurfacePassBase\";\nexport {default as ISurfaceClassGL}\t\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nexport {default as SurfacePool}\t\t\t\t\t\tfrom \"./surfaces/SurfacePool\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport GL_Image2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Image2D\";\nimport GL_Sampler2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Sampler2D\";\n\nimport MappingMode\t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport GL_SamplerCube\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerCube\";\n\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport default GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ContextGLTextureFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTextureFormat\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport default GL_TextureBase;",
    "export {default as GL_Single2DTexture}\t\t\t\tfrom \"./textures/GL_Single2DTexture\";\nexport {default as GL_SingleCubeTexture}\t\t\tfrom \"./textures/GL_SingleCubeTexture\";\nexport {default as GL_TextureBase}\t\t\t\t\tfrom \"./textures/GL_TextureBase\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix3DUtils\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\n\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport default Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport default ParticleGraphicsTransform;",
    "export {default as Merge}\t\t\t\t\t\t\tfrom \"./tools/commands/Merge\";\nexport {default as ParticleGraphicsTransform}\t\tfrom \"./tools/data/ParticleGraphicsTransform\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport ParticleGraphicsTransform\t\tfrom \"../tools/data/ParticleGraphicsTransform\";\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport default ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport default PerspectiveMatrix3D;",
    "export {default as ParticleGraphicsHelper}\t\t\tfrom \"./utils/ParticleGraphicsHelper\";\nexport {default as PerspectiveMatrix3D}\t\t\t\tfrom \"./utils/PerspectiveMatrix3D\";"
  ],
  "sourceRoot": ""
}