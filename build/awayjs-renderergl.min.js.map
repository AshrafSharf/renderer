{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "awayjs-renderergl/lib/DefaultRenderer.ts",
    "awayjs-renderergl/lib/DepthRenderer.ts",
    "awayjs-renderergl/lib/DistanceRenderer.ts",
    "awayjs-renderergl/lib/Filter3DRenderer.ts",
    "awayjs-renderergl/lib/RendererBase.ts",
    "awayjs-renderergl/lib/RendererGL.ts",
    "awayjs-renderergl/lib/animators/AnimationSetBase.ts",
    "awayjs-renderergl/lib/animators/AnimatorBase.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet.ts",
    "awayjs-renderergl/lib/animators/ParticleAnimator.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet.ts",
    "awayjs-renderergl/lib/animators/SkeletonAnimator.ts",
    "awayjs-renderergl/lib/animators/VertexAnimationSet.ts",
    "awayjs-renderergl/lib/animators/VertexAnimator.ts",
    "awayjs-renderergl/lib/animators/data/AnimationElements.ts",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache.ts",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint.ts",
    "awayjs-renderergl/lib/animators/data/JointPose.ts",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData.ts",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode.ts",
    "awayjs-renderergl/lib/animators/data/ParticleProperties.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint.ts",
    "awayjs-renderergl/lib/animators/data/SkeletonPose.ts",
    "awayjs-renderergl/lib/animators/data/Skeleton.ts",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode.ts",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode.ts",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode.ts",
    "awayjs-renderergl/lib/animators/states/AnimationClipState.ts",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase.ts",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleUVState.ts",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState.ts",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState.ts",
    "awayjs-renderergl/lib/animators/states/VertexClipState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState.ts",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition.ts",
    "awayjs-renderergl/lib/elements/ElementsPool.ts",
    "awayjs-renderergl/lib/elements/GL_ElementsBase.ts",
    "awayjs-renderergl/lib/elements/GL_LineElements.ts",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements.ts",
    "awayjs-renderergl/lib/elements/GL_TriangleElements.ts",
    "awayjs-renderergl/lib/errors/AnimationSetError.ts",
    "awayjs-renderergl/lib/events/AnimationStateEvent.ts",
    "awayjs-renderergl/lib/events/AnimatorEvent.ts",
    "awayjs-renderergl/lib/events/PassEvent.ts",
    "awayjs-renderergl/lib/events/RTTEvent.ts",
    "awayjs-renderergl/lib/events/ShadingMethodEvent.ts",
    "awayjs-renderergl/lib/filters/BlurFilter3D.ts",
    "awayjs-renderergl/lib/filters/CompositeFilter3D.ts",
    "awayjs-renderergl/lib/filters/FXAAFilter3D.ts",
    "awayjs-renderergl/lib/filters/Filter3DBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase.ts",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask.ts",
    "awayjs-renderergl/lib/managers/RTTBufferManager.ts",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable.ts",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase.ts",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable.ts",
    "awayjs-renderergl/lib/shaders/LightingShader.ts",
    "awayjs-renderergl/lib/shaders/RegisterPool.ts",
    "awayjs-renderergl/lib/shaders/ShaderBase.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData.ts",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement.ts",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase.ts",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler.ts",
    "awayjs-renderergl/lib/sort/RenderableMergeSort.ts",
    "awayjs-renderergl/lib/sort/RenderableNullSort.ts",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface.ts",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase.ts",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase.ts",
    "awayjs-renderergl/lib/surfaces/SurfacePool.ts",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass.ts",
    "awayjs-renderergl/lib/surfaces/passes/PassBase.ts",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture.ts",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture.ts",
    "awayjs-renderergl/lib/textures/GL_TextureBase.ts",
    "awayjs-renderergl/lib/tools/commands/Merge.ts",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform.ts",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper.ts",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-renderergl/lib/DefaultRenderer",
    "module",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "BitmapImage2D",
    "Matrix3D",
    "Vector3D",
    "ContextGLCompareMode",
    "ContextGLClearMask",
    "RendererBase",
    "DepthRenderer",
    "DistanceRenderer",
    "Filter3DRenderer",
    "GL_SkyboxElements",
    "RTTBufferManager",
    "SurfacePool",
    "DefaultRenderer",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_antiAlias",
    "_directionalLights",
    "Array",
    "_pointLights",
    "_lightProbes",
    "isDebugEnabled",
    "_shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "_skyBoxSurfacePool",
    "Object",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "filters",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "render",
    "camera",
    "scene",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "len",
    "light",
    "shadowMapper",
    "castsShadows",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "_skybox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getAbstraction",
    "updateSkyboxProjection",
    "surfaceGL",
    "surface",
    "pass",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "applyDirectionalLight",
    "entity",
    "push",
    "applyLightProbe",
    "applyPointLight",
    "applySkybox",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/geom/Matrix3D",
    "undefined",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "GL_DepthSurface",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "enterNode",
    "node",
    "enter",
    "_iCollectionMark",
    "isCastingShadow",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_DistanceSurface",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "ContextGLDrawMode",
    "ContextGLBlendFactor",
    "ContextGLVertexBufferFormat",
    "RTTEvent",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "FLOAT_2",
    "setRenderTarget",
    "activate",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "awayjs-renderergl/lib/events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Matrix3DUtils",
    "Point",
    "Rectangle",
    "EventDispatcher",
    "RendererEvent",
    "AGALMiniAssembler",
    "StageEvent",
    "StageManager",
    "ElementsPool",
    "RenderableMergeSort",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_cameraForward",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_numCullPlanes",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_abstractionClassPool",
    "_customCullPlanes",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "id",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "elements",
    "registerAbstraction",
    "renderableClass",
    "assetClass",
    "renderableGL",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_viewportDirty",
    "_scissorDirty",
    "_pBlendedRenderableHead",
    "_pOpaqueRenderableHead",
    "_cullPlanes",
    "frustumPlanes",
    "_cameraPosition",
    "_cameraTransform",
    "sceneTransform",
    "getForward",
    "traversePartitions",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "LESS",
    "head",
    "first",
    "LESS_EQUAL",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "next",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "isInFrustum",
    "applyRenderable",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "position",
    "subtract",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "requiresBlending",
    "numElements",
    "obj",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-renderergl/lib/elements/ElementsPool",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/RendererGL",
    "BasicMaterial",
    "Skybox",
    "Billboard",
    "LineSegment",
    "LineElements",
    "TriangleElements",
    "Graphic",
    "Single2DTexture",
    "SingleCubeTexture",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "ShaderBase",
    "GL_LineElements",
    "GL_TriangleElements",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "renderergl",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase",
    "AbstractMethodError",
    "AnimationSetError",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame",
    "getTimer",
    "AnimatorEvent",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "sprite",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "transform",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationRegisterCache",
    "AnimationElements",
    "ParticleAnimationData",
    "ParticleProperties",
    "ParticlePropertiesMode",
    "ParticleTimeNode",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "animationElements",
    "_iGenerateAnimationElements",
    "parent",
    "graphics",
    "initParticleFunc",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent",
    "JointPose",
    "SkeletonPose",
    "AnimationStateEvent",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetElements",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "invalidateElements",
    "setNullPose",
    "elementsGL",
    "_iIndex",
    "_elementsPool",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "ShaderRegisterCache",
    "ShaderRegisterElement",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "totalTime",
    "startVertexIndex",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase",
    "ParticleAccelerationState",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform",
    "ParticleColorState",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "_pDataLength",
    "MODES",
    "_priority",
    1,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState",
    "ParticlePositionNode",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "SkeletonClipState",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState",
    "VertexClipNode",
    "_translations",
    "geometry",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts",
    "Orientation3D",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "particleUVNode",
    "_particleUVNode",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "CrossfadeTransitionState",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "elementsClass",
    "_shader",
    "_elementsClass",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase",
    "AssetEvent",
    "ElementsUtils",
    "GL_ElementsBase",
    "pool",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferVO",
    "_indices",
    "getVertexBufferVO",
    "bufferId",
    "_updateVertices",
    "size",
    "onClear",
    "names",
    "getCustomAtributesNames",
    "_overflow",
    "_render",
    "_drawElements",
    "_drawArrays",
    "firstIndex",
    "numIndices",
    "firstVertex",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "lineElements",
    "_constants",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "registerCache",
    "sharedRegisters",
    "_iGetFragmentCode",
    "thickness",
    "colors",
    "colorBufferIndex",
    "projection",
    "setProgramConstantsFromMatrix",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "draw",
    "drawVertices",
    "_pool",
    "apply",
    "arguments",
    "triangleElements",
    "_triangleElements",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "viewMatrixReg",
    "viewMatrixIndex",
    "projectionDependencies",
    "projectionFragment",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "sceneMatrixIndex",
    "copyRawDataTo",
    "matrix3D",
    "CALCULATION_MATRIX",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "ErrorBase",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "EventBase",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask",
    "Filter3DVBlurTask",
    "Filter3DBase",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask",
    "FXAAFilter3D",
    "_fxaaTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "_textureWidth",
    "_textureHeight",
    "Filter3DTaskBase",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "op",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "numSamples",
    "invW",
    "Image2D",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "awayjs-core/lib/image/Image2D",
    "invH",
    "ImageUtils",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "AttributesBuffer",
    "DefaultMaterialManager",
    "GL_RenderableBase",
    "GL_Billboard",
    "billboard",
    "renderer",
    "_billboard",
    "_pGetElements",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_id",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetSurface",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "_renderer",
    "RenderableEvent",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onSurfaceUpdatedDelegate",
    "_onSurfaceUpdated",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_RENDER_OWNER",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_updateSurface",
    "_surfaceGL",
    "_setRenderState",
    "getDefaultMaterial",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "skybox",
    "_vertexArray",
    "_geometry",
    "far",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources",
    "ContextGLProfile",
    "LightingCompiler",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "dirLights",
    "directionalLights",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLights",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "BlendMode",
    "ArgumentError",
    "ContextGLTriangleFace",
    "CompilerBase",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "BACK",
    "usesPositionFragment",
    "imageIndices",
    "_updateProgram",
    "_programData",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "usesAnimation",
    "setCulling",
    "useBothSides",
    "NONE",
    "coordinateSystem",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "invalidateShader",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeFragmentConstant",
    "removeFragmentTempUsage",
    "getFreeFragmentVectorTemp",
    "getFreeFragmentSingleTemp",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "textures",
    "component",
    "_toStr",
    "COMPONENTS",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_uvSource",
    "_uvTarget",
    "_iInitConstantData",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "BasicMaterialPass",
    "GL_SurfaceBase",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "GL_SurfacePassBase",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "DistanceRender",
    "_texture",
    "SurfaceEvent",
    "MaterialBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "bothSides",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "_surfaceClassGL",
    "PassBase",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "_preserveAlpha",
    "MappingMode",
    "GL_TextureBase",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "ContextGLTextureFormat",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Sprite",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToSpritees",
    "sprites",
    "_toDispose",
    "_graphicVOs",
    "destSprite",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Sprite",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DepthRenderer\");\nimport DistanceRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DistanceRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport GL_SkyboxElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_SkyboxElements\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SkyboxRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport Scene = require(\"awayjs-display/lib/display/Scene\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _skybox:Skybox;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic isDebugEnabled:boolean = true;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis._shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tif (this._skybox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(camera);\n\t\t}\n\n\t\tsuper.pDraw(camera);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t **/\n\tprivate drawSkybox(camera:Camera)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(this._skybox);\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar render:GL_SurfaceBase = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface);\n\n\t\tvar pass:IPass = render.passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._skybox = <Skybox> entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport GL_DepthSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\");\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = DepthRenderer;",
    "import Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport GL_DistanceSurface\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = DistanceRenderer;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport RTTEvent\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/RTTEvent\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(0, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\n\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-stagegl/lib/events/StageEvent\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/ProgramData\");\nimport GL_IAssetClass\t\t\t\t= require(\"awayjs-stagegl/lib/library/GL_IAssetClass\");\n\nimport ISurfaceClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-renderergl/lib/sort/RenderableMergeSort\");\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tprivate _cameraPosition:Vector3D;\n\tprivate _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\n\tpublic isDebugEnabled:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\tvar entity:IEntity = renderableGL.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._cameraPosition.subtract(position);\n\t\trenderableGL.zIndex = entity.zOffset + position.dotProduct(this._cameraForward);\n\t\trenderableGL.maskId = entity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = entity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = renderableGL.sourceEntity.getRenderSceneTransform(this._cameraTransform);\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = RendererBase;",
    "import BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport GL_BasicMaterialSurface\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nimport GL_SkyboxSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\nimport GL_BillboardRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\");\nimport GL_LineSegmentRenderable\t\t= require(\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\");\nimport GL_GraphicRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nimport GL_SkyboxRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport GL_LineElements\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_LineElements\");\nimport GL_TriangleElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nimport GL_Single2DTexture\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_Single2DTexture\");\nimport GL_SingleCubeTexture\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\");\n\n\n\nSurfacePool.registerAbstraction(GL_BasicMaterialSurface, BasicMaterial);\nSurfacePool.registerAbstraction(GL_SkyboxSurface, Skybox);\n\nElementsPool.registerAbstraction(GL_LineElements, LineElements);\nElementsPool.registerAbstraction(GL_TriangleElements, TriangleElements);\n\nShaderBase.registerAbstraction(GL_Single2DTexture, Single2DTexture);\nShaderBase.registerAbstraction(GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(GL_SkyboxRenderable, Skybox);\n\n/**\n *\n * static shim\n */\nclass renderergl\n{\n}\n\nexport = renderergl;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetError\t\t\t= require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport IAnimationState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport = AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic)\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport = ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_GraphicRenderable\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport = ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport = SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ElementsEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\n\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_GraphicRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar i0:number /*uint*/ = 0;\n\t\tvar i1:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport = SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport AnimationSetBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport = VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\"\t);\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nimport VertexAnimationMode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\nimport GL_GraphicRenderable\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport GL_ElementsBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate sprites\n\t\t\tvar sprite:Sprite;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsprite = this._pOwners[i];\n\t\t\t\tsprite.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport = VertexAnimator;",
    "import Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IVertexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport = AnimationElements;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport = ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport = JointPose;",
    "import ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport = ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport = ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport = ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport = SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\n\nimport IAsset\t\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport = Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport = VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport = AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleAccelerationState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport = ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBezierCurveState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\n\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport = ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleBillboardState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport = ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleColorState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport = ParticleColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleFollowState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport = ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleInitialColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport = ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport = ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOrbitState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport = ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleOscillatorState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport = ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticlePositionState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticlePositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport = ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToPositionState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport = ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotationalVelocityState\t= require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport = ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleScaleState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport = ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSegmentedColorState\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport = ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleSpriteSheetState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleTimeState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport = ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleAnimationSet\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleUVState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport = ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport ShaderBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterElement\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\nimport ParticleProperties\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleVelocityState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport = ParticleVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport SkeletonClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDifferenceState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonDirectionalState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport = SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport SkeletonNaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport = SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport VertexClipState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport = VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\nimport AnimationClipNodeBase\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport = AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport = AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleAccelerationNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport = ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleBezierCurveNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport = ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Orientation3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Orientation3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleBillboardNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport = ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleColorNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = ParticleColorState;",
    "import MathConsts\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleFollowNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleFollowState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleInitialColorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport = ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOrbitNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport = ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleOscillatorNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport = ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticlePositionNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport ParticleRotateToHeadingNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport = ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotateToPositionNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport = ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleRotationalVelocityNode\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport = ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleScaleNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport = ParticleScaleState;",
    "import ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ColorSegmentPoint\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSegmentedColorNode\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport = ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleSpriteSheetNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport = ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleAnimationData\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nimport ParticleNodeBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport = ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleTimeNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport = ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticleUVNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport = ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLVertexBufferFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\nimport ParticleAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nimport AnimationRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport AnimationElements\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nimport ParticlePropertiesMode\t\t\t= require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nimport ParticleVelocityNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nimport ParticleStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nimport GL_RenderableBase\t\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport = ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport = SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport = SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDifferenceNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport = SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonDirectionalNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport = SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Quaternion\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport JointPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nimport Skeleton\t\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nimport SkeletonPose\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nimport SkeletonNaryLERPNode\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nimport AnimationStateBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nimport ISkeletonAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\");\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport = SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport VertexAnimator\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nimport VertexClipNode\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nimport AnimationClipState\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nimport IVertexAnimationState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\");\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport = VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport CrossfadeTransitionState\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport = CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport SkeletonBinaryLERPNode\t\t\t= require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nimport SkeletonBinaryLERPState\t\t\t= require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport AnimationStateEvent\t\t\t\t= require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport = CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport CrossfadeTransitionNode\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nimport IAnimationTransition\t\t\t\t= require(\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\");\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport = CrossfadeTransition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport = ElementsPool;",
    "import Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_AttributesBuffer\t\t\t= require(\"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\n\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IAbstractionPool \t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IEntity = require(\"awayjs-display/lib/display/IEntity\");\nimport Matrix3D = require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tprivate _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferVO():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferVO(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferVO(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._onClearIndices(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._elements.indices));\n\n\t\tvar names:Array<string> = this._elements.getCustomAtributesNames();\n\t\tvar len:number = names.length;\n\t\tfor (var i:number = 0; i <len; i++)\n\t\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._elements.getCustomAtributes(names[i])));\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _iRender(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tthis._render(sourceEntity, camera, viewProjection);\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow._iRender(sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _render(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._indices)\n\t\t\tthis._drawElements(0, this._numIndices);\n\t\telse\n\t\t\tthis._drawArrays(0, this._numVertices);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = attributesView.count;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = GL_ElementsBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IEntity = require(\"awayjs-display/lib/display/IEntity\");\nimport IAbstractionPool = require(\"awayjs-core/lib/library/IAbstractionPool\");\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.positions));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.thickness));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._lineElements.colors));\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _render(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\tthis._calcMatrix.copyFrom(sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.thickness);\n\n\t\tsuper._render(sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport = GL_LineElements;",
    "import ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TriangleElements\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = GL_SkyboxElements;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ContextGLDrawMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\n\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ContextWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.positions));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.normals));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.tangents));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.uvs));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.jointIndices));\n\t\tthis._onClearVertices(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, this._triangleElements.jointWeights));\n\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _render(sourceEntity:IEntity, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\tsourceEntity.getRenderSceneTransform(camera.sceneTransform).copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(sourceEntity.getRenderSceneTransform(camera.sceneTransform));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n\n\t\tsuper._render(sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferVO().draw(ContextGLDrawMode.TRIANGLES, firstIndex, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport = GL_TriangleElements;",
    "import ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;",
    "import AnimationNodeBase\t\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport EventBase\t\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport AnimatorBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport IAnimationState\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/states/IAnimationState\");\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport = AnimationStateEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IPass\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport = PassEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport RTTBufferManager\t\t\t= require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport = RTTEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DHBlurTask\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\");\nimport Filter3DVBlurTask\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport = BlurFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DCompositeTask\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport = CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DFXAATask\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport = FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nimport RTTBufferManager = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\n\t\tvar code:string;\n\t\tvar op:string;\n\t\tcode = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, v0, fc1.zw\\n\" +\n\t\t\t\"add ft1, ft1, fc1.xy\\n\" +\n\t\t\t\"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, ft1, fc0.xxx\\n\" +\n\t\t\t\"add ft1, ft1, fc0.xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, ft1, ft2\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, ft0\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 2);\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(1, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport = Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 6);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport RTTBufferManager = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport = Filter3DVBlurTask;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ImageUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport RTTEvent\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/RTTEvent\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport = GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, graphic.parent.sourceEntity, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport = GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport = GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\nimport GL_SamplerBase\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerBase\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport GL_ElementsBase\t\t\t\t= require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onSurfaceUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, sourceEntity:IEntity, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onSurfaceUpdatedDelegate = (event:RenderableEvent) => this._onSurfaceUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onSurfaceUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tpass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements)._iRender(this.sourceEntity, camera, viewProjection);\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surface:ISurface = this._pGetSurface() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport = GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport = GL_SkyboxRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\n\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\");\n\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport LightingCompiler\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport = LightingShader;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/ProgramData\");\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport ElementsPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\nimport GL_IAssetClass\t\t\t\t= require(\"awayjs-stagegl/lib/library/GL_IAssetClass\");\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic numLights:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._elementsClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ShaderBase;",
    "import RegisterPool\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;",
    "import ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = Array<ShaderRegisterElement>();\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;",
    "import GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string> = new Array<string>();\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string> = new Array<string>();\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp()\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pAnimatableAttributes.push(\"va0\");\n\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = CompilerBase;",
    "import ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\n\nimport LightingShader\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nimport CompilerBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport ILightingPass\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport = LightingCompiler;",
    "import IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IEntitySorter\t\t\t\t= require(\"awayjs-renderergl/lib/sort/IEntitySorter\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport BasicMaterialPass\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport = GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceRender;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_SurfacePassBase\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport = GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\n\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport SurfaceEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport GL_ImageBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_ImageBase\");\nimport GL_SamplerBase\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerBase\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport SurfacePool\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\n\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_BasicMaterialSurface\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nimport ISurfaceClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_SkyboxSurface\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport = SurfacePool;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextGL\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport PassBase\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = BasicMaterialPass;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\")\n\nimport RendererBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/RendererBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nimport PassEvent\t\t\t\t\t= require(\"awayjs-renderergl/lib/events/PassEvent\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport IPass\t\t\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/passes/IPass\");\nimport IElementsClassGL\t\t\t\t= require(\"awayjs-renderergl/lib/elements/IElementsClassGL\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = PassBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport GL_Image2D\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_Image2D\");\nimport GL_Sampler2D\t\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_Sampler2D\");\n\nimport MappingMode\t\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport GL_SamplerCube\t\t\t\t= require(\"awayjs-stagegl/lib/image/GL_SamplerCube\");\n\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nimport GL_TextureBase\t\t\t\t= require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport = GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nimport GL_SurfaceBase\t\t\t\t= require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nimport GL_RenderableBase\t\t\t= require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nimport ShaderBase\t\t\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = GL_TextureBase;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix3DUtils\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport = Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport = ParticleGraphicsTransform;",
    "import AttributesBuffer\t\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Matrix\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ParticleData\t\t\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\nimport Graphics\t\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Sprite\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Sprite\");\n\nimport ParticleGraphicsTransform\t\t= require(\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\");\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport = ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport = PerspectiveMatrix3D;"
  ],
  "sourceRoot": ""
}