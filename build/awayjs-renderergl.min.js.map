{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "../index.ts",
    "lib/DefaultRenderer.ts",
    "lib/DepthRenderer.ts",
    "lib/DistanceRenderer.ts",
    "lib/Filter3DRenderer.ts",
    "lib/RendererBase.ts",
    "lib/lib/animators/AnimationSetBase.ts",
    "lib/lib/animators/AnimatorBase.ts",
    "lib/lib/animators/ParticleAnimationSet.ts",
    "lib/lib/animators/ParticleAnimator.ts",
    "lib/lib/animators/SkeletonAnimationSet.ts",
    "lib/lib/animators/SkeletonAnimator.ts",
    "lib/lib/animators/VertexAnimationSet.ts",
    "lib/lib/animators/VertexAnimator.ts",
    "lib/animators/lib/animators/data/AnimationElements.ts",
    "lib/animators/lib/animators/data/AnimationRegisterData.ts",
    "lib/animators/lib/animators/data/ColorSegmentPoint.ts",
    "lib/animators/lib/animators/data/JointPose.ts",
    "lib/animators/lib/animators/data/ParticleAnimationData.ts",
    "lib/animators/lib/animators/data/ParticlePropertiesMode.ts",
    "lib/animators/lib/animators/data/ParticleProperties.ts",
    "lib/animators/lib/animators/data/SkeletonJoint.ts",
    "lib/animators/lib/animators/data/SkeletonPose.ts",
    "lib/animators/lib/animators/data/Skeleton.ts",
    "lib/animators/lib/animators/data/VertexAnimationMode.ts",
    "lib/animators/lib/animators/nodes/AnimationClipNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleAccelerationNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBillboardNode.ts",
    "lib/animators/lib/animators/nodes/ParticleColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleFollowNode.ts",
    "lib/animators/lib/animators/nodes/ParticleInitialColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleOrbitNode.ts",
    "lib/animators/lib/animators/nodes/ParticleOscillatorNode.ts",
    "lib/animators/lib/animators/nodes/ParticlePositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "lib/animators/lib/animators/nodes/ParticleScaleNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "lib/animators/lib/animators/nodes/ParticleTimeNode.ts",
    "lib/animators/lib/animators/nodes/ParticleUVNode.ts",
    "lib/animators/lib/animators/nodes/ParticleVelocityNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonClipNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/VertexClipNode.ts",
    "lib/animators/lib/animators/states/AnimationClipState.ts",
    "lib/animators/lib/animators/states/AnimationStateBase.ts",
    "lib/animators/lib/animators/states/ParticleAccelerationState.ts",
    "lib/animators/lib/animators/states/ParticleBezierCurveState.ts",
    "lib/animators/lib/animators/states/ParticleBillboardState.ts",
    "lib/animators/lib/animators/states/ParticleColorState.ts",
    "lib/animators/lib/animators/states/ParticleFollowState.ts",
    "lib/animators/lib/animators/states/ParticleInitialColorState.ts",
    "lib/animators/lib/animators/states/ParticleOrbitState.ts",
    "lib/animators/lib/animators/states/ParticleOscillatorState.ts",
    "lib/animators/lib/animators/states/ParticlePositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToHeadingState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToPositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotationalVelocityState.ts",
    "lib/animators/lib/animators/states/ParticleScaleState.ts",
    "lib/animators/lib/animators/states/ParticleSegmentedColorState.ts",
    "lib/animators/lib/animators/states/ParticleSpriteSheetState.ts",
    "lib/animators/lib/animators/states/ParticleStateBase.ts",
    "lib/animators/lib/animators/states/ParticleTimeState.ts",
    "lib/animators/lib/animators/states/ParticleUVState.ts",
    "lib/animators/lib/animators/states/ParticleVelocityState.ts",
    "lib/animators/lib/animators/states/SkeletonBinaryLERPState.ts",
    "lib/animators/lib/animators/states/SkeletonClipState.ts",
    "lib/animators/lib/animators/states/SkeletonDifferenceState.ts",
    "lib/animators/lib/animators/states/SkeletonDirectionalState.ts",
    "lib/animators/lib/animators/states/SkeletonNaryLERPState.ts",
    "lib/animators/lib/animators/states/VertexClipState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransition.ts",
    "lib/animators.ts",
    "lib/lib/elements/GL_ElementsBase.ts",
    "lib/lib/elements/GL_LineElements.ts",
    "lib/lib/elements/GL_SkyboxElements.ts",
    "lib/lib/elements/GL_TriangleElements.ts",
    "lib/elements.ts",
    "lib/lib/errors/AnimationSetError.ts",
    "lib/errors.ts",
    "lib/lib/events/AnimationStateEvent.ts",
    "lib/lib/events/AnimatorEvent.ts",
    "lib/lib/events/PassEvent.ts",
    "lib/lib/events/RTTEvent.ts",
    "lib/lib/events/ShadingMethodEvent.ts",
    "lib/events.ts",
    "lib/lib/filters/BlurFilter3D.ts",
    "lib/lib/filters/CompositeFilter3D.ts",
    "lib/lib/filters/FXAAFilter3D.ts",
    "lib/lib/filters/Filter3DBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DCompositeTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DFXAATask.ts",
    "lib/filters/lib/filters/tasks/Filter3DHBlurTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DTaskBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DVBlurTask.ts",
    "lib/filters.ts",
    "lib/lib/managers/RTTBufferManager.ts",
    "lib/managers.ts",
    "lib/lib/renderables/GL_BillboardRenderable.ts",
    "lib/lib/renderables/GL_GraphicRenderable.ts",
    "lib/lib/renderables/GL_LineSegmentRenderable.ts",
    "lib/lib/renderables/GL_RenderableBase.ts",
    "lib/lib/renderables/GL_SkyboxRenderable.ts",
    "lib/renderables.ts",
    "lib/lib/shaders/LightingShader.ts",
    "lib/lib/shaders/RegisterPool.ts",
    "lib/lib/shaders/ShaderBase.ts",
    "lib/lib/shaders/ShaderRegisterCache.ts",
    "lib/lib/shaders/ShaderRegisterData.ts",
    "lib/lib/shaders/ShaderRegisterElement.ts",
    "lib/shaders/lib/shaders/compilers/CompilerBase.ts",
    "lib/shaders/lib/shaders/compilers/LightingCompiler.ts",
    "lib/shaders.ts",
    "lib/lib/sort/RenderableMergeSort.ts",
    "lib/lib/sort/RenderableNullSort.ts",
    "lib/sort.ts",
    "lib/lib/surfaces/GL_BasicMaterialSurface.ts",
    "lib/lib/surfaces/GL_DepthSurface.ts",
    "lib/lib/surfaces/GL_DistanceSurface.ts",
    "lib/lib/surfaces/GL_SkyboxSurface.ts",
    "lib/lib/surfaces/GL_SurfaceBase.ts",
    "lib/lib/surfaces/GL_SurfacePassBase.ts",
    "lib/lib/surfaces/SurfacePool.ts",
    "lib/surfaces/lib/surfaces/passes/BasicMaterialPass.ts",
    "lib/surfaces/lib/surfaces/passes/PassBase.ts",
    "lib/surfaces.ts",
    "lib/lib/textures/GL_Single2DTexture.ts",
    "lib/lib/textures/GL_SingleCubeTexture.ts",
    "lib/lib/textures/GL_TextureBase.ts",
    "lib/textures.ts",
    "lib/tools/lib/tools/commands/Merge.ts",
    "lib/tools/lib/tools/data/ParticleGraphicsTransform.ts",
    "lib/tools.ts",
    "lib/lib/utils/ParticleGraphicsHelper.ts",
    "lib/lib/utils/PerspectiveMatrix3D.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "animators",
    "elements",
    "errors",
    "events",
    "filters",
    "managers",
    "renderables",
    "shaders",
    "sort",
    "surfaces",
    "textures",
    "tools",
    "utils",
    "DefaultRenderer_1",
    "DefaultRenderer",
    "default",
    "DepthRenderer_1",
    "DepthRenderer",
    "DistanceRenderer_1",
    "DistanceRenderer",
    "Filter3DRenderer_1",
    "Filter3DRenderer",
    "RendererBase_1",
    "RendererBase",
    "BasicMaterial_1",
    "Skybox_1",
    "Billboard_1",
    "LineSegment_1",
    "LineElements_1",
    "TriangleElements_1",
    "Graphic_1",
    "Single2DTexture_1",
    "SingleCubeTexture_1",
    "Stage_1",
    "SurfacePool",
    "registerAbstraction",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "GL_LineElements",
    "GL_TriangleElements",
    "ShaderBase",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "./lib/DefaultRenderer",
    "./lib/DepthRenderer",
    "./lib/DistanceRenderer",
    "./lib/Filter3DRenderer",
    "./lib/RendererBase",
    "./lib/animators",
    "./lib/elements",
    "./lib/errors",
    "./lib/events",
    "./lib/filters",
    "./lib/managers",
    "./lib/renderables",
    "./lib/shaders",
    "./lib/sort",
    "./lib/surfaces",
    "./lib/textures",
    "./lib/tools",
    "./lib/utils",
    "awayjs-display/lib/display/Billboard",
    "undefined",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-stagegl/lib/base/Stage",
    "awayjs-renderergl/lib/DefaultRenderer",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "BitmapImage2D_1",
    "ContextGLClearMask_1",
    "RTTBufferManager_1",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_antiAlias",
    "_directionalLights",
    "Array",
    "_pointLights",
    "_lightProbes",
    "shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "enterNode",
    "node",
    "enter",
    "debugVisible",
    "applyEntity",
    "bounds",
    "boundsPrimitive",
    "render",
    "camera",
    "scene",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "len",
    "light",
    "shadowMapper",
    "shadowsEnabled",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "applyDirectionalLight",
    "entity",
    "push",
    "applyLightProbe",
    "applyPointLight",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "./DepthRenderer",
    "./DistanceRenderer",
    "./Filter3DRenderer",
    "./RendererBase",
    "./managers/RTTBufferManager",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-renderergl/lib/DepthRenderer",
    "GL_DepthSurface_1",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iCollectionMark",
    "isCastingShadow",
    "./surfaces/GL_DepthSurface",
    "awayjs-renderergl/lib/DistanceRenderer",
    "GL_DistanceSurface_1",
    "./surfaces/GL_DistanceSurface",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "ContextGLDrawMode_1",
    "ContextGLBlendFactor_1",
    "ContextGLVertexBufferFormat_1",
    "RTTEvent_1",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "_positionIndex",
    "FLOAT_2",
    "_uvIndex",
    "setRenderTarget",
    "getAbstraction",
    "activate",
    "_inputTextureIndex",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "./events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "awayjs-renderergl/lib/RendererBase",
    "Matrix3D_1",
    "Matrix3DUtils_1",
    "Point_1",
    "Rectangle_1",
    "Vector3D_1",
    "EventDispatcher_1",
    "RendererEvent_1",
    "AGALMiniAssembler_1",
    "ContextGLCompareMode_1",
    "StageEvent_1",
    "StageManager_1",
    "SurfacePool_1",
    "RenderableMergeSort_1",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_cameraForward",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_pRttViewProjectionMatrix",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_numCullPlanes",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_surfaceClassGL",
    "_customCullPlanes",
    "x",
    "updateGlobalPos",
    "y",
    "notifyScissorUpdate",
    "renderable",
    "id",
    "_abstractionClassPool",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "elementsType",
    "elementsClass",
    "renderableClass",
    "assetClass",
    "activatePass",
    "pass",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "deactivatePass",
    "_iDeactivate",
    "_viewportDirty",
    "_scissorDirty",
    "_pBlendedRenderableHead",
    "_pOpaqueRenderableHead",
    "_cullPlanes",
    "frustumPlanes",
    "_cameraPosition",
    "scenePosition",
    "_cameraTransform",
    "sceneTransform",
    "getForward",
    "traversePartitions",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "copyFrom",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "setDepthTest",
    "LESS",
    "head",
    "first",
    "LESS_EQUAL",
    "pDraw",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL",
    "renderableGL2",
    "surfaceGL",
    "passes",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "next",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "ALWAYS",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "isRenderable",
    "isInFrustum",
    "_sourceEntity",
    "_zIndex",
    "zOffset",
    "subtract",
    "dotProduct",
    "_renderSceneTransform",
    "getRenderSceneTransform",
    "_acceptTraverser",
    "applyRenderable",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "zIndex",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "renderSceneTransform",
    "requiresBlending",
    "elementsGL",
    "numElements",
    "applySkybox",
    "obj",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "./sort/RenderableMergeSort",
    "./surfaces/SurfacePool",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase_1",
    "AbstractMethodError_1",
    "AnimationSetError_1",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "registerCache",
    "sharedRegisters",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "../errors/AnimationSetError",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame_1",
    "getTimer_1",
    "AnimatorEvent_1",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "sprite",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "transform",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "clone",
    "invalidateElements",
    "graphics",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "../events/AnimatorEvent",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationSetBase_1",
    "AnimationRegisterData_1",
    "AnimationElements_1",
    "ParticleAnimationData_1",
    "ParticleProperties_1",
    "ParticlePropertiesMode_1",
    "ParticleTimeNode_1",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterData",
    "animationRegisterData",
    "needVelocity",
    "animatableAttributes",
    "animationTargetRegisters",
    "positionTarget",
    "vertexZeroConst",
    "velocityTarget",
    "POST_PRIORITY",
    "scaleAndRotateTarget",
    "COLOR_PRIORITY",
    "hasColorMulNode",
    "colorMulTarget",
    "getFreeVertexVectorTemp",
    "addVertexTempUsages",
    "colorMulVary",
    "getFreeVarying",
    "vertexOneConst",
    "hasColorAddNode",
    "colorAddTarget",
    "colorAddVary",
    "usesFragmentAnimation",
    "hasUVNode",
    "setUVSourceAndTarget",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "uvSource",
    "setVertexConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "animationElements",
    "_iGenerateAnimationElements",
    "parent",
    "initParticleFunc",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "../animators/AnimationSetBase",
    "../animators/data/AnimationElements",
    "../animators/data/AnimationRegisterData",
    "../animators/data/ParticleAnimationData",
    "../animators/data/ParticleProperties",
    "../animators/data/ParticlePropertiesMode",
    "../animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "AnimatorBase_1",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "resetTime",
    "../animators/AnimatorBase",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "_matricesIndex",
    "numUsedVertexConstants",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "getFreeVertexAttribute",
    "jointIndexIndex",
    "weightStream",
    "jointWeightIndex",
    "indices",
    "weights",
    "temp1",
    "dot",
    "source",
    "getFreeVertexConstant",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent_1",
    "JointPose_1",
    "SkeletonPose_1",
    "AnimationStateEvent_1",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeletonAnimationSet",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "setVertexConstFromArray",
    "matricesIndex",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "z",
    "w",
    "inverseBindPose",
    "targetElements",
    "normals",
    "tangents",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "sourceTangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "q",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "../animators/data/JointPose",
    "../animators/data/SkeletonPose",
    "../events/AnimationStateEvent",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode_1",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "temp2",
    "regs",
    "constantReg",
    "weightsIndex",
    "poseIndices",
    "poseInput",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "../animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "setNullPose",
    "_iIndex",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "AnimationElements",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterData",
    "ShaderRegisterElement_1",
    "AnimationRegisterData",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "regName",
    "vertexTwoConst",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "../../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "Quaternion_1",
    "JointPose",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "ParticleAnimationData",
    "totalTime",
    "startVertexIndex",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "ParticlePropertiesMode",
    "GLOBAL",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "ParticleProperties",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "SkeletonPose",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "../../animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "VertexAnimationMode",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase_1",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase_1",
    "ParticleAccelerationState_1",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "accelerationValue",
    "_pMode",
    "ACCELERATION_INDEX",
    "temp",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "../../animators/data/ParticlePropertiesMode",
    "../../animators/nodes/ParticleNodeBase",
    "../../animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState_1",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "../../animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState_1",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "hasBillboard",
    "../../animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform_1",
    "ParticleAnimationSet_1",
    "ParticleColorState_1",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "../../animators/ParticleAnimationSet",
    "../../animators/states/ParticleColorState",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState_1",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "../../animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState_1",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "../../animators/states/ParticleInitialColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "ParticleNodeBase",
    "_pDataLength",
    "MODES",
    "_priority",
    0,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState_1",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "Math",
    "PI",
    "../../animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState_1",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "../../animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState_1",
    "ParticlePositionNode",
    "position",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "../../animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState_1",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "../../animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState_1",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "../../animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState_1",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "../../animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState_1",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "../../animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState_1",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "../../animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState_1",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "../../animators/states/ParticleSpriteSheetState",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "ParticleTimeState_1",
    "ParticleTimeNode",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "../../animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState_1",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "../../animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState_1",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "../../animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState_1",
    "SkeletonBinaryLERPNode",
    "../../animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "AnimationClipNodeBase_1",
    "SkeletonClipState_1",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "../../animators/nodes/AnimationClipNodeBase",
    "../../animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState_1",
    "SkeletonDifferenceNode",
    "../../animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState_1",
    "SkeletonDirectionalNode",
    "../../animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState_1",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "../../animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState_1",
    "VertexClipNode",
    "_translations",
    "geometry",
    "../../animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase_1",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "../../animators/states/AnimationStateBase",
    "../../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "ParticleStateBase_1",
    "ParticleAccelerationState",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "../../animators/states/ParticleStateBase",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "ParticleBezierCurveState",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "MathConsts_1",
    "Orientation3D_1",
    "ParticleBillboardState",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "setVertexConstFromMatrix",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "ParticleColorState",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "ParticleFollowState",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "ParticleInitialColorState",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "ParticleOrbitState",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "ParticleOscillatorState",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "ParticlePositionState",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "ParticleRotateToHeadingState",
    "_pParticleAnimator",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "ParticleRotateToPositionState",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "transformVector",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "ParticleRotationalVelocityState",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "ParticleScaleState",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "ParticleSegmentedColorState",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleSpriteSheetState",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "usesUVTransform",
    "_spriteSheetData",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "ParticleStateBase",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "ParticleTimeState",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "ParticleUVState",
    "particleUVNode",
    "_particleUVNode",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "ParticleVelocityState",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "SkeletonBinaryLERPState",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "../../animators/data/SkeletonPose",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "AnimationClipState_1",
    "SkeletonClipState",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "../../animators/states/AnimationClipState",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "SkeletonDifferenceState",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "SkeletonDirectionalState",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "SkeletonNaryLERPState",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "VertexClipState",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "SkeletonBinaryLERPNode_1",
    "CrossfadeTransitionState_1",
    "CrossfadeTransitionNode",
    "../../animators/nodes/SkeletonBinaryLERPNode",
    "../../animators/transitions/CrossfadeTransitionState",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "../../animators/../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransitionNode_1",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "../../animators/transitions/CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "awayjs-renderergl/lib/animators",
    "ColorSegmentPoint_1",
    "Skeleton_1",
    "SkeletonJoint_1",
    "ParticleAccelerationNode_1",
    "ParticleBezierCurveNode_1",
    "ParticleBillboardNode_1",
    "ParticleColorNode_1",
    "ParticleFollowNode_1",
    "ParticleInitialColorNode_1",
    "ParticleOrbitNode_1",
    "ParticleOscillatorNode_1",
    "ParticlePositionNode_1",
    "ParticleRotateToHeadingNode_1",
    "ParticleRotateToPositionNode_1",
    "ParticleRotationalVelocityNode_1",
    "ParticleScaleNode_1",
    "ParticleSegmentedColorNode_1",
    "ParticleSpriteSheetNode_1",
    "ParticleUVNode_1",
    "ParticleVelocityNode_1",
    "SkeletonClipNode_1",
    "SkeletonDifferenceNode_1",
    "SkeletonDirectionalNode_1",
    "SkeletonNaryLERPNode_1",
    "VertexClipNode_1",
    "CrossfadeTransition_1",
    "ParticleAnimator_1",
    "SkeletonAnimationSet_1",
    "SkeletonAnimator_1",
    "VertexAnimationSet_1",
    "VertexAnimator_1",
    "./animators/AnimationSetBase",
    "./animators/AnimatorBase",
    "./animators/ParticleAnimationSet",
    "./animators/ParticleAnimator",
    "./animators/SkeletonAnimationSet",
    "./animators/SkeletonAnimator",
    "./animators/VertexAnimationSet",
    "./animators/VertexAnimator",
    "./animators/data/AnimationElements",
    "./animators/data/AnimationRegisterData",
    "./animators/data/ColorSegmentPoint",
    "./animators/data/JointPose",
    "./animators/data/ParticleAnimationData",
    "./animators/data/ParticleProperties",
    "./animators/data/ParticlePropertiesMode",
    "./animators/data/Skeleton",
    "./animators/data/SkeletonJoint",
    "./animators/data/SkeletonPose",
    "./animators/data/VertexAnimationMode",
    "./animators/nodes/AnimationClipNodeBase",
    "./animators/nodes/ParticleAccelerationNode",
    "./animators/nodes/ParticleBezierCurveNode",
    "./animators/nodes/ParticleBillboardNode",
    "./animators/nodes/ParticleColorNode",
    "./animators/nodes/ParticleFollowNode",
    "./animators/nodes/ParticleInitialColorNode",
    "./animators/nodes/ParticleNodeBase",
    "./animators/nodes/ParticleOrbitNode",
    "./animators/nodes/ParticleOscillatorNode",
    "./animators/nodes/ParticlePositionNode",
    "./animators/nodes/ParticleRotateToHeadingNode",
    "./animators/nodes/ParticleRotateToPositionNode",
    "./animators/nodes/ParticleRotationalVelocityNode",
    "./animators/nodes/ParticleScaleNode",
    "./animators/nodes/ParticleSegmentedColorNode",
    "./animators/nodes/ParticleSpriteSheetNode",
    "./animators/nodes/ParticleTimeNode",
    "./animators/nodes/ParticleUVNode",
    "./animators/nodes/ParticleVelocityNode",
    "./animators/nodes/SkeletonBinaryLERPNode",
    "./animators/nodes/SkeletonClipNode",
    "./animators/nodes/SkeletonDifferenceNode",
    "./animators/nodes/SkeletonDirectionalNode",
    "./animators/nodes/SkeletonNaryLERPNode",
    "./animators/nodes/VertexClipNode",
    "./animators/states/AnimationClipState",
    "./animators/states/AnimationStateBase",
    "./animators/states/ParticleAccelerationState",
    "./animators/states/ParticleBezierCurveState",
    "./animators/states/ParticleBillboardState",
    "./animators/states/ParticleColorState",
    "./animators/states/ParticleFollowState",
    "./animators/states/ParticleInitialColorState",
    "./animators/states/ParticleOrbitState",
    "./animators/states/ParticleOscillatorState",
    "./animators/states/ParticlePositionState",
    "./animators/states/ParticleRotateToHeadingState",
    "./animators/states/ParticleRotateToPositionState",
    "./animators/states/ParticleRotationalVelocityState",
    "./animators/states/ParticleScaleState",
    "./animators/states/ParticleSegmentedColorState",
    "./animators/states/ParticleSpriteSheetState",
    "./animators/states/ParticleStateBase",
    "./animators/states/ParticleTimeState",
    "./animators/states/ParticleUVState",
    "./animators/states/ParticleVelocityState",
    "./animators/states/SkeletonBinaryLERPState",
    "./animators/states/SkeletonClipState",
    "./animators/states/SkeletonDifferenceState",
    "./animators/states/SkeletonDirectionalState",
    "./animators/states/SkeletonNaryLERPState",
    "./animators/states/VertexClipState",
    "./animators/transitions/CrossfadeTransition",
    "./animators/transitions/CrossfadeTransitionNode",
    "./animators/transitions/CrossfadeTransitionState",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase_1",
    "AssetEvent_1",
    "ElementsUtils_1",
    "GL_ElementsBase",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferGL",
    "_indices",
    "getVertexBufferGL",
    "bufferId",
    "_updateVertices",
    "size",
    "unsigned",
    "onClear",
    "_overflow",
    "_setRenderState",
    "draw",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "ContextGLProgramType_1",
    "GL_ElementsBase_1",
    "lineElements",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "position0",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "position1",
    "thickness",
    "viewMatrixReg",
    "viewMatrixIndex",
    "constOne",
    "constNegOne",
    "misc",
    "sceneMatrixReg",
    "sceneMatrixIndex",
    "q0",
    "q1",
    "behind",
    "qclipped",
    "_iGetFragmentCode",
    "colorBufferIndex",
    "colors",
    "vertexConstantData",
    "projection",
    "near",
    "matrix",
    "copyRawDataTo",
    "setProgramConstantsFromArray",
    "VERTEX",
    "numIndices",
    "drawVertices",
    "../elements/GL_ElementsBase",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "GL_TriangleElements_1",
    "GL_SkyboxElements",
    "apply",
    "arguments",
    "_skyboxProjection",
    "scenePositionIndex",
    "skyboxScale",
    "projectionDependencies",
    "projectionFragment",
    "far",
    "sqrt",
    "copyRowTo",
    "camPos",
    "cx",
    "cy",
    "cz",
    "cw",
    "signX",
    "signY",
    "inverse",
    "invert",
    "copyRowFrom",
    "FRAGMENT",
    "fragmentConstantData",
    "../elements/GL_TriangleElements",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "triangleElements",
    "_triangleElements",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "matrix3D",
    "CALCULATION_MATRIX",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "awayjs-renderergl/lib/elements",
    "GL_LineElements_1",
    "GL_SkyboxElements_1",
    "./elements/GL_ElementsBase",
    "./elements/GL_LineElements",
    "./elements/GL_SkyboxElements",
    "./elements/GL_TriangleElements",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "ErrorBase_1",
    "AnimationSetError",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-renderergl/lib/errors",
    "./errors/AnimationSetError",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "EventBase_1",
    "AnimationStateEvent",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "AnimatorEvent",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "awayjs-renderergl/lib/events/RTTEvent",
    "RTTEvent",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "awayjs-renderergl/lib/events",
    "PassEvent_1",
    "ShadingMethodEvent_1",
    "./events/AnimationStateEvent",
    "./events/AnimatorEvent",
    "./events/PassEvent",
    "./events/ShadingMethodEvent",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask_1",
    "Filter3DVBlurTask_1",
    "Filter3DBase_1",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "../filters/Filter3DBase",
    "../filters/tasks/Filter3DHBlurTask",
    "../filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask_1",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "../filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask_1",
    "FXAAFilter3D",
    "_fxaaTask",
    "../filters/tasks/Filter3DFXAATask",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "Filter3DBase",
    "_textureWidth",
    "_textureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "Filter3DTaskBase_1",
    "Filter3DCompositeTask",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "_registerCache",
    "getFreeFragmentVectorTemp",
    "addFragmentTempUsages",
    "inputTexture",
    "getFreeTextureReg",
    "_overlayTextureIndex",
    "getFreeFragmentConstant",
    "_exposureIndex",
    "scaling",
    "_scalingIndex",
    "_uvVarying",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "../../filters/tasks/Filter3DTaskBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "Filter3DFXAATask",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "Filter3DHBlurTask",
    "numSamples",
    "invW",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "Image2D_1",
    "ShaderRegisterCache_1",
    "Filter3DTaskBase",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "../../shaders/ShaderRegisterCache",
    "awayjs-core/lib/image/Image2D",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "Filter3DVBlurTask",
    "invH",
    "awayjs-renderergl/lib/filters",
    "BlurFilter3D_1",
    "CompositeFilter3D_1",
    "FXAAFilter3D_1",
    "./filters/BlurFilter3D",
    "./filters/CompositeFilter3D",
    "./filters/FXAAFilter3D",
    "./filters/Filter3DBase",
    "./filters/tasks/Filter3DCompositeTask",
    "./filters/tasks/Filter3DFXAATask",
    "./filters/tasks/Filter3DHBlurTask",
    "./filters/tasks/Filter3DTaskBase",
    "./filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "ImageUtils_1",
    "RTTBufferManager",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "../events/RTTEvent",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/managers",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "AttributesBuffer_1",
    "DefaultMaterialManager_1",
    "GL_RenderableBase_1",
    "GL_Billboard",
    "billboard",
    "renderer",
    "_billboard",
    "_pGetElements",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_id",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetSurface",
    "_renderer",
    "getDefaultMaterial",
    "../renderables/GL_RenderableBase",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "_count",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "RenderableEvent_1",
    "GL_RenderableBase",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onInvalidateSurfaceDelegate",
    "_onInvalidateSurface",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_SURFACE",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_elementsGL",
    "_updateSurface",
    "_surfaceGL",
    "surface",
    "activeElements",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "skybox",
    "_skybox",
    "../elements/GL_SkyboxElements",
    "awayjs-renderergl/lib/renderables",
    "GL_BillboardRenderable_1",
    "GL_GraphicRenderable_1",
    "GL_LineSegmentRenderable_1",
    "GL_SkyboxRenderable_1",
    "./renderables/GL_BillboardRenderable",
    "./renderables/GL_GraphicRenderable",
    "./renderables/GL_LineSegmentRenderable",
    "./renderables/GL_RenderableBase",
    "./renderables/GL_SkyboxRenderable",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources_1",
    "ContextGLProfile_1",
    "ShaderBase_1",
    "LightingCompiler_1",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "dirLights",
    "directionalLights",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLights",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "../shaders/ShaderBase",
    "../shaders/compilers/LightingCompiler",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "BlendMode_1",
    "ArgumentError_1",
    "ContextGLTriangleFace_1",
    "CompilerBase_1",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "BACK",
    "usesPositionFragment",
    "imageIndices",
    "_elementsClass",
    "_updateProgram",
    "_programData",
    "_usesAnimation",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "numUsedFragmentConstants",
    "_iInitConstantData",
    "usesAnimation",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "setCulling",
    "useBothSides",
    "NONE",
    "coordinateSystem",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "_pRegisterCache",
    "_pSharedRegisters",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "rawData",
    "setFragmentConst",
    "../shaders/compilers/CompilerBase",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "RegisterPool_1",
    "ShaderRegisterCache",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "removeFragmentTempUsage",
    "getFreeFragmentSingleTemp",
    "../shaders/RegisterPool",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "ShaderRegisterElement",
    "component",
    "_index",
    "_toStr",
    "COMPONENTS",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "ShaderRegisterData_1",
    "CompilerBase",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "../../shaders/ShaderRegisterData",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "LightingCompiler",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "../../shaders/compilers/CompilerBase",
    "awayjs-renderergl/lib/shaders",
    "LightingShader_1",
    "./shaders/LightingShader",
    "./shaders/RegisterPool",
    "./shaders/ShaderBase",
    "./shaders/ShaderRegisterCache",
    "./shaders/ShaderRegisterData",
    "./shaders/ShaderRegisterElement",
    "./shaders/compilers/CompilerBase",
    "./shaders/compilers/LightingCompiler",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-renderergl/lib/sort",
    "RenderableNullSort_1",
    "./sort/RenderableNullSort",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "BasicMaterialPass_1",
    "GL_SurfaceBase_1",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "../surfaces/GL_SurfaceBase",
    "../surfaces/passes/BasicMaterialPass",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_SurfacePassBase_1",
    "GL_DepthSurface",
    "_shader",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "../surfaces/GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "DistanceRender",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "_texture",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "SurfaceEvent_1",
    "MaterialBase_1",
    "GL_SurfaceBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "bothSides",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "_getEnabledGPUAnimation",
    "mult",
    "iOwners",
    "numOwners",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "../events/PassEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "PassBase_1",
    "BasicMaterialPass",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "_render",
    "../../shaders/ShaderBase",
    "../../surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "PassBase",
    "_preserveAlpha",
    "../../events/PassEvent",
    "awayjs-renderergl/lib/surfaces",
    "GL_BasicMaterialSurface_1",
    "GL_DistanceSurface",
    "GL_SkyboxSurface_1",
    "./surfaces/GL_BasicMaterialSurface",
    "./surfaces/GL_SkyboxSurface",
    "./surfaces/GL_SurfaceBase",
    "./surfaces/GL_SurfacePassBase",
    "./surfaces/passes/BasicMaterialPass",
    "./surfaces/passes/PassBase",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "MappingMode_1",
    "GL_TextureBase_1",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "../textures/GL_TextureBase",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "ContextGLTextureFormat_1",
    "GL_TextureBase",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "awayjs-renderergl/lib/textures",
    "GL_Single2DTexture_1",
    "GL_SingleCubeTexture_1",
    "./textures/GL_Single2DTexture",
    "./textures/GL_SingleCubeTexture",
    "./textures/GL_TextureBase",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Sprite_1",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToSpritees",
    "sprites",
    "_toDispose",
    "_graphicVOs",
    "destSprite",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Sprite",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "awayjs-renderergl/lib/tools",
    "Merge_1",
    "ParticleGraphicsTransform_1",
    "./tools/commands/Merge",
    "./tools/data/ParticleGraphicsTransform",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData_1",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "awayjs-renderergl/lib/utils",
    "ParticleGraphicsHelper_1",
    "PerspectiveMatrix3D_1",
    "./utils/ParticleGraphicsHelper",
    "./utils/PerspectiveMatrix3D"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar animators = require(\"./lib/animators\");\nexports.animators = animators;\nvar elements = require(\"./lib/elements\");\nexports.elements = elements;\nvar errors = require(\"./lib/errors\");\nexports.errors = errors;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar filters = require(\"./lib/filters\");\nexports.filters = filters;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar renderables = require(\"./lib/renderables\");\nexports.renderables = renderables;\nvar shaders = require(\"./lib/shaders\");\nexports.shaders = shaders;\nvar sort = require(\"./lib/sort\");\nexports.sort = sort;\nvar surfaces = require(\"./lib/surfaces\");\nexports.surfaces = surfaces;\nvar textures = require(\"./lib/textures\");\nexports.textures = textures;\nvar tools = require(\"./lib/tools\");\nexports.tools = tools;\nvar utils = require(\"./lib/utils\");\nexports.utils = utils;\nvar DefaultRenderer_1 = require(\"./lib/DefaultRenderer\");\nexports.DefaultRenderer = DefaultRenderer_1.default;\nvar DepthRenderer_1 = require(\"./lib/DepthRenderer\");\nexports.DepthRenderer = DepthRenderer_1.default;\nvar DistanceRenderer_1 = require(\"./lib/DistanceRenderer\");\nexports.DistanceRenderer = DistanceRenderer_1.default;\nvar Filter3DRenderer_1 = require(\"./lib/Filter3DRenderer\");\nexports.Filter3DRenderer = Filter3DRenderer_1.default;\nvar RendererBase_1 = require(\"./lib/RendererBase\");\nexports.RendererBase = RendererBase_1.default;\nvar BasicMaterial_1 = require(\"awayjs-display/lib/materials/BasicMaterial\");\nvar Skybox_1 = require(\"awayjs-display/lib/display/Skybox\");\nvar Billboard_1 = require(\"awayjs-display/lib/display/Billboard\");\nvar LineSegment_1 = require(\"awayjs-display/lib/display/LineSegment\");\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nvar Stage_1 = require(\"awayjs-stagegl/lib/base/Stage\");\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial_1.default);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox_1.default);\nStage_1.default.registerAbstraction(elements.GL_LineElements, LineElements_1.default);\nStage_1.default.registerAbstraction(elements.GL_TriangleElements, TriangleElements_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_BillboardRenderable, Billboard_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_GraphicRenderable, Graphic_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox_1.default);\n\n},{\"./lib/DefaultRenderer\":\"awayjs-renderergl/lib/DefaultRenderer\",\"./lib/DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"./lib/DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"./lib/Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"./lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./lib/animators\":\"awayjs-renderergl/lib/animators\",\"./lib/elements\":\"awayjs-renderergl/lib/elements\",\"./lib/errors\":\"awayjs-renderergl/lib/errors\",\"./lib/events\":\"awayjs-renderergl/lib/events\",\"./lib/filters\":\"awayjs-renderergl/lib/filters\",\"./lib/managers\":\"awayjs-renderergl/lib/managers\",\"./lib/renderables\":\"awayjs-renderergl/lib/renderables\",\"./lib/shaders\":\"awayjs-renderergl/lib/shaders\",\"./lib/sort\":\"awayjs-renderergl/lib/sort\",\"./lib/surfaces\":\"awayjs-renderergl/lib/surfaces\",\"./lib/textures\":\"awayjs-renderergl/lib/textures\",\"./lib/tools\":\"awayjs-renderergl/lib/tools\",\"./lib/utils\":\"awayjs-renderergl/lib/utils\",\"awayjs-display/lib/display/Billboard\":undefined,\"awayjs-display/lib/display/LineSegment\":undefined,\"awayjs-display/lib/display/Skybox\":undefined,\"awayjs-display/lib/graphics/Graphic\":undefined,\"awayjs-display/lib/graphics/LineElements\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/materials/BasicMaterial\":undefined,\"awayjs-display/lib/textures/Single2DTexture\":undefined,\"awayjs-display/lib/textures/SingleCubeTexture\":undefined,\"awayjs-stagegl/lib/base/Stage\":undefined}],\"awayjs-renderergl/lib/DefaultRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar ContextGLClearMask_1 = require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nvar RendererBase_1 = require(\"./RendererBase\");\nvar DepthRenderer_1 = require(\"./DepthRenderer\");\nvar DistanceRenderer_1 = require(\"./DistanceRenderer\");\nvar Filter3DRenderer_1 = require(\"./Filter3DRenderer\");\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nvar DefaultRenderer = (function (_super) {\n    __extends(DefaultRenderer, _super);\n    /**\n     * Creates a new DefaultRenderer object.\n     *\n     * @param antiAlias The amount of anti-aliasing to use.\n     * @param renderMode The render mode to use.\n     */\n    function DefaultRenderer(stage, forceSoftware, profile, mode) {\n        if (stage === void 0) { stage = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this, stage, null, forceSoftware, profile, mode);\n        this._antiAlias = 0;\n        this._directionalLights = new Array();\n        this._pointLights = new Array();\n        this._lightProbes = new Array();\n        if (stage)\n            this.shareContext = true;\n        this._pRttBufferManager = RTTBufferManager_1.default.getInstance(this._pStage);\n        this._pDepthRenderer = new DepthRenderer_1.default(this._pStage);\n        this._pDistanceRenderer = new DistanceRenderer_1.default(this._pStage);\n        if (this._width == 0)\n            this.width = window.innerWidth;\n        else\n            this._pRttBufferManager.viewWidth = this._width;\n        if (this._height == 0)\n            this.height = window.innerHeight;\n        else\n            this._pRttBufferManager.viewHeight = this._height;\n    }\n    Object.defineProperty(DefaultRenderer.prototype, \"antiAlias\", {\n        get: function () {\n            return this._antiAlias;\n        },\n        set: function (value) {\n            if (this._antiAlias == value)\n                return;\n            this._antiAlias = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"depthPrepass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._depthPrepass;\n        },\n        set: function (value) {\n            this._depthPrepass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"filters3d\", {\n        /**\n         *\n         * @returns {*}\n         */\n        get: function () {\n            return this._pFilter3DRenderer ? this._pFilter3DRenderer.filters : null;\n        },\n        set: function (value) {\n            if (value && value.length == 0)\n                value = null;\n            if (this._pFilter3DRenderer && !value) {\n                this._pFilter3DRenderer.dispose();\n                this._pFilter3DRenderer = null;\n            }\n            else if (!this._pFilter3DRenderer && value) {\n                this._pFilter3DRenderer = new Filter3DRenderer_1.default(this._pStage);\n                this._pFilter3DRenderer.filters = value;\n            }\n            if (this._pFilter3DRenderer) {\n                this._pFilter3DRenderer.filters = value;\n                this._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n            }\n            else {\n                this._pRequireDepthRender = false;\n                if (this._pDepthRender) {\n                    this._pDepthRender.dispose();\n                    this._pDepthRender = null;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DefaultRenderer.prototype.enterNode = function (node) {\n        var enter = _super.prototype.enterNode.call(this, node);\n        if (enter && node.debugVisible)\n            this.applyEntity(node.bounds.boundsPrimitive);\n        return enter;\n    };\n    DefaultRenderer.prototype.render = function (camera, scene) {\n        _super.prototype.render.call(this, camera, scene);\n        if (!this._pStage.recoverFromDisposal()) {\n            this._pBackBufferInvalid = true;\n            return;\n        }\n        if (this._pBackBufferInvalid)\n            this.pUpdateBackBuffer();\n        if (this.shareContext && this._pContext)\n            this._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask_1.default.DEPTH);\n        if (this._pFilter3DRenderer) {\n            this.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this.textureRatioY = this._pRttBufferManager.textureRatioY;\n        }\n        else {\n            this.textureRatioX = 1;\n            this.textureRatioY = 1;\n        }\n        if (this._pRequireDepthRender)\n            this.pRenderSceneDepthToTexture(camera, scene);\n        if (this._depthPrepass)\n            this.pRenderDepthPrepass(camera, scene);\n        //reset lights\n        this._directionalLights.length = 0;\n        this._pointLights.length = 0;\n        this._lightProbes.length = 0;\n        if (this._pFilter3DRenderer && this._pContext) {\n            this._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n            this._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n        }\n        else {\n            if (this.shareContext)\n                this._iRender(camera, scene, null, this._pScissorRect);\n            else\n                this._iRender(camera, scene);\n        }\n        if (!this.shareContext && this._pContext)\n            this._pContext.present();\n        // register that a view has been rendered\n        this._pStage.bufferClear = false;\n    };\n    DefaultRenderer.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this.updateLights(camera);\n        _super.prototype.pExecuteRender.call(this, camera, target, scissorRect, surfaceSelector);\n    };\n    DefaultRenderer.prototype.updateLights = function (camera) {\n        var len, i;\n        var light;\n        var shadowMapper;\n        len = this._directionalLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._directionalLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n        }\n        len = this._pointLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._pointLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n        }\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyDirectionalLight = function (entity) {\n        this._directionalLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyLightProbe = function (entity) {\n        this._lightProbes.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyPointLight = function (entity) {\n        this._pointLights.push(entity);\n    };\n    DefaultRenderer.prototype.dispose = function () {\n        if (!this.shareContext)\n            this._pStage.dispose();\n        this._pRttBufferManager.dispose();\n        this._pRttBufferManager = null;\n        this._pDepthRenderer.dispose();\n        this._pDistanceRenderer.dispose();\n        this._pDepthRenderer = null;\n        this._pDistanceRenderer = null;\n        this._pDepthRender = null;\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderDepthPrepass = function (camera, scene) {\n        this._pDepthRenderer.disableColor = true;\n        if (this._pFilter3DRenderer) {\n            this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n            this._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n        }\n        else {\n            this._pDepthRenderer.textureRatioX = 1;\n            this._pDepthRenderer.textureRatioY = 1;\n            this._pDepthRenderer._iRender(camera, scene);\n        }\n        this._pDepthRenderer.disableColor = false;\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderSceneDepthToTexture = function (camera, scene) {\n        if (this._pDepthTextureInvalid || !this._pDepthRender)\n            this.initDepthTexture(this._pStage.context);\n        this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n        this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n        this._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n    };\n    /**\n     * Updates the backbuffer dimensions.\n     */\n    DefaultRenderer.prototype.pUpdateBackBuffer = function () {\n        // No reason trying to configure back buffer if there is no context available.\n        // Doing this anyway (and relying on _stage to cache width/height for\n        // context does get available) means usesSoftwareRendering won't be reliable.\n        if (this._pStage.context && !this.shareContext) {\n            if (this._width && this._height) {\n                this._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n                this._pBackBufferInvalid = false;\n            }\n        }\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.initDepthTexture = function (context) {\n        this._pDepthTextureInvalid = false;\n        if (this._pDepthRender)\n            this._pDepthRender.dispose();\n        this._pDepthRender = new BitmapImage2D_1.default(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n    };\n    return DefaultRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DefaultRenderer;\n\n},{\"./DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"./DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"./Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-stagegl/lib/base/ContextGLClearMask\":undefined}],\"awayjs-renderergl/lib/DepthRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"./RendererBase\");\nvar GL_DepthSurface_1 = require(\"./surfaces/GL_DepthSurface\");\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nvar DepthRenderer = (function (_super) {\n    __extends(DepthRenderer, _super);\n    /**\n     * Creates a new DepthRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DepthRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DepthSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DepthRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DepthRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DepthRenderer;\n\n},{\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\"}],\"awayjs-renderergl/lib/DistanceRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"./RendererBase\");\nvar GL_DistanceSurface_1 = require(\"./surfaces/GL_DistanceSurface\");\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nvar DistanceRenderer = (function (_super) {\n    __extends(DistanceRenderer, _super);\n    /**\n     * Creates a new DistanceRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DistanceRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DistanceSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DistanceRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DistanceRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRenderer;\n\n},{\"./RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"./surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\"}],\"awayjs-renderergl/lib/Filter3DRenderer\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar RTTEvent_1 = require(\"./events/RTTEvent\");\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\n/**\n * @class away.render.Filter3DRenderer\n */\nvar Filter3DRenderer = (function () {\n    function Filter3DRenderer(stage) {\n        var _this = this;\n        this._filterSizesInvalid = true;\n        this._onRTTResizeDelegate = function (event) { return _this.onRTTResize(event); };\n        this._stage = stage;\n        this._rttManager = RTTBufferManager_1.default.getInstance(stage);\n        this._rttManager.addEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n    }\n    Filter3DRenderer.prototype.onRTTResize = function (event) {\n        this._filterSizesInvalid = true;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.getMainInputTexture = function (stage) {\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        return this._mainInputTexture;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"filters\", {\n        get: function () {\n            return this._filters;\n        },\n        set: function (value) {\n            this._filters = value;\n            this._filterTasksInvalid = true;\n            this._requireDepthRender = false;\n            if (!this._filters)\n                return;\n            for (var i = 0; i < this._filters.length; ++i)\n                if (this._filters[i].requireDepthRender)\n                    this._requireDepthRender = true;\n            this._filterSizesInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.updateFilterTasks = function (stage) {\n        var len;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (!this._filters) {\n            this._tasks = null;\n            return;\n        }\n        this._tasks = new Array();\n        len = this._filters.length - 1;\n        var filter;\n        for (var i = 0; i <= len; ++i) {\n            // make sure all internal tasks are linked together\n            filter = this._filters[i];\n            filter.setRenderTargets(i == len ? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n            this._tasks = this._tasks.concat(filter.tasks);\n        }\n        this._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n    };\n    Filter3DRenderer.prototype.render = function (stage, camera, depthTexture) {\n        var len;\n        var i;\n        var task;\n        var context = stage.context;\n        var indexBuffer = this._rttManager.indexBuffer;\n        var vertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n        if (!this._filters)\n            return;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        len = this._filters.length;\n        for (i = 0; i < len; ++i)\n            this._filters[i].update(stage, camera);\n        len = this._tasks.length;\n        if (len > 1) {\n            context.setProgram(this._tasks[0].getProgram(stage));\n            context.setVertexBufferAt(this._tasks[0]._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            context.setVertexBufferAt(this._tasks[0]._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        for (i = 0; i < len; ++i) {\n            task = this._tasks[i];\n            stage.setRenderTarget(task.target);\n            context.setProgram(task.getProgram(stage));\n            stage.getAbstraction(task.getMainInputTexture(stage)).activate(task._inputTextureIndex, false);\n            if (!task.target) {\n                stage.scissorRect = null;\n                vertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n                context.setVertexBufferAt(task._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                context.setVertexBufferAt(task._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            }\n            context.clear(0.0, 0.0, 0.0, 0.0);\n            task.activate(stage, camera, depthTexture);\n            context.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n            context.drawIndices(ContextGLDrawMode_1.default.TRIANGLES, indexBuffer, 0, 6);\n            task.deactivate(stage);\n        }\n        context.setTextureAt(0, null);\n        context.setVertexBufferAt(0, null);\n        context.setVertexBufferAt(1, null);\n    };\n    Filter3DRenderer.prototype.updateFilterSizes = function () {\n        for (var i = 0; i < this._filters.length; ++i) {\n            this._filters[i].textureWidth = this._rttManager.textureWidth;\n            this._filters[i].textureHeight = this._rttManager.textureHeight;\n            this._filters[i].rttManager = this._rttManager;\n        }\n        this._filterSizesInvalid = true;\n    };\n    Filter3DRenderer.prototype.dispose = function () {\n        this._rttManager.removeEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n        this._rttManager = null;\n        this._stage = null;\n    };\n    return Filter3DRenderer;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DRenderer;\n\n},{\"./events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/RendererBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar RendererEvent_1 = require(\"awayjs-display/lib/events/RendererEvent\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar StageEvent_1 = require(\"awayjs-stagegl/lib/events/StageEvent\");\nvar StageManager_1 = require(\"awayjs-stagegl/lib/managers/StageManager\");\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\nvar RenderableMergeSort_1 = require(\"./sort/RenderableMergeSort\");\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nvar RendererBase = (function (_super) {\n    __extends(RendererBase, _super);\n    /**\n     * Creates a new RendererBase object.\n     */\n    function RendererBase(stage, surfaceClassGL, forceSoftware, profile, mode) {\n        var _this = this;\n        if (stage === void 0) { stage = null; }\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this);\n        this._objectPools = new Object();\n        this._abstractionPool = new Object();\n        this._activeMasksConfig = new Array();\n        this._registeredMasks = new Array();\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._cameraForward = new Vector3D_1.default();\n        this._viewPort = new Rectangle_1.default();\n        this._pBackBufferInvalid = true;\n        this._pDepthTextureInvalid = true;\n        this._depthPrepass = false;\n        this._backgroundR = 0;\n        this._backgroundG = 0;\n        this._backgroundB = 0;\n        this._backgroundAlpha = 1;\n        this.textureRatioX = 1;\n        this.textureRatioY = 1;\n        this._pRttViewProjectionMatrix = new Matrix3D_1.default();\n        this._localPos = new Point_1.default();\n        this._globalPos = new Point_1.default();\n        this._pScissorRect = new Rectangle_1.default();\n        this._pNumElements = 0;\n        this._disableColor = false;\n        this._renderBlended = true;\n        this._numCullPlanes = 0;\n        this._onViewportUpdatedDelegate = function (event) { return _this.onViewportUpdated(event); };\n        this._onContextUpdateDelegate = function (event) { return _this.onContextUpdate(event); };\n        //default sorting algorithm\n        this.renderableSorter = new RenderableMergeSort_1.default();\n        //set stage\n        this._pStage = stage || StageManager_1.default.getInstance().getFreeStage(forceSoftware, profile, mode);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        this._surfaceClassGL = surfaceClassGL;\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.stage = value;\n         */\n        if (this._pStage.context)\n            this._pContext = this._pStage.context;\n    }\n    Object.defineProperty(RendererBase.prototype, \"cullPlanes\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._customCullPlanes;\n        },\n        set: function (value) {\n            this._customCullPlanes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"renderBlended\", {\n        get: function () {\n            return this._renderBlended;\n        },\n        set: function (value) {\n            this._renderBlended = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"disableColor\", {\n        get: function () {\n            return this._disableColor;\n        },\n        set: function (value) {\n            this._disableColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"numElements\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pNumElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"viewPort\", {\n        /**\n         * A viewPort rectangle equivalent of the Stage size and position.\n         */\n        get: function () {\n            return this._viewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"scissorRect\", {\n        /**\n         * A scissor rectangle equivalent of the view size and position.\n         */\n        get: function () {\n            return this._pScissorRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.x;\n        },\n        set: function (value) {\n            if (this.x == value)\n                return;\n            this._globalPos.x = this._localPos.x = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.y;\n        },\n        set: function (value) {\n            if (this.y == value)\n                return;\n            this._globalPos.y = this._localPos.y = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._pScissorRect.width = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewWidth = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._pScissorRect.height = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewHeight = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RendererBase.prototype.getAbstraction = function (renderable) {\n        return this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new RendererBase._abstractionClassPool[renderable.assetType](renderable, this));\n    };\n    /**\n     *\n     * @param image\n     */\n    RendererBase.prototype.clearAbstraction = function (renderable) {\n        this._abstractionPool[renderable.id] = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsClass\n     * @returns SurfacePool\n     */\n    RendererBase.prototype.getSurfacePool = function (elements) {\n        return this._objectPools[elements.elementsType] || (this._objectPools[elements.elementsType] = new SurfacePool_1.default(elements.elementsClass, this._pStage, this._surfaceClassGL));\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    RendererBase.registerAbstraction = function (renderableClass, assetClass) {\n        RendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n    };\n    RendererBase.prototype.activatePass = function (pass, camera) {\n        //clear unused vertex streams\n        var i;\n        for (i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n            this._pContext.setVertexBufferAt(i, null);\n        //clear unused texture streams\n        for (i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n            this._pContext.setTextureAt(i, null);\n        //check program data is uploaded\n        var programData = pass.shader.programData;\n        if (!programData.program) {\n            programData.program = this._pContext.createProgram();\n            var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n            var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n            programData.program.upload(vertexByteCode, fragmentByteCode);\n        }\n        //set program data\n        this._pContext.setProgram(programData.program);\n        //activate shader object through pass\n        pass._iActivate(camera);\n    };\n    RendererBase.prototype.deactivatePass = function (pass) {\n        //deactivate shader object through pass\n        pass._iDeactivate();\n        this._numUsedStreams = pass.shader.numUsedStreams;\n        this._numUsedTextures = pass.shader.numUsedTextures;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundR\", {\n        /**\n         * The background color's red component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundR;\n        },\n        set: function (value) {\n            if (this._backgroundR == value)\n                return;\n            this._backgroundR = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundG\", {\n        /**\n         * The background color's green component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundG;\n        },\n        set: function (value) {\n            if (this._backgroundG == value)\n                return;\n            this._backgroundG = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundB\", {\n        /**\n         * The background color's blue component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundB;\n        },\n        set: function (value) {\n            if (this._backgroundB == value)\n                return;\n            this._backgroundB = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"context\", {\n        get: function () {\n            return this._pContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"stage\", {\n        /**\n         * The Stage that will provide the ContextGL used for rendering.\n         */\n        get: function () {\n            return this._pStage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Disposes the resources used by the RendererBase.\n     */\n    RendererBase.prototype.dispose = function () {\n        for (var id in this._abstractionPool)\n            this._abstractionPool[id].clear();\n        this._abstractionPool = null;\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        this._pStage = null;\n        this._pContext = null;\n        /*\n         if (_backgroundImageRenderer) {\n         _backgroundImageRenderer.dispose();\n         _backgroundImageRenderer = null;\n         }\n         */\n    };\n    RendererBase.prototype.render = function (camera, scene) {\n        this._viewportDirty = false;\n        this._scissorDirty = false;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture.\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype._iRender = function (camera, scene, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        //TODO refactor setTarget so that rendertextures are created before this check\n        if (!this._pStage || !this._pContext)\n            return;\n        //reset head values\n        this._pBlendedRenderableHead = null;\n        this._pOpaqueRenderableHead = null;\n        this._pNumElements = 0;\n        this._cullPlanes = this._customCullPlanes ? this._customCullPlanes : camera.frustumPlanes;\n        this._numCullPlanes = this._cullPlanes ? this._cullPlanes.length : 0;\n        this._cameraPosition = camera.scenePosition;\n        this._cameraTransform = camera.sceneTransform;\n        this._cameraForward = Matrix3DUtils_1.default.getForward(camera.sceneTransform, this._cameraForward);\n        RendererBase._iCollectionMark++;\n        scene.traversePartitions(this);\n        //sort the resulting renderables\n        if (this.renderableSorter) {\n            this._pOpaqueRenderableHead = this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n            this._pBlendedRenderableHead = this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n        }\n        this._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n        this._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n        this.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n        // generate mip maps on target (if target exists) //TODO\n        //if (target)\n        //\t(<Texture>target).generateMipmaps();\n        // clear buffers\n        for (var i = 0; i < 8; ++i) {\n            this._pContext.setVertexBufferAt(i, null);\n            this._pContext.setTextureAt(i, null);\n        }\n    };\n    RendererBase.prototype._iRenderCascades = function (camera, scene, target, numCascades, scissorRects, cameras) {\n        this._pStage.setRenderTarget(target, true, 0);\n        this._pContext.clear(1, 1, 1, 1, 1, 0);\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS);\n        var head = this._pOpaqueRenderableHead;\n        var first = true;\n        //TODO cascades must have separate collectors, rather than separate draw commands\n        for (var i = numCascades - 1; i >= 0; --i) {\n            this._pStage.scissorRect = scissorRects[i];\n            //this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n            first = false;\n        }\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this._pStage.scissorRect = null;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n     *\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this._pStage.setRenderTarget(target, true, surfaceSelector);\n        if ((target || !this.shareContext) && !this._depthPrepass)\n            this._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n        this._pStage.scissorRect = scissorRect;\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.render();\n         */\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this.pDraw(camera);\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        //this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n        if (!this.shareContext) {\n            if (this._snapshotRequired && this._snapshotBitmapImage2D) {\n                this._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n                this._snapshotRequired = false;\n            }\n        }\n        this._pStage.scissorRect = null;\n    };\n    /*\n     * Will draw the renderer's output on next render to the provided bitmap data.\n     * */\n    RendererBase.prototype.queueSnapshot = function (bmd) {\n        this._snapshotRequired = true;\n        this._snapshotBitmapImage2D = bmd;\n    };\n    /**\n     * Performs the actual drawing of geometry to the target.\n     */\n    RendererBase.prototype.pDraw = function (camera) {\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        if (this._disableColor)\n            this._pContext.setColorMask(false, false, false, false);\n        this.drawRenderables(camera, this._pOpaqueRenderableHead);\n        if (this._renderBlended)\n            this.drawRenderables(camera, this._pBlendedRenderableHead);\n        if (this._disableColor)\n            this._pContext.setColorMask(true, true, true, true);\n    };\n    //private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n    //{\n    //\tvar renderableGL2:GL_RenderableBase;\n    //\tvar render:GL_SurfaceBase;\n    //\tvar pass:IPass;\n    //\n    //\twhile (renderableGL) {\n    //\t\trenderableGL2 = renderableGL;\n    //\t\trender = renderableGL.render;\n    //\t\tpass = render.passes[0] //assuming only one pass per material\n    //\n    //\t\tthis.activatePass(renderableGL, pass, camera);\n    //\n    //\t\tdo {\n    //\t\t\t// if completely in front, it will fall in a different cascade\n    //\t\t\t// do not use near and far planes\n    //\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n    //\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n    //\t\t\t} else {\n    //\t\t\t\trenderableGL2.cascaded = true;\n    //\t\t\t}\n    //\n    //\t\t\trenderableGL2 = renderableGL2.next;\n    //\n    //\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n    //\n    //\t\tthis.deactivatePass(renderableGL, pass);\n    //\n    //\t\trenderableGL = renderableGL2;\n    //\t}\n    //}\n    /**\n     * Draw a list of renderables.\n     *\n     * @param renderables The renderables to draw.\n     */\n    RendererBase.prototype.drawRenderables = function (camera, renderableGL) {\n        var i;\n        var len;\n        var renderableGL2;\n        var surfaceGL;\n        var passes;\n        var pass;\n        this._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n        this._registeredMasks.length = 0;\n        var gl = this._pContext[\"_gl\"];\n        if (gl) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        this._maskConfig = 0;\n        while (renderableGL) {\n            surfaceGL = renderableGL.surfaceGL;\n            passes = surfaceGL.passes;\n            // otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n            if (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n                renderableGL2 = renderableGL;\n                // fast forward\n                do {\n                    renderableGL2 = renderableGL2.next;\n                } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n            }\n            else {\n                if (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n                    this._activeMasksConfig = renderableGL.masksConfig;\n                    if (!this._activeMasksConfig.length) {\n                        // disable stencil\n                        if (gl) {\n                            gl.disable(gl.STENCIL_TEST);\n                            gl.stencilFunc(gl.ALWAYS, 0, 0xff);\n                            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n                        }\n                    }\n                    else {\n                        this._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n                    }\n                    this._activeMasksDirty = false;\n                }\n                //iterate through each shader object\n                len = passes.length;\n                for (i = 0; i < len; i++) {\n                    renderableGL2 = renderableGL;\n                    pass = passes[i];\n                    this.activatePass(pass, camera);\n                    do {\n                        if (renderableGL2.maskId !== -1) {\n                            if (i == 0)\n                                this._registerMask(renderableGL2);\n                        }\n                        else {\n                            renderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n                        }\n                        renderableGL2 = renderableGL2.next;\n                    } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n                    this.deactivatePass(pass);\n                }\n            }\n            renderableGL = renderableGL2;\n        }\n    };\n    /**\n     * Assign the context once retrieved\n     */\n    RendererBase.prototype.onContextUpdate = function (event) {\n        this._pContext = this._pStage.context;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundAlpha\", {\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        set: function (value) {\n            if (this._backgroundAlpha == value)\n                return;\n            this._backgroundAlpha = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /*\n     public get iBackground():Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*\n     public set iBackground(value:Texture2DBase)\n     {\n     if (this._backgroundImageRenderer && !value) {\n     this._backgroundImageRenderer.dispose();\n     this._backgroundImageRenderer = null;\n     }\n\n     if (!this._backgroundImageRenderer && value)\n     {\n\n     this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n     }\n\n\n     this._background = value;\n\n     if (this._backgroundImageRenderer)\n     this._backgroundImageRenderer.texture = value;\n     }\n     */\n    /*\n     public get backgroundImageRenderer():BackgroundImageRenderer\n     {\n     return _backgroundImageRenderer;\n     }\n     */\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyScissorUpdate = function () {\n        if (this._scissorDirty)\n            return;\n        this._scissorDirty = true;\n        if (!this._scissorUpdated)\n            this._scissorUpdated = new RendererEvent_1.default(RendererEvent_1.default.SCISSOR_UPDATED);\n        this.dispatchEvent(this._scissorUpdated);\n    };\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyViewportUpdate = function () {\n        if (this._viewportDirty)\n            return;\n        this._viewportDirty = true;\n        if (!this._viewPortUpdated)\n            this._viewPortUpdated = new RendererEvent_1.default(RendererEvent_1.default.VIEWPORT_UPDATED);\n        this.dispatchEvent(this._viewPortUpdated);\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.onViewportUpdated = function (event) {\n        this._viewPort = this._pStage.viewPort;\n        //TODO stop firing viewport updated for every stagegl viewport change\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._pStage.x;\n            this._pScissorRect.y = this._globalPos.y - this._pStage.y;\n            this.notifyScissorUpdate();\n        }\n        this.notifyViewportUpdate();\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.updateGlobalPos = function () {\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n            this._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n        }\n        else {\n            this._pScissorRect.x = 0;\n            this._pScissorRect.y = 0;\n            this._viewPort.x = this._globalPos.x;\n            this._viewPort.y = this._globalPos.y;\n        }\n        this.notifyScissorUpdate();\n    };\n    /**\n     *\n     * @param node\n     * @returns {boolean}\n     */\n    RendererBase.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase._iCollectionMark && node.isRenderable() && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n        node._iCollectionMark = RendererBase._iCollectionMark;\n        return enter;\n    };\n    RendererBase.prototype.applyEntity = function (entity) {\n        this._sourceEntity = entity;\n        // project onto camera's z-axis\n        this._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n        //save sceneTransform\n        this._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n        //collect renderables\n        entity._acceptTraverser(this);\n    };\n    RendererBase.prototype.applyRenderable = function (renderable) {\n        var renderableGL = this.getAbstraction(renderable);\n        var surfaceGL = renderableGL.surfaceGL;\n        //set local vars for faster referencing\n        renderableGL.surfaceID = surfaceGL.surfaceID;\n        renderableGL.renderOrderId = surfaceGL.renderOrderId;\n        renderableGL.cascaded = false;\n        renderableGL.sourceEntity = this._sourceEntity;\n        renderableGL.zIndex = this._zIndex;\n        renderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n        renderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n        //store reference to scene transform\n        renderableGL.renderSceneTransform = this._renderSceneTransform;\n        if (surfaceGL.requiresBlending) {\n            renderableGL.next = this._pBlendedRenderableHead;\n            this._pBlendedRenderableHead = renderableGL;\n        }\n        else {\n            renderableGL.next = this._pOpaqueRenderableHead;\n            this._pOpaqueRenderableHead = renderableGL;\n        }\n        this._pNumElements += renderableGL.elementsGL.elements.numElements;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    RendererBase.prototype._registerMask = function (obj) {\n        //console.log(\"registerMask\");\n        this._registeredMasks.push(obj);\n    };\n    RendererBase.prototype._renderMasks = function (camera, masks) {\n        var gl = this._pContext[\"_gl\"];\n        //var oldRenderTarget = this._stage.renderTarget;\n        //this._stage.setRenderTarget(this._image);\n        //this._stage.clear();\n        this._pContext.setColorMask(false, false, false, false);\n        // TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n        //context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n        gl.enable(gl.STENCIL_TEST);\n        this._maskConfig++;\n        gl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n        gl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n        var numLayers = masks.length;\n        var numRenderables = this._registeredMasks.length;\n        var renderableGL;\n        var children;\n        var numChildren;\n        var mask;\n        for (var i = 0; i < numLayers; ++i) {\n            if (i != 0) {\n                gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n                gl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n                this._maskConfig++;\n            }\n            children = masks[i];\n            numChildren = children.length;\n            for (var j = 0; j < numChildren; ++j) {\n                mask = children[j];\n                for (var k = 0; k < numRenderables; ++k) {\n                    renderableGL = this._registeredMasks[k];\n                    //console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n                    if (renderableGL.maskId == mask.id) {\n                        //console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n                        this._drawMask(camera, renderableGL);\n                    }\n                }\n            }\n        }\n        gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        this._pContext.setColorMask(true, true, true, true);\n        //this._stage.setRenderTarget(oldRenderTarget);\n    };\n    RendererBase.prototype._drawMask = function (camera, renderableGL) {\n        var surfaceGL = renderableGL.surfaceGL;\n        var passes = surfaceGL.passes;\n        var len = passes.length;\n        var pass = passes[len - 1];\n        this.activatePass(pass, camera);\n        // only render last pass for now\n        renderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n        this.deactivatePass(pass);\n    };\n    RendererBase.prototype._checkMasksConfig = function (masksConfig) {\n        if (this._activeMasksConfig.length != masksConfig.length)\n            return true;\n        var numLayers = masksConfig.length;\n        var numChildren;\n        var childConfig;\n        var activeNumChildren;\n        var activeChildConfig;\n        for (var i = 0; i < numLayers; i++) {\n            childConfig = masksConfig[i];\n            numChildren = childConfig.length;\n            activeChildConfig = this._activeMasksConfig[i];\n            activeNumChildren = activeChildConfig.length;\n            if (activeNumChildren != numChildren)\n                return true;\n            for (var j = 0; j < numChildren; j++) {\n                if (activeChildConfig[j] != childConfig[j])\n                    return true;\n            }\n        }\n        return false;\n    };\n    RendererBase._iCollectionMark = 0;\n    RendererBase._abstractionClassPool = new Object();\n    return RendererBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RendererBase;\n\n},{\"./sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/events/RendererEvent\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/events/StageEvent\":undefined,\"awayjs-stagegl/lib/managers/StageManager\":undefined}],\"awayjs-renderergl/lib/animators/AnimationSetBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AnimationSetError_1 = require(\"../errors/AnimationSetError\");\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nvar AnimationSetBase = (function (_super) {\n    __extends(AnimationSetBase, _super);\n    function AnimationSetBase() {\n        _super.call(this);\n        this._animations = new Array();\n        this._animationNames = new Array();\n        this._animationDictionary = new Object();\n    }\n    /**\n     * Retrieves a temporary GPU register that's still free.\n     *\n     * @param exclude An array of non-free temporary registers.\n     * @param excludeAnother An additional register that's not free.\n     * @return A temporary register that can be used.\n     */\n    AnimationSetBase.prototype._pFindTempReg = function (exclude, excludeAnother) {\n        if (excludeAnother === void 0) { excludeAnother = null; }\n        var i = 0;\n        var reg;\n        while (true) {\n            reg = \"vt\" + i;\n            if (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n                return reg;\n            ++i;\n        }\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"usesCPU\", {\n        /**\n         * Indicates whether the properties of the animation data contained within the set combined with\n         * the vertex registers already in use on shading materials allows the animation data to utilise\n         * GPU calls.\n         */\n        get: function () {\n            return this._usesCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called by the material to reset the GPU indicator before testing whether register space in the shader\n     * is available for running GPU-based animation code.\n     *\n     * @private\n     */\n    AnimationSetBase.prototype.resetGPUCompatibility = function () {\n        this._usesCPU = false;\n    };\n    AnimationSetBase.prototype.cancelGPUCompatibility = function () {\n        this._usesCPU = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.doneAGALCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationSetBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animations\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animationNames\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animationNames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check to determine whether a state is registered in the animation set under the given name.\n     *\n     * @param stateName The name of the animation state object to be checked.\n     */\n    AnimationSetBase.prototype.hasAnimation = function (name) {\n        return this._animationDictionary[name] != null;\n    };\n    /**\n     * Retrieves the animation state object registered in the animation data set under the given name.\n     *\n     * @param stateName The name of the animation state object to be retrieved.\n     */\n    AnimationSetBase.prototype.getAnimation = function (name) {\n        return this._animationDictionary[name];\n    };\n    /**\n     * Adds an animation state object to the aniamtion data set under the given name.\n     *\n     * @param stateName The name under which the animation state object will be stored.\n     * @param animationState The animation state object to be staored in the set.\n     */\n    AnimationSetBase.prototype.addAnimation = function (node) {\n        if (this._animationDictionary[node.name])\n            throw new AnimationSetError_1.default(\"root node name '\" + node.name + \"' already exists in the set\");\n        this._animationDictionary[node.name] = node;\n        this._animations.push(node);\n        this._animationNames.push(node.name);\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     */\n    AnimationSetBase.prototype.dispose = function () {\n    };\n    AnimationSetBase.assetType = \"[asset AnimationSet]\";\n    return AnimationSetBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetBase;\n\n},{\"../errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/AnimatorBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar RequestAnimationFrame_1 = require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar AnimatorEvent_1 = require(\"../events/AnimatorEvent\");\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nvar AnimatorBase = (function (_super) {\n    __extends(AnimatorBase, _super);\n    /**\n     * Creates a new <code>AnimatorBase</code> object.\n     *\n     * @param animationSet The animation data set to be used by the animator object.\n     */\n    function AnimatorBase(animationSet) {\n        _super.call(this);\n        this._autoUpdate = true;\n        this._time = 0;\n        this._playbackSpeed = 1;\n        this._pOwners = new Array();\n        this._pAbsoluteTime = 0;\n        this._animationStates = new Object();\n        /**\n         * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n         *\n         * @see away.animators.IAnimationState#positionDelta\n         */\n        this.updatePosition = true;\n        this._pAnimationSet = animationSet;\n        this._broadcaster = new RequestAnimationFrame_1.default(this.onEnterFrame, this);\n    }\n    AnimatorBase.prototype.getAnimationState = function (node) {\n        var className = node.stateClass;\n        var uID = node.id;\n        if (this._animationStates[uID] == null)\n            this._animationStates[uID] = new className(this, node);\n        return this._animationStates[uID];\n    };\n    AnimatorBase.prototype.getAnimationStateByName = function (name) {\n        return this.getAnimationState(this._pAnimationSet.getAnimation(name));\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"absoluteTime\", {\n        /**\n         * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n         *\n         * @see #time\n         * @see #playbackSpeed\n         */\n        get: function () {\n            return this._pAbsoluteTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"animationSet\", {\n        /**\n         * Returns the animation data set in use by the animator.\n         */\n        get: function () {\n            return this._pAnimationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeState\", {\n        /**\n         * Returns the current active animation state.\n         */\n        get: function () {\n            return this._pActiveState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimation\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimationName\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pActiveAnimationName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"autoUpdate\", {\n        /**\n         * Determines whether the animators internal update mechanisms are active. Used in cases\n         * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n         * Defaults to true.\n         *\n         * @see #time\n         * @see #update()\n         */\n        get: function () {\n            return this._autoUpdate;\n        },\n        set: function (value) {\n            if (this._autoUpdate == value)\n                return;\n            this._autoUpdate = value;\n            if (this._autoUpdate)\n                this.start();\n            else\n                this.stop();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"time\", {\n        /**\n         * Gets and sets the internal time clock of the animator.\n         */\n        get: function () {\n            return this._time;\n        },\n        set: function (value) {\n            if (this._time == value)\n                return;\n            this.update(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the animation phase of the current active state's animation clip(s).\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimatorBase.prototype.phase = function (value) {\n        this._pActiveState.phase(value);\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"playbackSpeed\", {\n        /**\n         * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n         */\n        get: function () {\n            return this._playbackSpeed;\n        },\n        set: function (value) {\n            this._playbackSpeed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Resumes the automatic playback clock controling the active state of the animator.\n     */\n    AnimatorBase.prototype.start = function () {\n        if (this._isPlaying || !this._autoUpdate)\n            return;\n        this._time = this._pAbsoluteTime = getTimer_1.default();\n        this._isPlaying = true;\n        this._broadcaster.start();\n        if (!this.hasEventListener(AnimatorEvent_1.default.START))\n            return;\n        if (this._startEvent == null)\n            this._startEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.START, this);\n        this.dispatchEvent(this._startEvent);\n    };\n    /**\n     * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n     * <code>time</code> property or <code>update()</code> method.\n     *\n     * @see #time\n     * @see #update()\n     */\n    AnimatorBase.prototype.stop = function () {\n        if (!this._isPlaying)\n            return;\n        this._isPlaying = false;\n        this._broadcaster.stop();\n        if (!this.hasEventListener(AnimatorEvent_1.default.STOP))\n            return;\n        if (this._stopEvent == null)\n            this._stopEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.STOP, this);\n        this.dispatchEvent(this._stopEvent);\n    };\n    /**\n     * Provides a way to manually update the active state of the animator when automatic\n     * updates are disabled.\n     *\n     * @see #stop()\n     * @see #autoUpdate\n     */\n    AnimatorBase.prototype.update = function (time) {\n        var dt = (time - this._time) * this.playbackSpeed;\n        this._pUpdateDeltaTime(dt);\n        this._time = time;\n    };\n    AnimatorBase.prototype.reset = function (name, offset) {\n        if (offset === void 0) { offset = 0; }\n        this.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n    };\n    /**\n     * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.addOwner = function (sprite) {\n        this._pOwners.push(sprite);\n    };\n    /**\n     * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.removeOwner = function (sprite) {\n        this._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n    };\n    /**\n     * Internal abstract method called when the time delta property of the animator's contents requires updating.\n     *\n     * @private\n     */\n    AnimatorBase.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        this._pActiveState.update(this._pAbsoluteTime);\n        if (this.updatePosition)\n            this.applyPositionDelta();\n    };\n    /**\n     * Enter frame event handler for automatically updating the active state of the animator.\n     */\n    AnimatorBase.prototype.onEnterFrame = function (event) {\n        if (event === void 0) { event = null; }\n        this.update(getTimer_1.default());\n    };\n    AnimatorBase.prototype.applyPositionDelta = function () {\n        var delta = this._pActiveState.positionDelta;\n        var dist = delta.length;\n        var len;\n        if (dist > 0) {\n            len = this._pOwners.length;\n            for (var i = 0; i < len; ++i)\n                this._pOwners[i].transform.translateLocal(delta, dist);\n        }\n    };\n    /**\n     *  for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.dispatchCycleEvent = function () {\n        if (this.hasEventListener(AnimatorEvent_1.default.CYCLE_COMPLETE)) {\n            if (this._cycleEvent == null)\n                this._cycleEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.CYCLE_COMPLETE, this);\n            this.dispatchEvent(this._cycleEvent);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.dispose = function () {\n    };\n    AnimatorBase.prototype.invalidateElements = function () {\n        var sprite;\n        var len = this._pOwners.length;\n        for (var i = 0; i < len; i++) {\n            sprite = this._pOwners[i];\n            sprite.graphics.invalidateElements();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.testGPUCompatibility = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimatorBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.getRenderableElements = function (renderable, sourceElements) {\n        //nothing to do here\n        return sourceElements;\n    };\n    AnimatorBase.assetType = \"[asset Animator]\";\n    return AnimatorBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorBase;\n\n},{\"../events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-core/lib/utils/RequestAnimationFrame\":undefined,\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\nvar AnimationRegisterData_1 = require(\"../animators/data/AnimationRegisterData\");\nvar AnimationElements_1 = require(\"../animators/data/AnimationElements\");\nvar ParticleAnimationData_1 = require(\"../animators/data/ParticleAnimationData\");\nvar ParticleProperties_1 = require(\"../animators/data/ParticleProperties\");\nvar ParticlePropertiesMode_1 = require(\"../animators/data/ParticlePropertiesMode\");\nvar ParticleTimeNode_1 = require(\"../animators/nodes/ParticleTimeNode\");\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nvar ParticleAnimationSet = (function (_super) {\n    __extends(ParticleAnimationSet, _super);\n    /**\n     * Creates a new <code>ParticleAnimationSet</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleAnimationSet(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this);\n        this._animationElements = new Object();\n        this._particleNodes = new Array();\n        this._localDynamicNodes = new Array();\n        this._localStaticNodes = new Array();\n        this._totalLenOfOneVertex = 0;\n        /**\n         *\n         */\n        this.shareAnimationGraphics = true;\n        //automatically add a particle time node to the set\n        this.addAnimation(this._timeNode = new ParticleTimeNode_1.default(usesDuration, usesLooping, usesDelay));\n    }\n    Object.defineProperty(ParticleAnimationSet.prototype, \"particleNodes\", {\n        /**\n         * Returns a vector of the particle animation nodes contained within the set.\n         */\n        get: function () {\n            return this._particleNodes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.addAnimation = function (node) {\n        var i;\n        var n = node;\n        n._iProcessAnimationSetting(this);\n        if (n.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            n._iDataOffset = this._totalLenOfOneVertex;\n            this._totalLenOfOneVertex += n.dataLength;\n            this._localStaticNodes.push(n);\n        }\n        else if (n.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC)\n            this._localDynamicNodes.push(n);\n        for (i = this._particleNodes.length - 1; i >= 0; i--) {\n            if (this._particleNodes[i].priority <= n.priority)\n                break;\n        }\n        this._particleNodes.splice(i + 1, 0, n);\n        _super.prototype.addAnimation.call(this, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        //grab animationRegisterData from the materialpassbase or create a new one if the first time\n        this._iAnimationRegisterData = shader.animationRegisterData;\n        if (this._iAnimationRegisterData == null)\n            this._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData_1.default();\n        //reset animationRegisterData\n        this._iAnimationRegisterData.reset(registerCache, sharedRegisters, this.needVelocity);\n        var code = \"\";\n        var len = sharedRegisters.animatableAttributes.length;\n        for (var i = 0; i < len; i++)\n            code += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \",\" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n        code += \"mov \" + this._iAnimationRegisterData.positionTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n        if (this.needVelocity)\n            code += \"mov \" + this._iAnimationRegisterData.velocityTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n        var node;\n        var i;\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority < ParticleAnimationSet.POST_PRIORITY)\n                code += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n        }\n        code += \"add \" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.positionTarget + \".xyz\\n\";\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n        }\n        if (this.hasColorMulNode) {\n            this._iAnimationRegisterData.colorMulTarget = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(this._iAnimationRegisterData.colorMulTarget, 1);\n            this._iAnimationRegisterData.colorMulVary = registerCache.getFreeVarying();\n            code += \"mov \" + this._iAnimationRegisterData.colorMulTarget + \",\" + this._iAnimationRegisterData.vertexOneConst + \"\\n\";\n        }\n        if (this.hasColorAddNode) {\n            this._iAnimationRegisterData.colorAddTarget = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(this._iAnimationRegisterData.colorAddTarget, 1);\n            this._iAnimationRegisterData.colorAddVary = registerCache.getFreeVarying();\n            code += \"mov \" + this._iAnimationRegisterData.colorAddTarget + \",\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n        }\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n        }\n        if (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            if (this.hasColorMulNode)\n                code += \"mov \" + this._iAnimationRegisterData.colorMulVary + \",\" + this._iAnimationRegisterData.colorMulTarget + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"mov \" + this._iAnimationRegisterData.colorAddVary + \",\" + this._iAnimationRegisterData.colorAddTarget + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        if (this.hasUVNode) {\n            this._iAnimationRegisterData.setUVSourceAndTarget(sharedRegisters);\n            code += \"mov \" + this._iAnimationRegisterData.uvTarget + \".xy,\" + this._iAnimationRegisterData.uvAttribute.toString() + \"\\n\";\n            var node;\n            for (var i = 0; i < this._particleNodes.length; i++)\n                node = this._particleNodes[i];\n            code += node.getAGALUVCode(shader, this, registerCache, this._iAnimationRegisterData);\n            code += \"mov \" + this._iAnimationRegisterData.uvVar + \",\" + this._iAnimationRegisterData.uvTarget + \".xy\\n\";\n        }\n        else\n            code += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            if (this.hasColorMulNode)\n                code += \"mul \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorMulVary + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"add \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorAddVary + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.doneAGALCode = function (shader) {\n        //set vertexZeroConst,vertexOneConst,vertexTwoConst\n        shader.setVertexConst(this._iAnimationRegisterData.vertexZeroConst.index, 0, 1, 2, 0);\n    };\n    Object.defineProperty(ParticleAnimationSet.prototype, \"usesCPU\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.cancelGPUCompatibility = function () {\n    };\n    ParticleAnimationSet.prototype.dispose = function () {\n        for (var key in this._animationElements)\n            this._animationElements[key].dispose();\n        _super.prototype.dispose.call(this);\n    };\n    ParticleAnimationSet.prototype.getAnimationElements = function (graphic) {\n        var animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n        if (animationElements)\n            return animationElements;\n        this._iGenerateAnimationElements(graphic.parent);\n        return (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n    };\n    /** @private */\n    ParticleAnimationSet.prototype._iGenerateAnimationElements = function (graphics) {\n        if (this.initParticleFunc == null)\n            throw (new Error(\"no initParticleFunc set\"));\n        var i, j, k;\n        var animationElements;\n        var newAnimationElements = false;\n        var elements;\n        var graphic;\n        var localNode;\n        for (i = 0; i < graphics.count; i++) {\n            graphic = graphics.getGraphicAt(i);\n            elements = graphic.elements;\n            if (this.shareAnimationGraphics) {\n                animationElements = this._animationElements[elements.id];\n                if (animationElements)\n                    continue;\n            }\n            animationElements = new AnimationElements_1.default();\n            if (this.shareAnimationGraphics)\n                this._animationElements[elements.id] = animationElements;\n            else\n                this._animationElements[graphic.id] = animationElements;\n            newAnimationElements = true;\n            //create the vertexData vector that will be used for local node data\n            animationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        }\n        if (!newAnimationElements)\n            return;\n        var particles = graphics.particles;\n        var particlesLength = particles.length;\n        var numParticles = graphics.numParticles;\n        var particleProperties = new ParticleProperties_1.default();\n        var particle;\n        var oneDataLen;\n        var oneDataOffset;\n        var counterForVertex;\n        var counterForOneData;\n        var oneData;\n        var numVertices;\n        var vertexData;\n        var vertexLength;\n        var startingOffset;\n        var vertexOffset;\n        //default values for particle param\n        particleProperties.total = numParticles;\n        particleProperties.startTime = 0;\n        particleProperties.duration = 1000;\n        particleProperties.delay = 0.1;\n        i = 0;\n        j = 0;\n        while (i < numParticles) {\n            particleProperties.index = i;\n            //call the init on the particle parameters\n            this.initParticleFunc.call(this.initParticleScope, particleProperties);\n            //create the next set of node properties for the particle\n            for (k = 0; k < this._localStaticNodes.length; k++)\n                this._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n            //loop through all particle data for the curent particle\n            while (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n                //find the target animationElements\n                for (k = 0; k < graphics.count; k++) {\n                    graphic = graphics.getGraphicAt(k);\n                    if (graphic.elements == particle.elements) {\n                        animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n                        break;\n                    }\n                }\n                numVertices = particle.numVertices;\n                vertexData = animationElements.vertexData;\n                vertexLength = numVertices * this._totalLenOfOneVertex;\n                startingOffset = animationElements.numProcessedVertices * this._totalLenOfOneVertex;\n                //loop through each static local node in the animation set\n                for (k = 0; k < this._localStaticNodes.length; k++) {\n                    localNode = this._localStaticNodes[k];\n                    oneData = localNode.oneData;\n                    oneDataLen = localNode.dataLength;\n                    oneDataOffset = startingOffset + localNode._iDataOffset;\n                    //loop through each vertex set in the vertex data\n                    for (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n                        vertexOffset = oneDataOffset + counterForVertex;\n                        //add the data for the local node to the vertex data\n                        for (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n                            vertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n                    }\n                }\n                //store particle properties if they need to be retreived for dynamic local nodes\n                if (this._localDynamicNodes.length)\n                    animationElements.animationParticles.push(new ParticleAnimationData_1.default(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n                animationElements.numProcessedVertices += numVertices;\n                //next index\n                j++;\n            }\n            //next particle\n            i++;\n        }\n    };\n    /**\n     * Property used by particle nodes that require compilers at the end of the shader\n     */\n    ParticleAnimationSet.POST_PRIORITY = 9;\n    /**\n     * Property used by particle nodes that require color compilers\n     */\n    ParticleAnimationSet.COLOR_PRIORITY = 18;\n    return ParticleAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"../animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"../animators/data/AnimationRegisterData\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\",\"../animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"../animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\"}],\"awayjs-renderergl/lib/animators/ParticleAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar AnimationElements_1 = require(\"../animators/data/AnimationElements\");\nvar ParticlePropertiesMode_1 = require(\"../animators/data/ParticlePropertiesMode\");\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nvar ParticleAnimator = (function (_super) {\n    __extends(ParticleAnimator, _super);\n    /**\n     * Creates a new <code>ParticleAnimator</code> object.\n     *\n     * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n     */\n    function ParticleAnimator(particleAnimationSet) {\n        _super.call(this, particleAnimationSet);\n        this._animationParticleStates = new Array();\n        this._animatorParticleStates = new Array();\n        this._timeParticleStates = new Array();\n        this._totalLenOfOneVertex = 0;\n        this._animatorSubGeometries = new Object();\n        this._particleAnimationSet = particleAnimationSet;\n        var state;\n        var node;\n        for (var i = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n            node = this._particleAnimationSet.particleNodes[i];\n            state = this.getAnimationState(node);\n            if (node.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC) {\n                this._animatorParticleStates.push(state);\n                node._iDataOffset = this._totalLenOfOneVertex;\n                this._totalLenOfOneVertex += node.dataLength;\n            }\n            else {\n                this._animationParticleStates.push(state);\n            }\n            if (state.needUpdateTime)\n                this._timeParticleStates.push(state);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.clone = function () {\n        return new ParticleAnimator(this._particleAnimationSet);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        var animationRegisterData = this._particleAnimationSet._iAnimationRegisterData;\n        var graphic = renderable.graphic;\n        if (!graphic)\n            throw (new Error(\"Must be graphic\"));\n        //process animation sub geometries\n        var animationElements = this._particleAnimationSet.getAnimationElements(graphic);\n        var i;\n        for (i = 0; i < this._animationParticleStates.length; i++)\n            this._animationParticleStates[i].setRenderState(shader, renderable, animationElements, animationRegisterData, camera, stage);\n        //process animator subgeometries\n        var animatorElements = this.getAnimatorElements(graphic);\n        for (i = 0; i < this._animatorParticleStates.length; i++)\n            this._animatorParticleStates[i].setRenderState(shader, renderable, animatorElements, animationRegisterData, camera, stage);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.start = function () {\n        _super.prototype.start.call(this);\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].update(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.resetTime = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n        this.update(this.time);\n    };\n    ParticleAnimator.prototype.dispose = function () {\n        for (var key in this._animatorSubGeometries)\n            this._animatorSubGeometries[key].dispose();\n    };\n    ParticleAnimator.prototype.getAnimatorElements = function (graphic) {\n        if (!this._animatorParticleStates.length)\n            return;\n        var elements = graphic.elements;\n        var animatorElements = this._animatorSubGeometries[elements.id] = new AnimationElements_1.default();\n        //create the vertexData vector that will be used for local state data\n        animatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        //pass the particles data to the animator elements\n        animatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n    };\n    return ParticleAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\"}],\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nvar SkeletonAnimationSet = (function (_super) {\n    __extends(SkeletonAnimationSet, _super);\n    /**\n     * Creates a new <code>SkeletonAnimationSet</code> object.\n     *\n     * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n     */\n    function SkeletonAnimationSet(jointsPerVertex) {\n        if (jointsPerVertex === void 0) { jointsPerVertex = 4; }\n        _super.call(this);\n        this._jointsPerVertex = jointsPerVertex;\n    }\n    Object.defineProperty(SkeletonAnimationSet.prototype, \"jointsPerVertex\", {\n        /**\n         * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n         * maximum allowed value is 4.\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimationSet.prototype, \"matricesIndex\", {\n        get: function () {\n            return this._matricesIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        this._matricesIndex = registerCache.numUsedVertexConstants;\n        var indexOffset0 = this._matricesIndex;\n        var indexOffset1 = this._matricesIndex + 1;\n        var indexOffset2 = this._matricesIndex + 2;\n        var indexStream = registerCache.getFreeVertexAttribute();\n        shader.jointIndexIndex = indexStream.index;\n        var weightStream = registerCache.getFreeVertexAttribute();\n        shader.jointWeightIndex = weightStream.index;\n        var indices = [indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\"];\n        var weights = [weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\"];\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        var dot = \"dp4\";\n        var code = \"\";\n        var len = sharedRegisters.animatableAttributes.length;\n        for (var i = 0; i < len; ++i) {\n            var source = sharedRegisters.animatableAttributes[i];\n            var target = sharedRegisters.animationTargetRegisters[i];\n            for (var j = 0; j < this._jointsPerVertex; ++j) {\n                registerCache.getFreeVertexConstant();\n                registerCache.getFreeVertexConstant();\n                registerCache.getFreeVertexConstant();\n                code += dot + \" \" + temp1 + \".x, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".y, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".z, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n                    \"mov \" + temp1 + \".w, \" + source + \".w\\n\" +\n                    \"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n                // add or mov to target. Need to write to a temp reg first, because an output can be a target\n                if (j == 0)\n                    code += \"mov \" + target + \", \" + temp1 + \"\\n\";\n                else\n                    code += \"add \" + target + \", \" + target + \", \" + temp1 + \"\\n\";\n            }\n            // switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n            dot = \"dp3\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        return \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    return SkeletonAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\"}],\"awayjs-renderergl/lib/animators/SkeletonAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar JointPose_1 = require(\"../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../animators/data/SkeletonPose\");\nvar AnimationStateEvent_1 = require(\"../events/AnimationStateEvent\");\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar SkeletonAnimator = (function (_super) {\n    __extends(SkeletonAnimator, _super);\n    /**\n     * Creates a new <code>SkeletonAnimator</code> object.\n     *\n     * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n     * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n     * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n     */\n    function SkeletonAnimator(animationSet, skeleton, forceCPU) {\n        var _this = this;\n        if (forceCPU === void 0) { forceCPU = false; }\n        _super.call(this, animationSet);\n        this._globalPose = new SkeletonPose_1.default();\n        this._morphedElements = new Object();\n        this._morphedElementsDirty = new Object();\n        this._skeletonAnimationSet = animationSet;\n        this._skeleton = skeleton;\n        this._forceCPU = forceCPU;\n        this._jointsPerVertex = animationSet.jointsPerVertex;\n        this._numJoints = this._skeleton.numJoints;\n        this._globalMatrices = new Float32Array(this._numJoints * 12);\n        var j = 0;\n        for (var i = 0; i < this._numJoints; ++i) {\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n        }\n        this._onTransitionCompleteDelegate = function (event) { return _this.onTransitionComplete(event); };\n        this._onIndicesUpdateDelegate = function (event) { return _this.onIndicesUpdate(event); };\n        this._onVerticesUpdateDelegate = function (event) { return _this.onVerticesUpdate(event); };\n    }\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalMatrices\", {\n        /**\n         * returns the calculated global matrices of the current skeleton pose.\n         *\n         * @see #globalPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalMatrices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalPose\", {\n        /**\n         * returns the current skeleton pose output from the animator.\n         *\n         * @see away.animators.data.SkeletonPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"skeleton\", {\n        /**\n         * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n         * skinned geoemtry to which skeleon animator is applied.\n         */\n        get: function () {\n            return this._skeleton;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"forceCPU\", {\n        /**\n         * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n         * Defaults to false.\n         */\n        get: function () {\n            return this._forceCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.clone = function () {\n        return new SkeletonAnimator(this._skeletonAnimationSet, this._skeleton, this._forceCPU);\n    };\n    /**\n     * Plays an animation state registered with the given name in the animation data set.\n     *\n     * @param name The data set name of the animation state to be played.\n     * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n     * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n     */\n    SkeletonAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        if (transition && this._pActiveNode) {\n            //setup the transition\n            this._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n            this._pActiveNode.addEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n        }\n        else\n            this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeSkeletonState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        // do on request of globalProperties\n        if (this._globalPropertiesDirty)\n            this.updateGlobalProperties();\n        var elements = renderable.graphic.elements;\n        elements.useCondensedIndices = this._useCondensedIndices;\n        if (this._useCondensedIndices) {\n            // using a condensed data set\n            this.updateCondensedMatrices(elements.condensedIndexLookUp);\n            shader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._condensedMatrices);\n        }\n        else {\n            if (this._pAnimationSet.usesCPU) {\n                if (this._morphedElementsDirty[elements.id])\n                    this.morphElements(renderable, elements);\n                return;\n            }\n            shader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._globalMatrices);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.testGPUCompatibility = function (shader) {\n        if (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints * 3 > 128))\n            this._pAnimationSet.cancelGPUCompatibility();\n    };\n    /**\n     * Applies the calculated time delta to the active animation state node or state transition object.\n     */\n    SkeletonAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        //invalidate pose matrices\n        this._globalPropertiesDirty = true;\n        //trigger geometry invalidation if using CPU animation\n        if (this._pAnimationSet.usesCPU)\n            this.invalidateElements();\n    };\n    SkeletonAnimator.prototype.updateCondensedMatrices = function (condensedIndexLookUp) {\n        var j = 0, k = 0;\n        var len = condensedIndexLookUp.length;\n        var srcIndex;\n        this._condensedMatrices = new Float32Array(len * 12);\n        for (var i = 0; i < len; i++) {\n            srcIndex = condensedIndexLookUp[i] * 12; //12 required for the three 4-component vectors that store the matrix\n            k = 12;\n            // copy into condensed\n            while (k--)\n                this._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n        }\n    };\n    SkeletonAnimator.prototype.updateGlobalProperties = function () {\n        this._globalPropertiesDirty = false;\n        //get global pose\n        this.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n        // convert pose to matrix\n        var mtxOffset = 0;\n        var globalPoses = this._globalPose.jointPoses;\n        var raw;\n        var ox, oy, oz, ow;\n        var xy2, xz2, xw2;\n        var yz2, yw2, zw2;\n        var n11, n12, n13;\n        var n21, n22, n23;\n        var n31, n32, n33;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        var joints = this._skeleton.joints;\n        var pose;\n        var quat;\n        var vec;\n        var t;\n        for (var i = 0; i < this._numJoints; ++i) {\n            pose = globalPoses[i];\n            quat = pose.orientation;\n            vec = pose.translation;\n            ox = quat.x;\n            oy = quat.y;\n            oz = quat.z;\n            ow = quat.w;\n            xy2 = (t = 2.0 * ox) * oy;\n            xz2 = t * oz;\n            xw2 = t * ow;\n            yz2 = (t = 2.0 * oy) * oz;\n            yw2 = t * ow;\n            zw2 = 2.0 * oz * ow;\n            yz2 = 2.0 * oy * oz;\n            yw2 = 2.0 * oy * ow;\n            zw2 = 2.0 * oz * ow;\n            ox *= ox;\n            oy *= oy;\n            oz *= oz;\n            ow *= ow;\n            n11 = (t = ox - oy) - oz + ow;\n            n12 = xy2 - zw2;\n            n13 = xz2 + yw2;\n            n21 = xy2 + zw2;\n            n22 = -t - oz + ow;\n            n23 = yz2 - xw2;\n            n31 = xz2 - yw2;\n            n32 = yz2 + xw2;\n            n33 = -ox - oy + oz + ow;\n            // prepend inverse bind pose\n            raw = joints[i].inverseBindPose;\n            m11 = raw[0];\n            m12 = raw[4];\n            m13 = raw[8];\n            m14 = raw[12];\n            m21 = raw[1];\n            m22 = raw[5];\n            m23 = raw[9];\n            m24 = raw[13];\n            m31 = raw[2];\n            m32 = raw[6];\n            m33 = raw[10];\n            m34 = raw[14];\n            this._globalMatrices[mtxOffset] = n11 * m11 + n12 * m21 + n13 * m31;\n            this._globalMatrices[mtxOffset + 1] = n11 * m12 + n12 * m22 + n13 * m32;\n            this._globalMatrices[mtxOffset + 2] = n11 * m13 + n12 * m23 + n13 * m33;\n            this._globalMatrices[mtxOffset + 3] = n11 * m14 + n12 * m24 + n13 * m34 + vec.x;\n            this._globalMatrices[mtxOffset + 4] = n21 * m11 + n22 * m21 + n23 * m31;\n            this._globalMatrices[mtxOffset + 5] = n21 * m12 + n22 * m22 + n23 * m32;\n            this._globalMatrices[mtxOffset + 6] = n21 * m13 + n22 * m23 + n23 * m33;\n            this._globalMatrices[mtxOffset + 7] = n21 * m14 + n22 * m24 + n23 * m34 + vec.y;\n            this._globalMatrices[mtxOffset + 8] = n31 * m11 + n32 * m21 + n33 * m31;\n            this._globalMatrices[mtxOffset + 9] = n31 * m12 + n32 * m22 + n33 * m32;\n            this._globalMatrices[mtxOffset + 10] = n31 * m13 + n32 * m23 + n33 * m33;\n            this._globalMatrices[mtxOffset + 11] = n31 * m14 + n32 * m24 + n33 * m34 + vec.z;\n            mtxOffset = mtxOffset + 12;\n        }\n    };\n    SkeletonAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = true;\n        //early out for GPU animations\n        if (!this._pAnimationSet.usesCPU)\n            return sourceElements;\n        var targetElements;\n        if (!(targetElements = this._morphedElements[sourceElements.id])) {\n            //not yet stored\n            sourceElements.normals;\n            sourceElements.tangents;\n            targetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n            //turn off auto calculations on the morphed geometry\n            targetElements.autoDeriveNormals = false;\n            targetElements.autoDeriveTangents = false;\n            //add event listeners for any changes in UV values on the source geometry\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n        }\n        return targetElements;\n    };\n    /**\n     * If the animation can't be performed on GPU, transform vertices manually\n     * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n     * @param pass The material pass for which we need to transform the vertices\n     */\n    SkeletonAnimator.prototype.morphElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = false;\n        var numVertices = sourceElements.numVertices;\n        var sourcePositions = sourceElements.positions.get(numVertices);\n        var sourceNormals = sourceElements.normals.get(numVertices);\n        var sourceTangents = sourceElements.tangents.get(numVertices);\n        var posDim = sourceElements.positions.dimensions;\n        var jointIndices = sourceElements.jointIndices.get(numVertices);\n        var jointWeights = sourceElements.jointWeights.get(numVertices);\n        var targetElements = this._morphedElements[sourceElements.id];\n        var targetPositions = targetElements.positions.get(numVertices);\n        var targetNormals = targetElements.normals.get(numVertices);\n        var targetTangents = targetElements.tangents.get(numVertices);\n        var index = 0;\n        var i0 = 0;\n        var i1 = 0;\n        var j = 0;\n        var k;\n        var vx, vy, vz;\n        var nx, ny, nz;\n        var tx, ty, tz;\n        var weight;\n        var vertX, vertY, vertZ;\n        var normX, normY, normZ;\n        var tangX, tangY, tangZ;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        while (index < numVertices) {\n            i0 = index * posDim;\n            vertX = sourcePositions[i0];\n            vertY = sourcePositions[i0 + 1];\n            vertZ = (posDim == 3) ? sourcePositions[i0 + 2] : 0;\n            i1 = index * 3;\n            normX = sourceNormals[i1];\n            normY = sourceNormals[i1 + 1];\n            normZ = sourceNormals[i1 + 2];\n            tangX = sourceTangents[i1];\n            tangY = sourceTangents[i1 + 1];\n            tangZ = sourceTangents[i1 + 2];\n            vx = 0;\n            vy = 0;\n            vz = 0;\n            nx = 0;\n            ny = 0;\n            nz = 0;\n            tx = 0;\n            ty = 0;\n            tz = 0;\n            k = 0;\n            while (k < this._jointsPerVertex) {\n                weight = jointWeights[j];\n                if (weight > 0) {\n                    // implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n                    var mtxOffset = jointIndices[j++] << 2;\n                    m11 = this._globalMatrices[mtxOffset];\n                    m12 = this._globalMatrices[mtxOffset + 1];\n                    m13 = this._globalMatrices[mtxOffset + 2];\n                    m14 = this._globalMatrices[mtxOffset + 3];\n                    m21 = this._globalMatrices[mtxOffset + 4];\n                    m22 = this._globalMatrices[mtxOffset + 5];\n                    m23 = this._globalMatrices[mtxOffset + 6];\n                    m24 = this._globalMatrices[mtxOffset + 7];\n                    m31 = this._globalMatrices[mtxOffset + 8];\n                    m32 = this._globalMatrices[mtxOffset + 9];\n                    m33 = this._globalMatrices[mtxOffset + 10];\n                    m34 = this._globalMatrices[mtxOffset + 11];\n                    vx += weight * (m11 * vertX + m12 * vertY + m13 * vertZ + m14);\n                    vy += weight * (m21 * vertX + m22 * vertY + m23 * vertZ + m24);\n                    vz += weight * (m31 * vertX + m32 * vertY + m33 * vertZ + m34);\n                    nx += weight * (m11 * normX + m12 * normY + m13 * normZ);\n                    ny += weight * (m21 * normX + m22 * normY + m23 * normZ);\n                    nz += weight * (m31 * normX + m32 * normY + m33 * normZ);\n                    tx += weight * (m11 * tangX + m12 * tangY + m13 * tangZ);\n                    ty += weight * (m21 * tangX + m22 * tangY + m23 * tangZ);\n                    tz += weight * (m31 * tangX + m32 * tangY + m33 * tangZ);\n                    ++k;\n                }\n                else {\n                    j += (this._jointsPerVertex - k);\n                    k = this._jointsPerVertex;\n                }\n            }\n            targetPositions[i0] = vx;\n            targetPositions[i0 + 1] = vy;\n            if (posDim == 3)\n                targetPositions[i0 + 2] = vz;\n            targetNormals[i1] = nx;\n            targetNormals[i1 + 1] = ny;\n            targetNormals[i1 + 2] = nz;\n            targetTangents[i1] = tx;\n            targetTangents[i1 + 1] = ty;\n            targetTangents[i1 + 2] = tz;\n            index++;\n        }\n        targetElements.setPositions(targetPositions);\n        targetElements.setNormals(targetNormals);\n        targetElements.setTangents(targetTangents);\n    };\n    /**\n     * Converts a local hierarchical skeleton pose to a global pose\n     * @param targetPose The SkeletonPose object that will contain the global pose.\n     * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n     */\n    SkeletonAnimator.prototype.localToGlobalPose = function (sourcePose, targetPose, skeleton) {\n        var globalPoses = targetPose.jointPoses;\n        var globalJointPose;\n        var joints = skeleton.joints;\n        var len = sourcePose.numJointPoses;\n        var jointPoses = sourcePose.jointPoses;\n        var parentIndex;\n        var joint;\n        var parentPose;\n        var pose;\n        var or;\n        var tr;\n        var t;\n        var q;\n        var x1, y1, z1, w1;\n        var x2, y2, z2, w2;\n        var x3, y3, z3;\n        // :s\n        if (globalPoses.length != len)\n            globalPoses.length = len;\n        for (var i = 0; i < len; ++i) {\n            globalJointPose = globalPoses[i];\n            if (globalJointPose == null)\n                globalJointPose = globalPoses[i] = new JointPose_1.default();\n            joint = joints[i];\n            parentIndex = joint.parentIndex;\n            pose = jointPoses[i];\n            q = globalJointPose.orientation;\n            t = globalJointPose.translation;\n            if (parentIndex < 0) {\n                tr = pose.translation;\n                or = pose.orientation;\n                q.x = or.x;\n                q.y = or.y;\n                q.z = or.z;\n                q.w = or.w;\n                t.x = tr.x;\n                t.y = tr.y;\n                t.z = tr.z;\n            }\n            else {\n                // append parent pose\n                parentPose = globalPoses[parentIndex];\n                // rotate point\n                or = parentPose.orientation;\n                tr = pose.translation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                x3 = tr.x;\n                y3 = tr.y;\n                z3 = tr.z;\n                w1 = -x2 * x3 - y2 * y3 - z2 * z3;\n                x1 = w2 * x3 + y2 * z3 - z2 * y3;\n                y1 = w2 * y3 - x2 * z3 + z2 * x3;\n                z1 = w2 * z3 + x2 * y3 - y2 * x3;\n                // append parent translation\n                tr = parentPose.translation;\n                t.x = -w1 * x2 + x1 * w2 - y1 * z2 + z1 * y2 + tr.x;\n                t.y = -w1 * y2 + x1 * z2 + y1 * w2 - z1 * x2 + tr.y;\n                t.z = -w1 * z2 - x1 * y2 + y1 * x2 + z1 * w2 + tr.z;\n                // append parent orientation\n                x1 = or.x;\n                y1 = or.y;\n                z1 = or.z;\n                w1 = or.w;\n                or = pose.orientation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                q.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n                q.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n                q.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n                q.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onTransitionComplete = function (event) {\n        if (event.type == AnimationStateEvent_1.default.TRANSITION_COMPLETE) {\n            event.animationNode.removeEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n            //if this is the current active state transition, revert control to the active node\n            if (this._pActiveState == event.animationState) {\n                this._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n                this._pActiveState = this.getAnimationState(this._pActiveNode);\n                this._activeSkeletonState = this._pActiveState;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onIndicesUpdate = function (event) {\n        var elements = event.target;\n        this._morphedElements[elements.id].setIndices(elements.indices);\n    };\n    SkeletonAnimator.prototype.onVerticesUpdate = function (event) {\n        var elements = event.target;\n        var morphGraphics = this._morphedElements[elements.id];\n        switch (event.attributesView) {\n            case elements.uvs:\n                morphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n                break;\n            case elements.getCustomAtributes(\"secondaryUVs\"):\n                morphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n                break;\n        }\n    };\n    return SkeletonAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-display/lib/events/ElementsEvent\":undefined}],\"awayjs-renderergl/lib/animators/VertexAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"../animators/AnimationSetBase\");\nvar AnimationRegisterData_1 = require(\"../animators/data/AnimationRegisterData\");\nvar VertexAnimationMode_1 = require(\"../animators/data/VertexAnimationMode\");\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nvar VertexAnimationSet = (function (_super) {\n    __extends(VertexAnimationSet, _super);\n    /**\n     * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n     */\n    //\t\tpublic get useNormals():boolean\n    //\t\t{\n    //\t\t\treturn this._uploadNormals;\n    //\t\t}\n    /**\n     * Creates a new <code>VertexAnimationSet</code> object.\n     *\n     * @param numPoses The number of poses made available at once to the GPU animation code.\n     * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n     *\n     * @see away3d.animators.data.VertexAnimationMode\n     */\n    function VertexAnimationSet(numPoses, blendMode) {\n        if (numPoses === void 0) { numPoses = 2; }\n        if (blendMode === void 0) { blendMode = \"absolute\"; }\n        _super.call(this);\n        this._numPoses = numPoses;\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(VertexAnimationSet.prototype, \"numPoses\", {\n        /**\n         * Returns the number of poses made available at once to the GPU animation code.\n         */\n        get: function () {\n            return this._numPoses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexAnimationSet.prototype, \"blendMode\", {\n        /**\n         * Returns the active blend mode of the vertex animator object.\n         */\n        get: function () {\n            return this._blendMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALVertexCode = function (shader, registerCache, sharedRegisters) {\n        //grab animationRegisterData from the materialpassbase or create a new one if the first time\n        this._iAnimationRegisterData = shader.animationRegisterData;\n        if (this._iAnimationRegisterData == null)\n            this._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData_1.default();\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            return this.getAbsoluteAGALCode(shader, registerCache, sharedRegisters);\n        else\n            return this.getAdditiveAGALCode(shader, registerCache, sharedRegisters);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALFragmentCode = function (shader, registerCache, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALUVCode = function (shader, registerCache, sharedRegisters) {\n        return \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    /**\n     * Generates the vertex AGAL code for absolute blending.\n     */\n    VertexAnimationSet.prototype.getAbsoluteAGALCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var regs = new Array(\".x\", \".y\", \".z\", \".w\");\n        var len = sharedRegisters.animatableAttributes.length;\n        var constantReg = registerCache.getFreeVertexConstant();\n        this._iAnimationRegisterData.weightsIndex = constantReg.index;\n        this._iAnimationRegisterData.poseIndices = new Array(this._numPoses);\n        var poseInput;\n        var k = 0;\n        if (len > 2)\n            len = 2;\n        for (var i = 0; i < len; ++i) {\n            code += \"mul \" + temp1 + \", \" + sharedRegisters.animatableAttributes[i] + \", \" + constantReg + regs[0] + \"\\n\";\n            for (var j = 1; j < this._numPoses; ++j) {\n                poseInput = registerCache.getFreeVertexAttribute();\n                this._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n                code += \"mul \" + temp2 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\";\n                if (j < this._numPoses - 1)\n                    code += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n            }\n            code += \"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        }\n        // add code for bitangents if tangents are used\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n        }\n        //\n        // // simply write attributes to targets, do not animate them\n        // // projection will pick up on targets[0] to do the projection\n        // var len:number = sharedRegisters.animatableAttributes.length;\n        // for (var i:number = 0; i < len; ++i)\n        // \tcode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n        return code;\n    };\n    /**\n     * Generates the vertex AGAL code for additive blending.\n     */\n    VertexAnimationSet.prototype.getAdditiveAGALCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var len = sharedRegisters.animatableAttributes.length;\n        var regs = [\".x\", \".y\", \".z\", \".w\"];\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        var constantReg = registerCache.getFreeVertexConstant();\n        this._iAnimationRegisterData.weightsIndex = constantReg.index;\n        this._iAnimationRegisterData.poseIndices = new Array(this._numPoses);\n        var poseInput;\n        var k = 0;\n        if (len > 2)\n            len = 2;\n        code += \"mov  \" + sharedRegisters.animationTargetRegisters[0] + \", \" + sharedRegisters.animatableAttributes[0] + \"\\n\";\n        if (shader.normalDependencies > 0)\n            code += \"mov \" + sharedRegisters.animationTargetRegisters[1] + \", \" + sharedRegisters.animatableAttributes[1] + \"\\n\";\n        for (var i = 0; i < len; ++i) {\n            for (var j = 0; j < this._numPoses; ++j) {\n                poseInput = registerCache.getFreeVertexAttribute();\n                this._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n                code += \"mul \" + temp1 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\" +\n                    \"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n            }\n        }\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n        }\n        return code;\n    };\n    return VertexAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationSet;\n\n},{\"../animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"../animators/data/AnimationRegisterData\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\",\"../animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\"}],\"awayjs-renderergl/lib/animators/VertexAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar AnimatorBase_1 = require(\"../animators/AnimatorBase\");\nvar VertexAnimationMode_1 = require(\"../animators/data/VertexAnimationMode\");\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar VertexAnimator = (function (_super) {\n    __extends(VertexAnimator, _super);\n    /**\n     * Creates a new <code>VertexAnimator</code> object.\n     *\n     * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n     */\n    function VertexAnimator(vertexAnimationSet) {\n        _super.call(this, vertexAnimationSet);\n        this._poses = new Array();\n        this._weights = new Float32Array([1, 0, 0, 0]);\n        this._vertexAnimationSet = vertexAnimationSet;\n    }\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.clone = function () {\n        return new VertexAnimator(this._vertexAnimationSet);\n    };\n    /**\n     * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n     * @param sequenceName The name of the clip to be played.\n     */\n    VertexAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        //TODO: implement transitions in vertex animator\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeVertexState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        var geometryFlag = false;\n        if (this._poses[0] != this._activeVertexState.currentGraphics) {\n            this._poses[0] = this._activeVertexState.currentGraphics;\n            geometryFlag = true;\n        }\n        if (this._poses[1] != this._activeVertexState.nextGraphics)\n            this._poses[1] = this._activeVertexState.nextGraphics;\n        this._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n        if (geometryFlag)\n            this.invalidateElements();\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.setRenderState = function (shader, renderable, stage, camera) {\n        // todo: add code for when running on cpu\n        // this type of animation can only be SubSprite\n        var graphic = renderable.graphic;\n        var elements = graphic.elements;\n        // if no poses defined, set temp data\n        if (!this._poses.length) {\n            this.setNullPose(shader, elements, stage);\n            return;\n        }\n        var animationRegisterData = shader.animationRegisterData;\n        var i;\n        var len = this._vertexAnimationSet.numPoses;\n        shader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n        if (this._vertexAnimationSet.blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            i = 1;\n        else\n            i = 0;\n        var elementsGL;\n        var k = 0;\n        for (; i < len; ++i) {\n            elements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n            elementsGL = stage.getAbstraction(elements);\n            elementsGL._indexMappings = stage.getAbstraction(graphic.elements).getIndexMappings();\n            if (elements.isAsset(TriangleElements_1.default)) {\n                elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.positions);\n                if (shader.normalDependencies > 0)\n                    elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.normals);\n            }\n        }\n    };\n    VertexAnimator.prototype.setNullPose = function (shader, elements, stage) {\n        var animationRegisterData = shader.animationRegisterData;\n        shader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n        var elementsGL = stage.getAbstraction(elements);\n        var k = 0;\n        if (this._vertexAnimationSet.blendMode == VertexAnimationMode_1.default.ABSOLUTE) {\n            var len = this._vertexAnimationSet.numPoses;\n            for (var i = 1; i < len; ++i) {\n                if (elements.isAsset(TriangleElements_1.default)) {\n                    elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.positions);\n                    if (shader.normalDependencies > 0)\n                        elementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], elements.normals);\n                }\n            }\n        }\n        // todo: set temp data for additive?\n    };\n    /**\n     * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n     * Needs to be called if gpu code is potentially required.\n     */\n    VertexAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    VertexAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        if (this._vertexAnimationSet.blendMode == VertexAnimationMode_1.default.ABSOLUTE && this._poses.length)\n            return this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n        //nothing to do here\n        return sourceElements;\n    };\n    return VertexAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimator;\n\n},{\"../animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"../animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/animators/data/AnimationElements\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar AnimationElements = (function () {\n    function AnimationElements() {\n        this._pVertexBuffer = new Array(8);\n        this._pBufferContext = new Array(8);\n        this._pBufferDirty = new Array(8);\n        this.numProcessedVertices = 0;\n        this.previousTime = Number.NEGATIVE_INFINITY;\n        this.animationParticles = new Array();\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n        this._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n    }\n    AnimationElements.prototype.createVertexData = function (numVertices, totalLenOfOneVertex) {\n        this._numVertices = numVertices;\n        this._totalLenOfOneVertex = totalLenOfOneVertex;\n        this._pVertexData = new Array(numVertices * totalLenOfOneVertex);\n    };\n    AnimationElements.prototype.activateVertexBuffer = function (index, bufferOffset, stage, format) {\n        var contextIndex = stage.stageIndex;\n        var context = stage.context;\n        var buffer = this._pVertexBuffer[contextIndex];\n        if (!buffer || this._pBufferContext[contextIndex] != context) {\n            buffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex * 4);\n            this._pBufferContext[contextIndex] = context;\n            this._pBufferDirty[contextIndex] = true;\n        }\n        if (this._pBufferDirty[contextIndex]) {\n            buffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n            this._pBufferDirty[contextIndex] = false;\n        }\n        context.setVertexBufferAt(index, buffer, bufferOffset * 4, format);\n    };\n    AnimationElements.prototype.dispose = function () {\n        while (this._pVertexBuffer.length) {\n            var vertexBuffer = this._pVertexBuffer.pop();\n            if (vertexBuffer)\n                vertexBuffer.dispose();\n        }\n    };\n    AnimationElements.prototype.invalidateBuffer = function () {\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n    };\n    Object.defineProperty(AnimationElements.prototype, \"vertexData\", {\n        get: function () {\n            return this._pVertexData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"totalLenOfOneVertex\", {\n        get: function () {\n            return this._totalLenOfOneVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationElements.SUBGEOM_ID_COUNT = 0;\n    return AnimationElements;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationElements;\n\n},{}],\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * ...\n */\nvar AnimationRegisterData = (function () {\n    function AnimationRegisterData() {\n        this.indexDictionary = new Object();\n    }\n    AnimationRegisterData.prototype.reset = function (registerCache, sharedRegisters, needVelocity) {\n        this.rotationRegisters = new Array();\n        this.positionAttribute = sharedRegisters.animatableAttributes[0];\n        this.scaleAndRotateTarget = sharedRegisters.animationTargetRegisters[0];\n        for (var i = 1; i < sharedRegisters.animationTargetRegisters.length; i++)\n            this.rotationRegisters.push(sharedRegisters.animationTargetRegisters[i]);\n        //allot const register\n        this.vertexZeroConst = registerCache.getFreeVertexConstant();\n        this.vertexZeroConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n        this.vertexOneConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n        this.vertexTwoConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n        //allot temp register\n        this.positionTarget = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(this.positionTarget, 1);\n        this.positionTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n        if (needVelocity) {\n            this.velocityTarget = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(this.velocityTarget, 1);\n            this.velocityTarget = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index);\n            this.vertexTime = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index, 3);\n            this.vertexLife = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index, 3);\n        }\n        else {\n            var tempTime = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(tempTime, 1);\n            this.vertexTime = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 0);\n            this.vertexLife = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 1);\n        }\n    };\n    AnimationRegisterData.prototype.setUVSourceAndTarget = function (sharedRegisters) {\n        this.uvVar = sharedRegisters.uvTarget;\n        this.uvAttribute = sharedRegisters.uvSource;\n        //uv action is processed after normal actions,so use offsetTarget as uvTarget\n        this.uvTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n    };\n    AnimationRegisterData.prototype.setRegisterIndex = function (node, parameterIndex, registerIndex) {\n        //8 should be enough for any node.\n        var t = this.indexDictionary[node.id];\n        if (t == null)\n            t = this.indexDictionary[node.id] = new Array(8);\n        t[parameterIndex] = registerIndex;\n    };\n    AnimationRegisterData.prototype.getRegisterIndex = function (node, parameterIndex) {\n        return this.indexDictionary[node.id][parameterIndex];\n    };\n    return AnimationRegisterData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationRegisterData;\n\n},{\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\":[function(require,module,exports){\n\"use strict\";\nvar ColorSegmentPoint = (function () {\n    function ColorSegmentPoint(life, color) {\n        //0<life<1\n        if (life <= 0 || life >= 1)\n            throw (new Error(\"life exceeds range (0,1)\"));\n        this._life = life;\n        this._color = color;\n    }\n    Object.defineProperty(ColorSegmentPoint.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColorSegmentPoint.prototype, \"life\", {\n        get: function () {\n            return this._life;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorSegmentPoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ColorSegmentPoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/JointPose\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nvar JointPose = (function () {\n    function JointPose() {\n        /**\n         * The rotation of the pose stored as a quaternion\n         */\n        this.orientation = new Quaternion_1.default();\n        /**\n         * The translation of the pose\n         */\n        this.translation = new Vector3D_1.default();\n    }\n    /**\n     * Converts the transformation to a Matrix3D representation.\n     *\n     * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n     * @return The transformation matrix of the pose.\n     */\n    JointPose.prototype.toMatrix3D = function (target) {\n        if (target === void 0) { target = null; }\n        if (target == null)\n            target = new Matrix3D_1.default();\n        this.orientation.toMatrix3D(target);\n        target.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n        return target;\n    };\n    /**\n     * Copies the transformation data from a source pose object into the existing pose object.\n     *\n     * @param pose The source pose to copy from.\n     */\n    JointPose.prototype.copyFrom = function (pose) {\n        var or = pose.orientation;\n        var tr = pose.translation;\n        this.orientation.x = or.x;\n        this.orientation.y = or.y;\n        this.orientation.z = or.z;\n        this.orientation.w = or.w;\n        this.translation.x = tr.x;\n        this.translation.y = tr.y;\n        this.translation.z = tr.z;\n    };\n    return JointPose;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JointPose;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Quaternion\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleAnimationData = (function () {\n    function ParticleAnimationData(index, startTime, duration, delay, particle) {\n        this.index = index;\n        this.startTime = startTime;\n        this.totalTime = duration + delay;\n        this.duration = duration;\n        this.delay = delay;\n        this.startVertexIndex = particle.startVertexIndex;\n        this.numVertices = particle.numVertices;\n    }\n    return ParticleAnimationData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationData;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the properties mode of a particle animation node.\n */\nvar ParticlePropertiesMode = (function () {\n    function ParticlePropertiesMode() {\n    }\n    /**\n     * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n     */\n    ParticlePropertiesMode.GLOBAL = 0;\n    /**\n     * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n     */\n    ParticlePropertiesMode.LOCAL_STATIC = 1;\n    /**\n     * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n     */\n    ParticlePropertiesMode.LOCAL_DYNAMIC = 2;\n    return ParticlePropertiesMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePropertiesMode;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticleProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nvar ParticleProperties = (function () {\n    function ParticleProperties() {\n    }\n    return ParticleProperties;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleProperties;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonJoint\":[function(require,module,exports){\n\"use strict\";\n/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nvar SkeletonJoint = (function () {\n    /**\n     * Creates a new <code>SkeletonJoint</code> object\n     */\n    function SkeletonJoint() {\n        /**\n         * The index of the parent joint in the skeleton's joints vector.\n         *\n         * @see away.animators.Skeleton#joints\n         */\n        this.parentIndex = -1;\n    }\n    return SkeletonJoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonJoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonPose\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nvar SkeletonPose = (function (_super) {\n    __extends(SkeletonPose, _super);\n    /**\n     * Creates a new <code>SkeletonPose</code> object.\n     */\n    function SkeletonPose() {\n        _super.call(this);\n        this.jointPoses = new Array();\n    }\n    Object.defineProperty(SkeletonPose.prototype, \"numJointPoses\", {\n        /**\n         * The total number of joint poses in the skeleton pose.\n         */\n        get: function () {\n            return this.jointPoses.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonPose.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return SkeletonPose.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint pose object with the given joint name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object whose pose is to be found.\n     * @return The pose object with the given joint name.\n     */\n    SkeletonPose.prototype.jointPoseFromName = function (jointName) {\n        var jointPoseIndex = this.jointPoseIndexFromName(jointName);\n        if (jointPoseIndex != -1)\n            return this.jointPoses[jointPoseIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n     *\n     * @param The name of the joint object whose pose is to be found.\n     * @return The index of the pose object in the jointPoses Array\n     *\n     * @see #jointPoses\n     */\n    SkeletonPose.prototype.jointPoseIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointPoseIndex;\n        var jointPose;\n        for (var i; i < this.jointPoses.length; i++) {\n            jointPose = this.jointPoses[i];\n            if (jointPose.name == jointName)\n                return jointPoseIndex;\n            jointPoseIndex++;\n        }\n        return -1;\n    };\n    /**\n     * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n     *\n     * @return SkeletonPose\n     */\n    SkeletonPose.prototype.clone = function () {\n        var clone = new SkeletonPose();\n        var numJointPoses = this.jointPoses.length;\n        for (var i = 0; i < numJointPoses; i++) {\n            var cloneJointPose = new JointPose_1.default();\n            var thisJointPose = this.jointPoses[i];\n            cloneJointPose.name = thisJointPose.name;\n            cloneJointPose.copyFrom(thisJointPose);\n            clone.jointPoses[i] = cloneJointPose;\n        }\n        return clone;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonPose.prototype.dispose = function () {\n        this.jointPoses.length = 0;\n    };\n    SkeletonPose.assetType = \"[asset SkeletonPose]\";\n    return SkeletonPose;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonPose;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/Skeleton\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nvar Skeleton = (function (_super) {\n    __extends(Skeleton, _super);\n    /**\n     * Creates a new <code>Skeleton</code> object\n     */\n    function Skeleton() {\n        _super.call(this);\n        // in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n        this.joints = new Array();\n    }\n    Object.defineProperty(Skeleton.prototype, \"numJoints\", {\n        /**\n         * The total number of joints in the skeleton.\n         */\n        get: function () {\n            return this.joints.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The joint object with the given name.\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointFromName = function (jointName) {\n        var jointIndex = this.jointIndexFromName(jointName);\n        if (jointIndex != -1)\n            return this.joints[jointIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The index of the joint object in the joints Array\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointIndex;\n        var joint;\n        for (var i; i < this.joints.length; i++) {\n            joint = this.joints[i];\n            if (joint.name == jointName)\n                return jointIndex;\n            jointIndex++;\n        }\n        return -1;\n    };\n    /**\n     * @inheritDoc\n     */\n    Skeleton.prototype.dispose = function () {\n        this.joints.length = 0;\n    };\n    Object.defineProperty(Skeleton.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return Skeleton.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skeleton.assetType = \"[asset Skeleton]\";\n    return Skeleton;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Skeleton;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nvar VertexAnimationMode = (function () {\n    function VertexAnimationMode() {\n    }\n    /**\n     * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ADDITIVE = \"additive\";\n    /**\n     * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ABSOLUTE = \"absolute\";\n    return VertexAnimationMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationMode;\n\n},{}],\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nvar AnimationClipNodeBase = (function (_super) {\n    __extends(AnimationClipNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationClipNodeBase</code> object.\n     */\n    function AnimationClipNodeBase() {\n        _super.call(this);\n        this._pLooping = true;\n        this._pTotalDuration = 0;\n        this._pStitchDirty = true;\n        this._pStitchFinalFrame = false;\n        this._pNumFrames = 0;\n        this._pDurations = new Array();\n        /*uint*/\n        this._pTotalDelta = new Vector3D_1.default();\n        this.fixedFrameRate = true;\n    }\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"looping\", {\n        /**\n         * Determines whether the contents of the animation node have looping characteristics enabled.\n         */\n        get: function () {\n            return this._pLooping;\n        },\n        set: function (value) {\n            if (this._pLooping == value)\n                return;\n            this._pLooping = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"stitchFinalFrame\", {\n        /**\n         * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n         * assumption that both first and last frames are identical (false). Defaults to false.\n         */\n        get: function () {\n            return this._pStitchFinalFrame;\n        },\n        set: function (value) {\n            if (this._pStitchFinalFrame == value)\n                return;\n            this._pStitchFinalFrame = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDuration\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDelta\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"lastFrame\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pLastFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"durations\", {\n        /**\n         * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n         */\n        get: function () {\n            return this._pDurations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the node's final frame stitch state.\n     *\n     * @see #stitchFinalFrame\n     */\n    AnimationClipNodeBase.prototype._pUpdateStitch = function () {\n        this._pStitchDirty = false;\n        this._pLastFrame = (this._pStitchFinalFrame) ? this._pNumFrames : this._pNumFrames - 1;\n        this._pTotalDuration = 0;\n        this._pTotalDelta.x = 0;\n        this._pTotalDelta.y = 0;\n        this._pTotalDelta.z = 0;\n    };\n    return AnimationClipNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipNodeBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleAccelerationState_1 = require(\"../../animators/states/ParticleAccelerationState\");\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nvar ParticleAccelerationNode = (function (_super) {\n    __extends(ParticleAccelerationNode, _super);\n    /**\n     * Creates a new <code>ParticleAccelerationNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n     */\n    function ParticleAccelerationNode(mode, acceleration) {\n        if (acceleration === void 0) { acceleration = null; }\n        _super.call(this, \"ParticleAcceleration\", mode, 3);\n        this._pStateClass = ParticleAccelerationState_1.default;\n        this._acceleration = acceleration || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var accelerationValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleAccelerationState_1.default.ACCELERATION_INDEX, accelerationValue.index);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp, 1);\n        var code = \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + accelerationValue + \"\\n\";\n        if (animationSet.needVelocity) {\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            code += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        }\n        registerCache.removeVertexTempUsage(temp);\n        code += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterData.vertexTime + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var tempAcceleration = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n        if (!tempAcceleration)\n            throw new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n        this._pOneData[0] = tempAcceleration.x / 2;\n        this._pOneData[1] = tempAcceleration.y / 2;\n        this._pOneData[2] = tempAcceleration.z / 2;\n    };\n    /**\n     * Reference for acceleration node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n     */\n    ParticleAccelerationNode.ACCELERATION_VECTOR3D = \"AccelerationVector3D\";\n    return ParticleAccelerationNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleBezierCurveState_1 = require(\"../../animators/states/ParticleBezierCurveState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nvar ParticleBezierCurveNode = (function (_super) {\n    __extends(ParticleBezierCurveNode, _super);\n    /**\n     * Creates a new <code>ParticleBezierCurveNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n     * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n     */\n    function ParticleBezierCurveNode(mode, controlPoint, endPoint) {\n        if (controlPoint === void 0) { controlPoint = null; }\n        if (endPoint === void 0) { endPoint = null; }\n        _super.call(this, \"ParticleBezierCurve\", mode, 6);\n        this._pStateClass = ParticleBezierCurveState_1.default;\n        this._iControlPoint = controlPoint || new Vector3D_1.default();\n        this._iEndPoint = endPoint || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var controlValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_CONTROL_INDEX, controlValue.index);\n        var endValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_END_INDEX, endValue.index);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var rev_time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var time_2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var time_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        registerCache.addVertexTempUsages(temp, 1);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        registerCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"sub \" + rev_time + \",\" + animationRegisterData.vertexOneConst + \",\" + animationRegisterData.vertexLife + \"\\n\";\n        code += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexLife + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + animationRegisterData.vertexLife + \",\" + rev_time + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity) {\n            code += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"sub \" + time_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + time_2 + \"\\n\";\n            code += \"mul \" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \",\" + time_temp + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n            code += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var bezierControl = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n        if (!bezierControl)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n        var bezierEnd = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n        if (!bezierEnd)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n        this._pOneData[0] = bezierControl.x;\n        this._pOneData[1] = bezierControl.y;\n        this._pOneData[2] = bezierControl.z;\n        this._pOneData[3] = bezierEnd.x;\n        this._pOneData[4] = bezierEnd.y;\n        this._pOneData[5] = bezierEnd.z;\n    };\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D = \"BezierControlVector3D\";\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_END_VECTOR3D = \"BezierEndVector3D\";\n    return ParticleBezierCurveNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleBillboardState_1 = require(\"../../animators/states/ParticleBillboardState\");\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nvar ParticleBillboardNode = (function (_super) {\n    __extends(ParticleBillboardNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleBillboardNode(billboardAxis) {\n        if (billboardAxis === void 0) { billboardAxis = null; }\n        _super.call(this, \"ParticleBillboard\", ParticlePropertiesMode_1.default.GLOBAL, 0, 4);\n        this._pStateClass = ParticleBillboardState_1.default;\n        this._iBillboardAxis = billboardAxis;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var rotationMatrixRegister = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleBillboardState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var code = \"m33 \" + temp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n            \"mov \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        var shaderRegisterElement;\n        for (var i = 0; i < animationRegisterData.rotationRegisters.length; i++) {\n            shaderRegisterElement = animationRegisterData.rotationRegisters[i];\n            code += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n                \"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasBillboard = true;\n    };\n    return ParticleBillboardNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleColorState_1 = require(\"../../animators/states/ParticleColorState\");\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nvar ParticleColorNode = (function (_super) {\n    __extends(ParticleColorNode, _super);\n    /**\n     * Creates a new <code>ParticleColorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n     * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n     * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleColorNode(mode, usesMultiplier, usesOffset, usesCycle, usesPhase, startColor, endColor, cycleDuration, cyclePhase) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (startColor === void 0) { startColor = null; }\n        if (endColor === void 0) { endColor = null; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleColor\", mode, (usesMultiplier && usesOffset) ? 16 : 8, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iStartColor = startColor || new ColorTransform_1.default();\n        this._iEndColor = endColor || new ColorTransform_1.default();\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation) {\n            var temp = registerCache.getFreeVertexVectorTemp();\n            if (this._iUsesCycle) {\n                var cycleConst = registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.CYCLE_INDEX, cycleConst.index);\n                registerCache.addVertexTempUsages(temp, 1);\n                var sin = registerCache.getFreeVertexSingleTemp();\n                registerCache.removeVertexTempUsage(temp);\n                code += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + cycleConst + \".x\\n\";\n                if (this._iUsesPhase)\n                    code += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n                code += \"sin \" + sin + \",\" + sin + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                var startMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n                var deltaMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n                code += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle ? sin : animationRegisterData.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n                code += \"mul \" + animationRegisterData.colorMulTarget + \",\" + temp + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var startOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n                var deltaOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                animationRegisterData.setRegisterIndex(this, ParticleColorState_1.default.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n                code += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle ? sin : animationRegisterData.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + temp + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var startColor = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n        if (!startColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n        var endColor = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n        if (!endColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        if (!this._iUsesCycle) {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = startColor.redMultiplier;\n                this._pOneData[i++] = startColor.greenMultiplier;\n                this._pOneData[i++] = startColor.blueMultiplier;\n                this._pOneData[i++] = startColor.alphaMultiplier;\n                this._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n                this._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n                this._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n                this._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = startColor.redOffset / 255;\n                this._pOneData[i++] = startColor.greenOffset / 255;\n                this._pOneData[i++] = startColor.blueOffset / 255;\n                this._pOneData[i++] = startColor.alphaOffset / 255;\n                this._pOneData[i++] = (endColor.redOffset - startColor.redOffset) / 255;\n                this._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset) / 255;\n                this._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset) / 255;\n                this._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset) / 255;\n            }\n        }\n        else {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier) / 2;\n                this._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier) / 2;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = (startColor.redOffset + endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.redOffset - endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset) / (255 * 2);\n            }\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_START_COLORTRANSFORM = \"ColorStartColorTransform\";\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_END_COLORTRANSFORM = \"ColorEndColorTransform\";\n    return ParticleColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleFollowState_1 = require(\"../../animators/states/ParticleFollowState\");\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nvar ParticleFollowNode = (function (_super) {\n    __extends(ParticleFollowNode, _super);\n    /**\n     * Creates a new <code>ParticleFollowNode</code>\n     *\n     * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n     * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n     * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n     */\n    function ParticleFollowNode(usesPosition, usesRotation, smooth) {\n        if (usesPosition === void 0) { usesPosition = true; }\n        if (usesRotation === void 0) { usesRotation = true; }\n        if (smooth === void 0) { smooth = false; }\n        _super.call(this, \"ParticleFollow\", ParticlePropertiesMode_1.default.LOCAL_DYNAMIC, (usesPosition && usesRotation) ? 6 : 3, ParticleAnimationSet_1.default.POST_PRIORITY);\n        this._pStateClass = ParticleFollowState_1.default;\n        this._iUsesPosition = usesPosition;\n        this._iUsesRotation = usesRotation;\n        this._iSmooth = smooth;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        //TODO: use Quaternion to implement this function\n        var code = \"\";\n        if (this._iUsesRotation) {\n            var rotationAttribute = registerCache.getFreeVertexAttribute();\n            animationRegisterData.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n            var temp1 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp1, 1);\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp2, 1);\n            var temp3 = registerCache.getFreeVertexVectorTemp();\n            var temp4;\n            if (animationSet.hasBillboard) {\n                registerCache.addVertexTempUsages(temp3, 1);\n                temp4 = registerCache.getFreeVertexVectorTemp();\n            }\n            registerCache.removeVertexTempUsage(temp1);\n            registerCache.removeVertexTempUsage(temp2);\n            if (animationSet.hasBillboard)\n                registerCache.removeVertexTempUsage(temp3);\n            var len = animationRegisterData.rotationRegisters.length;\n            var i;\n            //x axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n            code += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n            code += \"mov \" + temp2 + \".x,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n            code += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n            if (animationSet.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //y axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n            code += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n            code += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n            if (animationSet.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n            code += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            if (animationSet.hasBillboard) {\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n                code += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n                code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            }\n            else {\n                code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n        }\n        if (this._iUsesPosition) {\n            var positionAttribute = registerCache.getFreeVertexAttribute();\n            animationRegisterData.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_POSITION_INDEX, positionAttribute.index);\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return ParticleFollowNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleInitialColorState_1 = require(\"../../animators/states/ParticleInitialColorState\");\n/**\n *\n */\nvar ParticleInitialColorNode = (function (_super) {\n    __extends(ParticleInitialColorNode, _super);\n    function ParticleInitialColorNode(mode, usesMultiplier, usesOffset, initialColor) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = false; }\n        if (initialColor === void 0) { initialColor = null; }\n        _super.call(this, \"ParticleInitialColor\", mode, (usesMultiplier && usesOffset) ? 8 : 4, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleInitialColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iInitialColor = initialColor || new ColorTransform_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation) {\n            if (this._iUsesMultiplier) {\n                var multiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n                animationRegisterData.setRegisterIndex(this, ParticleInitialColorState_1.default.MULTIPLIER_INDEX, multiplierValue.index);\n                code += \"mul \" + animationRegisterData.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var offsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleInitialColorState_1.default.OFFSET_INDEX, offsetValue.index);\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var initialColor = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n        if (!initialColor)\n            throw (new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        //multiplier\n        if (this._iUsesMultiplier) {\n            this._pOneData[i++] = initialColor.redMultiplier;\n            this._pOneData[i++] = initialColor.greenMultiplier;\n            this._pOneData[i++] = initialColor.blueMultiplier;\n            this._pOneData[i++] = initialColor.alphaMultiplier;\n        }\n        //offset\n        if (this._iUsesOffset) {\n            this._pOneData[i++] = initialColor.redOffset / 255;\n            this._pOneData[i++] = initialColor.greenOffset / 255;\n            this._pOneData[i++] = initialColor.blueOffset / 255;\n            this._pOneData[i++] = initialColor.alphaOffset / 255;\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n     */\n    ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM = \"ColorInitialColorTransform\";\n    return ParticleInitialColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nvar ParticleNodeBase = (function (_super) {\n    __extends(ParticleNodeBase, _super);\n    /**\n     * Creates a new <code>ParticleNodeBase</code> object.\n     *\n     * @param               name            Defines the generic name of the particle animation node.\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n     * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n     */\n    function ParticleNodeBase(name, mode, dataLength, priority) {\n        if (priority === void 0) { priority = 1; }\n        _super.call(this);\n        this._pDataLength = 3;\n        name = name + ParticleNodeBase.MODES[mode];\n        this.name = name;\n        this._pMode = mode;\n        this._priority = priority;\n        this._pDataLength = dataLength;\n        this._pOneData = new Array(this._pDataLength);\n    }\n    Object.defineProperty(ParticleNodeBase.prototype, \"mode\", {\n        /**\n         * Returns the property mode of the particle animation node. Typically set in the node constructor\n         *\n         * @see away.animators.ParticlePropertiesMode\n         */\n        get: function () {\n            return this._pMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"priority\", {\n        /**\n         * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._priority;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"dataLength\", {\n        /**\n         * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._pDataLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"oneData\", {\n        /**\n         * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #generatePropertyOfOneParticle\n         */\n        get: function () {\n            return this._pOneData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the AGAL code of the particle animation node for use in the vertex shader.\n     */\n    ParticleNodeBase.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader.\n     */\n    ParticleNodeBase.prototype.getAGALFragmentCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n     */\n    ParticleNodeBase.prototype.getAGALUVCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        return \"\";\n    };\n    /**\n     * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n     *\n     * @see away.animators.ParticleAnimationSet#initParticleFunc\n     */\n    ParticleNodeBase.prototype._iGeneratePropertyOfOneParticle = function (param) {\n    };\n    /**\n     * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n     */\n    ParticleNodeBase.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n    };\n    //modes alias\n    ParticleNodeBase.GLOBAL = 'Global';\n    ParticleNodeBase.LOCAL_STATIC = 'LocalStatic';\n    ParticleNodeBase.LOCAL_DYNAMIC = 'LocalDynamic';\n    //modes list\n    ParticleNodeBase.MODES = {\n        0: ParticleNodeBase.GLOBAL,\n        1: ParticleNodeBase.LOCAL_STATIC,\n        2: ParticleNodeBase.LOCAL_DYNAMIC\n    };\n    return ParticleNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleNodeBase;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleOrbitState_1 = require(\"../../animators/states/ParticleOrbitState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nvar ParticleOrbitNode = (function (_super) {\n    __extends(ParticleOrbitNode, _super);\n    /**\n     * Creates a new <code>ParticleOrbitNode</code> object.\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n     * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n     */\n    function ParticleOrbitNode(mode, usesEulers, usesCycle, usesPhase, radius, cycleDuration, cyclePhase, eulers) {\n        if (usesEulers === void 0) { usesEulers = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (radius === void 0) { radius = 100; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (eulers === void 0) { eulers = null; }\n        var len = 3;\n        if (usesPhase)\n            len++;\n        _super.call(this, \"ParticleOrbit\", mode, len);\n        this._pStateClass = ParticleOrbitState_1.default;\n        this._iUsesEulers = usesEulers;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iRadius = radius;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n        this._iEulers = eulers || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var orbitRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleOrbitState_1.default.ORBIT_INDEX, orbitRegister.index);\n        var eulersMatrixRegister = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleOrbitState_1.default.EULERS_INDEX, eulersMatrixRegister.index);\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        var temp1 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp1, 1);\n        var distance = new ShaderRegisterElement_1.default(temp1.regName, temp1.index);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var cos = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 1);\n        var degree = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 2);\n        registerCache.removeVertexTempUsage(temp1);\n        var code = \"\";\n        if (this._iUsesCycle) {\n            code += \"mul \" + degree + \",\" + animationRegisterData.vertexTime + \",\" + orbitRegister + \".y\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n        }\n        else\n            code += \"mul \" + degree + \",\" + animationRegisterData.vertexLife + \",\" + orbitRegister + \".y\\n\";\n        code += \"cos \" + cos + \",\" + degree + \"\\n\";\n        code += \"sin \" + sin + \",\" + degree + \"\\n\";\n        code += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n        code += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n        code += \"mov \" + distance + \".wz\" + animationRegisterData.vertexZeroConst + \"\\n\";\n        if (this._iUsesEulers)\n            code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity) {\n            code += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n            code += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n            code += \"mov \" + distance + \".zw,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            if (this._iUsesEulers)\n                code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n            code += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n            code += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n            if (!this._iUsesCycle)\n                code += \"div \" + distance + \",\" + distance + \",\" + animationRegisterData.vertexLife + \"\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n        var orbit = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n        if (!orbit)\n            throw new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n        this._pOneData[0] = orbit.x;\n        if (this._iUsesCycle && orbit.y <= 0)\n            throw (new Error(\"the cycle duration must be greater than zero\"));\n        this._pOneData[1] = Math.PI * 2 / (!this._iUsesCycle ? 1 : orbit.y);\n        this._pOneData[2] = orbit.x * Math.PI * 2;\n        if (this._iUsesPhase)\n            this._pOneData[3] = orbit.z * Math.PI / 180;\n    };\n    /**\n     * Reference for orbit node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n     */\n    ParticleOrbitNode.ORBIT_VECTOR3D = \"OrbitVector3D\";\n    return ParticleOrbitNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleOscillatorState_1 = require(\"../../animators/states/ParticleOscillatorState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nvar ParticleOscillatorNode = (function (_super) {\n    __extends(ParticleOscillatorNode, _super);\n    /**\n     * Creates a new <code>ParticleOscillatorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n     */\n    function ParticleOscillatorNode(mode, oscillator) {\n        if (oscillator === void 0) { oscillator = null; }\n        _super.call(this, \"ParticleOscillator\", mode, 4);\n        this._pStateClass = ParticleOscillatorState_1.default;\n        this._iOscillator = oscillator || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var oscillatorRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleOscillatorState_1.default.OSCILLATOR_INDEX, oscillatorRegister.index);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var dgree = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        registerCache.addVertexTempUsages(temp, 1);\n        var temp2 = registerCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        registerCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mul \" + dgree + \",\" + animationRegisterData.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + dgree + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity) {\n            code += \"cos \" + cos + \",\" + dgree + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n        var drift = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n        if (!drift)\n            throw (new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = drift.x;\n        this._pOneData[1] = drift.y;\n        this._pOneData[2] = drift.z;\n        if (drift.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        this._pOneData[3] = Math.PI * 2 / drift.w;\n    };\n    /**\n     * Reference for ocsillator node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n     */\n    ParticleOscillatorNode.OSCILLATOR_VECTOR3D = \"OscillatorVector3D\";\n    return ParticleOscillatorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticlePositionState_1 = require(\"../../animators/states/ParticlePositionState\");\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nvar ParticlePositionNode = (function (_super) {\n    __extends(ParticlePositionNode, _super);\n    /**\n     * Creates a new <code>ParticlePositionNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n     */\n    function ParticlePositionNode(mode, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticlePosition\", mode, 3);\n        this._pStateClass = ParticlePositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticlePositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        return \"add \" + animationRegisterData.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticlePositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for position node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing position of the particle.\n     */\n    ParticlePositionNode.POSITION_VECTOR3D = \"PositionVector3D\";\n    return ParticlePositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToHeadingState_1 = require(\"../../animators/states/ParticleRotateToHeadingState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nvar ParticleRotateToHeadingNode = (function (_super) {\n    __extends(ParticleRotateToHeadingNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleRotateToHeadingNode() {\n        _super.call(this, \"ParticleRotateToHeading\", ParticlePropertiesMode_1.default.GLOBAL, 0, 3);\n        this._pStateClass = ParticleRotateToHeadingState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        var len = animationRegisterData.rotationRegisters.length;\n        var i;\n        if (animationSet.hasBillboard) {\n            var temp1 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp1, 1);\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp2, 1);\n            var temp3 = registerCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = registerCache.getFreeVertexConstant();\n            animationRegisterData.setRegisterIndex(this, ParticleRotateToHeadingState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.removeVertexTempUsage(temp1);\n            registerCache.removeVertexTempUsage(temp2);\n            //process the velocity\n            code += \"m33 \" + temp1 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmVel = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(nrmVel, 1);\n            var xAxis = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(xAxis, 1);\n            var R = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(R, 1);\n            var R_rev = registerCache.getFreeVertexVectorTemp();\n            var cos = new ShaderRegisterElement_1.default(R.regName, R.index, 3);\n            var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n            var cos2 = new ShaderRegisterElement_1.default(nrmVel.regName, nrmVel.index, 3);\n            var tempSingle = sin;\n            registerCache.removeVertexTempUsage(nrmVel);\n            registerCache.removeVertexTempUsage(xAxis);\n            registerCache.removeVertexTempUsage(R);\n            code += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n            code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            //use R as temp to judge if nrm is (0,0,0).\n            //if nrm is (0,0,0) ,change it to (0,0,1).\n            code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n            code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n            code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n            code += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            //use cos as R_rev.w\n            //nrmVel and xAxis are used as temp register\n            code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            //code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n                code += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n                code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n                code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n                code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n                code += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n                code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n                code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n                code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n                code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n                code += \"add \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.needVelocity = true;\n    };\n    return ParticleRotateToHeadingNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToPositionState_1 = require(\"../../animators/states/ParticleRotateToPositionState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nvar ParticleRotateToPositionNode = (function (_super) {\n    __extends(ParticleRotateToPositionNode, _super);\n    /**\n     * Creates a new <code>ParticleRotateToPositionNode</code>\n     */\n    function ParticleRotateToPositionNode(mode, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticleRotateToPosition\", mode, 3, 3);\n        this._pStateClass = ParticleRotateToPositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        var code = \"\";\n        var len = animationRegisterData.rotationRegisters.length;\n        var i;\n        if (animationSet.hasBillboard) {\n            var temp1 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp1, 1);\n            var temp2 = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp2, 1);\n            var temp3 = registerCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = registerCache.getFreeVertexConstant();\n            animationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.getFreeVertexConstant();\n            registerCache.removeVertexTempUsage(temp1);\n            registerCache.removeVertexTempUsage(temp2);\n            //process the position\n            code += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n            code += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmDirection = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(nrmDirection, 1);\n            var temp = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(temp, 1);\n            var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            var o_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n            var tempSingle = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n            var R = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(R, 1);\n            registerCache.removeVertexTempUsage(nrmDirection);\n            registerCache.removeVertexTempUsage(temp);\n            registerCache.removeVertexTempUsage(R);\n            code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n            code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n            code += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n            code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n            code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n            //judgu if nrmDirection=(0,1,0);\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n            code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n            code += \"neg \" + cos + \",\" + cos + \"\\n\";\n            code += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n            code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n                code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n                code += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterData.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n                code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n                code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n                code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n                code += \"neg \" + cos + \",\" + cos + \"\\n\";\n                code += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n                code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterData.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n     */\n    ParticleRotateToPositionNode.POSITION_VECTOR3D = \"RotateToPositionVector3D\";\n    return ParticleRotateToPositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleRotationalVelocityState_1 = require(\"../../animators/states/ParticleRotationalVelocityState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nvar ParticleRotationalVelocityNode = (function (_super) {\n    __extends(ParticleRotationalVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleRotationalVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     */\n    function ParticleRotationalVelocityNode(mode, rotationalVelocity) {\n        if (rotationalVelocity === void 0) { rotationalVelocity = null; }\n        _super.call(this, \"ParticleRotationalVelocity\", mode, 4);\n        this._pStateClass = ParticleRotationalVelocityState_1.default;\n        this._iRotationalVelocity = rotationalVelocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var rotationRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleRotationalVelocityState_1.default.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n        var nrmVel = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(nrmVel, 1);\n        var xAxis = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(xAxis, 1);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(temp, 1);\n        var Rtemp = new ShaderRegisterElement_1.default(temp.regName, temp.index);\n        var R_rev = registerCache.getFreeVertexVectorTemp();\n        R_rev = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index);\n        var cos = new ShaderRegisterElement_1.default(Rtemp.regName, Rtemp.index, 3);\n        var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n        registerCache.removeVertexTempUsage(nrmVel);\n        registerCache.removeVertexTempUsage(xAxis);\n        registerCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n        code += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n        code += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + cos + \"\\n\";\n        code += \"cos \" + cos + \",\" + cos + \"\\n\";\n        code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n        //nrmVel and xAxis are used as temp register\n        code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n        code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n        //use cos as R_rev.w\n        code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n        code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n        code += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        var len = animationRegisterData.rotationRegisters.length;\n        for (var i = 0; i < len; i++) {\n            code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n            code += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            code += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n            code += \"sin \" + sin + \",\" + cos + \"\\n\";\n            code += \"cos \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterData.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n        var rotate = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n        if (!rotate)\n            throw (new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n        if (rotate.length <= 0)\n            rotate.z = 1; //set the default direction\n        else\n            rotate.normalize();\n        this._pOneData[0] = rotate.x;\n        this._pOneData[1] = rotate.y;\n        this._pOneData[2] = rotate.z;\n        if (rotate.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        // it's used as angle/2 in agal\n        this._pOneData[3] = Math.PI / rotate.w;\n    };\n    /**\n     * Reference for rotational velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n     */\n    ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D = \"RotationalVelocityVector3D\";\n    return ParticleRotationalVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleScaleState_1 = require(\"../../animators/states/ParticleScaleState\");\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nvar ParticleScaleNode = (function (_super) {\n    __extends(ParticleScaleNode, _super);\n    /**\n     * Creates a new <code>ParticleScaleNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n     * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleScaleNode(mode, usesCycle, usesPhase, minScale, maxScale, cycleDuration, cyclePhase) {\n        if (minScale === void 0) { minScale = 1; }\n        if (maxScale === void 0) { maxScale = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleScale\", mode, (usesCycle && usesPhase) ? 4 : ((usesCycle || usesPhase) ? 3 : 2), 3);\n        this._pStateClass = ParticleScaleState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iMinScale = minScale;\n        this._iMaxScale = maxScale;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        var temp = registerCache.getFreeVertexSingleTemp();\n        var scaleRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleScaleState_1.default.SCALE_INDEX, scaleRegister.index);\n        if (this._iUsesCycle) {\n            code += \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + scaleRegister + \".z\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n            code += \"sin \" + temp + \",\" + temp + \"\\n\";\n        }\n        code += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle) ? temp : animationRegisterData.vertexLife) + \"\\n\";\n        code += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n        code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var scale = param[ParticleScaleNode.SCALE_VECTOR3D];\n        if (!scale)\n            throw (new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n        if (this._iUsesCycle) {\n            this._pOneData[0] = (scale.x + scale.y) / 2;\n            this._pOneData[1] = Math.abs(scale.x - scale.y) / 2;\n            if (scale.z <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._pOneData[2] = Math.PI * 2 / scale.z;\n            if (this._iUsesPhase)\n                this._pOneData[3] = scale.w * Math.PI / 180;\n        }\n        else {\n            this._pOneData[0] = scale.x;\n            this._pOneData[1] = scale.y - scale.x;\n        }\n    };\n    /**\n     * Reference for scale node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n     */\n    ParticleScaleNode.SCALE_VECTOR3D = \"ScaleVector3D\";\n    return ParticleScaleNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleSegmentedColorState_1 = require(\"../../animators/states/ParticleSegmentedColorState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n *\n */\nvar ParticleSegmentedColorNode = (function (_super) {\n    __extends(ParticleSegmentedColorNode, _super);\n    function ParticleSegmentedColorNode(usesMultiplier, usesOffset, numSegmentPoint, startColor, endColor, segmentPoints) {\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleSegmentedColor\", ParticlePropertiesMode_1.default.GLOBAL, 0, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleSegmentedColorState_1.default;\n        if (numSegmentPoint > 4)\n            throw (new Error(\"the numSegmentPoint must be less or equal 4\"));\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iNumSegmentPoint = numSegmentPoint;\n        this._iStartColor = startColor;\n        this._iEndColor = endColor;\n        this._iSegmentPoints = segmentPoints;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        if (shader.usesFragmentAnimation) {\n            var accMultiplierColor;\n            //var accOffsetColor:ShaderRegisterElement;\n            if (this._iUsesMultiplier) {\n                accMultiplierColor = registerCache.getFreeVertexVectorTemp();\n                registerCache.addVertexTempUsages(accMultiplierColor, 1);\n            }\n            var tempColor = registerCache.getFreeVertexVectorTemp();\n            registerCache.addVertexTempUsages(tempColor, 1);\n            var temp = registerCache.getFreeVertexVectorTemp();\n            var accTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var tempTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            if (this._iUsesMultiplier)\n                registerCache.removeVertexTempUsage(accMultiplierColor);\n            registerCache.removeVertexTempUsage(tempColor);\n            //for saving all the life values (at most 4)\n            var lifeTimeRegister = registerCache.getFreeVertexConstant();\n            animationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState_1.default.TIME_DATA_INDEX, lifeTimeRegister.index);\n            var i;\n            var startMulValue;\n            var deltaMulValues;\n            if (this._iUsesMultiplier) {\n                startMulValue = registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_MULTIPLIER_INDEX, startMulValue.index);\n                deltaMulValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaMulValues.push(registerCache.getFreeVertexConstant());\n            }\n            var startOffsetValue;\n            var deltaOffsetValues;\n            if (this._iUsesOffset) {\n                startOffsetValue = registerCache.getFreeVertexConstant();\n                animationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                deltaOffsetValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaOffsetValues.push(registerCache.getFreeVertexConstant());\n            }\n            if (this._iUsesMultiplier)\n                code += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n            if (this._iUsesOffset)\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n            for (i = 0; i < this._iNumSegmentPoint; i++) {\n                switch (i) {\n                    case 0:\n                        code += \"min \" + tempTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                if (this._iUsesMultiplier) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n                    code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                }\n                if (this._iUsesOffset) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n                    code += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n                }\n            }\n            //for the last segment:\n            if (this._iNumSegmentPoint == 0)\n                tempTime = animationRegisterData.vertexLife;\n            else {\n                switch (this._iNumSegmentPoint) {\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 4:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                code += \"mul \" + animationRegisterData.colorMulTarget + \",\" + animationRegisterData.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n            }\n        }\n        return code;\n    };\n    return ParticleSegmentedColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleSpriteSheetState_1 = require(\"../../animators/states/ParticleSpriteSheetState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nvar ParticleSpriteSheetNode = (function (_super) {\n    __extends(ParticleSpriteSheetNode, _super);\n    /**\n     * Creates a new <code>ParticleSpriteSheetNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n     * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n     * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n     */\n    function ParticleSpriteSheetNode(mode, usesCycle, usesPhase, numColumns, numRows, cycleDuration, cyclePhase, totalFrames) {\n        if (numColumns === void 0) { numColumns = 1; }\n        if (numRows === void 0) { numRows = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (totalFrames === void 0) { totalFrames = Number.MAX_VALUE; }\n        _super.call(this, \"ParticleSpriteSheet\", mode, usesCycle ? (usesPhase ? 3 : 2) : 1, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleSpriteSheetState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iNumColumns = numColumns;\n        this._iNumRows = numRows;\n        this._iCyclePhase = cyclePhase;\n        this._iCycleDuration = cycleDuration;\n        this._iTotalFrames = Math.min(totalFrames, numColumns * numRows);\n    }\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numColumns\", {\n        /**\n         * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numRows\", {\n        /**\n         * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"totalFrames\", {\n        /**\n         * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n         */\n        get: function () {\n            return this._iTotalFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAGALUVCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        //get 2 vc\n        var uvParamConst1 = registerCache.getFreeVertexConstant();\n        var uvParamConst2 = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_0, uvParamConst1.index);\n        animationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_1, uvParamConst2.index);\n        var uTotal = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 0);\n        var uStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 1);\n        var vStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 2);\n        var uSpeed = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 0);\n        var cycle = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 1);\n        var phaseTime = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 2);\n        var temp = registerCache.getFreeVertexVectorTemp();\n        var time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var vOffset = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        var temp2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n        var u = new ShaderRegisterElement_1.default(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 0);\n        var v = new ShaderRegisterElement_1.default(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 1);\n        var code = \"\";\n        //scale uv\n        code += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n        if (this._iUsesCycle) {\n            if (this._iUsesPhase)\n                code += \"add \" + time + \",\" + animationRegisterData.vertexTime + \",\" + phaseTime + \"\\n\";\n            else\n                code += \"mov \" + time + \",\" + animationRegisterData.vertexTime + \"\\n\";\n            code += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"frc \" + time + \",\" + time + \"\\n\";\n            code += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n        }\n        else\n            code += \"mul \" + temp.toString() + \",\" + animationRegisterData.vertexLife + \",\" + uTotal + \"\\n\";\n        if (this._iNumRows > 1) {\n            code += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n            code += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n            code += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n            code += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n        }\n        code += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n        code += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n        code += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n        code += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"frc \" + temp + \",\" + temp + \"\\n\";\n        code += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        if (this._iUsesCycle) {\n            var uvCycle = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n            if (!uvCycle)\n                throw (new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n            if (uvCycle.x <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            var uTotal = this._iTotalFrames / this._iNumColumns;\n            this._pOneData[0] = uTotal / uvCycle.x;\n            this._pOneData[1] = uvCycle.x;\n            if (this._iUsesPhase)\n                this._pOneData[2] = uvCycle.y;\n        }\n    };\n    /**\n     * Reference for spritesheet node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n     */\n    ParticleSpriteSheetNode.UV_VECTOR3D = \"UVVector3D\";\n    return ParticleSpriteSheetNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleTimeState_1 = require(\"../../animators/states/ParticleTimeState\");\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nvar ParticleTimeNode = (function (_super) {\n    __extends(ParticleTimeNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleTimeNode(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this, \"ParticleTime\", ParticlePropertiesMode_1.default.LOCAL_STATIC, 4, 0);\n        this._pStateClass = ParticleTimeState_1.default;\n        this._iUsesDuration = usesDuration;\n        this._iUsesLooping = usesLooping;\n        this._iUsesDelay = usesDelay;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var timeStreamRegister = registerCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n        animationRegisterData.setRegisterIndex(this, ParticleTimeState_1.default.TIME_STREAM_INDEX, timeStreamRegister.index);\n        var timeConst = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleTimeState_1.default.TIME_CONSTANT_INDEX, timeConst.index);\n        var code = \"\";\n        code += \"sub \" + animationRegisterData.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n        //if time=0,set the position to zero.\n        var temp = registerCache.getFreeVertexSingleTemp();\n        code += \"sge \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n        code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        if (this._iUsesDuration) {\n            if (this._iUsesLooping) {\n                var div = registerCache.getFreeVertexSingleTemp();\n                if (this._iUsesDelay) {\n                    code += \"div \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"slt \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n                    code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n                }\n                else {\n                    code += \"mul \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n                }\n            }\n            else {\n                var sge = registerCache.getFreeVertexSingleTemp();\n                code += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterData.vertexTime + \"\\n\";\n                code += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n            }\n        }\n        code += \"mul \" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        this._pOneData[0] = param.startTime;\n        this._pOneData[1] = param.duration;\n        this._pOneData[2] = param.delay + param.duration;\n        this._pOneData[3] = 1 / param.duration;\n    };\n    return ParticleTimeNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleAnimationSet_1 = require(\"../../animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleUVState_1 = require(\"../../animators/states/ParticleUVState\");\nvar ShaderRegisterElement_1 = require(\"../../shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nvar ParticleUVNode = (function (_super) {\n    __extends(ParticleUVNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n     */\n    function ParticleUVNode(mode, cycle, scale, axis) {\n        if (cycle === void 0) { cycle = 1; }\n        if (scale === void 0) { scale = 1; }\n        if (axis === void 0) { axis = \"x\"; }\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleUV\", ParticlePropertiesMode_1.default.GLOBAL, 4, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleUVState_1.default;\n        this._cycle = cycle;\n        this._scale = scale;\n        this._axis = axis;\n        this.updateUVData();\n    }\n    Object.defineProperty(ParticleUVNode.prototype, \"cycle\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._cycle;\n        },\n        set: function (value) {\n            this._cycle = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"scale\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"axis\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._axis;\n        },\n        set: function (value) {\n            this._axis = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAGALUVCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var code = \"\";\n        var uvConst = registerCache.getFreeVertexConstant();\n        animationRegisterData.setRegisterIndex(this, ParticleUVState_1.default.UV_INDEX, uvConst.index);\n        var axisIndex = this._axis == \"x\" ? 0 : (this._axis == \"y\" ? 1 : 2);\n        var target = new ShaderRegisterElement_1.default(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, axisIndex);\n        var sin = registerCache.getFreeVertexSingleTemp();\n        if (this._scale != 1)\n            code += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n        code += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + uvConst + \".x\\n\";\n        code += \"sin \" + sin + \",\" + sin + \"\\n\";\n        code += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    ParticleUVNode.prototype.updateUVData = function () {\n        this._iUvData = new Vector3D_1.default(Math.PI * 2 / this._cycle, this._scale, 0, 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     *\n     */\n    ParticleUVNode.U_AXIS = \"x\";\n    /**\n     *\n     */\n    ParticleUVNode.V_AXIS = \"y\";\n    return ParticleUVNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVNode;\n\n},{\"../../animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"../../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"../../animators/nodes/ParticleNodeBase\");\nvar ParticleVelocityState_1 = require(\"../../animators/states/ParticleVelocityState\");\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nvar ParticleVelocityNode = (function (_super) {\n    __extends(ParticleVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n     */\n    function ParticleVelocityNode(mode, velocity) {\n        if (velocity === void 0) { velocity = null; }\n        _super.call(this, \"ParticleVelocity\", mode, 3);\n        this._pStateClass = ParticleVelocityState_1.default;\n        this._iVelocity = velocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAGALVertexCode = function (shader, animationSet, registerCache, animationRegisterData) {\n        var velocityValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n        animationRegisterData.setRegisterIndex(this, ParticleVelocityState_1.default.VELOCITY_INDEX, velocityValue.index);\n        var distance = registerCache.getFreeVertexVectorTemp();\n        var code = \"\";\n        code += \"mul \" + distance + \",\" + animationRegisterData.vertexTime + \",\" + velocityValue + \"\\n\";\n        code += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n        if (animationSet.needVelocity)\n            code += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var _tempVelocity = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n        if (!_tempVelocity)\n            throw new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n        this._pOneData[0] = _tempVelocity.x;\n        this._pOneData[1] = _tempVelocity.y;\n        this._pOneData[2] = _tempVelocity.z;\n    };\n    /**\n     * Reference for velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n     */\n    ParticleVelocityNode.VELOCITY_VECTOR3D = \"VelocityVector3D\";\n    return ParticleVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityNode;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"../../animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonBinaryLERPState_1 = require(\"../../animators/states/SkeletonBinaryLERPState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonBinaryLERPNode = (function (_super) {\n    __extends(SkeletonBinaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n     */\n    function SkeletonBinaryLERPNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonBinaryLERPState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonBinaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPNode;\n\n},{\"../../animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipNodeBase_1 = require(\"../../animators/nodes/AnimationClipNodeBase\");\nvar SkeletonClipState_1 = require(\"../../animators/states/SkeletonClipState\");\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nvar SkeletonClipNode = (function (_super) {\n    __extends(SkeletonClipNode, _super);\n    /**\n     * Creates a new <code>SkeletonClipNode</code> object.\n     */\n    function SkeletonClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        /**\n         * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n         * of the output skeleton pose. Defaults to false.\n         */\n        this.highQuality = false;\n        this._pStateClass = SkeletonClipState_1.default;\n    }\n    Object.defineProperty(SkeletonClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a skeleton pose frame to the internal timeline of the animation node.\n     *\n     * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     */\n    SkeletonClipNode.prototype.addFrame = function (skeletonPose, duration) {\n        this._frames.push(skeletonPose);\n        this._pDurations.push(duration);\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._frames[i].jointPoses[0].translation;\n            p2 = this._frames[i + 1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pStitchFinalFrame || !this._pLooping) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return SkeletonClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipNode;\n\n},{\"../../animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"../../animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDifferenceState_1 = require(\"../../animators/states/SkeletonDifferenceState\");\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDifferenceNode = (function (_super) {\n    __extends(SkeletonDifferenceNode, _super);\n    /**\n     * Creates a new <code>SkeletonAdditiveNode</code> object.\n     */\n    function SkeletonDifferenceNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDifferenceState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDifferenceNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceNode;\n\n},{\"../../animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDirectionalState_1 = require(\"../../animators/states/SkeletonDirectionalState\");\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDirectionalNode = (function (_super) {\n    __extends(SkeletonDirectionalNode, _super);\n    function SkeletonDirectionalNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDirectionalState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDirectionalNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalNode;\n\n},{\"../../animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonNaryLERPState_1 = require(\"../../animators/states/SkeletonNaryLERPState\");\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonNaryLERPNode = (function (_super) {\n    __extends(SkeletonNaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonNaryLERPNode</code> object.\n     */\n    function SkeletonNaryLERPNode() {\n        _super.call(this);\n        this._iInputs = new Array();\n        this._pStateClass = SkeletonNaryLERPState_1.default;\n    }\n    Object.defineProperty(SkeletonNaryLERPNode.prototype, \"numInputs\", {\n        get: function () {\n            return this._numInputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns an integer representing the input index of the given skeleton animation node.\n     *\n     * @param input The skeleton animation node for with the input index is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputIndex = function (input) {\n        return this._iInputs.indexOf(input);\n    };\n    /**\n     * Returns the skeleton animation node object that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputAt = function (index) {\n        return this._iInputs[index];\n    };\n    /**\n     * Adds a new skeleton animation node input to the animation node.\n     */\n    SkeletonNaryLERPNode.prototype.addInput = function (input) {\n        this._iInputs[this._numInputs++] = input;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonNaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPNode;\n\n},{\"../../animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationClipNodeBase_1 = require(\"../../animators/nodes/AnimationClipNodeBase\");\nvar VertexClipState_1 = require(\"../../animators/states/VertexClipState\");\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nvar VertexClipNode = (function (_super) {\n    __extends(VertexClipNode, _super);\n    /**\n     * Creates a new <code>VertexClipNode</code> object.\n     */\n    function VertexClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        this._translations = new Array();\n        this._pStateClass = VertexClipState_1.default;\n    }\n    Object.defineProperty(VertexClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a geometry object to the internal timeline of the animation node.\n     *\n     * @param geometry The geometry object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n     */\n    VertexClipNode.prototype.addFrame = function (geometry, duration, translation) {\n        if (translation === void 0) { translation = null; }\n        this._frames.push(geometry);\n        this._pDurations.push(duration);\n        this._translations.push(translation || new Vector3D_1.default());\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._translations[i];\n            p2 = this._translations[i + 1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._translations[0];\n            p2 = this._translations[1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return VertexClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipNode;\n\n},{\"../../animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"../../animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/AnimationClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\nvar AnimationStateEvent_1 = require(\"../../events/AnimationStateEvent\");\n/**\n *\n */\nvar AnimationClipState = (function (_super) {\n    __extends(AnimationClipState, _super);\n    function AnimationClipState(animator, animationClipNode) {\n        _super.call(this, animator, animationClipNode);\n        this._pFramesDirty = true;\n        this._animationClipNode = animationClipNode;\n    }\n    Object.defineProperty(AnimationClipState.prototype, \"blendWeight\", {\n        /**\n         * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n         * between the current frame (0) and next frame (1) of the animation.\n         *\n         * @see #currentFrame\n         * @see #nextFrame\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pBlendWeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"currentFrame\", {\n        /**\n         * Returns the current frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pCurrentFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"nextFrame\", {\n        /**\n         * Returns the next frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pNextFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.update = function (time) {\n        if (!this._animationClipNode.looping) {\n            if (time > this._pStartTime + this._animationClipNode.totalDuration)\n                time = this._pStartTime + this._animationClipNode.totalDuration;\n            else if (time < this._pStartTime)\n                time = this._pStartTime;\n        }\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.phase = function (value) {\n        var time = value * this._animationClipNode.totalDuration + this._pStartTime;\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype._pUpdateTime = function (time) {\n        this._pFramesDirty = true;\n        this._pTimeDir = (time - this._pStartTime > this._pTime) ? 1 : -1;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n     *\n     * @see #currentFrame\n     * @see #nextFrame\n     * @see #blendWeight\n     */\n    AnimationClipState.prototype._pUpdateFrames = function () {\n        this._pFramesDirty = false;\n        var looping = this._animationClipNode.looping;\n        var totalDuration = this._animationClipNode.totalDuration;\n        var lastFrame = this._animationClipNode.lastFrame;\n        var time = this._pTime;\n        //trace(\"time\", time, totalDuration)\n        if (looping && (time >= totalDuration || time < 0)) {\n            time %= totalDuration;\n            if (time < 0)\n                time += totalDuration;\n        }\n        if (!looping && time >= totalDuration) {\n            this.notifyPlaybackComplete();\n            this._pCurrentFrame = lastFrame;\n            this._pNextFrame = lastFrame;\n            this._pBlendWeight = 0;\n        }\n        else if (!looping && time <= 0) {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            this._pBlendWeight = 0;\n        }\n        else if (this._animationClipNode.fixedFrameRate) {\n            var t = time / totalDuration * lastFrame;\n            this._pCurrentFrame = Math.floor(t);\n            this._pBlendWeight = t - this._pCurrentFrame;\n            this._pNextFrame = this._pCurrentFrame + 1;\n        }\n        else {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            var dur = 0, frameTime;\n            var durations = this._animationClipNode.durations;\n            do {\n                frameTime = dur;\n                dur += durations[this._pNextFrame];\n                this._pCurrentFrame = this._pNextFrame++;\n            } while (time > dur);\n            if (this._pCurrentFrame == lastFrame) {\n                this._pCurrentFrame = 0;\n                this._pNextFrame = 1;\n            }\n            this._pBlendWeight = (time - frameTime) / durations[this._pCurrentFrame];\n        }\n    };\n    AnimationClipState.prototype.notifyPlaybackComplete = function () {\n        if (this._animationStatePlaybackComplete == null)\n            this._animationStatePlaybackComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n        this._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n    };\n    return AnimationClipState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipState;\n\n},{\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"../../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\"}],\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n *\n */\nvar AnimationStateBase = (function () {\n    function AnimationStateBase(animator, animationNode) {\n        this._pRootDelta = new Vector3D_1.default();\n        this._pPositionDeltaDirty = true;\n        this._pStartTime = 0;\n        this._pAnimator = animator;\n        this._pAnimationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateBase.prototype, \"positionDelta\", {\n        /**\n         * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n         */\n        get: function () {\n            if (this._pPositionDeltaDirty) {\n                this._pUpdatePositionDelta();\n            }\n            return this._pRootDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the start time of the node to a  new value.\n     *\n     * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n     */\n    AnimationStateBase.prototype.offset = function (startTime) {\n        this._pStartTime = startTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the configuration of the node to its current state.\n     *\n     * @param time The absolute time (in milliseconds) of the animator's play head position.\n     *\n     * @see AnimatorBase#update()\n     */\n    AnimationStateBase.prototype.update = function (time) {\n        if (this._pTime == time - this._pStartTime) {\n            return;\n        }\n        this._pUpdateTime(time);\n    };\n    /**\n     * Sets the animation phase of the node.\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimationStateBase.prototype.phase = function (value) {\n    };\n    /**\n     * Updates the node's internal playhead position.\n     *\n     * @param time The local time (in milliseconds) of the node's playhead position.\n     */\n    AnimationStateBase.prototype._pUpdateTime = function (time) {\n        this._pTime = time - this._pStartTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the node's root delta position\n     */\n    AnimationStateBase.prototype._pUpdatePositionDelta = function () {\n    };\n    return AnimationStateBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/IAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleAccelerationState = (function (_super) {\n    __extends(ParticleAccelerationState, _super);\n    function ParticleAccelerationState(animator, particleAccelerationNode) {\n        _super.call(this, animator, particleAccelerationNode);\n        this._particleAccelerationNode = particleAccelerationNode;\n        this._acceleration = this._particleAccelerationNode._acceleration;\n        this.updateAccelerationData();\n    }\n    Object.defineProperty(ParticleAccelerationState.prototype, \"acceleration\", {\n        /**\n         * Defines the acceleration vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._acceleration;\n        },\n        set: function (value) {\n            this._acceleration.x = value.x;\n            this._acceleration.y = value.y;\n            this._acceleration.z = value.z;\n            this.updateAccelerationData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        else\n            shader.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n    };\n    ParticleAccelerationState.prototype.updateAccelerationData = function () {\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            this._halfAcceleration = new Vector3D_1.default(this._acceleration.x / 2, this._acceleration.y / 2, this._acceleration.z / 2);\n    };\n    /** @private */\n    ParticleAccelerationState.ACCELERATION_INDEX = 0;\n    return ParticleAccelerationState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBezierCurveState = (function (_super) {\n    __extends(ParticleBezierCurveState, _super);\n    function ParticleBezierCurveState(animator, particleBezierCurveNode) {\n        _super.call(this, animator, particleBezierCurveNode);\n        this._particleBezierCurveNode = particleBezierCurveNode;\n        this._controlPoint = this._particleBezierCurveNode._iControlPoint;\n        this._endPoint = this._particleBezierCurveNode._iEndPoint;\n    }\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"controlPoint\", {\n        /**\n         * Defines the default control point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._controlPoint;\n        },\n        set: function (value) {\n            this._controlPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"endPoint\", {\n        /**\n         * Defines the default end point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._endPoint;\n        },\n        set: function (value) {\n            this._endPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleBezierCurveState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var controlIndex = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n        var endIndex = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n        if (this._particleBezierCurveNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            animationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else {\n            shader.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n            shader.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n        }\n    };\n    /** @private */\n    ParticleBezierCurveState.BEZIER_CONTROL_INDEX = 0;\n    /** @private */\n    ParticleBezierCurveState.BEZIER_END_INDEX = 1;\n    return ParticleBezierCurveState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBillboardState = (function (_super) {\n    __extends(ParticleBillboardState, _super);\n    /**\n     *\n     */\n    function ParticleBillboardState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default;\n        this._billboardAxis = particleNode._iBillboardAxis;\n    }\n    ParticleBillboardState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var comps;\n        if (this._billboardAxis) {\n            var pos = renderable.sourceEntity.sceneTransform.position;\n            var look = camera.sceneTransform.position.subtract(pos);\n            var right = look.crossProduct(this._billboardAxis);\n            right.normalize();\n            look = this.billboardAxis.crossProduct(right);\n            look.normalize();\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            this._matrix.copyColumnFrom(0, right);\n            this._matrix.copyColumnFrom(1, this.billboardAxis);\n            this._matrix.copyColumnFrom(2, look);\n            this._matrix.copyColumnFrom(3, pos);\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        else {\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            //decompose using axis angle rotations\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            //recreate the matrix with just the rotation data\n            this._matrix.identity();\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        //set a new matrix transform constant\n        shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n    };\n    Object.defineProperty(ParticleBillboardState.prototype, \"billboardAxis\", {\n        /**\n         * Defines the billboard axis.\n         */\n        get: function () {\n            return this.billboardAxis;\n        },\n        set: function (value) {\n            this.billboardAxis = value ? value.clone() : null;\n            if (this.billboardAxis)\n                this.billboardAxis.normalize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    ParticleBillboardState.MATRIX_INDEX = 0;\n    return ParticleBillboardState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Orientation3D\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticleColorState = (function (_super) {\n    __extends(ParticleColorState, _super);\n    function ParticleColorState(animator, particleColorNode) {\n        _super.call(this, animator, particleColorNode);\n        this._particleColorNode = particleColorNode;\n        this._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n        this._usesOffset = this._particleColorNode._iUsesOffset;\n        this._usesCycle = this._particleColorNode._iUsesCycle;\n        this._usesPhase = this._particleColorNode._iUsesPhase;\n        this._startColor = this._particleColorNode._iStartColor;\n        this._endColor = this._particleColorNode._iEndColor;\n        this._cycleDuration = this._particleColorNode._iCycleDuration;\n        this._cyclePhase = this._particleColorNode._iCyclePhase;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleColorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (shader.usesFragmentAnimation) {\n            var dataOffset = this._particleColorNode._iDataOffset;\n            var index;\n            if (this._usesCycle)\n                shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n            if (this._usesMultiplier) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n                }\n            }\n            if (this._usesOffset) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                }\n                else {\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n                }\n            }\n        }\n    };\n    ParticleColorState.prototype.updateColorData = function () {\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._cycleData = new Vector3D_1.default(Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180, 0, 0);\n        }\n        if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default((this._startColor.redMultiplier + this._endColor.redMultiplier) / 2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier) / 2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier) / 2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier) / 2);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier) / 2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier) / 2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier) / 2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier) / 2);\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default((this._startColor.redOffset + this._endColor.redOffset) / (255 * 2), (this._startColor.greenOffset + this._endColor.greenOffset) / (255 * 2), (this._startColor.blueOffset + this._endColor.blueOffset) / (255 * 2), (this._startColor.alphaOffset + this._endColor.alphaOffset) / (255 * 2));\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / (255 * 2), (this._endColor.greenOffset - this._startColor.greenOffset) / (255 * 2), (this._endColor.blueOffset - this._startColor.blueOffset) / (255 * 2), (this._endColor.alphaOffset - this._startColor.alphaOffset) / (255 * 2));\n                }\n            }\n            else {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default(this._startColor.redOffset / 255, this._startColor.greenOffset / 255, this._startColor.blueOffset / 255, this._startColor.alphaOffset / 255);\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / 255, (this._endColor.greenOffset - this._startColor.greenOffset) / 255, (this._endColor.blueOffset - this._startColor.blueOffset) / 255, (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255);\n                }\n            }\n        }\n    };\n    /** @private */\n    ParticleColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleColorState.DELTA_MULTIPLIER_INDEX = 1;\n    /** @private */\n    ParticleColorState.START_OFFSET_INDEX = 2;\n    /** @private */\n    ParticleColorState.DELTA_OFFSET_INDEX = 3;\n    /** @private */\n    ParticleColorState.CYCLE_INDEX = 4;\n    return ParticleColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleFollowState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleFollowState = (function (_super) {\n    __extends(ParticleFollowState, _super);\n    function ParticleFollowState(animator, particleFollowNode) {\n        _super.call(this, animator, particleFollowNode, true);\n        this._targetPos = new Vector3D_1.default();\n        this._targetEuler = new Vector3D_1.default();\n        //temporary vector3D for calculation\n        this._temp = new Vector3D_1.default();\n        this._particleFollowNode = particleFollowNode;\n        this._smooth = particleFollowNode._iSmooth;\n    }\n    Object.defineProperty(ParticleFollowState.prototype, \"followTarget\", {\n        get: function () {\n            return this._followTarget;\n        },\n        set: function (value) {\n            this._followTarget = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleFollowState.prototype, \"smooth\", {\n        get: function () {\n            return this._smooth;\n        },\n        set: function (value) {\n            this._smooth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._followTarget) {\n            if (this._particleFollowNode._iUsesPosition) {\n                this._targetPos.x = this._followTarget.transform.position.x / renderable.sourceEntity.scaleX;\n                this._targetPos.y = this._followTarget.transform.position.y / renderable.sourceEntity.scaleY;\n                this._targetPos.z = this._followTarget.transform.position.z / renderable.sourceEntity.scaleZ;\n            }\n            if (this._particleFollowNode._iUsesRotation) {\n                this._targetEuler.x = this._followTarget.rotationX;\n                this._targetEuler.y = this._followTarget.rotationY;\n                this._targetEuler.z = this._followTarget.rotationZ;\n                this._targetEuler.scaleBy(MathConsts_1.default.DEGREES_TO_RADIANS);\n            }\n        }\n        //initialization\n        if (!this._prePos)\n            this._prePos = this._targetPos.clone();\n        if (!this._preEuler)\n            this._preEuler = this._targetEuler.clone();\n        var currentTime = this._pTime / 1000;\n        var previousTime = animationElements.previousTime;\n        var deltaTime = currentTime - previousTime;\n        var needProcess = previousTime != currentTime;\n        if (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.processPositionAndRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesPosition) {\n            if (needProcess)\n                this.processPosition(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.precessRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        this._prePos.copyFrom(this._targetPos);\n        this._targetEuler.copyFrom(this._targetEuler);\n        animationElements.previousTime = currentTime;\n    };\n    ParticleFollowState.prototype.processPosition = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var posVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedPos = this._targetPos;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.precessRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedRotation;\n        var rotationVelocity;\n        if (this._smooth) {\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedRotation = this._targetEuler;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.processPositionAndRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var interpolatedRotation;\n        var posVelocity;\n        var rotationVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else {\n            interpolatedPos = this._targetPos;\n            interpolatedRotation = this._targetEuler;\n        }\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    /** @private */\n    ParticleFollowState.FOLLOW_POSITION_INDEX = 0;\n    /** @private */\n    ParticleFollowState.FOLLOW_ROTATION_INDEX = 1;\n    return ParticleFollowState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n*\n*/\nvar ParticleInitialColorState = (function (_super) {\n    __extends(ParticleInitialColorState, _super);\n    function ParticleInitialColorState(animator, particleInitialColorNode) {\n        _super.call(this, animator, particleInitialColorNode);\n        this._particleInitialColorNode = particleInitialColorNode;\n        this._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n        this._usesOffset = particleInitialColorNode._iUsesOffset;\n        this._initialColor = particleInitialColorNode._iInitialColor;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleInitialColorState.prototype, \"initialColor\", {\n        /**\n         * Defines the initial color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._initialColor;\n        },\n        set: function (value) {\n            this._initialColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (shader.usesFragmentAnimation) {\n            var index;\n            if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                var dataOffset = this._particleInitialColorNode._iDataOffset;\n                if (this._usesMultiplier) {\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                if (this._usesOffset)\n                    animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            }\n            else {\n                if (this._usesMultiplier)\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n                if (this._usesOffset)\n                    shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n            }\n        }\n    };\n    ParticleInitialColorState.prototype.updateColorData = function () {\n        if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesMultiplier)\n                this._multiplierData = new Vector3D_1.default(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n            if (this._usesOffset)\n                this._offsetData = new Vector3D_1.default(this._initialColor.redOffset / 255, this._initialColor.greenOffset / 255, this._initialColor.blueOffset / 255, this._initialColor.alphaOffset / 255);\n        }\n    };\n    /** @private */\n    ParticleInitialColorState.MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleInitialColorState.OFFSET_INDEX = 1;\n    return ParticleInitialColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOrbitState = (function (_super) {\n    __extends(ParticleOrbitState, _super);\n    function ParticleOrbitState(animator, particleOrbitNode) {\n        _super.call(this, animator, particleOrbitNode);\n        this._particleOrbitNode = particleOrbitNode;\n        this._usesEulers = this._particleOrbitNode._iUsesEulers;\n        this._usesCycle = this._particleOrbitNode._iUsesCycle;\n        this._usesPhase = this._particleOrbitNode._iUsesPhase;\n        this._eulers = this._particleOrbitNode._iEulers;\n        this._radius = this._particleOrbitNode._iRadius;\n        this._cycleDuration = this._particleOrbitNode._iCycleDuration;\n        this._cyclePhase = this._particleOrbitNode._iCyclePhase;\n        this.updateOrbitData();\n    }\n    Object.defineProperty(ParticleOrbitState.prototype, \"radius\", {\n        /**\n         * Defines the radius of the orbit when in global mode. Defaults to 100.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"eulers\", {\n        /**\n         * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n         */\n        get: function () {\n            return this._eulers;\n        },\n        set: function (value) {\n            this._eulers = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleOrbitState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesPhase)\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            else\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else\n            shader.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n        if (this._usesEulers)\n            shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n    };\n    ParticleOrbitState.prototype.updateOrbitData = function () {\n        if (this._usesEulers) {\n            this._eulersMatrix = new Matrix3D_1.default();\n            this._eulersMatrix.appendRotation(this._eulers.x, Vector3D_1.default.X_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.y, Vector3D_1.default.Y_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.z, Vector3D_1.default.Z_AXIS);\n        }\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._orbitData = new Vector3D_1.default(this._radius, 0, this._radius * Math.PI * 2, this._cyclePhase * Math.PI / 180);\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._orbitData.y = Math.PI * 2 / this._cycleDuration;\n            }\n            else\n                this._orbitData.y = Math.PI * 2;\n        }\n    };\n    /** @private */\n    ParticleOrbitState.ORBIT_INDEX = 0;\n    /** @private */\n    ParticleOrbitState.EULERS_INDEX = 1;\n    return ParticleOrbitState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOscillatorState = (function (_super) {\n    __extends(ParticleOscillatorState, _super);\n    function ParticleOscillatorState(animator, particleOscillatorNode) {\n        _super.call(this, animator, particleOscillatorNode);\n        this._particleOscillatorNode = particleOscillatorNode;\n        this._oscillator = this._particleOscillatorNode._iOscillator;\n        this.updateOscillatorData();\n    }\n    Object.defineProperty(ParticleOscillatorState.prototype, \"oscillator\", {\n        /**\n         * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n         */\n        get: function () {\n            return this._oscillator;\n        },\n        set: function (value) {\n            this._oscillator = value;\n            this.updateOscillatorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        else\n            shader.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n    };\n    ParticleOscillatorState.prototype.updateOscillatorData = function () {\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._oscillator.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            if (this._oscillatorData == null)\n                this._oscillatorData = new Vector3D_1.default();\n            this._oscillatorData.x = this._oscillator.x;\n            this._oscillatorData.y = this._oscillator.y;\n            this._oscillatorData.z = this._oscillator.z;\n            this._oscillatorData.w = Math.PI * 2 / this._oscillator.w;\n        }\n    };\n    /** @private */\n    ParticleOscillatorState.OSCILLATOR_INDEX = 0;\n    return ParticleOscillatorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticlePositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticlePositionState = (function (_super) {\n    __extends(ParticlePositionState, _super);\n    function ParticlePositionState(animator, particlePositionNode) {\n        _super.call(this, animator, particlePositionNode);\n        this._particlePositionNode = particlePositionNode;\n        this._position = this._particlePositionNode._iPosition;\n    }\n    Object.defineProperty(ParticlePositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticlePositionState.prototype.getPositions = function () {\n        return this._pDynamicProperties;\n    };\n    ParticlePositionState.prototype.setPositions = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            shader.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticlePositionState.POSITION_INDEX = 0;\n    return ParticlePositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToHeadingState = (function (_super) {\n    __extends(ParticleRotateToHeadingState, _super);\n    function ParticleRotateToHeadingState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default();\n    }\n    ParticleRotateToHeadingState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._pParticleAnimator.animationSet.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n        }\n    };\n    /** @private */\n    ParticleRotateToHeadingState.MATRIX_INDEX = 0;\n    return ParticleRotateToHeadingState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToPositionState = (function (_super) {\n    __extends(ParticleRotateToPositionState, _super);\n    function ParticleRotateToPositionState(animator, particleRotateToPositionNode) {\n        _super.call(this, animator, particleRotateToPositionNode);\n        this._matrix = new Matrix3D_1.default();\n        this._particleRotateToPositionNode = particleRotateToPositionNode;\n        this._position = this._particleRotateToPositionNode._iPosition;\n    }\n    Object.defineProperty(ParticleRotateToPositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleRotateToPositionState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n        if (this._pParticleAnimator.animationSet.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            shader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n        }\n        if (this._particleRotateToPositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n            shader.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n        }\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleRotateToPositionState.MATRIX_INDEX = 0;\n    /** @private */\n    ParticleRotateToPositionState.POSITION_INDEX = 1;\n    return ParticleRotateToPositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotationalVelocityState = (function (_super) {\n    __extends(ParticleRotationalVelocityState, _super);\n    function ParticleRotationalVelocityState(animator, particleRotationNode) {\n        _super.call(this, animator, particleRotationNode);\n        this._particleRotationalVelocityNode = particleRotationNode;\n        this._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n        this.updateRotationalVelocityData();\n    }\n    Object.defineProperty(ParticleRotationalVelocityState.prototype, \"rotationalVelocity\", {\n        /**\n         * Defines the default rotationalVelocity of the state, used when in global mode.\n         */\n        get: function () {\n            return this._rotationalVelocity;\n        },\n        set: function (value) {\n            this._rotationalVelocity = value;\n            this.updateRotationalVelocityData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleRotationalVelocityState.prototype.getRotationalVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleRotationalVelocityState.prototype.setRotationalVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            shader.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n    };\n    ParticleRotationalVelocityState.prototype.updateRotationalVelocityData = function () {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._rotationalVelocity.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            var rotation = this._rotationalVelocity.clone();\n            if (rotation.length <= 0)\n                rotation.z = 1; //set the default direction\n            else\n                rotation.normalize();\n            // w is used as angle/2 in agal\n            this._rotationalVelocityData = new Vector3D_1.default(rotation.x, rotation.y, rotation.z, Math.PI / rotation.w);\n        }\n    };\n    /** @private */\n    ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX = 0;\n    return ParticleRotationalVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleScaleState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleScaleState = (function (_super) {\n    __extends(ParticleScaleState, _super);\n    function ParticleScaleState(animator, particleScaleNode) {\n        _super.call(this, animator, particleScaleNode);\n        this._particleScaleNode = particleScaleNode;\n        this._usesCycle = this._particleScaleNode._iUsesCycle;\n        this._usesPhase = this._particleScaleNode._iUsesPhase;\n        this._minScale = this._particleScaleNode._iMinScale;\n        this._maxScale = this._particleScaleNode._iMaxScale;\n        this._cycleDuration = this._particleScaleNode._iCycleDuration;\n        this._cyclePhase = this._particleScaleNode._iCyclePhase;\n        this.updateScaleData();\n    }\n    Object.defineProperty(ParticleScaleState.prototype, \"minScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._minScale;\n        },\n        set: function (value) {\n            this._minScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"maxScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._maxScale;\n        },\n        set: function (value) {\n            this._maxScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleScaleState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesCycle) {\n                if (this._usesPhase)\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                else\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            }\n            else\n                animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        else\n            shader.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n    };\n    ParticleScaleState.prototype.updateScaleData = function () {\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._scaleData = new Vector3D_1.default((this._minScale + this._maxScale) / 2, Math.abs(this._minScale - this._maxScale) / 2, Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180);\n            }\n            else\n                this._scaleData = new Vector3D_1.default(this._minScale, this._maxScale - this._minScale, 0, 0);\n        }\n    };\n    /** @private */\n    ParticleScaleState.SCALE_INDEX = 0;\n    return ParticleScaleState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n *\n */\nvar ParticleSegmentedColorState = (function (_super) {\n    __extends(ParticleSegmentedColorState, _super);\n    function ParticleSegmentedColorState(animator, particleSegmentedColorNode) {\n        _super.call(this, animator, particleSegmentedColorNode);\n        this._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n        this._usesOffset = particleSegmentedColorNode._iUsesOffset;\n        this._startColor = particleSegmentedColorNode._iStartColor;\n        this._endColor = particleSegmentedColorNode._iEndColor;\n        this._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n        this._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"numSegmentPoint\", {\n        /**\n         * Defines the number of segments.\n         */\n        get: function () {\n            return this._numSegmentPoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"segmentPoints\", {\n        /**\n         * Defines the key points of color\n         */\n        get: function () {\n            return this._segmentPoints;\n        },\n        set: function (value) {\n            this._segmentPoints = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesMultiplier\", {\n        get: function () {\n            return this._usesMultiplier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesOffset\", {\n        get: function () {\n            return this._usesOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSegmentedColorState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (shader.usesFragmentAnimation) {\n            if (this._numSegmentPoint > 0)\n                shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n            if (this._usesMultiplier)\n                shader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n            if (this._usesOffset)\n                shader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n        }\n    };\n    ParticleSegmentedColorState.prototype.updateColorData = function () {\n        this._timeLifeData = new Float32Array(4);\n        this._multiplierData = new Float32Array(4 * (this._numSegmentPoint + 1));\n        this._offsetData = new Float32Array(4 * (this._numSegmentPoint + 1));\n        //cut off the time data\n        var i;\n        var j = 0;\n        var count = this._numSegmentPoint > 3 ? 3 : this._numSegmentPoint;\n        for (i = 0; i < count; i++) {\n            if (i == 0)\n                this._timeLifeData[j++] = this._segmentPoints[i].life;\n            else\n                this._timeLifeData[j++] = this._segmentPoints[i].life - this._segmentPoints[i - 1].life;\n        }\n        i = count;\n        if (this._numSegmentPoint == 0)\n            this._timeLifeData[j++] = 1;\n        else\n            this._timeLifeData[j++] = 1 - this._segmentPoints[i - 1].life;\n        if (this._usesMultiplier) {\n            j = 0;\n            this._multiplierData[j++] = this._startColor.redMultiplier;\n            this._multiplierData[j++] = this._startColor.greenMultiplier;\n            this._multiplierData[j++] = this._startColor.blueMultiplier;\n            this._multiplierData[j++] = this._startColor.alphaMultiplier;\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0) {\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier) / this._timeLifeData[i];\n                }\n                else {\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i];\n                    this._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i];\n                }\n            }\n            i = this._numSegmentPoint;\n            if (this._numSegmentPoint == 0) {\n                this._multiplierData[j++] = this._endColor.redMultiplier - this._startColor.redMultiplier;\n                this._multiplierData[j++] = this._endColor.greenMultiplier - this._startColor.greenMultiplier;\n                this._multiplierData[j++] = this._endColor.blueMultiplier - this._startColor.blueMultiplier;\n                this._multiplierData[j++] = this._endColor.alphaMultiplier - this._startColor.alphaMultiplier;\n            }\n            else {\n                this._multiplierData[j++] = (this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i];\n                this._multiplierData[j++] = (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i];\n                this._multiplierData[j++] = (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i];\n                this._multiplierData[j++] = (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i];\n            }\n        }\n        if (this._usesOffset) {\n            j = 0;\n            this._offsetData[j++] = this._startColor.redOffset / 255;\n            this._offsetData[j++] = this._startColor.greenOffset / 255;\n            this._offsetData[j++] = this._startColor.blueOffset / 255;\n            this._offsetData[j++] = this._startColor.alphaOffset / 255;\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0) {\n                    this._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._startColor.redOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset) / this._timeLifeData[i] / 255;\n                }\n                else {\n                    this._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255;\n                    this._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255;\n                }\n            }\n            i = this._numSegmentPoint;\n            if (this._numSegmentPoint == 0) {\n                this._offsetData[j++] = (this._endColor.redOffset - this._startColor.redOffset) / 255;\n                this._offsetData[j++] = (this._endColor.greenOffset - this._startColor.greenOffset) / 255;\n                this._offsetData[j++] = (this._endColor.blueOffset - this._startColor.blueOffset) / 255;\n                this._offsetData[j++] = (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255;\n            }\n            else {\n                this._offsetData[i] = (this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255;\n                this._offsetData[j++] = (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255;\n                this._offsetData[j++] = (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255;\n                this._offsetData[j++] = (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255;\n            }\n        }\n    };\n    /** @private */\n    ParticleSegmentedColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleSegmentedColorState.START_OFFSET_INDEX = 1;\n    /** @private */\n    ParticleSegmentedColorState.TIME_DATA_INDEX = 2;\n    return ParticleSegmentedColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleSpriteSheetState = (function (_super) {\n    __extends(ParticleSpriteSheetState, _super);\n    function ParticleSpriteSheetState(animator, particleSpriteSheetNode) {\n        _super.call(this, animator, particleSpriteSheetNode);\n        this._particleSpriteSheetNode = particleSpriteSheetNode;\n        this._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n        this._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n        this._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n        this._numColumns = this._particleSpriteSheetNode._iNumColumns;\n        this._numRows = this._particleSpriteSheetNode._iNumRows;\n        this._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n        this._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n        this.updateSpriteSheetData();\n    }\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the cycle phase, when in global mode. Defaults to zero.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSpriteSheetState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (!shader.usesUVTransform) {\n            shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n            if (this._usesCycle) {\n                var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n                if (this._particleSpriteSheetNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    if (this._usesPhase)\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n                    else\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                }\n                else\n                    shader.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n            }\n        }\n    };\n    ParticleSpriteSheetState.prototype.updateSpriteSheetData = function () {\n        this._spriteSheetData = new Array(8);\n        var uTotal = this._totalFrames / this._numColumns;\n        this._spriteSheetData[0] = uTotal;\n        this._spriteSheetData[1] = 1 / this._numColumns;\n        this._spriteSheetData[2] = 1 / this._numRows;\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._spriteSheetData[4] = uTotal / this._cycleDuration;\n            this._spriteSheetData[5] = this._cycleDuration;\n            if (this._usesPhase)\n                this._spriteSheetData[6] = this._cyclePhase;\n        }\n    };\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_0 = 0;\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_1 = 1;\n    return ParticleSpriteSheetState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n * ...\n */\nvar ParticleStateBase = (function (_super) {\n    __extends(ParticleStateBase, _super);\n    function ParticleStateBase(animator, particleNode, needUpdateTime) {\n        if (needUpdateTime === void 0) { needUpdateTime = false; }\n        _super.call(this, animator, particleNode);\n        this._pDynamicProperties = new Array();\n        this._pDynamicPropertiesDirty = new Object();\n        this._pParticleAnimator = animator;\n        this._particleNode = particleNode;\n        this._pNeedUpdateTime = needUpdateTime;\n    }\n    Object.defineProperty(ParticleStateBase.prototype, \"needUpdateTime\", {\n        get: function () {\n            return this._pNeedUpdateTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleStateBase.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n    };\n    ParticleStateBase.prototype._pUpdateDynamicProperties = function (animationElements) {\n        this._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n        var animationParticles = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var totalLenOfOneVertex = animationElements.totalLenOfOneVertex;\n        var dataLength = this._particleNode.dataLength;\n        var dataOffset = this._particleNode._iDataOffset;\n        var vertexLength;\n        //\t\t\tvar particleOffset:number;\n        var startingOffset;\n        var vertexOffset;\n        var data;\n        var animationParticle;\n        //\t\t\tvar numParticles:number = _positions.length/dataLength;\n        var numParticles = this._pDynamicProperties.length;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        //loop through all particles\n        while (i < numParticles) {\n            //loop through each particle data for the current particle\n            while (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n                data = this._pDynamicProperties[i];\n                vertexLength = animationParticle.numVertices * totalLenOfOneVertex;\n                startingOffset = animationParticle.startVertexIndex * totalLenOfOneVertex + dataOffset;\n                //loop through each vertex in the particle data\n                for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                    vertexOffset = startingOffset + k;\n                    //\t\t\t\t\t\tparticleOffset = i * dataLength;\n                    //loop through all vertex data for the current particle data\n                    for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                        vertexOffset = startingOffset + k;\n                        vertexData[vertexOffset++] = data.x;\n                        vertexData[vertexOffset++] = data.y;\n                        vertexData[vertexOffset++] = data.z;\n                        if (dataLength == 4)\n                            vertexData[vertexOffset++] = data.w;\n                    }\n                }\n                j++;\n            }\n            i++;\n        }\n        animationElements.invalidateBuffer();\n    };\n    return ParticleStateBase;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleStateBase;\n\n},{\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleTimeState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleTimeState = (function (_super) {\n    __extends(ParticleTimeState, _super);\n    function ParticleTimeState(animator, particleTimeNode) {\n        _super.call(this, animator, particleTimeNode, true);\n        this._particleTimeNode = particleTimeNode;\n    }\n    ParticleTimeState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        animationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        var particleTime = this._pTime / 1000;\n        shader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n    };\n    /** @private */\n    ParticleTimeState.TIME_STREAM_INDEX = 0;\n    /** @private */\n    ParticleTimeState.TIME_CONSTANT_INDEX = 1;\n    return ParticleTimeState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleUVState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleUVState = (function (_super) {\n    __extends(ParticleUVState, _super);\n    function ParticleUVState(animator, particleUVNode) {\n        _super.call(this, animator, particleUVNode);\n        this._particleUVNode = particleUVNode;\n    }\n    ParticleUVState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (!shader.usesUVTransform) {\n            var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n            var data = this._particleUVNode._iUvData;\n            shader.setVertexConst(index, data.x, data.y);\n        }\n    };\n    /** @private */\n    ParticleUVState.UV_INDEX = 0;\n    return ParticleUVState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVState;\n\n},{\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"../../animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"../../animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleVelocityState = (function (_super) {\n    __extends(ParticleVelocityState, _super);\n    function ParticleVelocityState(animator, particleVelocityNode) {\n        _super.call(this, animator, particleVelocityNode);\n        this._particleVelocityNode = particleVelocityNode;\n        this._velocity = this._particleVelocityNode._iVelocity;\n    }\n    Object.defineProperty(ParticleVelocityState.prototype, \"velocity\", {\n        /**\n         * Defines the default velocity vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._velocity;\n        },\n        set: function (value) {\n            this._velocity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleVelocityState.prototype.getVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleVelocityState.prototype.setVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    ParticleVelocityState.prototype.setRenderState = function (shader, renderable, animationElements, animationRegisterData, camera, stage) {\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            shader.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleVelocityState.VELOCITY_INDEX = 0;\n    return ParticleVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityState;\n\n},{\"../../animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"../../animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonBinaryLERPState = (function (_super) {\n    __extends(SkeletonBinaryLERPState, _super);\n    function SkeletonBinaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._inputA = animator.getAnimationState(this._skeletonAnimationNode.inputA);\n        this._inputB = animator.getAnimationState(this._skeletonAnimationNode.inputB);\n    }\n    Object.defineProperty(SkeletonBinaryLERPState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see inputA\n         * @see inputB\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdateTime = function (time) {\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonBinaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this._pRootDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this._pRootDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this._pRootDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonBinaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    return SkeletonBinaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationClipState_1 = require(\"../../animators/states/AnimationClipState\");\n/**\n *\n */\nvar SkeletonClipState = (function (_super) {\n    __extends(SkeletonClipState, _super);\n    function SkeletonClipState(animator, skeletonClipNode) {\n        _super.call(this, animator, skeletonClipNode);\n        this._rootPos = new Vector3D_1.default();\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonClipNode = skeletonClipNode;\n        this._frames = this._skeletonClipNode.frames;\n    }\n    Object.defineProperty(SkeletonClipState.prototype, \"currentPose\", {\n        /**\n         * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonClipState.prototype, \"nextPose\", {\n        /**\n         * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonClipState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateTime = function (time) {\n        this._skeletonPoseDirty = true;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentPose = this._frames[this._pCurrentFrame];\n        if (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n            this._nextPose = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextPose = this._frames[this._pNextFrame];\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the internal playhead position.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonClipState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (!this._skeletonClipNode.totalDuration)\n            return;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var currentPose = this._currentPose.jointPoses;\n        var nextPose = this._nextPose.jointPoses;\n        var numJoints = skeleton.numJoints;\n        var p1, p2;\n        var pose1, pose2;\n        var endPoses = this._skeletonPose.jointPoses;\n        var endPose;\n        var tr;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        if ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n            throw new Error(\"joint counts don't match!\");\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = currentPose[i];\n            pose2 = nextPose[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            if (this._skeletonClipNode.highQuality)\n                endPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            else\n                endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            if (i > 0) {\n                tr = endPose.translation;\n                tr.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n                tr.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n                tr.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var p1, p2, p3;\n        var totalDelta = this._skeletonClipNode.totalDelta;\n        // jumping back, need to reset position\n        if ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n            this._rootPos.x -= totalDelta.x * this._pTimeDir;\n            this._rootPos.y -= totalDelta.y * this._pTimeDir;\n            this._rootPos.z -= totalDelta.z * this._pTimeDir;\n        }\n        var dx = this._rootPos.x;\n        var dy = this._rootPos.y;\n        var dz = this._rootPos.z;\n        if (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            p3 = this._currentPose.jointPoses[0].translation;\n            this._rootPos.x = p3.x + p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p3.y + p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p3.z + p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        else {\n            p1 = this._currentPose.jointPoses[0].translation;\n            p2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n            this._rootPos.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        this._pRootDelta.x = this._rootPos.x - dx;\n        this._pRootDelta.y = this._rootPos.y - dy;\n        this._pRootDelta.z = this._rootPos.z - dz;\n        this._pOldFrame = this._pNextFrame;\n    };\n    return SkeletonClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDifferenceState = (function (_super) {\n    __extends(SkeletonDifferenceState, _super);\n    function SkeletonDifferenceState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._baseInput = animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n        this._differenceInput = animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n    }\n    Object.defineProperty(SkeletonDifferenceState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see #baseInput\n         * @see #differenceInput\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._baseInput.phase(value);\n        this._baseInput.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdateTime = function (time) {\n        this._skeletonPoseDirty = true;\n        this._baseInput.update(time);\n        this._differenceInput.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDifferenceState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._baseInput.positionDelta;\n        var deltB = this._differenceInput.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * deltB.x;\n        this.positionDelta.y = deltA.y + this._blendWeight * deltB.y;\n        this.positionDelta.z = deltA.z + this._blendWeight * deltB.z;\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDifferenceState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var basePoses = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n        var diffPoses = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n        var base, diff;\n        var basePos, diffPos;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            base = basePoses[i];\n            diff = diffPoses[i];\n            basePos = base.translation;\n            diffPos = diff.translation;\n            SkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n            endPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = basePos.x + this._blendWeight * diffPos.x;\n            tr.y = basePos.y + this._blendWeight * diffPos.y;\n            tr.z = basePos.z + this._blendWeight * diffPos.z;\n        }\n    };\n    SkeletonDifferenceState._tempQuat = new Quaternion_1.default();\n    return SkeletonDifferenceState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"awayjs-core/lib/geom/Quaternion\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDirectionalState = (function (_super) {\n    __extends(SkeletonDirectionalState, _super);\n    function SkeletonDirectionalState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeight = 0;\n        this._direction = 0;\n        this._blendDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._forward = animator.getAnimationState(this._skeletonAnimationNode.forward);\n        this._backward = animator.getAnimationState(this._skeletonAnimationNode.backward);\n        this._left = animator.getAnimationState(this._skeletonAnimationNode.left);\n        this._right = animator.getAnimationState(this._skeletonAnimationNode.right);\n    }\n    Object.defineProperty(SkeletonDirectionalState.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        /**\n         * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n         * used to produce the skeleton pose output.\n         */\n        set: function (value) {\n            if (this._direction == value)\n                return;\n            this._direction = value;\n            this._blendDirty = true;\n            this._skeletonPoseDirty = true;\n            this._pPositionDeltaDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype.phase = function (value) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUdateTime = function (time) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDirectionalState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this.positionDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this.positionDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDirectionalState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    /**\n     * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @private\n     */\n    SkeletonDirectionalState.prototype.updateBlend = function () {\n        this._blendDirty = false;\n        if (this._direction < 0 || this._direction > 360) {\n            this._direction %= 360;\n            if (this._direction < 0)\n                this._direction += 360;\n        }\n        if (this._direction < 90) {\n            this._inputA = this._forward;\n            this._inputB = this._right;\n            this._blendWeight = this._direction / 90;\n        }\n        else if (this._direction < 180) {\n            this._inputA = this._right;\n            this._inputB = this._backward;\n            this._blendWeight = (this._direction - 90) / 90;\n        }\n        else if (this._direction < 270) {\n            this._inputA = this._backward;\n            this._inputB = this._left;\n            this._blendWeight = (this._direction - 180) / 90;\n        }\n        else {\n            this._inputA = this._left;\n            this._inputB = this._forward;\n            this._blendWeight = (this._direction - 270) / 90;\n        }\n    };\n    return SkeletonDirectionalState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"../../animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"../../animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"../../animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonNaryLERPState = (function (_super) {\n    __extends(SkeletonNaryLERPState, _super);\n    function SkeletonNaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeights = new Array();\n        this._inputs = new Array();\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        var i = this._skeletonAnimationNode.numInputs;\n        while (i--)\n            this._inputs[i] = animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(value);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUdateTime = function (time) {\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(time);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonNaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node blend weight is requested.\n     */\n    SkeletonNaryLERPState.prototype.getBlendWeightAt = function (index) {\n        return this._blendWeights[index];\n    };\n    /**\n     * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index on which the skeleton animation node blend weight is to be set.\n     * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n     */\n    SkeletonNaryLERPState.prototype.setBlendWeightAt = function (index, blendWeight) {\n        this._blendWeights[index] = blendWeight;\n        this._pPositionDeltaDirty = true;\n        this._skeletonPoseDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var delta;\n        var weight;\n        this.positionDelta.x = 0;\n        this.positionDelta.y = 0;\n        this.positionDelta.z = 0;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (weight) {\n                delta = this._inputs[j].positionDelta;\n                this.positionDelta.x += weight * delta.x;\n                this.positionDelta.y += weight * delta.y;\n                this.positionDelta.z += weight * delta.z;\n            }\n        }\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonNaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var weight;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses;\n        var endPose, pose;\n        var endTr, tr;\n        var endQuat, q;\n        var firstPose;\n        var i;\n        var w0, x0, y0, z0;\n        var w1, x1, y1, z1;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (!weight)\n                continue;\n            poses = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n            if (!firstPose) {\n                firstPose = poses;\n                for (i = 0; i < numJoints; ++i) {\n                    endPose = endPoses[i];\n                    if (endPose == null)\n                        endPose = endPoses[i] = new JointPose_1.default();\n                    pose = poses[i];\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    endQuat = endPose.orientation;\n                    endQuat.x = weight * q.x;\n                    endQuat.y = weight * q.y;\n                    endQuat.z = weight * q.z;\n                    endQuat.w = weight * q.w;\n                    endTr = endPose.translation;\n                    endTr.x = weight * tr.x;\n                    endTr.y = weight * tr.y;\n                    endTr.z = weight * tr.z;\n                }\n            }\n            else {\n                for (i = 0; i < skeleton.numJoints; ++i) {\n                    endPose = endPoses[i];\n                    pose = poses[i];\n                    q = firstPose[i].orientation;\n                    x0 = q.x;\n                    y0 = q.y;\n                    z0 = q.z;\n                    w0 = q.w;\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    x1 = q.x;\n                    y1 = q.y;\n                    z1 = q.z;\n                    w1 = q.w;\n                    // find shortest direction\n                    if (x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1 < 0) {\n                        x1 = -x1;\n                        y1 = -y1;\n                        z1 = -z1;\n                        w1 = -w1;\n                    }\n                    endQuat = endPose.orientation;\n                    endQuat.x += weight * x1;\n                    endQuat.y += weight * y1;\n                    endQuat.z += weight * z1;\n                    endQuat.w += weight * w1;\n                    endTr = endPose.translation;\n                    endTr.x += weight * tr.x;\n                    endTr.y += weight * tr.y;\n                    endTr.z += weight * tr.z;\n                }\n            }\n        }\n        for (i = 0; i < skeleton.numJoints; ++i)\n            endPoses[i].orientation.normalize();\n    };\n    return SkeletonNaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPState;\n\n},{\"../../animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"../../animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"../../animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/VertexClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipState_1 = require(\"../../animators/states/AnimationClipState\");\n/**\n *\n */\nvar VertexClipState = (function (_super) {\n    __extends(VertexClipState, _super);\n    function VertexClipState(animator, vertexClipNode) {\n        _super.call(this, animator, vertexClipNode);\n        this._vertexClipNode = vertexClipNode;\n        this._frames = this._vertexClipNode.frames;\n    }\n    Object.defineProperty(VertexClipState.prototype, \"currentGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexClipState.prototype, \"nextGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentGraphics = this._frames[this._pCurrentFrame];\n        if (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n            this._nextGraphics = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextGraphics = this._frames[this._pNextFrame];\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdatePositionDelta = function () {\n        //TODO:implement positiondelta functionality for vertex animations\n    };\n    return VertexClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipState;\n\n},{\"../../animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPNode_1 = require(\"../../animators/nodes/SkeletonBinaryLERPNode\");\nvar CrossfadeTransitionState_1 = require(\"../../animators/transitions/CrossfadeTransitionState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar CrossfadeTransitionNode = (function (_super) {\n    __extends(CrossfadeTransitionNode, _super);\n    /**\n     * Creates a new <code>CrossfadeTransitionNode</code> object.\n     */\n    function CrossfadeTransitionNode() {\n        _super.call(this);\n        this._pStateClass = CrossfadeTransitionState_1.default;\n    }\n    return CrossfadeTransitionNode;\n}(SkeletonBinaryLERPNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionNode;\n\n},{\"../../animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"../../animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPState_1 = require(\"../../animators/states/SkeletonBinaryLERPState\");\nvar AnimationStateEvent_1 = require(\"../../animators/../events/AnimationStateEvent\");\n/**\n *\n */\nvar CrossfadeTransitionState = (function (_super) {\n    __extends(CrossfadeTransitionState, _super);\n    function CrossfadeTransitionState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._crossfadeTransitionNode = skeletonAnimationNode;\n    }\n    /**\n     * @inheritDoc\n     */\n    CrossfadeTransitionState.prototype._pUpdateTime = function (time) {\n        this.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend) / (1000 * this._crossfadeTransitionNode.blendSpeed);\n        if (this.blendWeight >= 1) {\n            this.blendWeight = 1;\n            if (this._animationStateTransitionComplete == null)\n                this._animationStateTransitionComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n            this._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    return CrossfadeTransitionState;\n}(SkeletonBinaryLERPState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionState;\n\n},{\"../../animators/../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"../../animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\":[function(require,module,exports){\n\"use strict\";\nvar CrossfadeTransitionNode_1 = require(\"../../animators/transitions/CrossfadeTransitionNode\");\n/**\n *\n */\nvar CrossfadeTransition = (function () {\n    function CrossfadeTransition(blendSpeed) {\n        this.blendSpeed = 0.5;\n        this.blendSpeed = blendSpeed;\n    }\n    CrossfadeTransition.prototype.getAnimationNode = function (animator, startNode, endNode, startBlend) {\n        var crossFadeTransitionNode = new CrossfadeTransitionNode_1.default();\n        crossFadeTransitionNode.inputA = startNode;\n        crossFadeTransitionNode.inputB = endNode;\n        crossFadeTransitionNode.blendSpeed = this.blendSpeed;\n        crossFadeTransitionNode.startBlend = startBlend;\n        return crossFadeTransitionNode;\n    };\n    return CrossfadeTransition;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransition;\n\n},{\"../../animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\"}],\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar AnimationElements_1 = require(\"./animators/data/AnimationElements\");\nexports.AnimationElements = AnimationElements_1.default;\nvar AnimationRegisterData_1 = require(\"./animators/data/AnimationRegisterData\");\nexports.AnimationRegisterData = AnimationRegisterData_1.default;\nvar ColorSegmentPoint_1 = require(\"./animators/data/ColorSegmentPoint\");\nexports.ColorSegmentPoint = ColorSegmentPoint_1.default;\nvar JointPose_1 = require(\"./animators/data/JointPose\");\nexports.JointPose = JointPose_1.default;\nvar ParticleAnimationData_1 = require(\"./animators/data/ParticleAnimationData\");\nexports.ParticleAnimationData = ParticleAnimationData_1.default;\nvar ParticleProperties_1 = require(\"./animators/data/ParticleProperties\");\nexports.ParticleProperties = ParticleProperties_1.default;\nvar ParticlePropertiesMode_1 = require(\"./animators/data/ParticlePropertiesMode\");\nexports.ParticlePropertiesMode = ParticlePropertiesMode_1.default;\nvar Skeleton_1 = require(\"./animators/data/Skeleton\");\nexports.Skeleton = Skeleton_1.default;\nvar SkeletonJoint_1 = require(\"./animators/data/SkeletonJoint\");\nexports.SkeletonJoint = SkeletonJoint_1.default;\nvar SkeletonPose_1 = require(\"./animators/data/SkeletonPose\");\nexports.SkeletonPose = SkeletonPose_1.default;\nvar VertexAnimationMode_1 = require(\"./animators/data/VertexAnimationMode\");\nexports.VertexAnimationMode = VertexAnimationMode_1.default;\nvar AnimationClipNodeBase_1 = require(\"./animators/nodes/AnimationClipNodeBase\");\nexports.AnimationClipNodeBase = AnimationClipNodeBase_1.default;\nvar ParticleAccelerationNode_1 = require(\"./animators/nodes/ParticleAccelerationNode\");\nexports.ParticleAccelerationNode = ParticleAccelerationNode_1.default;\nvar ParticleBezierCurveNode_1 = require(\"./animators/nodes/ParticleBezierCurveNode\");\nexports.ParticleBezierCurveNode = ParticleBezierCurveNode_1.default;\nvar ParticleBillboardNode_1 = require(\"./animators/nodes/ParticleBillboardNode\");\nexports.ParticleBillboardNode = ParticleBillboardNode_1.default;\nvar ParticleColorNode_1 = require(\"./animators/nodes/ParticleColorNode\");\nexports.ParticleColorNode = ParticleColorNode_1.default;\nvar ParticleFollowNode_1 = require(\"./animators/nodes/ParticleFollowNode\");\nexports.ParticleFollowNode = ParticleFollowNode_1.default;\nvar ParticleInitialColorNode_1 = require(\"./animators/nodes/ParticleInitialColorNode\");\nexports.ParticleInitialColorNode = ParticleInitialColorNode_1.default;\nvar ParticleNodeBase_1 = require(\"./animators/nodes/ParticleNodeBase\");\nexports.ParticleNodeBase = ParticleNodeBase_1.default;\nvar ParticleOrbitNode_1 = require(\"./animators/nodes/ParticleOrbitNode\");\nexports.ParticleOrbitNode = ParticleOrbitNode_1.default;\nvar ParticleOscillatorNode_1 = require(\"./animators/nodes/ParticleOscillatorNode\");\nexports.ParticleOscillatorNode = ParticleOscillatorNode_1.default;\nvar ParticlePositionNode_1 = require(\"./animators/nodes/ParticlePositionNode\");\nexports.ParticlePositionNode = ParticlePositionNode_1.default;\nvar ParticleRotateToHeadingNode_1 = require(\"./animators/nodes/ParticleRotateToHeadingNode\");\nexports.ParticleRotateToHeadingNode = ParticleRotateToHeadingNode_1.default;\nvar ParticleRotateToPositionNode_1 = require(\"./animators/nodes/ParticleRotateToPositionNode\");\nexports.ParticleRotateToPositionNode = ParticleRotateToPositionNode_1.default;\nvar ParticleRotationalVelocityNode_1 = require(\"./animators/nodes/ParticleRotationalVelocityNode\");\nexports.ParticleRotationalVelocityNode = ParticleRotationalVelocityNode_1.default;\nvar ParticleScaleNode_1 = require(\"./animators/nodes/ParticleScaleNode\");\nexports.ParticleScaleNode = ParticleScaleNode_1.default;\nvar ParticleSegmentedColorNode_1 = require(\"./animators/nodes/ParticleSegmentedColorNode\");\nexports.ParticleSegmentedColorNode = ParticleSegmentedColorNode_1.default;\nvar ParticleSpriteSheetNode_1 = require(\"./animators/nodes/ParticleSpriteSheetNode\");\nexports.ParticleSpriteSheetNode = ParticleSpriteSheetNode_1.default;\nvar ParticleTimeNode_1 = require(\"./animators/nodes/ParticleTimeNode\");\nexports.ParticleTimeNode = ParticleTimeNode_1.default;\nvar ParticleUVNode_1 = require(\"./animators/nodes/ParticleUVNode\");\nexports.ParticleUVNode = ParticleUVNode_1.default;\nvar ParticleVelocityNode_1 = require(\"./animators/nodes/ParticleVelocityNode\");\nexports.ParticleVelocityNode = ParticleVelocityNode_1.default;\nvar SkeletonBinaryLERPNode_1 = require(\"./animators/nodes/SkeletonBinaryLERPNode\");\nexports.SkeletonBinaryLERPNode = SkeletonBinaryLERPNode_1.default;\nvar SkeletonClipNode_1 = require(\"./animators/nodes/SkeletonClipNode\");\nexports.SkeletonClipNode = SkeletonClipNode_1.default;\nvar SkeletonDifferenceNode_1 = require(\"./animators/nodes/SkeletonDifferenceNode\");\nexports.SkeletonDifferenceNode = SkeletonDifferenceNode_1.default;\nvar SkeletonDirectionalNode_1 = require(\"./animators/nodes/SkeletonDirectionalNode\");\nexports.SkeletonDirectionalNode = SkeletonDirectionalNode_1.default;\nvar SkeletonNaryLERPNode_1 = require(\"./animators/nodes/SkeletonNaryLERPNode\");\nexports.SkeletonNaryLERPNode = SkeletonNaryLERPNode_1.default;\nvar VertexClipNode_1 = require(\"./animators/nodes/VertexClipNode\");\nexports.VertexClipNode = VertexClipNode_1.default;\nvar AnimationClipState_1 = require(\"./animators/states/AnimationClipState\");\nexports.AnimationClipState = AnimationClipState_1.default;\nvar AnimationStateBase_1 = require(\"./animators/states/AnimationStateBase\");\nexports.AnimationStateBase = AnimationStateBase_1.default;\nvar ParticleAccelerationState_1 = require(\"./animators/states/ParticleAccelerationState\");\nexports.ParticleAccelerationState = ParticleAccelerationState_1.default;\nvar ParticleBezierCurveState_1 = require(\"./animators/states/ParticleBezierCurveState\");\nexports.ParticleBezierCurveState = ParticleBezierCurveState_1.default;\nvar ParticleBillboardState_1 = require(\"./animators/states/ParticleBillboardState\");\nexports.ParticleBillboardState = ParticleBillboardState_1.default;\nvar ParticleColorState_1 = require(\"./animators/states/ParticleColorState\");\nexports.ParticleColorState = ParticleColorState_1.default;\nvar ParticleFollowState_1 = require(\"./animators/states/ParticleFollowState\");\nexports.ParticleFollowState = ParticleFollowState_1.default;\nvar ParticleInitialColorState_1 = require(\"./animators/states/ParticleInitialColorState\");\nexports.ParticleInitialColorState = ParticleInitialColorState_1.default;\nvar ParticleStateBase_1 = require(\"./animators/states/ParticleStateBase\");\nexports.ParticleStateBase = ParticleStateBase_1.default;\nvar ParticleOrbitState_1 = require(\"./animators/states/ParticleOrbitState\");\nexports.ParticleOrbitState = ParticleOrbitState_1.default;\nvar ParticleOscillatorState_1 = require(\"./animators/states/ParticleOscillatorState\");\nexports.ParticleOscillatorState = ParticleOscillatorState_1.default;\nvar ParticlePositionState_1 = require(\"./animators/states/ParticlePositionState\");\nexports.ParticlePositionState = ParticlePositionState_1.default;\nvar ParticleRotateToHeadingState_1 = require(\"./animators/states/ParticleRotateToHeadingState\");\nexports.ParticleRotateToHeadingState = ParticleRotateToHeadingState_1.default;\nvar ParticleRotateToPositionState_1 = require(\"./animators/states/ParticleRotateToPositionState\");\nexports.ParticleRotateToPositionState = ParticleRotateToPositionState_1.default;\nvar ParticleRotationalVelocityState_1 = require(\"./animators/states/ParticleRotationalVelocityState\");\nexports.ParticleRotationalVelocityState = ParticleRotationalVelocityState_1.default;\nvar ParticleScaleState_1 = require(\"./animators/states/ParticleScaleState\");\nexports.ParticleScaleState = ParticleScaleState_1.default;\nvar ParticleSegmentedColorState_1 = require(\"./animators/states/ParticleSegmentedColorState\");\nexports.ParticleSegmentedColorState = ParticleSegmentedColorState_1.default;\nvar ParticleSpriteSheetState_1 = require(\"./animators/states/ParticleSpriteSheetState\");\nexports.ParticleSpriteSheetState = ParticleSpriteSheetState_1.default;\nvar ParticleTimeState_1 = require(\"./animators/states/ParticleTimeState\");\nexports.ParticleTimeState = ParticleTimeState_1.default;\nvar ParticleUVState_1 = require(\"./animators/states/ParticleUVState\");\nexports.ParticleUVState = ParticleUVState_1.default;\nvar ParticleVelocityState_1 = require(\"./animators/states/ParticleVelocityState\");\nexports.ParticleVelocityState = ParticleVelocityState_1.default;\nvar SkeletonBinaryLERPState_1 = require(\"./animators/states/SkeletonBinaryLERPState\");\nexports.SkeletonBinaryLERPState = SkeletonBinaryLERPState_1.default;\nvar SkeletonClipState_1 = require(\"./animators/states/SkeletonClipState\");\nexports.SkeletonClipState = SkeletonClipState_1.default;\nvar SkeletonDifferenceState_1 = require(\"./animators/states/SkeletonDifferenceState\");\nexports.SkeletonDifferenceState = SkeletonDifferenceState_1.default;\nvar SkeletonDirectionalState_1 = require(\"./animators/states/SkeletonDirectionalState\");\nexports.SkeletonDirectionalState = SkeletonDirectionalState_1.default;\nvar SkeletonNaryLERPState_1 = require(\"./animators/states/SkeletonNaryLERPState\");\nexports.SkeletonNaryLERPState = SkeletonNaryLERPState_1.default;\nvar VertexClipState_1 = require(\"./animators/states/VertexClipState\");\nexports.VertexClipState = VertexClipState_1.default;\nvar CrossfadeTransition_1 = require(\"./animators/transitions/CrossfadeTransition\");\nexports.CrossfadeTransition = CrossfadeTransition_1.default;\nvar CrossfadeTransitionNode_1 = require(\"./animators/transitions/CrossfadeTransitionNode\");\nexports.CrossfadeTransitionNode = CrossfadeTransitionNode_1.default;\nvar CrossfadeTransitionState_1 = require(\"./animators/transitions/CrossfadeTransitionState\");\nexports.CrossfadeTransitionState = CrossfadeTransitionState_1.default;\nvar AnimationSetBase_1 = require(\"./animators/AnimationSetBase\");\nexports.AnimationSetBase = AnimationSetBase_1.default;\nvar AnimatorBase_1 = require(\"./animators/AnimatorBase\");\nexports.AnimatorBase = AnimatorBase_1.default;\nvar ParticleAnimationSet_1 = require(\"./animators/ParticleAnimationSet\");\nexports.ParticleAnimationSet = ParticleAnimationSet_1.default;\nvar ParticleAnimator_1 = require(\"./animators/ParticleAnimator\");\nexports.ParticleAnimator = ParticleAnimator_1.default;\nvar SkeletonAnimationSet_1 = require(\"./animators/SkeletonAnimationSet\");\nexports.SkeletonAnimationSet = SkeletonAnimationSet_1.default;\nvar SkeletonAnimator_1 = require(\"./animators/SkeletonAnimator\");\nexports.SkeletonAnimator = SkeletonAnimator_1.default;\nvar VertexAnimationSet_1 = require(\"./animators/VertexAnimationSet\");\nexports.VertexAnimationSet = VertexAnimationSet_1.default;\nvar VertexAnimator_1 = require(\"./animators/VertexAnimator\");\nexports.VertexAnimator = VertexAnimator_1.default;\n\n},{\"./animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"./animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"./animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"./animators/ParticleAnimator\":\"awayjs-renderergl/lib/animators/ParticleAnimator\",\"./animators/SkeletonAnimationSet\":\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\",\"./animators/SkeletonAnimator\":\"awayjs-renderergl/lib/animators/SkeletonAnimator\",\"./animators/VertexAnimationSet\":\"awayjs-renderergl/lib/animators/VertexAnimationSet\",\"./animators/VertexAnimator\":\"awayjs-renderergl/lib/animators/VertexAnimator\",\"./animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"./animators/data/AnimationRegisterData\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterData\",\"./animators/data/ColorSegmentPoint\":\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\",\"./animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"./animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"./animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"./animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"./animators/data/Skeleton\":\"awayjs-renderergl/lib/animators/data/Skeleton\",\"./animators/data/SkeletonJoint\":\"awayjs-renderergl/lib/animators/data/SkeletonJoint\",\"./animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"./animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"./animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"./animators/nodes/ParticleAccelerationNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\",\"./animators/nodes/ParticleBezierCurveNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\",\"./animators/nodes/ParticleBillboardNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\",\"./animators/nodes/ParticleColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\",\"./animators/nodes/ParticleFollowNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\",\"./animators/nodes/ParticleInitialColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\",\"./animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"./animators/nodes/ParticleOrbitNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\",\"./animators/nodes/ParticleOscillatorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\",\"./animators/nodes/ParticlePositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\",\"./animators/nodes/ParticleRotateToHeadingNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\",\"./animators/nodes/ParticleRotateToPositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\",\"./animators/nodes/ParticleRotationalVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\",\"./animators/nodes/ParticleScaleNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\",\"./animators/nodes/ParticleSegmentedColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\",\"./animators/nodes/ParticleSpriteSheetNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\",\"./animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\",\"./animators/nodes/ParticleUVNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\",\"./animators/nodes/ParticleVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\",\"./animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"./animators/nodes/SkeletonClipNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\",\"./animators/nodes/SkeletonDifferenceNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\",\"./animators/nodes/SkeletonDirectionalNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\",\"./animators/nodes/SkeletonNaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\",\"./animators/nodes/VertexClipNode\":\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\",\"./animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"./animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"./animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"./animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"./animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\",\"./animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"./animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\",\"./animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"./animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"./animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"./animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"./animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"./animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"./animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"./animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\",\"./animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"./animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"./animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"./animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\",\"./animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"./animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"./animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"./animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\",\"./animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"./animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"./animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"./animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"./animators/transitions/CrossfadeTransition\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\",\"./animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\",\"./animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/elements/GL_ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nvar GL_ElementsBase = (function (_super) {\n    __extends(GL_ElementsBase, _super);\n    function GL_ElementsBase(elements, stage) {\n        var _this = this;\n        _super.call(this, elements, stage);\n        this.usages = 0;\n        this._vertices = new Object();\n        this._verticesUpdated = new Object();\n        this._indexMappings = Array();\n        this._numIndices = 0;\n        this._elements = elements;\n        this._stage = stage;\n        this._onInvalidateIndicesDelegate = function (event) { return _this._onInvalidateIndices(event); };\n        this._onClearIndicesDelegate = function (event) { return _this._onClearIndices(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n        this._onClearVerticesDelegate = function (event) { return _this._onClearVertices(event); };\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n    }\n    Object.defineProperty(GL_ElementsBase.prototype, \"elementsType\", {\n        get: function () {\n            throw new AbstractMethodError_1.default();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"elementsClass\", {\n        get: function () {\n            throw new AbstractMethodError_1.default();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"elements\", {\n        get: function () {\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numVertices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexMappings = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indexMappings;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexBufferGL = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indices;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getVertexBufferGL = function (attributesView) {\n        //first check if indices need updating which may affect vertices\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        var bufferId = attributesView.buffer.id;\n        if (!this._verticesUpdated[bufferId])\n            this._updateVertices(attributesView);\n        return this._vertices[bufferId];\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.activateVertexBufferVO = function (index, attributesView, dimensions, offset) {\n        if (dimensions === void 0) { dimensions = 0; }\n        if (offset === void 0) { offset = 0; }\n        this.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this._elements = null;\n        if (this._overflow) {\n            this._overflow.onClear(event);\n            this._overflow = null;\n        }\n    };\n    GL_ElementsBase.prototype._setRenderState = function (renderable, shader, camera, viewProjection) {\n        if (!this._verticesUpdated)\n            this._updateIndices();\n        //TODO replace overflow system with something sensible\n        //this._render(renderable, camera, viewProjection);\n        //\n        // if (this._overflow)\n        // \tthis._overflow._iRender(renderable, camera, viewProjection);\n    };\n    GL_ElementsBase.prototype.draw = function (renderable, shader, camera, viewProjection, count, offset) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_ElementsBase.prototype._updateIndices = function (indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var indices = this._elements.indices;\n        if (indices) {\n            this._indices = this._stage.getAbstraction(ElementsUtils_1.default.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n            this._numIndices = this._indices._attributesBuffer.count * indices.dimensions;\n        }\n        else {\n            this._indices = null;\n            this._numIndices = 0;\n            this._indexMappings = Array();\n        }\n        indexOffset += this._numIndices;\n        //check if there is more to split\n        if (indices && indexOffset < indices.count * this._elements.indices.dimensions) {\n            if (!this._overflow)\n                this._overflow = this._pGetOverflowElements();\n            this._overflow._updateIndices(indexOffset);\n        }\n        else if (this._overflow) {\n            this._overflow.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._elements));\n            this._overflow = null;\n        }\n        this._indicesUpdated = true;\n        //invalidate vertices if index mappings exist\n        if (this._indexMappings.length)\n            for (var key in this._verticesUpdated)\n                this._verticesUpdated[key] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param attributesView\n     * @private\n     */\n    GL_ElementsBase.prototype._updateVertices = function (attributesView) {\n        this._numVertices = this._elements.numVertices;\n        var bufferId = attributesView.buffer.id;\n        this._vertices[bufferId] = this._stage.getAbstraction(ElementsUtils_1.default.getSubVertices(attributesView.buffer, this._indexMappings));\n        this._verticesUpdated[bufferId] = true;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indicesUpdated = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indices.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n        this._indices = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        this._verticesUpdated[bufferId] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        if (this._vertices[bufferId]) {\n            this._vertices[bufferId].onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n            delete this._vertices[bufferId];\n            delete this._verticesUpdated[bufferId];\n        }\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_ElementsBase.prototype._pGetOverflowElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return GL_ElementsBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_ElementsBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/ElementsEvent\":undefined,\"awayjs-display/lib/utils/ElementsUtils\":undefined}],\"awayjs-renderergl/lib/elements/GL_LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"../elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_LineElements\n */\nvar GL_LineElements = (function (_super) {\n    __extends(GL_LineElements, _super);\n    function GL_LineElements(lineElements, stage) {\n        _super.call(this, lineElements, stage);\n        this._calcMatrix = new Matrix3D_1.default();\n        this._thickness = 1.25;\n        this._lineElements = lineElements;\n    }\n    Object.defineProperty(GL_LineElements.prototype, \"elementsType\", {\n        get: function () {\n            return GL_LineElements.elementsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_LineElements.prototype, \"elementsClass\", {\n        get: function () {\n            return GL_LineElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_LineElements._iIncludeDependencies = function (shader) {\n        shader.colorDependencies++;\n    };\n    GL_LineElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        //get the projection coordinates\n        var position0 = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        var position1 = registerCache.getFreeVertexAttribute();\n        var thickness = registerCache.getFreeVertexAttribute();\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        registerCache.getFreeVertexConstant(); // not used\n        var constOne = registerCache.getFreeVertexConstant();\n        var constNegOne = registerCache.getFreeVertexConstant();\n        var misc = registerCache.getFreeVertexConstant();\n        var sceneMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.sceneMatrixIndex = sceneMatrixReg.index * 4;\n        var q0 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(q0, 1);\n        var q1 = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(q1, 1);\n        var l = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(l, 1);\n        var behind = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(behind, 1);\n        var qclipped = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(qclipped, 1);\n        var offset = registerCache.getFreeVertexVectorTemp();\n        registerCache.addVertexTempUsages(offset, 1);\n        return \"m44 \" + q0 + \", \" + position0 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" +\n            \"m44 \" + q1 + \", \" + position1 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" +\n            \"sub \" + l + \", \" + q1 + \", \" + q0 + \" \t\t\t\\n\" +\n            // test if behind camera near plane\n            // if 0 - Q0.z < Camera.near then the point needs to be clipped\n            \"slt \" + behind + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" +\n            \"sub \" + behind + \".y, \" + constOne + \".x, \" + behind + \".x\t\t\t\\n\" +\n            // p = point on the plane (0,0,-near)\n            // n = plane normal (0,0,-1)\n            // D = Q1 - Q0\n            // t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n            // solve for t where line crosses Camera.near\n            \"add \" + offset + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" +\n            \"sub \" + offset + \".y, \" + q0 + \".z, \" + q1 + \".z\t\t\t\\n\" +\n            // fix divide by zero for horizontal lines\n            \"seq \" + offset + \".z, \" + offset + \".y \" + constNegOne + \".x\t\t\t\\n\" +\n            \"add \" + offset + \".y, \" + offset + \".y, \" + offset + \".z\t\t\t\\n\" +\n            \"div \" + offset + \".z, \" + offset + \".x, \" + offset + \".y\t\t\t\\n\" +\n            \"mul \" + offset + \".xyz, \" + offset + \".zzz, \" + l + \".xyz\t\\n\" +\n            \"add \" + qclipped + \".xyz, \" + q0 + \".xyz, \" + offset + \".xyz\t\\n\" +\n            \"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" +\n            // If necessary, replace Q0 with new Qclipped\n            \"mul \" + q0 + \", \" + q0 + \", \" + behind + \".yyyy\t\t\t\\n\" +\n            \"mul \" + qclipped + \", \" + qclipped + \", \" + behind + \".xxxx\t\t\t\\n\" +\n            \"add \" + q0 + \", \" + q0 + \", \" + qclipped + \"\t\t\t\t\\n\" +\n            // calculate side vector for line\n            \"nrm \" + l + \".xyz, \" + l + \".xyz\t\t\t\\n\" +\n            \"nrm \" + behind + \".xyz, \" + q0 + \".xyz\t\t\t\\n\" +\n            \"mov \" + behind + \".w, \" + constOne + \".x\t\t\t\t\\n\" +\n            \"crs \" + qclipped + \".xyz, \" + l + \", \" + behind + \"\t\t\t\\n\" +\n            \"nrm \" + qclipped + \".xyz, \" + qclipped + \".xyz\t\t\t\\n\" +\n            // face the side vector properly for the given point\n            \"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + thickness + \".xxx\t\\n\" +\n            \"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" +\n            // calculate the amount required to move at the point's distance to correspond to the line's pixel width\n            // scale the side vector by that amount\n            \"dp3 \" + offset + \".x, \" + q0 + \", \" + constNegOne + \"\t\t\t\\n\" +\n            \"mul \" + offset + \".x, \" + offset + \".x, \" + misc + \".x\t\t\t\\n\" +\n            \"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + offset + \".xxx\t\\n\" +\n            // add scaled side vector to Q0 and transform to clip space\n            \"add \" + q0 + \".xyz, \" + q0 + \".xyz, \" + qclipped + \".xyz\t\\n\" +\n            \"m44 op, \" + q0 + \", \" + viewMatrixReg + \"\t\t\t\\n\"; // transform Q0 to clip space\n    };\n    GL_LineElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_LineElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineElements = null;\n    };\n    GL_LineElements.prototype._setRenderState = function (renderable, shader, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, shader, camera, viewProjection);\n        if (shader.colorBufferIndex >= 0)\n            this.activateVertexBufferVO(shader.colorBufferIndex, this._lineElements.colors);\n        this.activateVertexBufferVO(0, this._lineElements.positions, 3);\n        this.activateVertexBufferVO(2, this._lineElements.positions, 3, 12);\n        this.activateVertexBufferVO(3, this._lineElements.thickness);\n        shader.vertexConstantData[4 + 16] = 1;\n        shader.vertexConstantData[5 + 16] = 1;\n        shader.vertexConstantData[6 + 16] = 1;\n        shader.vertexConstantData[7 + 16] = 1;\n        shader.vertexConstantData[10 + 16] = -1;\n        shader.vertexConstantData[12 + 16] = this._thickness / ((this._stage.scissorRect) ? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n        shader.vertexConstantData[13 + 16] = 1 / 255;\n        shader.vertexConstantData[14 + 16] = camera.projection.near;\n        var context = this._stage.context;\n    };\n    GL_LineElements.prototype.draw = function (renderable, shader, camera, viewProjection, count, offset) {\n        var context = this._stage.context;\n        // projection matrix\n        camera.projection.matrix.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n        this._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n        this._calcMatrix.append(camera.inverseSceneTransform);\n        this._calcMatrix.copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, shader.vertexConstantData);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @protected\n     */\n    GL_LineElements.prototype._pGetOverflowElements = function () {\n        return new GL_LineElements(this._lineElements, this._stage);\n    };\n    GL_LineElements.elementsType = \"[elements Line]\";\n    return GL_LineElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineElements;\n\n},{\"../elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/GL_SkyboxElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_TriangleElements_1 = require(\"../elements/GL_TriangleElements\");\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nvar GL_SkyboxElements = (function (_super) {\n    __extends(GL_SkyboxElements, _super);\n    function GL_SkyboxElements() {\n        _super.apply(this, arguments);\n        this._skyboxProjection = new Matrix3D_1.default();\n    }\n    Object.defineProperty(GL_SkyboxElements.prototype, \"elementsType\", {\n        get: function () {\n            return GL_SkyboxElements.elementsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SkyboxElements.prototype, \"elementsClass\", {\n        get: function () {\n            return GL_SkyboxElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_SkyboxElements._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        //get the projection coordinates\n        var position = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        var scenePosition = registerCache.getFreeVertexConstant();\n        shader.scenePositionIndex = scenePosition.index * 4;\n        var skyboxScale = registerCache.getFreeVertexConstant();\n        var temp = registerCache.getFreeVertexVectorTemp();\n        code += \"mul \" + temp + \", \" + position + \", \" + skyboxScale + \"\\n\" +\n            \"add \" + temp + \", \" + temp + \", \" + scenePosition + \"\\n\";\n        if (shader.projectionDependencies > 0) {\n            sharedRegisters.projectionFragment = registerCache.getFreeVarying();\n            code += \"m44 \" + temp + \", \" + temp + \", \" + viewMatrixReg + \"\\n\" +\n                \"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n                \"mov op, \" + temp + \"\\n\";\n        }\n        else {\n            code += \"m44 op, \" + temp + \", \" + viewMatrixReg + \"\\n\";\n        }\n        return code;\n    };\n    GL_SkyboxElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SkyboxElements.prototype.draw = function (renderable, shader, camera, viewProjection, count, offset) {\n        var index = shader.scenePositionIndex;\n        var pos = camera.scenePosition;\n        shader.vertexConstantData[index++] = 2 * pos.x;\n        shader.vertexConstantData[index++] = 2 * pos.y;\n        shader.vertexConstantData[index++] = 2 * pos.z;\n        shader.vertexConstantData[index++] = 1;\n        shader.vertexConstantData[index++] = shader.vertexConstantData[index++] = shader.vertexConstantData[index++] = camera.projection.far / Math.sqrt(3);\n        shader.vertexConstantData[index] = 1;\n        var near = new Vector3D_1.default();\n        this._skyboxProjection.copyFrom(viewProjection);\n        this._skyboxProjection.copyRowTo(2, near);\n        var camPos = camera.scenePosition;\n        var cx = near.x;\n        var cy = near.y;\n        var cz = near.z;\n        var cw = -(near.x * camPos.x + near.y * camPos.y + near.z * camPos.z + Math.sqrt(cx * cx + cy * cy + cz * cz));\n        var signX = cx >= 0 ? 1 : -1;\n        var signY = cy >= 0 ? 1 : -1;\n        var p = new Vector3D_1.default(signX, signY, 1, 1);\n        var inverse = this._skyboxProjection.clone();\n        inverse.invert();\n        var q = inverse.transformVector(p);\n        this._skyboxProjection.copyRowTo(3, p);\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\n        this._skyboxProjection.copyRowFrom(2, new Vector3D_1.default(cx * a, cy * a, cz * a, cw * a));\n        //set constants\n        if (shader.sceneMatrixIndex >= 0) {\n            renderable.renderSceneTransform.copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n            this._skyboxProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n        }\n        else {\n            this._skyboxProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n        }\n        var context = this._stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, shader.vertexConstantData);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, shader.fragmentConstantData);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    GL_SkyboxElements.elementsType = \"[elements Skybox]\";\n    return GL_SkyboxElements;\n}(GL_TriangleElements_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxElements;\n\n},{\"../elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/GL_TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"../elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nvar GL_TriangleElements = (function (_super) {\n    __extends(GL_TriangleElements, _super);\n    function GL_TriangleElements(triangleElements, stage) {\n        _super.call(this, triangleElements, stage);\n        this._triangleElements = triangleElements;\n    }\n    Object.defineProperty(GL_TriangleElements.prototype, \"elementsType\", {\n        get: function () {\n            return GL_TriangleElements.elementsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_TriangleElements.prototype, \"elementsClass\", {\n        get: function () {\n            return GL_TriangleElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_TriangleElements._iIncludeDependencies = function (shader) {\n    };\n    GL_TriangleElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        //get the projection coordinates\n        var position = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        if (shader.projectionDependencies > 0) {\n            sharedRegisters.projectionFragment = registerCache.getFreeVarying();\n            var temp = registerCache.getFreeVertexVectorTemp();\n            code += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n                \"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n                \"mov op, \" + temp + \"\\n\";\n        }\n        else {\n            code += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n        }\n        return code;\n    };\n    GL_TriangleElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_TriangleElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._triangleElements = null;\n    };\n    GL_TriangleElements.prototype._setRenderState = function (renderable, shader, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, shader, camera, viewProjection);\n        //set buffers\n        //TODO: find a better way to update a concatenated buffer when autoderiving\n        if (shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n            this._triangleElements.normals;\n        if (shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n            this._triangleElements.tangents;\n        if (shader.curvesIndex >= 0)\n            this.activateVertexBufferVO(shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n        if (shader.uvIndex >= 0)\n            this.activateVertexBufferVO(shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n        if (shader.secondaryUVIndex >= 0)\n            this.activateVertexBufferVO(shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n        if (shader.normalIndex >= 0)\n            this.activateVertexBufferVO(shader.normalIndex, this._triangleElements.normals);\n        if (shader.tangentIndex >= 0)\n            this.activateVertexBufferVO(shader.tangentIndex, this._triangleElements.tangents);\n        if (shader.jointIndexIndex >= 0)\n            this.activateVertexBufferVO(shader.jointIndexIndex, this._triangleElements.jointIndices);\n        if (shader.jointWeightIndex >= 0)\n            this.activateVertexBufferVO(shader.jointIndexIndex, this._triangleElements.jointWeights);\n        this.activateVertexBufferVO(0, this._triangleElements.positions);\n    };\n    GL_TriangleElements.prototype.draw = function (renderable, shader, camera, viewProjection, count, offset) {\n        //set constants\n        if (shader.sceneMatrixIndex >= 0) {\n            renderable.renderSceneTransform.copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n            viewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n        }\n        else {\n            var matrix3D = Matrix3DUtils_1.default.CALCULATION_MATRIX;\n            matrix3D.copyFrom(renderable.renderSceneTransform);\n            matrix3D.append(viewProjection);\n            matrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n        }\n        var context = this._stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, shader.vertexConstantData);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, shader.fragmentConstantData);\n        if (this._indices)\n            this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, this.numIndices);\n        else\n            this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, offset, count || this.numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_TriangleElements.prototype._pGetOverflowElements = function () {\n        return new GL_TriangleElements(this._triangleElements, this._stage);\n    };\n    GL_TriangleElements.elementsType = \"[elements Triangle]\";\n    return GL_TriangleElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TriangleElements;\n\n},{\"../elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/IElementsClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/elements\":[function(require,module,exports){\n\"use strict\";\nvar GL_ElementsBase_1 = require(\"./elements/GL_ElementsBase\");\nexports.GL_ElementsBase = GL_ElementsBase_1.default;\nvar GL_LineElements_1 = require(\"./elements/GL_LineElements\");\nexports.GL_LineElements = GL_LineElements_1.default;\nvar GL_SkyboxElements_1 = require(\"./elements/GL_SkyboxElements\");\nexports.GL_SkyboxElements = GL_SkyboxElements_1.default;\nvar GL_TriangleElements_1 = require(\"./elements/GL_TriangleElements\");\nexports.GL_TriangleElements = GL_TriangleElements_1.default;\n\n},{\"./elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"./elements/GL_LineElements\":\"awayjs-renderergl/lib/elements/GL_LineElements\",\"./elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"./elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/errors/AnimationSetError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar AnimationSetError = (function (_super) {\n    __extends(AnimationSetError, _super);\n    function AnimationSetError(message) {\n        _super.call(this, message);\n    }\n    return AnimationSetError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-renderergl/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar AnimationSetError_1 = require(\"./errors/AnimationSetError\");\nexports.AnimationSetError = AnimationSetError_1.default;\n\n},{\"./errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\"}],\"awayjs-renderergl/lib/events/AnimationStateEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nvar AnimationStateEvent = (function (_super) {\n    __extends(AnimationStateEvent, _super);\n    /**\n     * Create a new <code>AnimatonStateEvent</code>\n     *\n     * @param type The event type.\n     * @param animator The animation state object that is the subject of this event.\n     * @param animationNode The animation node inside the animation state from which the event originated.\n     */\n    function AnimationStateEvent(type, animator, animationState, animationNode) {\n        _super.call(this, type);\n        this._animator = animator;\n        this._animationState = animationState;\n        this._animationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateEvent.prototype, \"animator\", {\n        /**\n         * The animator object that is the subject of this event.\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationState\", {\n        /**\n         * The animation state object that is the subject of this event.\n         */\n        get: function () {\n            return this._animationState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationNode\", {\n        /**\n         * The animation node inside the animation state from which the event originated.\n         */\n        get: function () {\n            return this._animationNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    AnimationStateEvent.prototype.clone = function () {\n        return new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n    };\n    /**\n     * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n     */\n    AnimationStateEvent.PLAYBACK_COMPLETE = \"playbackComplete\";\n    AnimationStateEvent.TRANSITION_COMPLETE = \"transitionComplete\";\n    return AnimationStateEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/AnimatorEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animator's state.\n */\nvar AnimatorEvent = (function (_super) {\n    __extends(AnimatorEvent, _super);\n    /**\n     * Create a new <code>AnimatorEvent</code> object.\n     *\n     * @param type The event type.\n     * @param animator The animator object that is the subject of this event.\n     */\n    function AnimatorEvent(type, animator) {\n        _super.call(this, type);\n        this._animator = animator;\n    }\n    Object.defineProperty(AnimatorEvent.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current event object.\n     */\n    AnimatorEvent.prototype.clone = function () {\n        return new AnimatorEvent(this.type, this._animator);\n    };\n    /**\n     * Defines the value of the type property of a start event object.\n     */\n    AnimatorEvent.START = \"animatorStart\";\n    /**\n     * Defines the value of the type property of a stop event object.\n     */\n    AnimatorEvent.STOP = \"animatorStop\";\n    /**\n     * Defines the value of the type property of a cycle complete event object.\n     */\n    AnimatorEvent.CYCLE_COMPLETE = \"animatorCycleComplete\";\n    return AnimatorEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/PassEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar PassEvent = (function (_super) {\n    __extends(PassEvent, _super);\n    function PassEvent(type, pass) {\n        _super.call(this, type);\n        this._pass = pass;\n    }\n    Object.defineProperty(PassEvent.prototype, \"pass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    PassEvent.prototype.clone = function () {\n        return new PassEvent(this.type, this._pass);\n    };\n    /**\n     *\n     */\n    PassEvent.INVALIDATE = \"invalidatePass\";\n    return PassEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/RTTEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RTTEvent = (function (_super) {\n    __extends(RTTEvent, _super);\n    function RTTEvent(type, rttManager) {\n        _super.call(this, type);\n        this._rttManager = rttManager;\n    }\n    Object.defineProperty(RTTEvent.prototype, \"rttManager\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._rttManager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    RTTEvent.prototype.clone = function () {\n        return new RTTEvent(this.type, this._rttManager);\n    };\n    /**\n     *\n     */\n    RTTEvent.RESIZE = \"rttManagerResize\";\n    return RTTEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/ShadingMethodEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ShadingMethodEvent = (function (_super) {\n    __extends(ShadingMethodEvent, _super);\n    function ShadingMethodEvent(type) {\n        _super.call(this, type);\n    }\n    ShadingMethodEvent.SHADER_INVALIDATED = \"ShaderInvalidated\";\n    return ShadingMethodEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShadingMethodEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar AnimationStateEvent_1 = require(\"./events/AnimationStateEvent\");\nexports.AnimationStateEvent = AnimationStateEvent_1.default;\nvar AnimatorEvent_1 = require(\"./events/AnimatorEvent\");\nexports.AnimatorEvent = AnimatorEvent_1.default;\nvar PassEvent_1 = require(\"./events/PassEvent\");\nexports.PassEvent = PassEvent_1.default;\nvar RTTEvent_1 = require(\"./events/RTTEvent\");\nexports.RTTEvent = RTTEvent_1.default;\nvar ShadingMethodEvent_1 = require(\"./events/ShadingMethodEvent\");\nexports.ShadingMethodEvent = ShadingMethodEvent_1.default;\n\n},{\"./events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"./events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"./events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"./events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"./events/ShadingMethodEvent\":\"awayjs-renderergl/lib/events/ShadingMethodEvent\"}],\"awayjs-renderergl/lib/filters/BlurFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DHBlurTask_1 = require(\"../filters/tasks/Filter3DHBlurTask\");\nvar Filter3DVBlurTask_1 = require(\"../filters/tasks/Filter3DVBlurTask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar BlurFilter3D = (function (_super) {\n    __extends(BlurFilter3D, _super);\n    /**\n     * Creates a new BlurFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function BlurFilter3D(blurX, blurY, stepSize) {\n        if (blurX === void 0) { blurX = 3; }\n        if (blurY === void 0) { blurY = 3; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._hBlurTask = new Filter3DHBlurTask_1.default(blurX, stepSize);\n        this._vBlurTask = new Filter3DVBlurTask_1.default(blurY, stepSize);\n        this.addTask(this._hBlurTask);\n        this.addTask(this._vBlurTask);\n    }\n    Object.defineProperty(BlurFilter3D.prototype, \"blurX\", {\n        get: function () {\n            return this._hBlurTask.amount;\n        },\n        set: function (value) {\n            this._hBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"blurY\", {\n        get: function () {\n            return this._vBlurTask.amount;\n        },\n        set: function (value) {\n            this._vBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"stepSize\", {\n        /**\n         * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n         * Higher values provide better performance at the cost of reduces quality.\n         */\n        get: function () {\n            return this._hBlurTask.stepSize;\n        },\n        set: function (value) {\n            this._hBlurTask.stepSize = value;\n            this._vBlurTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BlurFilter3D.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n        _super.prototype.setRenderTargets.call(this, mainTarget, stage);\n    };\n    return BlurFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BlurFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"../filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/filters/CompositeFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DCompositeTask_1 = require(\"../filters/tasks/Filter3DCompositeTask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar CompositeFilter3D = (function (_super) {\n    __extends(CompositeFilter3D, _super);\n    /**\n     * Creates a new CompositeFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function CompositeFilter3D(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._compositeTask = new Filter3DCompositeTask_1.default(blendMode, exposure);\n        this.addTask(this._compositeTask);\n    }\n    Object.defineProperty(CompositeFilter3D.prototype, \"exposure\", {\n        get: function () {\n            return this._compositeTask.exposure;\n        },\n        set: function (value) {\n            this._compositeTask.exposure = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompositeFilter3D.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._compositeTask.overlayTexture;\n        },\n        set: function (value) {\n            this._compositeTask.overlayTexture = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompositeFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompositeFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\"}],\"awayjs-renderergl/lib/filters/FXAAFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DFXAATask_1 = require(\"../filters/tasks/Filter3DFXAATask\");\nvar Filter3DBase_1 = require(\"../filters/Filter3DBase\");\nvar FXAAFilter3D = (function (_super) {\n    __extends(FXAAFilter3D, _super);\n    /**\n     * Creates a new FXAAFilter3D object\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function FXAAFilter3D(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._fxaaTask = new Filter3DFXAATask_1.default(amount, stepSize);\n        this.addTask(this._fxaaTask);\n    }\n    Object.defineProperty(FXAAFilter3D.prototype, \"amount\", {\n        get: function () {\n            return this._fxaaTask.amount;\n        },\n        set: function (value) {\n            this._fxaaTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FXAAFilter3D.prototype, \"stepSize\", {\n        get: function () {\n            return this._fxaaTask.stepSize;\n        },\n        set: function (value) {\n            this._fxaaTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FXAAFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FXAAFilter3D;\n\n},{\"../filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"../filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\"}],\"awayjs-renderergl/lib/filters/Filter3DBase\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DBase = (function () {\n    function Filter3DBase() {\n        this._tasks = new Array();\n    }\n    Object.defineProperty(Filter3DBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.addTask = function (filter) {\n        this._tasks.push(filter);\n        if (this._requireDepthRender == null)\n            this._requireDepthRender = filter.requireDepthRender;\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"tasks\", {\n        get: function () {\n            return this._tasks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.getMainInputTexture = function (stage) {\n        return this._tasks[0].getMainInputTexture(stage);\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            this._textureWidth = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            this._rttManager = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].rttManager = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            this._textureHeight = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // link up the filters correctly with the next filter\n    Filter3DBase.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._tasks[this._tasks.length - 1].target = mainTarget;\n    };\n    Filter3DBase.prototype.dispose = function () {\n        for (var i = 0; i < this._tasks.length; ++i)\n            this._tasks[i].dispose();\n    };\n    Filter3DBase.prototype.update = function (stage, camera) {\n    };\n    return Filter3DBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DBase;\n\n},{}],\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DCompositeTask = (function (_super) {\n    __extends(Filter3DCompositeTask, _super);\n    function Filter3DCompositeTask(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0]);\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._overlayTexture;\n        },\n        set: function (value) {\n            this._overlayTexture = value;\n            this._overlayWidth = this._overlayTexture.width;\n            this._overlayHeight = this._overlayTexture.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"exposure\", {\n        get: function () {\n            return this._data[0];\n        },\n        set: function (value) {\n            this._data[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DCompositeTask.prototype.getFragmentCode = function () {\n        var temp1 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp2, 1);\n        var temp3 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp3, 1);\n        var temp4 = this._registerCache.getFreeFragmentVectorTemp();\n        this._registerCache.addFragmentTempUsages(temp4, 1);\n        var inputTexture = this._registerCache.getFreeTextureReg();\n        this._inputTextureIndex = inputTexture.index;\n        var overlayTexture = this._registerCache.getFreeTextureReg();\n        this._overlayTextureIndex = overlayTexture.index;\n        var exposure = this._registerCache.getFreeFragmentConstant();\n        this._exposureIndex = exposure.index * 4;\n        var scaling = this._registerCache.getFreeFragmentConstant();\n        this._scalingIndex = scaling.index * 4;\n        var code;\n        code = \"tex \" + temp1 + \", \" + this._uvVarying + \", \" + inputTexture + \" <2d,linear,clamp>\\n\" +\n            \"mul \" + temp2 + \", \" + this._uvVarying + \", \" + scaling + \".zw\\n\" +\n            \"add \" + temp2 + \", \" + temp2 + \", \" + scaling + \".xy\\n\" +\n            \"tex \" + temp2 + \", \" + temp2 + \", \" + overlayTexture + \" <2d,linear,clamp>\\n\" +\n            \"mul \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\" +\n            \"add \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\";\n        switch (this._blendMode) {\n            case \"multiply\":\n                code += \"mul oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n                break;\n            case \"add\":\n                code += \"add oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n                break;\n            case \"subtract\":\n                code += \"sub oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n                break;\n            case \"overlay\":\n                code += \"sge \" + temp3 + \", \" + temp1 + \", \" + exposure + \".yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n                code += \"sub \" + temp1 + \", \" + temp3 + \", \" + temp1 + \"\\n\"; // base = (1 : 0 - base)\n                code += \"sub \" + temp2 + \", \" + temp2 + \", \" + temp3 + \"\\n\"; // blend = (blend - 1 : 0)\n                code += \"mul \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\"; // blend = blend * base\n                code += \"sub \" + temp4 + \", \" + temp3 + \", \" + exposure + \".yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n                code += \"div \" + temp2 + \", \" + temp2 + \", \" + temp4 + \"\\n\"; // blend = blend / ( 0.5 : -0.5)\n                code += \"add oc, \" + temp2 + \", \" + temp3 + \"\\n\";\n                break;\n            case \"normal\":\n                // for debugging purposes\n                code += \"mov oc, \" + temp1 + \"\\n\";\n                break;\n            default:\n                throw new Error(\"Unknown blend mode\");\n        }\n        return code;\n    };\n    Filter3DCompositeTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        this._data[4] = -0.5 * (this._scaledTextureWidth - this._overlayWidth) / this._overlayWidth;\n        this._data[5] = -0.5 * (this._scaledTextureHeight - this._overlayHeight) / this._overlayHeight;\n        this._data[6] = this._scaledTextureWidth / this._overlayWidth;\n        this._data[7] = this._scaledTextureHeight / this._overlayHeight;\n        var context = stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n        stage.getAbstraction(this._overlayTexture).activate(this._overlayTextureIndex, false);\n    };\n    Filter3DCompositeTask.prototype.deactivate = function (stage) {\n        stage.context.setTextureAt(1, null);\n    };\n    return Filter3DCompositeTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DCompositeTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DFXAATask = (function (_super) {\n    __extends(Filter3DFXAATask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DFXAATask(amount, stepSize) {\n        if (amount === void 0) { amount = 1; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._data = new Float32Array(20);\n        //luma\n        this._data.set([0.299, 0.587, 0.114, 0], 0); //0.212, 0.716, 0.072\n        //helpers\n        this._data.set([0.25, 0.5, 0.75, 1], 4);\n        //settings (screen x, screen y, ...)\n        this._data.set([1 / 1024, 1 / 1024, -1, 1], 8);\n        //deltas\n        this._data.set([1 / 128, 1 / 8, 8, 0], 12);\n        //deltas\n        this._data.set([1.0 / 3.0 - 0.5, 2.0 / 3.0 - 0.5, 0.0 / 3.0 - 0.5, 3.0 / 3.0 - 0.5], 16);\n        this.amount = amount;\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DFXAATask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DFXAATask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DFXAATask.prototype.getFragmentCode = function () {\n        var lum = \"fc0\"; //\t0.299, 0.587, 0.114\n        var _0 = \"fc0.w\";\n        var _025 = \"fc1.x\";\n        var _05 = \"fc1.y\";\n        var _075 = \"fc1.z\";\n        var _1 = \"fc1.w\";\n        var pix = \"fc2.xy\";\n        var dx = \"fc2.x\"; // 1/1024\n        var dy = \"fc2.y\"; // 1/1024\n        var mOne = \"fc2.z\"; // -1.0\n        var mul = \"fc2.w\"; // 1.0  -- one for now\n        var fxaaReduceMin = \"fc3.x\"; //1/128\n        var fxaaReduceMul = \"fc3.y\"; //1/8\n        var fxaaSpanMax = \"fc3.z\"; //8\n        var delta1 = \"fc4.x\"; //1.0/3.0 - 0.5\n        var delta2 = \"fc4.y\"; //2.0/3.0 - 0.5\n        var delta3 = \"fc4.z\"; //0.0/3.0 - 0.5\n        var delta4 = \"fc4.w\"; //3.0/3.0 - 0.5\n        var uv_in = \"v0\";\n        var uv = \"ft0.xy\";\n        var uvx = \"ft0.x\";\n        var uvy = \"ft0.y\";\n        var TL = \"ft2.x\";\n        var TR = \"ft2.y\";\n        var BL = \"ft2.z\";\n        var BR = \"ft2.w\";\n        var M = \"ft3.x\";\n        var tempf1 = \"ft3.y\";\n        var tempf2 = \"ft3.z\";\n        var tempf3 = \"ft3.w\";\n        var tex = \"ft1\";\n        var dir = \"ft4\";\n        var dirx = \"ft4.x\";\n        var diry = \"ft4.y\";\n        var dirxy = \"ft4.xy\";\n        var dirReduce = \"ft5.x\";\n        var inverseDirAdjustment = \"ft5.y\";\n        var result1 = \"ft6\";\n        var result2 = \"ft7\";\n        var lumaMin = \"ft5.x\";\n        var lumaMax = \"ft5.y\";\n        var sample = \"fs0\";\n        var temp = tex;\n        var tempxy = temp + \".xy\";\n        var code = new Array();\n        //lumas\n        code.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", M, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TL, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uvy, uvy, dy, \"\\n\");\n        code.push(\"add\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uvy, uvy, dy, \"\\n\");\n        code.push(\"sub\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BL, tex, lum, \"\\n\");\n        //dir\n        code.push(\"add\", tempf1, TL, TR, \"\\n\");\n        code.push(\"add\", tempf2, BL, BR, \"\\n\");\n        code.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n        code.push(\"neg\", dirx, dirx, \"\\n\");\n        code.push(\"add\", tempf1, TL, BL, \"\\n\");\n        code.push(\"add\", tempf2, TR, BR, \"\\n\");\n        code.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n        code.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n        code.push(\"abs\", tempf1, dirx, \"\\n\");\n        code.push(\"abs\", tempf2, diry, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n        code.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n        code.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n        code.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", diry, tempf1, dy, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result1, result1, tex, \"\\n\");\n        code.push(\"mul\", result1, result1, _05, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"mul\", result2, result2, _025, \"\\n\");\n        code.push(\"mul\", tex, result1, _05, \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"min\", tempf1, BL, BR, \"\\n\");\n        code.push(\"min\", tempf2, TL, TR, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n        code.push(\"max\", tempf1, BL, BR, \"\\n\");\n        code.push(\"max\", tempf2, TL, TR, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n        code.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n        code.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n        code.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n        code.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n        code.push(\"mul\", result1, result1, tempf2, \"\\n\");\n        code.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n        code.push(\"mul\", result2, result2, tempf2, \"\\n\");\n        code.push(\"add\", \"oc\", result1, result2, \"\\n\");\n        //this._data[2] = 1/numSamples;\n        return code.join(\" \");\n    };\n    Filter3DFXAATask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n    };\n    Filter3DFXAATask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DFXAATask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        if (this._rttManager) {\n            this._data[8] = 1 / this._textureWidth;\n            this._data[9] = 1 / this._textureHeight;\n        }\n    };\n    Filter3DFXAATask.prototype.calculateStepSize = function () {\n        this._realStepSize = 1; //this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    //TODO - remove blur variables and create setters/getters for FXAA\n    Filter3DFXAATask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DFXAATask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DFXAATask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DHBlurTask = (function (_super) {\n    __extends(Filter3DHBlurTask, _super);\n    /**\n     * Creates a new Filter3DHDepthOfFFieldTask\n     * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DHBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n            this.calculateStepSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DHBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.x, v0.x, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.x, ft0.x, fc0.y\\n\" +\n                \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DHBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n    };\n    Filter3DHBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DHBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invW = 1 / this._textureWidth;\n        this._data[0] = this._amount * .5 * invW;\n        this._data[1] = this._realStepSize * invW;\n    };\n    Filter3DHBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DHBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DHBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DHBlurTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar ShaderRegisterCache_1 = require(\"../../shaders/ShaderRegisterCache\");\nvar Filter3DTaskBase = (function () {\n    function Filter3DTaskBase(requireDepthRender) {\n        if (requireDepthRender === void 0) { requireDepthRender = false; }\n        this._scaledTextureWidth = -1;\n        this._scaledTextureHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._textureDimensionsInvalid = true;\n        this._program3DInvalid = true;\n        this._textureScale = 0;\n        this._requireDepthRender = requireDepthRender;\n        this._registerCache = new ShaderRegisterCache_1.default(\"baseline\");\n    }\n    ;\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureScale\", {\n        /**\n         * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n         */\n        get: function () {\n            return this._textureScale;\n        },\n        set: function (value) {\n            if (this._textureScale == value)\n                return;\n            this._textureScale = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"target\", {\n        get: function () {\n            return this._target;\n        },\n        set: function (value) {\n            this._target = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            if (this._rttManager == value)\n                return;\n            this._rttManager = value;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            if (this._textureWidth == value)\n                return;\n            this._textureWidth = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            if (this._textureHeight == value)\n                return;\n            this._textureHeight = value;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DTaskBase.prototype.getMainInputTexture = function (stage) {\n        if (this._textureDimensionsInvalid)\n            this.updateTextures(stage);\n        return this._mainInputTexture;\n    };\n    Filter3DTaskBase.prototype.dispose = function () {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        if (this._program3D)\n            this._program3D.dispose();\n    };\n    Filter3DTaskBase.prototype.invalidateProgram = function () {\n        this._program3DInvalid = true;\n    };\n    Filter3DTaskBase.prototype.updateProgram = function (stage) {\n        if (this._program3D)\n            this._program3D.dispose();\n        this._program3D = stage.context.createProgram();\n        this._registerCache.reset();\n        var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n        var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n        this._program3D.upload(vertexByteCode, fragmentByteCode);\n        this._program3DInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getVertexCode = function () {\n        var position = this._registerCache.getFreeVertexAttribute();\n        this._positionIndex = position.index;\n        var uv = this._registerCache.getFreeVertexAttribute();\n        this._uvIndex = uv.index;\n        this._uvVarying = this._registerCache.getFreeVarying();\n        var code;\n        code = \"mov op, \" + position + \"\\n\" +\n            \"mov \" + this._uvVarying + \", \" + uv + \"\\n\";\n        return code;\n    };\n    Filter3DTaskBase.prototype.getFragmentCode = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Filter3DTaskBase.prototype.updateTextures = function (stage) {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        this._mainInputTexture = new Image2D_1.default(this._scaledTextureWidth, this._scaledTextureHeight);\n        this._textureDimensionsInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getProgram = function (stage) {\n        if (this._program3DInvalid)\n            this.updateProgram(stage);\n        return this._program3D;\n    };\n    Filter3DTaskBase.prototype.activate = function (stage, camera, depthTexture) {\n    };\n    Filter3DTaskBase.prototype.deactivate = function (stage) {\n    };\n    Object.defineProperty(Filter3DTaskBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Filter3DTaskBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DTaskBase;\n\n},{\"../../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"../../filters/tasks/Filter3DTaskBase\");\nvar Filter3DVBlurTask = (function (_super) {\n    __extends(Filter3DVBlurTask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DVBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DVBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.y, v0.y, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.y, ft0.y, fc0.y\\n\";\n            code += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DVBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, this._data);\n    };\n    Filter3DVBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DVBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invH = 1 / this._textureHeight;\n        this._data[0] = this._amount * .5 * invH;\n        this._data[1] = this._realStepSize * invH;\n    };\n    Filter3DVBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DVBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DVBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DVBlurTask;\n\n},{\"../../filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DCompositeTask_1 = require(\"./filters/tasks/Filter3DCompositeTask\");\nexports.Filter3DCompositeTask = Filter3DCompositeTask_1.default;\nvar Filter3DFXAATask_1 = require(\"./filters/tasks/Filter3DFXAATask\");\nexports.Filter3DFXAATask = Filter3DFXAATask_1.default;\nvar Filter3DHBlurTask_1 = require(\"./filters/tasks/Filter3DHBlurTask\");\nexports.Filter3DHBlurTask = Filter3DHBlurTask_1.default;\nvar Filter3DTaskBase_1 = require(\"./filters/tasks/Filter3DTaskBase\");\nexports.Filter3DTaskBase = Filter3DTaskBase_1.default;\nvar Filter3DVBlurTask_1 = require(\"./filters/tasks/Filter3DVBlurTask\");\nexports.Filter3DVBlurTask = Filter3DVBlurTask_1.default;\nvar BlurFilter3D_1 = require(\"./filters/BlurFilter3D\");\nexports.BlurFilter3D = BlurFilter3D_1.default;\nvar CompositeFilter3D_1 = require(\"./filters/CompositeFilter3D\");\nexports.CompositeFilter3D = CompositeFilter3D_1.default;\nvar Filter3DBase_1 = require(\"./filters/Filter3DBase\");\nexports.Filter3DBase = Filter3DBase_1.default;\nvar FXAAFilter3D_1 = require(\"./filters/FXAAFilter3D\");\nexports.FXAAFilter3D = FXAAFilter3D_1.default;\n\n},{\"./filters/BlurFilter3D\":\"awayjs-renderergl/lib/filters/BlurFilter3D\",\"./filters/CompositeFilter3D\":\"awayjs-renderergl/lib/filters/CompositeFilter3D\",\"./filters/FXAAFilter3D\":\"awayjs-renderergl/lib/filters/FXAAFilter3D\",\"./filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"./filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\",\"./filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\",\"./filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"./filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"./filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/managers/RTTBufferManager\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar RTTEvent_1 = require(\"../events/RTTEvent\");\nvar RTTBufferManager = (function (_super) {\n    __extends(RTTBufferManager, _super);\n    function RTTBufferManager(stage) {\n        _super.call(this);\n        this._viewWidth = -1;\n        this._viewHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._buffersInvalid = true;\n        this._renderToTextureRect = new Rectangle_1.default();\n        this._stage = stage;\n    }\n    RTTBufferManager.getInstance = function (stage) {\n        if (!stage)\n            throw new Error(\"stage key cannot be null!\");\n        if (RTTBufferManager._instances == null)\n            RTTBufferManager._instances = new Array();\n        var rttBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n        if (rttBufferManager == null) {\n            rttBufferManager = new RTTBufferManager(stage);\n            var vo = new RTTBufferManagerVO();\n            vo.stage3d = stage;\n            vo.rttbfm = rttBufferManager;\n            RTTBufferManager._instances.push(vo);\n        }\n        return rttBufferManager;\n    };\n    RTTBufferManager.getRTTBufferManagerFromStage = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage)\n                return r.rttbfm;\n        }\n        return null;\n    };\n    RTTBufferManager.deleteRTTBufferManager = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage) {\n                RTTBufferManager._instances.splice(c, 1);\n                return;\n            }\n        }\n    };\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioX\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioY\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewWidth\", {\n        get: function () {\n            return this._viewWidth;\n        },\n        set: function (value) {\n            if (value == this._viewWidth)\n                return;\n            this._viewWidth = value;\n            this._buffersInvalid = true;\n            this._textureWidth = ImageUtils_1.default.getBestPowerOf2(this._viewWidth);\n            if (this._textureWidth > this._viewWidth) {\n                this._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth) * .5);\n                this._renderToTextureRect.width = this._viewWidth;\n            }\n            else {\n                this._renderToTextureRect.x = 0;\n                this._renderToTextureRect.width = this._textureWidth;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewHeight\", {\n        get: function () {\n            return this._viewHeight;\n        },\n        set: function (value) {\n            if (value == this._viewHeight)\n                return;\n            this._viewHeight = value;\n            this._buffersInvalid = true;\n            this._textureHeight = ImageUtils_1.default.getBestPowerOf2(this._viewHeight);\n            if (this._textureHeight > this._viewHeight) {\n                this._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight) * .5);\n                this._renderToTextureRect.height = this._viewHeight;\n            }\n            else {\n                this._renderToTextureRect.y = 0;\n                this._renderToTextureRect.height = this._textureHeight;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToScreenVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToScreenVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"indexBuffer\", {\n        get: function () {\n            return this._indexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureRect\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RTTBufferManager.prototype.dispose = function () {\n        RTTBufferManager.deleteRTTBufferManager(this._stage);\n        if (this._indexBuffer) {\n            this._indexBuffer.dispose();\n            this._renderToScreenVertexBuffer.dispose();\n            this._renderToTextureVertexBuffer.dispose();\n            this._renderToScreenVertexBuffer = null;\n            this._renderToTextureVertexBuffer = null;\n            this._indexBuffer = null;\n        }\n    };\n    // todo: place all this in a separate model, since it's used all over the place\n    // maybe it even has a place in the core (together with screenRect etc)?\n    // needs to be stored per view of course\n    RTTBufferManager.prototype.updateRTTBuffers = function () {\n        var context = this._stage.context;\n        var textureVerts;\n        var screenVerts;\n        var x;\n        var y;\n        if (this._renderToTextureVertexBuffer == null)\n            this._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n        if (this._renderToScreenVertexBuffer == null)\n            this._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n        if (!this._indexBuffer) {\n            this._indexBuffer = context.createIndexBuffer(6);\n            this._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n        }\n        this._textureRatioX = x = Math.min(this._viewWidth / this._textureWidth, 1);\n        this._textureRatioY = y = Math.min(this._viewHeight / this._textureHeight, 1);\n        var u1 = (1 - x) * .5;\n        var u2 = (x + 1) * .5;\n        var v1 = (1 - y) * .5;\n        var v2 = (y + 1) * .5;\n        // last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n        textureVerts = [-x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3];\n        screenVerts = [-1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3];\n        this._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n        this._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n        this._buffersInvalid = false;\n    };\n    return RTTBufferManager;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTBufferManager;\nvar RTTBufferManagerVO = (function () {\n    function RTTBufferManagerVO() {\n    }\n    return RTTBufferManagerVO;\n}());\n\n},{\"../events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined}],\"awayjs-renderergl/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar RTTBufferManager_1 = require(\"./managers/RTTBufferManager\");\nexports.RTTBufferManager = RTTBufferManager_1.default;\n\n},{\"./managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\"}],\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.RenderableListItem\n */\nvar GL_Billboard = (function (_super) {\n    __extends(GL_Billboard, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param billboard\n     */\n    function GL_Billboard(billboard, renderer) {\n        _super.call(this, billboard, renderer);\n        this._billboard = billboard;\n    }\n    GL_Billboard.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._billboard = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     */\n    GL_Billboard.prototype._pGetElements = function () {\n        var texture = this._billboard.material.getTextureAt(0);\n        var id = -1;\n        if (texture)\n            id = ((this.renderable.style ? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager_1.default.getDefaultSampler()).id;\n        this._id = id;\n        var elements = GL_Billboard._samplerElements[id];\n        var width = this._billboard.billboardWidth;\n        var height = this._billboard.billboardHeight;\n        var billboardRect = this._billboard.billboardRect;\n        if (!elements) {\n            elements = GL_Billboard._samplerElements[id] = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(Array(0, 1, 2, 0, 2, 3));\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n            elements.setNormals(Array(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n            elements.setTangents(Array(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n            elements.setUVs(Array(0, 0, 1, 0, 1, 1, 0, 1));\n        }\n        else {\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n        }\n        return this._stage.getAbstraction(elements);\n    };\n    GL_Billboard.prototype._pGetSurface = function () {\n        return this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this._billboard.material || DefaultMaterialManager_1.default.getDefaultMaterial(this.renderable));\n    };\n    GL_Billboard._samplerElements = new Object();\n    return GL_Billboard;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Billboard;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nvar GL_GraphicRenderable = (function (_super) {\n    __extends(GL_GraphicRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param indexOffset\n     */\n    function GL_GraphicRenderable(graphic, renderer) {\n        _super.call(this, graphic, renderer);\n        this.graphic = graphic;\n    }\n    GL_GraphicRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.graphic = null;\n    };\n    /**\n     *\n     * @returns {ElementsBase}\n     * @protected\n     */\n    GL_GraphicRenderable.prototype._pGetElements = function () {\n        this._offset = this.graphic.offset;\n        this._count = this.graphic.count;\n        return this._stage.getAbstraction((this.renderable.animator) ? this.renderable.animator.getRenderableElements(this, this.graphic.elements) : this.graphic.elements);\n    };\n    GL_GraphicRenderable.prototype._pGetSurface = function () {\n        return this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this.graphic.material || DefaultMaterialManager_1.default.getDefaultMaterial(this.renderable));\n    };\n    return GL_GraphicRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_GraphicRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nvar GL_LineSegmentRenderable = (function (_super) {\n    __extends(GL_LineSegmentRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param dataOffset\n     */\n    function GL_LineSegmentRenderable(lineSegment, renderer) {\n        _super.call(this, lineSegment, renderer);\n        this._lineSegment = lineSegment;\n    }\n    GL_LineSegmentRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineSegment = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {base.LineElements}\n     * @protected\n     */\n    GL_LineSegmentRenderable.prototype._pGetElements = function () {\n        var elements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements_1.default());\n        var start = this._lineSegment.startPostion;\n        var end = this._lineSegment.endPosition;\n        var positions = new Float32Array(6);\n        var thickness = new Float32Array(1);\n        positions[0] = start.x;\n        positions[1] = start.y;\n        positions[2] = start.z;\n        positions[3] = end.x;\n        positions[4] = end.y;\n        positions[5] = end.z;\n        thickness[0] = this._lineSegment.thickness;\n        elements.setPositions(positions);\n        elements.setThickness(thickness);\n        return this._stage.getAbstraction(elements);\n    };\n    GL_LineSegmentRenderable.prototype._pGetSurface = function () {\n        return this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this._lineSegment.material || DefaultMaterialManager_1.default.getDefaultMaterial(this.renderable));\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @private\n     */\n    GL_LineSegmentRenderable.prototype._pGetOverflowRenderable = function (indexOffset) {\n        return new GL_LineSegmentRenderable(this.renderable, this._renderer);\n    };\n    GL_LineSegmentRenderable._lineGraphics = new Object();\n    return GL_LineSegmentRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineSegmentRenderable;\n\n},{\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-display/lib/graphics/LineElements\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\n/**\n * @class RenderableListItem\n */\nvar GL_RenderableBase = (function (_super) {\n    __extends(GL_RenderableBase, _super);\n    /**\n     *\n     * @param renderable\n     * @param sourceEntity\n     * @param surface\n     * @param renderer\n     */\n    function GL_RenderableBase(renderable, renderer) {\n        var _this = this;\n        _super.call(this, renderable, renderer);\n        this._count = 0;\n        this._offset = 0;\n        this._elementsDirty = true;\n        this._surfaceDirty = true;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onInvalidateSurfaceDelegate = function (event) { return _this._onInvalidateSurface(event); };\n        this._onInvalidateElementsDelegate = function (event) { return _this.onInvalidateElements(event); };\n        //store a reference to the pool for later disposal\n        this._renderer = renderer;\n        this._stage = renderer.stage;\n        this.renderable = renderable;\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_SURFACE, this._onInvalidateSurfaceDelegate);\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n    }\n    Object.defineProperty(GL_RenderableBase.prototype, \"elementsGL\", {\n        get: function () {\n            if (this._elementsDirty)\n                this._updateElements();\n            return this._elementsGL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_RenderableBase.prototype, \"surfaceGL\", {\n        get: function () {\n            if (this._surfaceDirty)\n                this._updateSurface();\n            return this._surfaceGL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_RenderableBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.next = null;\n        this.masksConfig = null;\n        this.renderSceneTransform = null;\n        this._renderer = null;\n        this._stage = null;\n        this.sourceEntity = null;\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_SURFACE, this._onInvalidateSurfaceDelegate);\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n        this.renderable = null;\n        this._surfaceGL.usages--;\n        if (!this._surfaceGL.usages)\n            this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n        this._surfaceGL = null;\n        this._elementsGL = null;\n    };\n    GL_RenderableBase.prototype.onInvalidateElements = function (event) {\n        this._elementsDirty = true;\n    };\n    GL_RenderableBase.prototype._onInvalidateSurface = function (event) {\n        this._surfaceDirty = true;\n    };\n    GL_RenderableBase.prototype._pGetElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    GL_RenderableBase.prototype._pGetSurface = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Renders an object to the current render target.\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iRender = function (pass, camera, viewProjection) {\n        this._setRenderState(pass, camera, viewProjection);\n        this._elementsGL.draw(this, pass.shader, camera, viewProjection, this._count, this._offset);\n    };\n    GL_RenderableBase.prototype._setRenderState = function (pass, camera, viewProjection) {\n        if (this._elementsDirty)\n            this._updateElements();\n        pass._setRenderState(this, camera, viewProjection);\n        if (pass.shader.activeElements != this._elementsGL) {\n            pass.shader.activeElements = this._elementsGL;\n            this._elementsGL._setRenderState(this, pass.shader, camera, viewProjection);\n        }\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._updateElements = function () {\n        this._elementsGL = this._pGetElements();\n        this._elementsDirty = false;\n    };\n    GL_RenderableBase.prototype._updateSurface = function () {\n        var surfaceGL = this._pGetSurface();\n        if (this._surfaceGL != surfaceGL) {\n            if (this._surfaceGL) {\n                this._surfaceGL.usages--;\n                //dispose current surfaceGL object\n                if (!this._surfaceGL.usages)\n                    this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n            }\n            this._surfaceGL = surfaceGL;\n            this._surfaceGL.usages++;\n        }\n        //create a cache of image & sampler objects for the renderable\n        var numImages = surfaceGL.numImages;\n        this.images.length = numImages;\n        this.samplers.length = numImages;\n        this.uvMatrix = this.renderable.style ? this.renderable.style.uvMatrix : this._surfaceGL.surface.style ? this._surfaceGL.surface.style.uvMatrix : null;\n        var numTextures = this._surfaceGL.surface.getNumTextures();\n        var texture;\n        var numImages;\n        var image;\n        var sampler;\n        var index;\n        for (var i = 0; i < numTextures; i++) {\n            texture = this._surfaceGL.surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            for (var j = 0; j < numImages; j++) {\n                index = surfaceGL.getImageIndex(texture, j);\n                image = this.renderable.style ? this.renderable.style.getImageAt(texture, j) : null;\n                this.images[index] = image ? this._stage.getAbstraction(image) : null;\n                sampler = this.renderable.style ? this.renderable.style.getSamplerAt(texture, j) : null;\n                this.samplers[index] = sampler ? this._stage.getAbstraction(sampler) : null;\n            }\n        }\n        this._surfaceDirty = false;\n    };\n    return GL_RenderableBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_RenderableBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/RenderableEvent\":undefined}],\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar GL_RenderableBase_1 = require(\"../renderables/GL_RenderableBase\");\nvar GL_SkyboxElements_1 = require(\"../elements/GL_SkyboxElements\");\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nvar GL_SkyboxRenderable = (function (_super) {\n    __extends(GL_SkyboxRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param skybox\n     */\n    function GL_SkyboxRenderable(skybox, renderer) {\n        _super.call(this, skybox, renderer);\n        this._skybox = skybox;\n    }\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     * @private\n     */\n    GL_SkyboxRenderable.prototype._pGetElements = function () {\n        var elementsGL = GL_SkyboxRenderable._elementsGL;\n        if (!elementsGL) {\n            var elements = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(Array(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n            elements.setPositions(Array(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n            elementsGL = GL_SkyboxRenderable._elementsGL = new GL_SkyboxElements_1.default(elements, this._stage);\n        }\n        return elementsGL;\n    };\n    GL_SkyboxRenderable.prototype._pGetSurface = function () {\n        return this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this._skybox);\n    };\n    GL_SkyboxRenderable._iIncludeDependencies = function (shader) {\n    };\n    return GL_SkyboxRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxRenderable;\n\n},{\"../elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"../renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/renderables\":[function(require,module,exports){\n\"use strict\";\nvar GL_BillboardRenderable_1 = require(\"./renderables/GL_BillboardRenderable\");\nexports.GL_BillboardRenderable = GL_BillboardRenderable_1.default;\nvar GL_GraphicRenderable_1 = require(\"./renderables/GL_GraphicRenderable\");\nexports.GL_GraphicRenderable = GL_GraphicRenderable_1.default;\nvar GL_LineSegmentRenderable_1 = require(\"./renderables/GL_LineSegmentRenderable\");\nexports.GL_LineSegmentRenderable = GL_LineSegmentRenderable_1.default;\nvar GL_RenderableBase_1 = require(\"./renderables/GL_RenderableBase\");\nexports.GL_RenderableBase = GL_RenderableBase_1.default;\nvar GL_SkyboxRenderable_1 = require(\"./renderables/GL_SkyboxRenderable\");\nexports.GL_SkyboxRenderable = GL_SkyboxRenderable_1.default;\n\n},{\"./renderables/GL_BillboardRenderable\":\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\",\"./renderables/GL_GraphicRenderable\":\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\",\"./renderables/GL_LineSegmentRenderable\":\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\",\"./renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"./renderables/GL_SkyboxRenderable\":\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\"}],\"awayjs-renderergl/lib/shaders/LightingShader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LightSources_1 = require(\"awayjs-display/lib/materials/LightSources\");\nvar ContextGLProfile_1 = require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\nvar LightingCompiler_1 = require(\"../shaders/compilers/LightingCompiler\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar LightingShader = (function (_super) {\n    __extends(LightingShader, _super);\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function LightingShader(elementsClass, lightingPass, stage) {\n        _super.call(this, elementsClass, lightingPass, stage);\n        this._includeCasters = true;\n        this._lightingPass = lightingPass;\n    }\n    LightingShader.prototype._iIncludeDependencies = function () {\n        this.numPointLights = this._lightingPass.numPointLights;\n        this.numDirectionalLights = this._lightingPass.numDirectionalLights;\n        this.numLightProbes = this._lightingPass.numLightProbes;\n        var numAllLights = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n        var numLightProbes = this._lightingPass.numLightProbes;\n        var diffuseLightSources = this._lightingPass._iUsesDiffuse(this) ? this._lightingPass.diffuseLightSources : 0x00;\n        var specularLightSources = this._lightingPass._iUsesSpecular(this) ? this._lightingPass.specularLightSources : 0x00;\n        var combinedLightSources = diffuseLightSources | specularLightSources;\n        this.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile_1.default.BASELINE_CONSTRAINED;\n        this.usesCommonData = this.usesLightFallOff;\n        this.numLights = numAllLights + numLightProbes;\n        this.usesLights = numAllLights > 0 && (combinedLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesShadows = this._lightingPass._iUsesShadows(this);\n        //IMPORTANT this must occur after shader lighting initialisation above\n        _super.prototype._iIncludeDependencies.call(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param materialPassVO\n     * @returns {away.materials.LightingCompiler}\n     */\n    LightingShader.prototype.createCompiler = function (elementsClass, pass) {\n        return new LightingCompiler_1.default(elementsClass, pass, this);\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    LightingShader.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        if (this._lightingPass.lightPicker)\n            this._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n        if (this.usesLights)\n            this.updateLights();\n        if (this.usesProbes)\n            this.updateProbes();\n    };\n    /**\n     * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateLights = function () {\n        var dirLight;\n        var pointLight;\n        var i = 0;\n        var k = 0;\n        var len;\n        var dirPos;\n        var total = 0;\n        var numLightTypes = this.usesShadows ? 2 : 1;\n        var l;\n        var offset;\n        this.ambientR = this.ambientG = this.ambientB = 0;\n        l = this.lightVertexConstantIndex;\n        k = this.lightFragmentConstantIndex;\n        var cast = 0;\n        var dirLights = this._lightingPass.lightPicker.directionalLights;\n        offset = this._lightingPass.directionalLightsOffset;\n        len = this._lightingPass.lightPicker.directionalLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                dirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n            len = dirLights.length;\n            if (len > this.numDirectionalLights)\n                len = this.numDirectionalLights;\n            for (i = 0; i < len; ++i) {\n                dirLight = dirLights[offset + i];\n                dirPos = dirLight.sceneDirection;\n                this.ambientR += dirLight._iAmbientR;\n                this.ambientG += dirLight._iAmbientG;\n                this.ambientB += dirLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    var x = -dirPos.x;\n                    var y = -dirPos.y;\n                    var z = -dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = -dirPos.x;\n                    this.fragmentConstantData[k++] = -dirPos.y;\n                    this.fragmentConstantData[k++] = -dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = dirLight._iDiffuseR;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseG;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseB;\n                this.fragmentConstantData[k++] = 1;\n                this.fragmentConstantData[k++] = dirLight._iSpecularR;\n                this.fragmentConstantData[k++] = dirLight._iSpecularG;\n                this.fragmentConstantData[k++] = dirLight._iSpecularB;\n                this.fragmentConstantData[k++] = 1;\n                if (++total == this.numDirectionalLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numDirectionalLights > total) {\n            i = k + (this.numDirectionalLights - total) * 12;\n            while (k < i)\n                this.fragmentConstantData[k++] = 0;\n        }\n        total = 0;\n        var pointLights = this._lightingPass.lightPicker.pointLights;\n        offset = this._lightingPass.pointLightsOffset;\n        len = this._lightingPass.lightPicker.pointLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        else {\n            cast = 0;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                pointLights = this._lightingPass.lightPicker.castingPointLights;\n            len = pointLights.length;\n            for (i = 0; i < len; ++i) {\n                pointLight = pointLights[offset + i];\n                dirPos = pointLight.scenePosition;\n                this.ambientR += pointLight._iAmbientR;\n                this.ambientG += pointLight._iAmbientG;\n                this.ambientB += pointLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    x = dirPos.x;\n                    y = dirPos.y;\n                    z = dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n                    this.vertexConstantData[l++] = 1;\n                }\n                else if (!this.usesGlobalPosFragment) {\n                    this.vertexConstantData[l++] = dirPos.x;\n                    this.vertexConstantData[l++] = dirPos.y;\n                    this.vertexConstantData[l++] = dirPos.z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = dirPos.x;\n                    this.fragmentConstantData[k++] = dirPos.y;\n                    this.fragmentConstantData[k++] = dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = pointLight._iDiffuseR;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseG;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseB;\n                var radius = pointLight._pRadius;\n                this.fragmentConstantData[k++] = radius * radius;\n                this.fragmentConstantData[k++] = pointLight._iSpecularR;\n                this.fragmentConstantData[k++] = pointLight._iSpecularG;\n                this.fragmentConstantData[k++] = pointLight._iSpecularB;\n                this.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n                if (++total == this.numPointLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numPointLights > total) {\n            i = k + (total - this.numPointLights) * 12;\n            for (; k < i; ++k)\n                this.fragmentConstantData[k] = 0;\n        }\n    };\n    /**\n     * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateProbes = function () {\n        var probe;\n        var lightProbes = this._lightingPass.lightPicker.lightProbes;\n        var weights = this._lightingPass.lightPicker.lightProbeWeights;\n        var len = lightProbes.length - this._lightingPass.lightProbesOffset;\n        var addDiff = this.usesProbesForDiffuse;\n        var addSpec = this.usesProbesForSpecular;\n        if (!(addDiff || addSpec))\n            return;\n        if (len > this.numLightProbes)\n            len = this.numLightProbes;\n        for (var i = 0; i < len; ++i) {\n            probe = lightProbes[this._lightingPass.lightProbesOffset + i];\n            if (addDiff)\n                this._stage.getAbstraction(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n            if (addSpec)\n                this._stage.getAbstraction(probe.specularMap).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n        }\n        for (i = 0; i < len; ++i)\n            this.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n    };\n    return LightingShader;\n}(ShaderBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingShader;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\",\"awayjs-display/lib/materials/LightSources\":undefined,\"awayjs-stagegl/lib/base/ContextGLProfile\":undefined}],\"awayjs-renderergl/lib/shaders/RegisterPool\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterElement_1 = require(\"../shaders/ShaderRegisterElement\");\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nvar RegisterPool = (function () {\n    /**\n     * Creates a new RegisterPool object.\n     * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n     * @param regCount The amount of available registers of this type.\n     * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n     */\n    function RegisterPool(regName, regCount, persistent) {\n        if (persistent === void 0) { persistent = true; }\n        this._regName = regName;\n        this._regCount = regCount;\n        this._persistent = persistent;\n        this.initRegisters(regName, regCount);\n    }\n    /**\n     * Retrieve an entire vector register that's still available.\n     */\n    RegisterPool.prototype.requestFreeVectorReg = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (!this.isRegisterUsed(i)) {\n                if (this._persistent)\n                    this._usedVectorCount[i]++;\n                return this._vectorRegisters[i];\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Retrieve a single vector component that's still available.\n     */\n    RegisterPool.prototype.requestFreeRegComponent = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (this._usedVectorCount[i] > 0)\n                continue;\n            for (var j = 0; j < 4; ++j) {\n                if (this._usedSingleCount[j][i] == 0) {\n                    if (this._persistent)\n                        this._usedSingleCount[j][i]++;\n                    return this._registerComponents[j][i];\n                }\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    RegisterPool.prototype.addUsage = function (register, usageCount) {\n        if (register._component > -1)\n            this._usedSingleCount[register._component][register.index] += usageCount;\n        else\n            this._usedVectorCount[register.index] += usageCount;\n    };\n    /**\n     * Removes a usage from a register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    RegisterPool.prototype.removeUsage = function (register) {\n        if (register._component > -1) {\n            if (--this._usedSingleCount[register._component][register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n        else {\n            if (--this._usedVectorCount[register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n    };\n    /**\n     * Disposes any resources used by the current RegisterPool object.\n     */\n    RegisterPool.prototype.dispose = function () {\n        this._vectorRegisters = null;\n        this._registerComponents = null;\n        this._usedSingleCount = null;\n        this._usedVectorCount = null;\n    };\n    /**\n     * Indicates whether or not any registers are in use.\n     */\n    RegisterPool.prototype.hasRegisteredRegs = function () {\n        for (var i = 0; i < this._regCount; ++i)\n            if (this.isRegisterUsed(i))\n                return true;\n        return false;\n    };\n    /**\n     * Initializes all registers.\n     */\n    RegisterPool.prototype.initRegisters = function (regName, regCount) {\n        var hash = RegisterPool._initPool(regName, regCount);\n        this._vectorRegisters = RegisterPool._regPool[hash];\n        this._registerComponents = RegisterPool._regCompsPool[hash];\n        this._usedVectorCount = this._initArray(Array(regCount), 0);\n        this._usedSingleCount = new Array(4);\n        this._usedSingleCount[0] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[1] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[2] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[3] = this._initArray(new Array(regCount), 0);\n    };\n    RegisterPool._initPool = function (regName, regCount) {\n        var hash = regName + regCount;\n        if (RegisterPool._regPool[hash] != undefined)\n            return hash;\n        var vectorRegisters = new Array(regCount);\n        RegisterPool._regPool[hash] = vectorRegisters;\n        var registerComponents = [\n            [],\n            [],\n            [],\n            []\n        ];\n        RegisterPool._regCompsPool[hash] = registerComponents;\n        for (var i = 0; i < regCount; ++i) {\n            vectorRegisters[i] = new ShaderRegisterElement_1.default(regName, i);\n            for (var j = 0; j < 4; ++j)\n                registerComponents[j][i] = new ShaderRegisterElement_1.default(regName, i, j);\n        }\n        return hash;\n    };\n    /**\n     * Check if the temp register is either used for single or vector use\n     */\n    RegisterPool.prototype.isRegisterUsed = function (index) {\n        if (this._usedVectorCount[index] > 0)\n            return true;\n        for (var i = 0; i < 4; ++i)\n            if (this._usedSingleCount[i][index] > 0)\n                return true;\n        return false;\n    };\n    RegisterPool.prototype._initArray = function (a, val) {\n        var l = a.length;\n        for (var c = 0; c < l; c++)\n            a[c] = val;\n        return a;\n    };\n    RegisterPool._regPool = new Object();\n    RegisterPool._regCompsPool = new Object();\n    return RegisterPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RegisterPool;\n\n},{\"../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderBase\":[function(require,module,exports){\n\"use strict\";\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLTriangleFace_1 = require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nvar CompilerBase_1 = require(\"../shaders/compilers/CompilerBase\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar ShaderBase = (function () {\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function ShaderBase(elementsClass, pass, stage) {\n        this._abstractionPool = new Object();\n        this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n        this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n        this._invalidProgram = true;\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        this.usesBlending = false;\n        this.useImageRect = false;\n        this.usesCurves = false;\n        /**\n         * The depth compare mode used to render the renderables using this material.\n         *\n         * @see away.stagegl.ContextGLCompareMode\n         */\n        this.depthCompareMode = ContextGLCompareMode_1.default.LESS_EQUAL;\n        /**\n         * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n         */\n        this.writeDepth = true;\n        this._defaultCulling = ContextGLTriangleFace_1.default.BACK;\n        this._pInverseSceneMatrix = new Float32Array(16);\n        //set ambient values to default\n        this.ambientR = 0xFF;\n        this.ambientG = 0xFF;\n        this.ambientB = 0xFF;\n        /**\n         * Indicates whether there are any dependencies on the world-space position vector.\n         */\n        this.usesGlobalPosFragment = false;\n        /**\n         * Indicates whether there are any dependencies on the local position vector.\n         */\n        this.usesPositionFragment = false;\n        /**\n         *\n         */\n        this.imageIndices = new Array();\n        this._elementsClass = elementsClass;\n        this._pass = pass;\n        this._stage = stage;\n        this.profile = this._stage.profile;\n    }\n    Object.defineProperty(ShaderBase.prototype, \"programData\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._programData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"usesAnimation\", {\n        get: function () {\n            return this._usesAnimation;\n        },\n        set: function (value) {\n            if (this._usesAnimation == value)\n                return;\n            this._usesAnimation = value;\n            this.invalidateProgram();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedVertexConstants\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedVertexConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedFragmentConstants\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedFragmentConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedStreams\", {\n        /**\n         * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n         */\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedStreams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderBase.prototype, \"numUsedTextures\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._numUsedTextures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderBase.prototype.getAbstraction = function (texture) {\n        return (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new ShaderBase._abstractionClassPool[texture.assetType](texture, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    ShaderBase.prototype.clearAbstraction = function (texture) {\n        this._abstractionPool[texture.id] = null;\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ShaderBase.registerAbstraction = function (gl_assetClass, assetClass) {\n        ShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n    };\n    ShaderBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._pass.getImageIndex(texture, index);\n    };\n    ShaderBase.prototype._iIncludeDependencies = function () {\n        this._pass._iIncludeDependencies(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param elementsClass\n     * @param pass\n     * @param stage\n     * @returns {CompilerBase}\n     */\n    ShaderBase.prototype.createCompiler = function (elementsClass, pass) {\n        return new CompilerBase_1.default(elementsClass, pass, this);\n    };\n    /**\n     * Clears dependency counts for all registers. Called when recompiling a pass.\n     */\n    ShaderBase.prototype.reset = function () {\n        this.projectionDependencies = 0;\n        this.normalDependencies = 0;\n        this.colorDependencies = 0;\n        this.viewDirDependencies = 0;\n        this.uvDependencies = 0;\n        this.secondaryUVDependencies = 0;\n        this.globalPosDependencies = 0;\n        this.tangentDependencies = 0;\n        this.usesCommonData = false;\n        this.usesGlobalPosFragment = false;\n        this.usesPositionFragment = false;\n        this.usesFragmentAnimation = false;\n        this.usesTangentSpace = false;\n        this.outputsNormals = false;\n        this.outputsTangentNormals = false;\n    };\n    ShaderBase.prototype.pInitRegisterIndices = function () {\n        this.commonsDataIndex = -1;\n        this.cameraPositionIndex = -1;\n        this.curvesIndex = -1;\n        this.uvIndex = -1;\n        this.uvMatrixIndex = -1;\n        this.colorTransformIndex = -1;\n        this.secondaryUVIndex = -1;\n        this.normalIndex = -1;\n        this.colorBufferIndex = -1;\n        this.tangentIndex = -1;\n        this.sceneMatrixIndex = -1;\n        this.sceneNormalMatrixIndex = -1;\n        this.jointIndexIndex = -1;\n        this.jointWeightIndex = -1;\n        this.imageIndices.length = 0;\n    };\n    /**\n     * Initializes the unchanging constant data for this shader object.\n     */\n    ShaderBase.prototype.initConstantData = function (registerCache) {\n        //Updates the amount of used register indices.\n        this._numUsedVertexConstants = registerCache.numUsedVertexConstants;\n        this._numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n        this._numUsedStreams = registerCache.numUsedStreams;\n        this._numUsedTextures = registerCache.numUsedTextures;\n        this.vertexConstantData = new Float32Array(registerCache.numUsedVertexConstants * 4);\n        this.fragmentConstantData = new Float32Array(registerCache.numUsedFragmentConstants * 4);\n        //Initializes commonly required constant values.\n        if (this.commonsDataIndex >= 0) {\n            this.fragmentConstantData[this.commonsDataIndex] = .5;\n            this.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n            this.fragmentConstantData[this.commonsDataIndex + 2] = 1 / 255;\n            this.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n        }\n        //Initializes the default UV transformation matrix.\n        if (this.uvMatrixIndex >= 0) {\n            this.vertexConstantData[this.uvMatrixIndex] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n        }\n        //Initializes the default colorTransform.\n        if (this.colorTransformIndex >= 0) {\n            this.fragmentConstantData[this.colorTransformIndex] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n        }\n        if (this.cameraPositionIndex >= 0)\n            this.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n        // init constant data in pass\n        this._pass._iInitConstantData(this);\n        //init constant data in animation\n        if (this.usesAnimation)\n            this._pass.animationSet.doneAGALCode(this);\n    };\n    /**\n     * The blend mode to use when drawing this renderable. The following blend modes are supported:\n     * <ul>\n     * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n     * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n     * <li>BlendMode.MULTIPLY</li>\n     * <li>BlendMode.ADD</li>\n     * <li>BlendMode.ALPHA</li>\n     * </ul>\n     */\n    ShaderBase.prototype.setBlendMode = function (value) {\n        switch (value) {\n            case BlendMode_1.default.NORMAL:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n                this.usesBlending = false;\n                break;\n            case BlendMode_1.default.LAYER:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.MULTIPLY:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_COLOR;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ADD:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ALPHA:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            default:\n                throw new ArgumentError_1.default(\"Unsupported blend mode!\");\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iActivate = function (camera) {\n        this._stage.context.setCulling(this.useBothSides ? ContextGLTriangleFace_1.default.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n        if (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            var pos = camera.scenePosition;\n            this.vertexConstantData[this.cameraPositionIndex] = pos.x;\n            this.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n            this.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n        }\n        this._stage.context.setDepthTest((this.writeDepth && !this.usesBlending), this.depthCompareMode);\n        if (this.usesBlending)\n            this._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n        this.activeElements = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iDeactivate = function () {\n        //For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n        this._stage.context.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this.activeElements = null;\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    ShaderBase.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        if (renderable.renderable.animator)\n            renderable.renderable.animator.setRenderState(this, renderable, this._stage, camera);\n        if (this.usesUVTransform) {\n            var uvMatrix = renderable.uvMatrix;\n            if (uvMatrix) {\n                this.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n            }\n            else {\n                this.vertexConstantData[this.uvMatrixIndex] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n            }\n        }\n        if (this.usesColorTransform) {\n            var colorTransform = renderable.sourceEntity._iAssignedColorTransform();\n            if (colorTransform) {\n                this.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset / 255;\n            }\n            else {\n                this.fragmentConstantData[this.colorTransformIndex] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n            }\n        }\n        if (this.sceneNormalMatrixIndex >= 0)\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n        if (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n            var pos = camera.scenePosition;\n            var x = pos.x;\n            var y = pos.y;\n            var z = pos.z;\n            this.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n            this.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n            this.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n        }\n    };\n    ShaderBase.prototype.invalidateProgram = function () {\n        this._invalidProgram = true;\n    };\n    ShaderBase.prototype.dispose = function () {\n        this._programData.dispose();\n        this._programData = null;\n    };\n    ShaderBase.prototype._updateProgram = function () {\n        this._invalidProgram = false;\n        var compiler = this.createCompiler(this._elementsClass, this._pass);\n        compiler.compile();\n        this._calcAnimationCode(compiler._pRegisterCache, compiler.shadedTarget, compiler._pSharedRegisters);\n        //initialise the required shader constants\n        this.initConstantData(compiler._pRegisterCache);\n        var programData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n        //check program data hasn't changed, keep count of program usages\n        if (this._programData != programData) {\n            if (this._programData)\n                this._programData.dispose();\n            this._programData = programData;\n            programData.usages++;\n        }\n    };\n    ShaderBase.prototype._calcAnimationCode = function (registerCache, shadedTarget, sharedRegisters) {\n        //reset code\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        //check to see if GPU animation is used\n        if (this.usesAnimation) {\n            var animationSet = this._pass.animationSet;\n            this._animationVertexCode += animationSet.getAGALVertexCode(this, registerCache, sharedRegisters);\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += animationSet.getAGALUVCode(this, registerCache, sharedRegisters);\n            if (this.usesFragmentAnimation)\n                this._animationFragmentCode += animationSet.getAGALFragmentCode(this, registerCache, shadedTarget);\n        }\n        else {\n            // simply write attributes to targets, do not animate them\n            // projection will pick up on targets[0] to do the projection\n            var len = sharedRegisters.animatableAttributes.length;\n            for (var i = 0; i < len; ++i)\n                this._animationVertexCode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n        }\n    };\n    ShaderBase.prototype.setVertexConst = function (index, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        index *= 4;\n        this.vertexConstantData[index++] = x;\n        this.vertexConstantData[index++] = y;\n        this.vertexConstantData[index++] = z;\n        this.vertexConstantData[index] = w;\n    };\n    ShaderBase.prototype.setVertexConstFromArray = function (index, data) {\n        index *= 4;\n        for (var i = 0; i < data.length; i++)\n            this.vertexConstantData[index++] = data[i];\n    };\n    ShaderBase.prototype.setVertexConstFromMatrix = function (index, matrix) {\n        index *= 4;\n        var rawData = matrix.rawData;\n        this.vertexConstantData[index++] = rawData[0];\n        this.vertexConstantData[index++] = rawData[4];\n        this.vertexConstantData[index++] = rawData[8];\n        this.vertexConstantData[index++] = rawData[12];\n        this.vertexConstantData[index++] = rawData[1];\n        this.vertexConstantData[index++] = rawData[5];\n        this.vertexConstantData[index++] = rawData[9];\n        this.vertexConstantData[index++] = rawData[13];\n        this.vertexConstantData[index++] = rawData[2];\n        this.vertexConstantData[index++] = rawData[6];\n        this.vertexConstantData[index++] = rawData[10];\n        this.vertexConstantData[index++] = rawData[14];\n        this.vertexConstantData[index++] = rawData[3];\n        this.vertexConstantData[index++] = rawData[7];\n        this.vertexConstantData[index++] = rawData[11];\n        this.vertexConstantData[index] = rawData[15];\n    };\n    ShaderBase.prototype.setFragmentConst = function (index, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        index *= 4;\n        this.fragmentConstantData[index++] = x;\n        this.fragmentConstantData[index++] = y;\n        this.fragmentConstantData[index++] = z;\n        this.fragmentConstantData[index] = w;\n    };\n    ShaderBase._abstractionClassPool = new Object();\n    return ShaderBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderBase;\n\n},{\"../shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLTriangleFace\":undefined}],\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\":[function(require,module,exports){\n\"use strict\";\nvar RegisterPool_1 = require(\"../shaders/RegisterPool\");\nvar ShaderRegisterElement_1 = require(\"../shaders/ShaderRegisterElement\");\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nvar ShaderRegisterCache = (function () {\n    /**\n     * Create a new ShaderRegisterCache object.\n     *\n     * @param profile The compatibility profile used by the renderer.\n     */\n    function ShaderRegisterCache(profile) {\n        this._numUsedVertexConstants = 0;\n        this._numUsedFragmentConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._profile = profile;\n        this.reset();\n    }\n    /**\n     * Resets all registers.\n     */\n    ShaderRegisterCache.prototype.reset = function () {\n        this._fragmentTempCache = new RegisterPool_1.default(\"ft\", 8, false);\n        this._vertexTempCache = new RegisterPool_1.default(\"vt\", 8, false);\n        this._varyingCache = new RegisterPool_1.default(\"v\", 8);\n        this._textureCache = new RegisterPool_1.default(\"fs\", 8);\n        this._vertexAttributesCache = new RegisterPool_1.default(\"va\", 8);\n        this._fragmentConstantsCache = new RegisterPool_1.default(\"fc\", 28);\n        this._vertexConstantsCache = new RegisterPool_1.default(\"vc\", 128);\n        this._fragmentOutputRegister = new ShaderRegisterElement_1.default(\"oc\", -1);\n        this._vertexOutputRegister = new ShaderRegisterElement_1.default(\"op\", -1);\n        this._numUsedVertexConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._numUsedFragmentConstants = 0;\n    };\n    /**\n     * Disposes all resources used.\n     */\n    ShaderRegisterCache.prototype.dispose = function () {\n        this._fragmentTempCache.dispose();\n        this._vertexTempCache.dispose();\n        this._varyingCache.dispose();\n        this._fragmentConstantsCache.dispose();\n        this._vertexAttributesCache.dispose();\n        this._fragmentTempCache = null;\n        this._vertexTempCache = null;\n        this._varyingCache = null;\n        this._fragmentConstantsCache = null;\n        this._vertexAttributesCache = null;\n        this._fragmentOutputRegister = null;\n        this._vertexOutputRegister = null;\n    };\n    /**\n     * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addFragmentTempUsages = function (register, usageCount) {\n        this._fragmentTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeFragmentTempUsage = function (register) {\n        this._fragmentTempCache.removeUsage(register);\n    };\n    /**\n     * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n     * until removeUsage has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addVertexTempUsages = function (register, usageCount) {\n        this._vertexTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeVertexTempUsage = function (register) {\n        this._vertexTempCache.removeUsage(register);\n    };\n    /**\n     * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentVectorTemp = function () {\n        return this._fragmentTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a fragment temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentSingleTemp = function () {\n        return this._fragmentTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available varying register\n     */\n    ShaderRegisterCache.prototype.getFreeVarying = function () {\n        ++this._numUsedVaryings;\n        return this._varyingCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available fragment constant register\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentConstant = function () {\n        ++this._numUsedFragmentConstants;\n        return this._fragmentConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available vertex constant register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexConstant = function () {\n        ++this._numUsedVertexConstants;\n        return this._vertexConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an entire vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexVectorTemp = function () {\n        return this._vertexTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexSingleTemp = function () {\n        return this._vertexTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available vertex attribute register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexAttribute = function () {\n        ++this._numUsedStreams;\n        return this._vertexAttributesCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available texture register\n     */\n    ShaderRegisterCache.prototype.getFreeTextureReg = function () {\n        ++this._numUsedTextures;\n        return this._textureCache.requestFreeVectorReg();\n    };\n    Object.defineProperty(ShaderRegisterCache.prototype, \"fragmentOutputRegister\", {\n        /**\n         * The fragment output register.\n         */\n        get: function () {\n            return this._fragmentOutputRegister;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVertexConstants\", {\n        /**\n         * The amount of used vertex constant registers.\n         */\n        get: function () {\n            return this._numUsedVertexConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedFragmentConstants\", {\n        /**\n         * The amount of used fragment constant registers.\n         */\n        get: function () {\n            return this._numUsedFragmentConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedStreams\", {\n        /**\n         * The amount of used vertex streams.\n         */\n        get: function () {\n            return this._numUsedStreams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedTextures\", {\n        /**\n         * The amount of used texture slots.\n         */\n        get: function () {\n            return this._numUsedTextures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVaryings\", {\n        /**\n         * The amount of used varying registers.\n         */\n        get: function () {\n            return this._numUsedVaryings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ShaderRegisterCache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterCache;\n\n},{\"../shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderRegisterData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nvar ShaderRegisterData = (function () {\n    function ShaderRegisterData() {\n        this.textures = new Array();\n        this.animatableAttributes = new Array();\n        this.animationTargetRegisters = new Array();\n    }\n    return ShaderRegisterData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterData;\n\n},{}],\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":[function(require,module,exports){\n\"use strict\";\n/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nvar ShaderRegisterElement = (function () {\n    /**\n     * Creates a new ShaderRegisterElement object.\n     *\n     * @param regName The name of the register.\n     * @param index The index of the register.\n     * @param component The register's component, if not the entire register is represented.\n     */\n    function ShaderRegisterElement(regName, index, component) {\n        if (component === void 0) { component = -1; }\n        this._component = component;\n        this._regName = regName;\n        this._index = index;\n        this._toStr = this._regName;\n        if (this._index >= 0)\n            this._toStr += this._index;\n        if (component > -1)\n            this._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n    }\n    /**\n     * Converts the register or the components AGAL string representation.\n     */\n    ShaderRegisterElement.prototype.toString = function () {\n        return this._toStr;\n    };\n    Object.defineProperty(ShaderRegisterElement.prototype, \"regName\", {\n        /**\n         * The register's name.\n         */\n        get: function () {\n            return this._regName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterElement.prototype, \"index\", {\n        /**\n         * The register's index.\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderRegisterElement.COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n    return ShaderRegisterElement;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterElement;\n\n},{}],\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterCache_1 = require(\"../../shaders/ShaderRegisterCache\");\nvar ShaderRegisterData_1 = require(\"../../shaders/ShaderRegisterData\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar CompilerBase = (function () {\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function CompilerBase(elementsClass, pass, shader) {\n        this._pVertexCode = ''; // Changed to emtpy string- AwayTS\n        this._pFragmentCode = ''; // Changed to emtpy string - AwayTS\n        this._pPostAnimationFragmentCode = ''; // Changed to emtpy string - AwayTS\n        this._pElementsClass = elementsClass;\n        this._pRenderPass = pass;\n        this._pShader = shader;\n        this._pSharedRegisters = new ShaderRegisterData_1.default();\n        this._pRegisterCache = new ShaderRegisterCache_1.default(shader.profile);\n    }\n    /**\n     * Compiles the code after all setup on the compiler has finished.\n     */\n    CompilerBase.prototype.compile = function () {\n        this._pShader.reset();\n        this._pShader._iIncludeDependencies();\n        this.pInitRegisterIndices();\n        this.pCompileDependencies();\n        //compile custom vertex & fragment codes\n        this._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        if (this._pShader.usesColorTransform)\n            this.compileColorTransformCode();\n        else\n            this._pShader.colorTransformIndex = -1;\n        //assign the final output color to the output register\n        this._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n        this._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n    };\n    /**\n     * Calculate the transformed colours\n     */\n    CompilerBase.prototype.compileColorTransformCode = function () {\n        // rm, gm, bm, am - multiplier\n        // ro, go, bo, ao - offset\n        var ct1 = this._pRegisterCache.getFreeFragmentConstant();\n        var ct2 = this._pRegisterCache.getFreeFragmentConstant();\n        this._pShader.colorTransformIndex = ct1.index * 4;\n        this._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n        this._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n    };\n    /**\n     * Compile the code for the methods.\n     */\n    CompilerBase.prototype.pCompileDependencies = function () {\n        this._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n        //compile the world-space position if required\n        if (this._pShader.globalPosDependencies > 0)\n            this.compileGlobalPositionCode();\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n        if (this._pShader.usesCurves)\n            this.compileCurvesCode();\n        //Calculate the (possibly animated) UV coordinates.\n        if (this._pShader.uvDependencies > 0)\n            this.compileUVCode();\n        if (this._pShader.secondaryUVDependencies > 0)\n            this.compileSecondaryUVCode();\n        if (this._pShader.normalDependencies > 0)\n            this.compileNormalCode();\n        if (this._pShader.viewDirDependencies > 0)\n            this.compileViewDirCode();\n        //collect code from material\n        this._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        //collect code from pass\n        this._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n    };\n    CompilerBase.prototype.compileGlobalPositionCode = function () {\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n        var sceneMatrixReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pShader.sceneMatrixIndex = sceneMatrixReg.index * 4;\n        this._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n        if (this._pShader.usesGlobalPosFragment) {\n            this._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n        }\n    };\n    CompilerBase.prototype.compilePositionCode = function () {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    };\n    CompilerBase.prototype.compileCurvesCode = function () {\n        this._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n        this._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n        var temp = this._pRegisterCache.getFreeFragmentSingleTemp();\n        this._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n            \"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n            \"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n            \"kil \" + temp + \"\\n\";\n    };\n    /**\n     * Calculate the (possibly animated) UV coordinates.\n     */\n    CompilerBase.prototype.compileUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.uvIndex = uvAttributeReg.index;\n        var varying = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n        if (this._pShader.usesUVTransform) {\n            // a, b, 0, tx\n            // c, d, 0, ty\n            var uvTransform1 = this._pRegisterCache.getFreeVertexConstant();\n            var uvTransform2 = this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.uvMatrixIndex = uvTransform1.index * 4;\n            this._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n                \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n                \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n        }\n        else {\n            this._pShader.uvMatrixIndex = -1;\n            this._pSharedRegisters.uvTarget = varying;\n            this._pSharedRegisters.uvSource = uvAttributeReg;\n        }\n    };\n    /**\n     * Provide the secondary UV coordinates.\n     */\n    CompilerBase.prototype.compileSecondaryUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.secondaryUVIndex = uvAttributeReg.index;\n        this._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n    };\n    /**\n     * Calculate the view direction.\n     */\n    CompilerBase.prototype.compileViewDirCode = function () {\n        var cameraPositionReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n        this._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n        this._pShader.cameraPositionIndex = cameraPositionReg.index * 4;\n        if (this._pShader.usesTangentSpace) {\n            var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                \"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n        }\n        else {\n            this._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n        }\n        //TODO is this required in all cases? (re: distancemappass)\n        this._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n            \"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n    };\n    /**\n     * Calculate the normal.\n     */\n    CompilerBase.prototype.compileNormalCode = function () {\n        this._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n        //simple normal aquisition if no tangent space is being used\n        if (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n            this._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            return;\n        }\n        var normalMatrix;\n        if (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n            normalMatrix = new Array(3);\n            normalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n            this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.sceneNormalMatrixIndex = normalMatrix[0].index * 4;\n            this._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n        }\n        if (this._pShader.outputsNormals) {\n            if (this._pShader.usesTangentSpace) {\n                // normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n                this._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            }\n            else {\n                //Compiles the vertex shader code for tangent-space normal maps.\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n                    \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n                this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n                //Compiles the fragment shader code for tangent-space normal maps.\n                var t;\n                var b;\n                var n;\n                t = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(t, 1);\n                b = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(b, 1);\n                n = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(n, 1);\n                this._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n                    \"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n                    \"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n                    \"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n                //compile custom fragment code for normal calcs\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n                    \"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n                this._pRegisterCache.removeFragmentTempUsage(b);\n                this._pRegisterCache.removeFragmentTempUsage(t);\n                this._pRegisterCache.removeFragmentTempUsage(n);\n            }\n        }\n        else {\n            // no output, world space is enough\n            this._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n            this._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n            if (this._pShader.tangentDependencies > 0) {\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n            }\n        }\n        if (!this._pShader.usesTangentSpace)\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    CompilerBase.prototype.pInitRegisterIndices = function () {\n        this._pShader.pInitRegisterIndices();\n        this._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp();\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n        this._pSharedRegisters.animatableAttributes.push(this._pRegisterCache.getFreeVertexAttribute());\n        this._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedPosition);\n        this._pVertexCode = \"\";\n        this._pFragmentCode = \"\";\n        this._pPostAnimationFragmentCode = \"\";\n        //create commonly shared constant registers\n        if (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n            this._pShader.commonsDataIndex = this._pSharedRegisters.commons.index * 4;\n        }\n        //Creates the registers to contain the tangent data.\n        //Needs to be created FIRST and in this order (for when using tangent space)\n        if (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n            this._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n            this._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n            if (this._pShader.usesTangentSpace) {\n                this._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n            }\n            this._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.tangentInput);\n            this._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedTangent);\n        }\n        if (this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n            this._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n            this._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.normalInput);\n            this._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedNormal);\n        }\n        if (this._pShader.colorDependencies > 0) {\n            this._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n            this._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n        }\n    };\n    /**\n     * Disposes all resources used by the compiler.\n     */\n    CompilerBase.prototype.dispose = function () {\n        this._pRegisterCache.dispose();\n        this._pRegisterCache = null;\n        this._pSharedRegisters = null;\n    };\n    Object.defineProperty(CompilerBase.prototype, \"vertexCode\", {\n        /**\n         * The generated vertex code.\n         */\n        get: function () {\n            return this._pVertexCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"fragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"postAnimationFragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pPostAnimationFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"shadedTarget\", {\n        /**\n         * The register containing the final shaded colour.\n         */\n        get: function () {\n            return this._pSharedRegisters.shadedTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompilerBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompilerBase;\n\n},{\"../../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"../../shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\"}],\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar CompilerBase_1 = require(\"../../shaders/compilers/CompilerBase\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar LightingCompiler = (function (_super) {\n    __extends(LightingCompiler, _super);\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function LightingCompiler(elementsClass, lightingPass, shaderLightingObject) {\n        _super.call(this, elementsClass, lightingPass, shaderLightingObject);\n        this._shaderLightingObject = shaderLightingObject;\n        this._lightingPass = lightingPass;\n    }\n    /**\n     * Compile the code for the methods.\n     */\n    LightingCompiler.prototype.pCompileDependencies = function () {\n        _super.prototype.pCompileDependencies.call(this);\n        //compile the lighting code\n        if (this._shaderLightingObject.usesShadows)\n            this.pCompileShadowCode();\n        if (this._shaderLightingObject.usesLights) {\n            this.initLightRegisters();\n            this.compileLightCode();\n        }\n        if (this._shaderLightingObject.usesProbes)\n            this.compileLightProbeCode();\n        this._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n    };\n    /**\n     * Provides the code to provide shadow mapping.\n     */\n    LightingCompiler.prototype.pCompileShadowCode = function () {\n        if (this._shaderLightingObject.normalDependencies > 0) {\n            this._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n        }\n        else {\n            this._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n        }\n    };\n    /**\n     * Initializes constant registers to contain light data.\n     */\n    LightingCompiler.prototype.initLightRegisters = function () {\n        // init these first so we're sure they're in sequence\n        var i, len;\n        if (this._dirLightVertexConstants) {\n            len = this._dirLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index * 4;\n            }\n        }\n        if (this._pointLightVertexConstants) {\n            len = this._pointLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index * 4;\n            }\n        }\n        len = this._dirLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index * 4;\n        }\n        len = this._pointLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index * 4;\n        }\n    };\n    /**\n     * Compiles the shading code for directional and point lights.\n     */\n    LightingCompiler.prototype.compileLightCode = function () {\n        var diffuseColorReg;\n        var specularColorReg;\n        var lightPosReg;\n        var lightDirReg;\n        var vertexRegIndex = 0;\n        var fragmentRegIndex = 0;\n        var addSpec = this._shaderLightingObject.usesLightsForSpecular;\n        var addDiff = this._shaderLightingObject.usesLightsForDiffuse;\n        //compile the shading code for directional lights.\n        for (var i = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n                var lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n                lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            else {\n                lightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            }\n            diffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (this._shaderLightingObject.usesTangentSpace)\n                this._pRegisterCache.removeVertexTempUsage(lightDirReg);\n        }\n        vertexRegIndex = 0;\n        fragmentRegIndex = 0;\n        //compile the shading code for point lights\n        for (var i = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n                lightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n            else\n                lightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            diffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n            var lightVarying;\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                    \"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n            }\n            else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            }\n            else {\n                lightVarying = lightDirReg;\n                this._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n            }\n            if (this._shaderLightingObject.usesLightFallOff) {\n                // calculate attenuation\n                this._pFragmentCode +=\n                    \"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" +\n                        \"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" +\n                        \"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n            }\n            else {\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index * 4;\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            this._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n        }\n    };\n    /**\n     * Compiles shading code for light probes.\n     */\n    LightingCompiler.prototype.compileLightProbeCode = function () {\n        var weightReg;\n        var weightComponents = [\".x\", \".y\", \".z\", \".w\"];\n        var weightRegisters = new Array();\n        var i;\n        var texReg;\n        var addSpec = this._shaderLightingObject.usesProbesForSpecular;\n        var addDiff = this._shaderLightingObject.usesProbesForDiffuse;\n        if (addDiff)\n            this._shaderLightingObject.lightProbeDiffuseIndices = new Array();\n        if (addSpec)\n            this._shaderLightingObject.lightProbeSpecularIndices = new Array();\n        for (i = 0; i < this._pNumProbeRegisters; ++i) {\n            weightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (i == 0)\n                this._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index * 4;\n        }\n        for (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n            weightReg = weightRegisters[Math.floor(i / 4)].toString() + weightComponents[i % 4];\n            if (addDiff) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n            if (addSpec) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n        }\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    LightingCompiler.prototype.pInitRegisterIndices = function () {\n        _super.prototype.pInitRegisterIndices.call(this);\n        this._shaderLightingObject.lightVertexConstantIndex = -1;\n        this._shaderLightingObject.lightFragmentConstantIndex = -1;\n        this._shaderLightingObject.probeWeightsIndex = -1;\n        this._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes / 4);\n        //init light data\n        if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n            this._pointLightVertexConstants = new Array(this._shaderLightingObject.numPointLights);\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 2);\n        }\n        else {\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 3);\n        }\n        if (this._shaderLightingObject.usesTangentSpace) {\n            this._dirLightVertexConstants = new Array(this._shaderLightingObject.numDirectionalLights);\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 2);\n        }\n        else {\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 3);\n        }\n    };\n    return LightingCompiler;\n}(CompilerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingCompiler;\n\n},{\"../../shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\"}],\"awayjs-renderergl/lib/shaders\":[function(require,module,exports){\n\"use strict\";\nvar CompilerBase_1 = require(\"./shaders/compilers/CompilerBase\");\nexports.CompilerBase = CompilerBase_1.default;\nvar LightingCompiler_1 = require(\"./shaders/compilers/LightingCompiler\");\nexports.LightingCompiler = LightingCompiler_1.default;\nvar LightingShader_1 = require(\"./shaders/LightingShader\");\nexports.LightingShader = LightingShader_1.default;\nvar RegisterPool_1 = require(\"./shaders/RegisterPool\");\nexports.RegisterPool = RegisterPool_1.default;\nvar ShaderBase_1 = require(\"./shaders/ShaderBase\");\nexports.ShaderBase = ShaderBase_1.default;\nvar ShaderRegisterCache_1 = require(\"./shaders/ShaderRegisterCache\");\nexports.ShaderRegisterCache = ShaderRegisterCache_1.default;\nvar ShaderRegisterData_1 = require(\"./shaders/ShaderRegisterData\");\nexports.ShaderRegisterData = ShaderRegisterData_1.default;\nvar ShaderRegisterElement_1 = require(\"./shaders/ShaderRegisterElement\");\nexports.ShaderRegisterElement = ShaderRegisterElement_1.default;\n\n},{\"./shaders/LightingShader\":\"awayjs-renderergl/lib/shaders/LightingShader\",\"./shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"./shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"./shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"./shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\",\"./shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"./shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"./shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\"}],\"awayjs-renderergl/lib/sort/IEntitySorter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableMergeSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nvar RenderableMergeSort = (function () {\n    function RenderableMergeSort() {\n    }\n    RenderableMergeSort.prototype.sortBlendedRenderables = function (head) {\n        var headB;\n        var fast;\n        var slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortBlendedRenderables(head);\n        headB = this.sortBlendedRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB) {\n            if (head.zIndex < headB.zIndex) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result)\n                result = l;\n            else\n                curr.next = l;\n            curr = l;\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    RenderableMergeSort.prototype.sortOpaqueRenderables = function (head) {\n        var headB;\n        var fast, slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortOpaqueRenderables(head);\n        headB = this.sortOpaqueRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        var cmp = 0;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB && head != null && headB != null) {\n            // first sort per render order id (reduces program3D switches),\n            // then on render object id (reduces setting props),\n            // then on zIndex (reduces overdraw)\n            var aid = head.renderOrderId;\n            var bid = headB.renderOrderId;\n            if (aid == bid) {\n                var ma = head.surfaceID;\n                var mb = headB.surfaceID;\n                if (ma == mb) {\n                    if (head.zIndex < headB.zIndex)\n                        cmp = 1;\n                    else\n                        cmp = -1;\n                }\n                else if (ma > mb) {\n                    cmp = 1;\n                }\n                else {\n                    cmp = -1;\n                }\n            }\n            else if (aid > bid) {\n                cmp = 1;\n            }\n            else {\n                cmp = -1;\n            }\n            if (cmp < 0) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result) {\n                result = l;\n                curr = l;\n            }\n            else {\n                curr.next = l;\n                curr = l;\n            }\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    return RenderableMergeSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableMergeSort;\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableNullSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.NullSort\n */\nvar RenderableNullSort = (function () {\n    function RenderableNullSort() {\n    }\n    RenderableNullSort.prototype.sortBlendedRenderables = function (head) {\n        return head;\n    };\n    RenderableNullSort.prototype.sortOpaqueRenderables = function (head) {\n        return head;\n    };\n    return RenderableNullSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableNullSort;\n\n},{}],\"awayjs-renderergl/lib/sort\":[function(require,module,exports){\n\"use strict\";\nvar RenderableMergeSort_1 = require(\"./sort/RenderableMergeSort\");\nexports.RenderableMergeSort = RenderableMergeSort_1.default;\nvar RenderableNullSort_1 = require(\"./sort/RenderableNullSort\");\nexports.RenderableNullSort = RenderableNullSort_1.default;\n\n},{\"./sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"./sort/RenderableNullSort\":\"awayjs-renderergl/lib/sort/RenderableNullSort\"}],\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar BasicMaterialPass_1 = require(\"../surfaces/passes/BasicMaterialPass\");\nvar GL_SurfaceBase_1 = require(\"../surfaces/GL_SurfaceBase\");\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_BasicMaterialSurface = (function (_super) {\n    __extends(GL_BasicMaterialSurface, _super);\n    function GL_BasicMaterialSurface(material, elementsClass, renderPool) {\n        _super.call(this, material, elementsClass, renderPool);\n        this._material = material;\n        this._pAddPass(this._pass = new BasicMaterialPass_1.default(this, material, elementsClass, this._stage));\n    }\n    GL_BasicMaterialSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._material = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_BasicMaterialSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._material.blendMode != BlendMode_1.default.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n        this._pass.preserveAlpha = this._material.preserveAlpha; //this._pRequiresBlending;\n        this._pass.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._material.blendMode);\n        //this._pass.forceSeparateMVP = false;\n    };\n    return GL_BasicMaterialSurface;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_BasicMaterialSurface;\n\n},{\"../surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"../surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"awayjs-core/lib/image/BlendMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_DepthSurface = (function (_super) {\n    __extends(GL_DepthSurface, _super);\n    /**\n     *\n     * @param pool\n     * @param surface\n     * @param elementsClass\n     * @param stage\n     */\n    function GL_DepthSurface(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    GL_DepthSurface.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    GL_DepthSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n    };\n    GL_DepthSurface.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index] = 1.0;\n        data[index + 1] = 255.0;\n        data[index + 2] = 65025.0;\n        data[index + 3] = 16581375.0;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        code += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        //codeF += \"mov ft1.w, fc1.w\t\\n\" +\n        //    \"mov ft0.w, fc0.x\t\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        registerCache.removeFragmentTempUsage(temp1);\n        registerCache.removeFragmentTempUsage(temp2);\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            this._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return GL_DepthSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_DepthSurface;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nvar DistanceRender = (function (_super) {\n    __extends(DistanceRender, _super);\n    /**\n     * Creates a new DistanceRender object.\n     *\n     * @param material The material to which this pass belongs.\n     */\n    function DistanceRender(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    DistanceRender.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    /**\n     * Initializes the unchanging constant data for this material.\n     */\n    DistanceRender.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    DistanceRender.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        shader.viewDirDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n        if (shader.viewDirDependencies > 0)\n            shader.globalPosDependencies++;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code;\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        // squared distance to view\n        code = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        var f = camera.projection.far;\n        f = 1 / (2 * f * f);\n        // sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n        var index = this._fragmentConstantsIndex;\n        var data = this._shader.fragmentConstantData;\n        data[index] = 1.0 * f;\n        data[index + 1] = 255.0 * f;\n        data[index + 2] = 65025.0 * f;\n        data[index + 3] = 16581375.0 * f;\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            data[index + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return DistanceRender;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRender;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar GL_SurfacePassBase_1 = require(\"../surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"../shaders/ShaderBase\");\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_SkyboxSurface = (function (_super) {\n    __extends(GL_SkyboxSurface, _super);\n    function GL_SkyboxSurface(skybox, elementsClass, renderPool) {\n        _super.call(this, skybox, elementsClass, renderPool);\n        this._skybox = skybox;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._texture = this._shader.getAbstraction(this._skybox.texture);\n        this._pAddPass(this);\n    }\n    GL_SkyboxSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._skybox.texture));\n        this._texture = null;\n        this._skybox = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._surface.blendMode != BlendMode_1.default.NORMAL);\n        this.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._surface.blendMode);\n    };\n    GL_SkyboxSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.usesPositionFragment = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n    };\n    GL_SkyboxSurface.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        this._texture._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        this._stage.context.setDepthTest(false, ContextGLCompareMode_1.default.LESS);\n        this._texture.activate(this);\n    };\n    return GL_SkyboxSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxSurface;\n\n},{\"../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar MaterialBase_1 = require(\"awayjs-display/lib/materials/MaterialBase\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar PassEvent_1 = require(\"../events/PassEvent\");\n/**\n *\n * @class away.pool.Passes\n */\nvar GL_SurfaceBase = (function (_super) {\n    __extends(GL_SurfaceBase, _super);\n    function GL_SurfaceBase(surface, elementsClass, renderPool) {\n        var _this = this;\n        _super.call(this, surface, renderPool);\n        this.usages = 0;\n        this._forceSeparateMVP = false;\n        this._usesAnimation = true;\n        this._invalidAnimation = true;\n        this._invalidRender = true;\n        this._invalidImages = true;\n        this._passes = new Array();\n        this._imageIndices = new Object();\n        this._pRequiresBlending = false;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onInvalidateAnimationDelegate = function (event) { return _this.onInvalidateAnimation(event); };\n        this._onInvalidatePassesDelegate = function (event) { return _this.onInvalidatePasses(event); };\n        this.surfaceID = surface.id;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = renderPool.stage;\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n        this._onPassInvalidateDelegate = function (event) { return _this.onPassInvalidate(event); };\n    }\n    Object.defineProperty(GL_SurfaceBase.prototype, \"requiresBlending\", {\n        /**\n         * Indicates whether or not the renderable requires alpha blending during rendering.\n         */\n        get: function () {\n            return this._pRequiresBlending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"renderOrderId\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._renderOrderId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"passes\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._passes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"surface\", {\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"numImages\", {\n        get: function () {\n            if (this._invalidImages)\n                this._updateImages();\n            return this._numImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_SurfaceBase.prototype._iIncludeDependencies = function (shader) {\n        this._elementsClass._iIncludeDependencies(shader);\n        shader.alphaThreshold = this._surface.alphaThreshold;\n        shader.useImageRect = this._surface.imageRect;\n        shader.usesCurves = this._surface.curves;\n        if (this._surface instanceof MaterialBase_1.default) {\n            var material = this._surface;\n            shader.useAlphaPremultiplied = material.alphaPremultiplied;\n            shader.useBothSides = material.bothSides;\n            shader.usesUVTransform = material.animateUVs;\n            shader.usesColorTransform = material.useColorTransform;\n        }\n    };\n    GL_SurfaceBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (this._invalidImages)\n            this._updateImages();\n        return this._imageIndices[texture.id][index];\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n            this._passes[i].dispose();\n        }\n        this._passes = null;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        this._invalidRender = true;\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidatePasses = function (event) {\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++)\n            this._passes[i].invalidate();\n        this._invalidAnimation = true;\n        this._invalidImages = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidateAnimation = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     * @param surface\n     */\n    GL_SurfaceBase.prototype._updateAnimation = function () {\n        if (this._invalidRender)\n            this._pUpdateRender();\n        this._invalidAnimation = false;\n        var usesAnimation = this._getEnabledGPUAnimation();\n        var renderOrderId = 0;\n        var mult = 1;\n        var shader;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            shader = this._passes[i].shader;\n            shader.usesAnimation = usesAnimation;\n            renderOrderId += shader.programData.id * mult;\n            mult *= 1000;\n        }\n        if (this._usesAnimation != usesAnimation) {\n            this._usesAnimation = usesAnimation;\n            var renderables = this._surface.iOwners;\n            var numOwners = renderables.length;\n            for (var j = 0; j < numOwners; j++)\n                renderables[j].invalidateElements();\n        }\n        this._renderOrderId = renderOrderId;\n    };\n    GL_SurfaceBase.prototype._updateImages = function () {\n        this._invalidImages = false;\n        var numTextures = this._surface.getNumTextures();\n        var texture;\n        var numImages;\n        var images;\n        var image;\n        var sampler;\n        var index = 0;\n        for (var i = 0; i < numTextures; i++) {\n            texture = this._surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            images = this._imageIndices[texture.id] = new Array();\n            for (var j = 0; j < numImages; j++) {\n                image = texture.getImageAt(j) || (this._surface.style ? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultImage2D();\n                this.images[index] = this._stage.getAbstraction(image);\n                sampler = texture.getSamplerAt(j) || (this._surface.style ? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultSampler();\n                this.samplers[index] = this._stage.getAbstraction(sampler);\n                images[j] = index++;\n            }\n        }\n        this._numImages = index;\n    };\n    /**\n     * Performs any processing that needs to occur before any of its passes are used.\n     *\n     * @private\n     */\n    GL_SurfaceBase.prototype._pUpdateRender = function () {\n        this._invalidRender = false;\n        //overrride to update shader object properties\n    };\n    /**\n     * Removes a pass from the surface.\n     * @param pass The pass to be removed.\n     */\n    GL_SurfaceBase.prototype._pRemovePass = function (pass) {\n        pass.removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.splice(this._passes.indexOf(pass), 1);\n    };\n    /**\n     * Removes all passes from the surface\n     */\n    GL_SurfaceBase.prototype._pClearPasses = function () {\n        var len = this._passes.length;\n        for (var i = 0; i < len; ++i)\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.length = 0;\n    };\n    /**\n     * Adds a pass to the surface\n     * @param pass\n     */\n    GL_SurfaceBase.prototype._pAddPass = function (pass) {\n        this._passes.push(pass);\n        pass.addEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n    };\n    /**\n     * Listener for when a pass's shader code changes. It recalculates the render order id.\n     */\n    GL_SurfaceBase.prototype.onPassInvalidate = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     * test if animation will be able to run on gpu BEFORE compiling materials\n     * test if the shader objects supports animating the animation set in the vertex shader\n     * if any object using this material fails to support accelerated animations for any of the shader objects,\n     * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n     */\n    GL_SurfaceBase.prototype._getEnabledGPUAnimation = function () {\n        if (this._surface.animationSet) {\n            this._surface.animationSet.resetGPUCompatibility();\n            var renderables = this._surface.iOwners;\n            var numOwners = renderables.length;\n            var len = this._passes.length;\n            var shader;\n            for (var i = 0; i < len; i++) {\n                shader = this._passes[i].shader;\n                shader.usesAnimation = false;\n                for (var j = 0; j < numOwners; j++)\n                    if (renderables[j].animator)\n                        renderables[j].animator.testGPUCompatibility(shader);\n            }\n            return !this._surface.animationSet.usesCPU;\n        }\n        return false;\n    };\n    return GL_SurfaceBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfaceBase;\n\n},{\"../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/SurfaceEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined,\"awayjs-display/lib/materials/MaterialBase\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PassEvent_1 = require(\"../events/PassEvent\");\nvar GL_SurfaceBase_1 = require(\"../surfaces/GL_SurfaceBase\");\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar GL_SurfacePassBase = (function (_super) {\n    __extends(GL_SurfacePassBase, _super);\n    function GL_SurfacePassBase() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    GL_SurfacePassBase.prototype.invalidate = function () {\n        this._shader.invalidateProgram();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    GL_SurfacePassBase.prototype.dispose = function () {\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    GL_SurfacePassBase.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        this._shader._setRenderState(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    GL_SurfacePassBase.prototype._iInitConstantData = function (shader) {\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return GL_SurfacePassBase;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfacePassBase;\n\n},{\"../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"../surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\"}],\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/SurfacePool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar SurfacePool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function SurfacePool(elementsClass, stage, surfaceClassGL) {\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        this._abstractionPool = new Object();\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n        this._surfaceClassGL = surfaceClassGL;\n    }\n    Object.defineProperty(SurfacePool.prototype, \"stage\", {\n        get: function () {\n            return this._stage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     * @returns IElements\n     */\n    SurfacePool.prototype.getAbstraction = function (surface) {\n        return (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     */\n    SurfacePool.prototype.clearAbstraction = function (surface) {\n        delete this._abstractionPool[surface.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    SurfacePool.registerAbstraction = function (surfaceClassGL, assetClass) {\n        SurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n    };\n    SurfacePool._abstractionClassPool = new Object();\n    return SurfacePool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SurfacePool;\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ShaderBase_1 = require(\"../../shaders/ShaderBase\");\nvar PassBase_1 = require(\"../../surfaces/passes/PassBase\");\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterialPass = (function (_super) {\n    __extends(BasicMaterialPass, _super);\n    function BasicMaterialPass(render, surface, elementsClass, stage) {\n        _super.call(this, render, surface, elementsClass, stage);\n        this._diffuseR = 1;\n        this._diffuseG = 1;\n        this._diffuseB = 1;\n        this._diffuseA = 1;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this.invalidate();\n    }\n    BasicMaterialPass.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        if (this._textureVO != null)\n            shader.uvDependencies++;\n    };\n    BasicMaterialPass.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    BasicMaterialPass.prototype.dispose = function () {\n        if (this._textureVO) {\n            this._textureVO.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surface.getTextureAt(0)));\n            this._textureVO = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iGetFragmentCode = function (shader, regCache, sharedReg) {\n        var code = \"\";\n        var alphaReg;\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n        var targetReg = sharedReg.shadedTarget;\n        if (this._textureVO != null) {\n            code += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n            if (shader.alphaThreshold > 0) {\n                var cutOffReg = regCache.getFreeFragmentConstant();\n                this._fragmentConstantsIndex = cutOffReg.index * 4;\n                code += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n            }\n        }\n        else if (shader.colorBufferIndex != -1) {\n            code += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n        }\n        else {\n            var diffuseInputReg = regCache.getFreeFragmentConstant();\n            this._fragmentConstantsIndex = diffuseInputReg.index * 4;\n            code += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n        }\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n        return code;\n    };\n    BasicMaterialPass.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, renderable, camera, viewProjection);\n        if (this._textureVO != null)\n            this._textureVO._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO != null) {\n            this._textureVO.activate(this._render);\n            if (this._shader.alphaThreshold > 0)\n                this._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n        }\n        else if (this._shader.colorBufferIndex == -1) {\n            var index = this._fragmentConstantsIndex;\n            var data = this._shader.fragmentConstantData;\n            data[index] = this._diffuseR;\n            data[index + 1] = this._diffuseG;\n            data[index + 2] = this._diffuseB;\n            data[index + 3] = this._diffuseA;\n        }\n    };\n    return BasicMaterialPass;\n}(PassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicMaterialPass;\n\n},{\"../../shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"../../surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/IPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/PassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar PassEvent_1 = require(\"../../events/PassEvent\");\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar PassBase = (function (_super) {\n    __extends(PassBase, _super);\n    /**\n     * Creates a new PassBase object.\n     */\n    function PassBase(render, surface, elementsClass, stage) {\n        _super.call(this);\n        this._preserveAlpha = true;\n        this._forceSeparateMVP = false;\n        this._render = render;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n    }\n    Object.defineProperty(PassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"forceSeparateMVP\", {\n        /**\n         * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n         * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n         * projection code.\n         */\n        get: function () {\n            return this._forceSeparateMVP;\n        },\n        set: function (value) {\n            if (this._forceSeparateMVP == value)\n                return;\n            this._forceSeparateMVP = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PassBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._render.getImageIndex(texture, index);\n    };\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    PassBase.prototype.invalidate = function () {\n        this._shader.invalidateProgram();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n     */\n    PassBase.prototype.dispose = function () {\n        this._render = null;\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    PassBase.prototype._setRenderState = function (renderable, camera, viewProjection) {\n        this._shader._setRenderState(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    PassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    PassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    PassBase.prototype._iIncludeDependencies = function (shader) {\n        this._render._iIncludeDependencies(shader);\n        if (this._forceSeparateMVP)\n            shader.globalPosDependencies++;\n    };\n    PassBase.prototype._iInitConstantData = function (shader) {\n    };\n    PassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return PassBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassBase;\n\n},{\"../../events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-renderergl/lib/surfaces\":[function(require,module,exports){\n\"use strict\";\nvar BasicMaterialPass_1 = require(\"./surfaces/passes/BasicMaterialPass\");\nexports.BasicMaterialPass = BasicMaterialPass_1.default;\nvar PassBase_1 = require(\"./surfaces/passes/PassBase\");\nexports.PassBase = PassBase_1.default;\nvar GL_BasicMaterialSurface_1 = require(\"./surfaces/GL_BasicMaterialSurface\");\nexports.GL_BasicMaterialSurface = GL_BasicMaterialSurface_1.default;\nvar GL_DepthSurface_1 = require(\"./surfaces/GL_DepthSurface\");\nexports.GL_DepthSurface = GL_DepthSurface_1.default;\nvar GL_DistanceSurface_1 = require(\"./surfaces/GL_DistanceSurface\");\nexports.GL_DistanceSurface = GL_DistanceSurface_1.default;\nvar GL_SkyboxSurface_1 = require(\"./surfaces/GL_SkyboxSurface\");\nexports.GL_SkyboxSurface = GL_SkyboxSurface_1.default;\nvar GL_SurfaceBase_1 = require(\"./surfaces/GL_SurfaceBase\");\nexports.GL_SurfaceBase = GL_SurfaceBase_1.default;\nvar GL_SurfacePassBase_1 = require(\"./surfaces/GL_SurfacePassBase\");\nexports.GL_SurfacePassBase = GL_SurfacePassBase_1.default;\nvar SurfacePool_1 = require(\"./surfaces/SurfacePool\");\nexports.SurfacePool = SurfacePool_1.default;\n\n},{\"./surfaces/GL_BasicMaterialSurface\":\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\",\"./surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\",\"./surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\",\"./surfaces/GL_SkyboxSurface\":\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\",\"./surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"./surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"./surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"./surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"./surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\"}],\"awayjs-renderergl/lib/textures/GL_Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MappingMode_1 = require(\"awayjs-display/lib/textures/MappingMode\");\nvar GL_TextureBase_1 = require(\"../textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nvar GL_Single2DTexture = (function (_super) {\n    __extends(GL_Single2DTexture, _super);\n    function GL_Single2DTexture(single2DTexture, shader) {\n        _super.call(this, single2DTexture, shader);\n        this._single2DTexture = single2DTexture;\n    }\n    GL_Single2DTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._single2DTexture = null;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The uv coordinate vector with which to sample the texture map.\n     * @returns {string}\n     * @private\n     */\n    GL_Single2DTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var code = \"\";\n        var wrap = \"wrap\";\n        var format = \"\"; //this.getFormatString(this._single2DTexture.image2D);\n        var filter = \"linear,miplinear\";\n        var temp;\n        //modify depending on mapping mode\n        if (this._single2DTexture.mappingMode == MappingMode_1.default.RADIAL_GRADIENT) {\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n            code += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n            code += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n            inputReg = temp;\n        }\n        //handles texture atlasing\n        if (this._shader.useImageRect) {\n            var samplerReg = regCache.getFreeFragmentConstant();\n            this._samplerIndex = samplerReg.index * 4;\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n            code += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n            inputReg = temp;\n        }\n        this._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        code += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n        return code;\n    };\n    GL_Single2DTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        sampler.activate(this._textureIndex);\n        var image = render.images[this._imageIndex];\n        image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    GL_Single2DTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        var image = renderable.images[this._imageIndex];\n        if (image)\n            image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect && sampler) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    return GL_Single2DTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Single2DTexture;\n\n},{\"../textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\",\"awayjs-display/lib/textures/MappingMode\":undefined}],\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TextureBase_1 = require(\"../textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.TextureDataBase\n */\nvar GL_SingleCubeTexture = (function (_super) {\n    __extends(GL_SingleCubeTexture, _super);\n    function GL_SingleCubeTexture(singleCubeTexture, shader) {\n        _super.call(this, singleCubeTexture, shader);\n        this._singleCubeTexture = singleCubeTexture;\n    }\n    GL_SingleCubeTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._singleCubeTexture = null;\n    };\n    GL_SingleCubeTexture.prototype._iIncludeDependencies = function (includeInput) {\n        if (includeInput === void 0) { includeInput = true; }\n        if (includeInput)\n            this._shader.usesPositionFragment = true;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The direction vector with which to sample the cube map.\n     * @returns {string}\n     * @private\n     */\n    GL_SingleCubeTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var format = \"\"; //this.getFormatString(this._singleCubeTexture.imageCube);\n        var filter = \"linear,miplinear\";\n        this._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        return \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n    };\n    GL_SingleCubeTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (render.images[this._imageIndex])\n            render.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    GL_SingleCubeTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (renderable.images[this._imageIndex] && sampler)\n            renderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    return GL_SingleCubeTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SingleCubeTexture;\n\n},{\"../textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/textures/GL_TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar ContextGLTextureFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nvar GL_TextureBase = (function (_super) {\n    __extends(GL_TextureBase, _super);\n    function GL_TextureBase(texture, shader) {\n        _super.call(this, texture, shader);\n        this._texture = texture;\n        this._shader = shader;\n        this._stage = shader._stage;\n    }\n    /**\n     *\n     */\n    GL_TextureBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture = null;\n        this._shader = null;\n        this._stage = null;\n    };\n    GL_TextureBase.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        if (inputReg === void 0) { inputReg = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    GL_TextureBase.prototype._setRenderState = function (renderable) {\n        //overidden for state logic\n    };\n    GL_TextureBase.prototype.activate = function (render) {\n        //overridden for activation logic\n    };\n    GL_TextureBase.prototype.getTextureReg = function (imageIndex, regCache, sharedReg) {\n        var index = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n        if (index == -1) {\n            var textureReg = regCache.getFreeTextureReg();\n            sharedReg.textures.push(textureReg);\n            this._shader.imageIndices.push(imageIndex);\n            return textureReg;\n        }\n        return sharedReg.textures[index];\n    };\n    GL_TextureBase.prototype.getFormatString = function (image) {\n        switch (image.format) {\n            case ContextGLTextureFormat_1.default.COMPRESSED:\n                return \"dxt1,\";\n            case ContextGLTextureFormat_1.default.COMPRESSED_ALPHA:\n                return \"dxt5,\";\n            default:\n                return \"\";\n        }\n    };\n    return GL_TextureBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TextureBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-stagegl/lib/base/ContextGLTextureFormat\":undefined}],\"awayjs-renderergl/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar GL_Single2DTexture_1 = require(\"./textures/GL_Single2DTexture\");\nexports.GL_Single2DTexture = GL_Single2DTexture_1.default;\nvar GL_SingleCubeTexture_1 = require(\"./textures/GL_SingleCubeTexture\");\nexports.GL_SingleCubeTexture = GL_SingleCubeTexture_1.default;\nvar GL_TextureBase_1 = require(\"./textures/GL_TextureBase\");\nexports.GL_TextureBase = GL_TextureBase_1.default;\n\n},{\"./textures/GL_Single2DTexture\":\"awayjs-renderergl/lib/textures/GL_Single2DTexture\",\"./textures/GL_SingleCubeTexture\":\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\",\"./textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/tools/commands/Merge\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nvar Merge = (function () {\n    /**\n     * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n     * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n     * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n     * If true, only receiver geometry and resulting sprite are kept in  memory.\n     * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n     */\n    function Merge(keepMaterial, disposeSources, objectSpace) {\n        if (keepMaterial === void 0) { keepMaterial = false; }\n        if (disposeSources === void 0) { disposeSources = false; }\n        if (objectSpace === void 0) { objectSpace = false; }\n        this._keepMaterial = keepMaterial;\n        this._disposeSources = disposeSources;\n        this._objectSpace = objectSpace;\n    }\n    Object.defineProperty(Merge.prototype, \"disposeSources\", {\n        get: function () {\n            return this._disposeSources;\n        },\n        /**\n         * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._disposeSources = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"keepMaterial\", {\n        get: function () {\n            return this._keepMaterial;\n        },\n        /**\n         * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._keepMaterial = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"objectSpace\", {\n        get: function () {\n            return this._objectSpace;\n        },\n        /**\n         * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n         */\n        set: function (b) {\n            this._objectSpace = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n     *\n     * @param    receiver           The Sprite to receive the merged contents of the container.\n     * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n     *\n     * @return The merged Sprite instance.\n     */\n    Merge.prototype.applyToContainer = function (receiver, objectContainer) {\n        this.reset();\n        //collect container sprites\n        this.parseContainer(receiver, objectContainer);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of the sprites.\n     * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n     */\n    Merge.prototype.applyToSpritees = function (receiver, sprites) {\n        this.reset();\n        if (!sprites.length)\n            return;\n        //collect sprites in vector\n        for (var i = 0; i < sprites.length; i++)\n            if (sprites[i] != receiver)\n                this.collect(sprites[i], this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of both sprites.\n     * @param    sprite        The Sprite to be merged with the receiver sprite\n     */\n    Merge.prototype.apply = function (receiver, sprite) {\n        this.reset();\n        //collect sprite\n        this.collect(sprite, this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    Merge.prototype.reset = function () {\n        this._toDispose = new Array();\n        this._graphicVOs = new Array();\n    };\n    Merge.prototype.merge = function (destSprite, dispose) {\n        var i;\n        //var oldGraphics:Graphics;\n        var destGraphics;\n        var useSubMaterials;\n        //oldGraphics = destSprite.graphics.clone();\n        destGraphics = destSprite.graphics;\n        // Only apply materials directly to sub-sprites if necessary,\n        // i.e. if there is more than one material available.\n        useSubMaterials = (this._graphicVOs.length > 1);\n        for (i = 0; i < this._graphicVOs.length; i++) {\n            var elements = new TriangleElements_1.default(new AttributesBuffer_1.default());\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            var data = this._graphicVOs[i];\n            elements.setIndices(data.indices);\n            elements.setPositions(data.vertices);\n            elements.setNormals(data.normals);\n            elements.setTangents(data.tangents);\n            elements.setUVs(data.uvs);\n            destGraphics.addGraphic(elements);\n            if (this._keepMaterial && useSubMaterials)\n                destSprite.graphics[i].material = data.material;\n        }\n        if (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n            destSprite.material = this._graphicVOs[0].material;\n        if (dispose) {\n            var len = this._toDispose.length;\n            for (var i; i < len; i++)\n                this._toDispose[i].dispose();\n            ;\n        }\n        this._toDispose = null;\n    };\n    Merge.prototype.collect = function (sprite, dispose) {\n        var subIdx;\n        var calc;\n        for (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n            var i;\n            var len;\n            var iIdx /*uint*/, vIdx /*uint*/, nIdx /*uint*/, tIdx /*uint*/, uIdx;\n            var indexOffset;\n            var elements;\n            var vo;\n            var vertices;\n            var normals;\n            var tangents;\n            var ind, pd, nd, td, ud;\n            elements = sprite.graphics.getGraphicAt(subIdx).elements;\n            pd = elements.positions.get(elements.numVertices);\n            nd = elements.normals.get(elements.numVertices);\n            td = elements.tangents.get(elements.numVertices);\n            ud = elements.uvs.get(elements.numVertices);\n            // Get (or create) a VO for this material\n            vo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n            // Vertices and normals are copied to temporary vectors, to be transformed\n            // before concatenated onto those of the data. This is unnecessary if no\n            // transformation will be performed, i.e. for object space merging.\n            vertices = (this._objectSpace) ? vo.vertices : new Array();\n            normals = (this._objectSpace) ? vo.normals : new Array();\n            tangents = (this._objectSpace) ? vo.tangents : new Array();\n            // Copy over vertex attributes\n            vIdx = vertices.length;\n            nIdx = normals.length;\n            tIdx = tangents.length;\n            uIdx = vo.uvs.length;\n            len = elements.numVertices;\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                // Position\n                vertices[vIdx++] = pd[calc];\n                vertices[vIdx++] = pd[calc + 1];\n                vertices[vIdx++] = pd[calc + 2];\n                // Normal\n                normals[nIdx++] = nd[calc];\n                normals[nIdx++] = nd[calc + 1];\n                normals[nIdx++] = nd[calc + 2];\n                // Tangent\n                tangents[tIdx++] = td[calc];\n                tangents[tIdx++] = td[calc + 1];\n                tangents[tIdx++] = td[calc + 2];\n                // UV\n                vo.uvs[uIdx++] = ud[i * 2];\n                vo.uvs[uIdx++] = ud[i * 2 + 1];\n            }\n            // Copy over triangle indices\n            indexOffset = (!this._objectSpace) ? vo.vertices.length / 3 : 0;\n            iIdx = vo.indices.length;\n            len = elements.numElements;\n            ind = elements.indices.get(len);\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                vo.indices[iIdx++] = ind[calc] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n            }\n            if (!this._objectSpace) {\n                sprite.sceneTransform.transformVectors(vertices, vertices);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n                // Copy vertex data from temporary (transformed) vectors\n                vIdx = vo.vertices.length;\n                nIdx = vo.normals.length;\n                tIdx = vo.tangents.length;\n                len = vertices.length;\n                for (i = 0; i < len; i++) {\n                    vo.vertices[vIdx++] = vertices[i];\n                    vo.normals[nIdx++] = normals[i];\n                    vo.tangents[tIdx++] = tangents[i];\n                }\n            }\n        }\n        if (dispose)\n            this._toDispose.push(sprite);\n    };\n    Merge.prototype.getGraphicData = function (material) {\n        var data;\n        if (this._keepMaterial) {\n            var i;\n            var len;\n            len = this._graphicVOs.length;\n            for (i = 0; i < len; i++) {\n                if (this._graphicVOs[i].material == material) {\n                    data = this._graphicVOs[i];\n                    break;\n                }\n            }\n        }\n        else if (this._graphicVOs.length) {\n            // If materials are not to be kept, all data can be\n            // put into a single VO, so return that one.\n            data = this._graphicVOs[0];\n        }\n        // No data (for this material) found, create new.\n        if (!data) {\n            data = new GraphicVO();\n            data.vertices = new Array();\n            data.normals = new Array();\n            data.tangents = new Array();\n            data.uvs = new Array();\n            data.indices = new Array();\n            data.material = material;\n            this._graphicVOs.push(data);\n        }\n        return data;\n    };\n    Merge.prototype.parseContainer = function (receiver, object) {\n        var child;\n        var i;\n        if (object instanceof Sprite_1.default && object != receiver)\n            this.collect(object, this._disposeSources);\n        for (i = 0; i < object.numChildren; ++i) {\n            child = object.getChildAt(i);\n            this.parseContainer(receiver, child);\n        }\n    };\n    return Merge;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Merge;\nvar GraphicVO = (function () {\n    function GraphicVO() {\n    }\n    return GraphicVO;\n}());\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-display/lib/display/Sprite\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleGraphicsTransform = (function () {\n    function ParticleGraphicsTransform() {\n    }\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"vertexTransform\", {\n        get: function () {\n            return this._defaultVertexTransform;\n        },\n        set: function (value) {\n            this._defaultVertexTransform = value;\n            this._defaultInvVertexTransform = value.clone();\n            this._defaultInvVertexTransform.invert();\n            this._defaultInvVertexTransform.transpose();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"UVTransform\", {\n        get: function () {\n            return this._defaultUVTransform;\n        },\n        set: function (value) {\n            this._defaultUVTransform = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"invVertexTransform\", {\n        get: function () {\n            return this._defaultInvVertexTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ParticleGraphicsTransform;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsTransform;\n\n},{}],\"awayjs-renderergl/lib/tools\":[function(require,module,exports){\n\"use strict\";\nvar Merge_1 = require(\"./tools/commands/Merge\");\nexports.Merge = Merge_1.default;\nvar ParticleGraphicsTransform_1 = require(\"./tools/data/ParticleGraphicsTransform\");\nexports.ParticleGraphicsTransform = ParticleGraphicsTransform_1.default;\n\n},{\"./tools/commands/Merge\":\"awayjs-renderergl/lib/tools/commands/Merge\",\"./tools/data/ParticleGraphicsTransform\":\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\"}],\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleData_1 = require(\"awayjs-display/lib/animators/data/ParticleData\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\n/**\n * ...\n */\nvar ParticleGraphicsHelper = (function () {\n    function ParticleGraphicsHelper() {\n    }\n    ParticleGraphicsHelper.generateGraphics = function (output, graphicsArray, transforms) {\n        if (transforms === void 0) { transforms = null; }\n        var indicesVector = new Array();\n        var positionsVector = new Array();\n        var normalsVector = new Array();\n        var tangentsVector = new Array();\n        var uvsVector = new Array();\n        var vertexCounters = new Array();\n        var particles = new Array();\n        var elementsArray = new Array();\n        var numParticles = graphicsArray.length;\n        var sourceGraphics;\n        var sourceElements;\n        var numGraphics;\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var uvs;\n        var vertexCounter;\n        var elements;\n        var i;\n        var j;\n        var sub2SubMap = new Array();\n        var tempVertex = new Vector3D_1.default;\n        var tempNormal = new Vector3D_1.default;\n        var tempTangents = new Vector3D_1.default;\n        var tempUV = new Point_1.default;\n        for (i = 0; i < numParticles; i++) {\n            sourceGraphics = graphicsArray[i];\n            numGraphics = sourceGraphics.count;\n            for (var srcIndex = 0; srcIndex < numGraphics; srcIndex++) {\n                //create a different particle subgeometry group for each source subgeometry in a particle.\n                if (sub2SubMap.length <= srcIndex) {\n                    sub2SubMap.push(elementsArray.length);\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                sourceElements = sourceGraphics.getGraphicAt(srcIndex).elements;\n                //add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n                if (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n                    //update submap and add new subgeom vectors\n                    sub2SubMap[srcIndex] = elementsArray.length;\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                j = sub2SubMap[srcIndex];\n                //select the correct vector\n                indices = indicesVector[j];\n                positions = positionsVector[j];\n                normals = normalsVector[j];\n                tangents = tangentsVector[j];\n                uvs = uvsVector[j];\n                vertexCounter = vertexCounters[j];\n                elements = elementsArray[j];\n                var particleData = new ParticleData_1.default();\n                particleData.numVertices = sourceElements.numVertices;\n                particleData.startVertexIndex = vertexCounter;\n                particleData.particleIndex = i;\n                particleData.elements = elements;\n                particles.push(particleData);\n                vertexCounters[j] += sourceElements.numVertices;\n                var k;\n                var tempLen;\n                var compact = sourceElements;\n                var product;\n                var sourcePositions;\n                var sourceNormals;\n                var sourceTangents;\n                var sourceUVs;\n                if (compact) {\n                    tempLen = compact.numVertices;\n                    sourcePositions = compact.positions.get(tempLen);\n                    sourceNormals = compact.normals.get(tempLen);\n                    sourceTangents = compact.tangents.get(tempLen);\n                    sourceUVs = compact.uvs.get(tempLen);\n                    if (transforms) {\n                        var particleGraphicsTransform = transforms[i];\n                        var vertexTransform = particleGraphicsTransform.vertexTransform;\n                        var invVertexTransform = particleGraphicsTransform.invVertexTransform;\n                        var UVTransform = particleGraphicsTransform.UVTransform;\n                        for (k = 0; k < tempLen; k++) {\n                            /*\n                             * 0 - 2: vertex position X, Y, Z\n                             * 3 - 5: normal X, Y, Z\n                             * 6 - 8: tangent X, Y, Z\n                             * 9 - 10: U V\n                             * 11 - 12: Secondary U V*/\n                            product = k * 3;\n                            tempVertex.x = sourcePositions[product];\n                            tempVertex.y = sourcePositions[product + 1];\n                            tempVertex.z = sourcePositions[product + 2];\n                            tempNormal.x = sourceNormals[product];\n                            tempNormal.y = sourceNormals[product + 1];\n                            tempNormal.z = sourceNormals[product + 2];\n                            tempTangents.x = sourceTangents[product];\n                            tempTangents.y = sourceTangents[product + 1];\n                            tempTangents.z = sourceTangents[product + 2];\n                            tempUV.x = sourceUVs[k * 2];\n                            tempUV.y = sourceUVs[k * 2 + 1];\n                            if (vertexTransform) {\n                                tempVertex = vertexTransform.transformVector(tempVertex);\n                                tempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n                                tempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n                            }\n                            if (UVTransform)\n                                tempUV = UVTransform.transformPoint(tempUV);\n                            //this is faster than that only push one data\n                            positions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n                            normals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n                            tangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n                            uvs.push(tempUV.x, tempUV.y);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < tempLen; k++) {\n                            product = k * 3;\n                            //this is faster than that only push one data\n                            positions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n                            normals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n                            tangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n                            uvs.push(sourceUVs[k * 2], sourceUVs[k * 2 + 1]);\n                        }\n                    }\n                }\n                else {\n                }\n                tempLen = sourceElements.numElements;\n                var sourceIndices = sourceElements.indices.get(tempLen);\n                for (k = 0; k < tempLen; k++) {\n                    product = k * 3;\n                    indices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n                }\n            }\n        }\n        output.particles = particles;\n        output.numParticles = numParticles;\n        numParticles = elementsArray.length;\n        for (i = 0; i < numParticles; i++) {\n            elements = elementsArray[i];\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(indicesVector[i]);\n            elements.setPositions(positionsVector[i]);\n            elements.setNormals(normalsVector[i]);\n            elements.setTangents(tangentsVector[i]);\n            elements.setUVs(uvsVector[i]);\n            output.addGraphic(elements);\n        }\n    };\n    ParticleGraphicsHelper.MAX_VERTEX = 65535;\n    return ParticleGraphicsHelper;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsHelper;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/data/ParticleData\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\n/**\n *\n */\nvar PerspectiveMatrix3D = (function (_super) {\n    __extends(PerspectiveMatrix3D, _super);\n    function PerspectiveMatrix3D(v) {\n        if (v === void 0) { v = null; }\n        _super.call(this, v);\n    }\n    PerspectiveMatrix3D.prototype.perspectiveFieldOfViewLH = function (fieldOfViewY, aspectRatio, zNear, zFar) {\n        var yScale = 1 / Math.tan(fieldOfViewY / 2);\n        var xScale = yScale / aspectRatio;\n        this.rawData[0] = xScale;\n        this.rawData[1] = 0.0;\n        this.rawData[2] = 0.0;\n        this.rawData[3] = 0.0;\n        this.rawData[4] = 0.0;\n        this.rawData[5] = yScale;\n        this.rawData[6] = 0.0;\n        this.rawData[7] = 0.0;\n        this.rawData[8] = 0.0;\n        this.rawData[9] = 0.0;\n        this.rawData[10] = zFar / (zFar - zNear);\n        this.rawData[11] = 1.0;\n        this.rawData[12] = 0.0;\n        this.rawData[13] = 0.0;\n        this.rawData[14] = (zNear * zFar) / (zNear - zFar);\n        this.rawData[15] = 0.0;\n    };\n    return PerspectiveMatrix3D;\n}(Matrix3D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PerspectiveMatrix3D;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar ParticleGraphicsHelper_1 = require(\"./utils/ParticleGraphicsHelper\");\nexports.ParticleGraphicsHelper = ParticleGraphicsHelper_1.default;\nvar PerspectiveMatrix3D_1 = require(\"./utils/PerspectiveMatrix3D\");\nexports.PerspectiveMatrix3D = PerspectiveMatrix3D_1.default;\n\n},{\"./utils/ParticleGraphicsHelper\":\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\",\"./utils/PerspectiveMatrix3D\":\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\"}]},{},[1])\n\n",
    "import * as animators\t\t\t\tfrom \"./lib/animators\";\nimport * as elements\t\t\t\tfrom \"./lib/elements\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as filters\t\t\t\t\tfrom \"./lib/filters\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as renderables\t\t\t\tfrom \"./lib/renderables\";\nimport * as shaders\t\t\t\t\tfrom \"./lib/shaders\";\nimport * as sort\t\t\t\t\tfrom \"./lib/sort\";\nimport * as surfaces\t\t\t\tfrom \"./lib/surfaces\";\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\nimport * as tools\t\t\t\t\tfrom \"./lib/tools\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\nimport DefaultRenderer\t\t\t\tfrom \"./lib/DefaultRenderer\";\nimport DepthRenderer\t\t\t\tfrom \"./lib/DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./lib/DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./lib/Filter3DRenderer\";\nimport RendererBase\t\t\t\t\tfrom \"./lib/RendererBase\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox);\n\nStage.registerAbstraction(elements.GL_LineElements, LineElements);\nStage.registerAbstraction(elements.GL_TriangleElements, TriangleElements);\n\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(renderables.GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(renderables.GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox);\n\nexport {\n\tanimators,\n\telements,\n\terrors,\n\tevents,\n\tfilters,\n\tmanagers,\n\trenderables,\n\tshaders,\n\tsort,\n\tsurfaces,\n\ttextures,\n\ttools,\n\tutils,\n\tDefaultRenderer,\n\tDepthRenderer,\n\tDistanceRenderer,\n\tFilter3DRenderer,\n\tRendererBase\n}",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLClearMask\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLClearMask\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport DepthRenderer\t\t\t\tfrom \"./DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"./DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"./Filter3DRenderer\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport GL_SkyboxElements\t\t\tfrom \"./elements/GL_SkyboxElements\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis.shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = super.enterNode(node);\n\n\t\tif (enter && node.debugVisible)\n\t\t\tthis.applyEntity(node.bounds.boundsPrimitive);\n\n\t\treturn enter;\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this.shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this.shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this.shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this.shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this.shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport default DefaultRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DepthSurface\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DepthRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"./RendererBase\";\nimport GL_DistanceSurface\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DistanceRenderer;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLVertexBufferFormat\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport RTTEvent\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport Filter3DBase\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nimport Filter3DTaskBase\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(this._tasks[0]._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(this._tasks[0]._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(task._inputTextureIndex, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(task._positionIndex, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(task._uvIndex, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport default Filter3DRenderer;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport RendererEvent\t\t\t\tfrom \"awayjs-display/lib/events/RendererEvent\";\n\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport StageEvent\t\t\t\t\tfrom \"awayjs-stagegl/lib/events/StageEvent\";\nimport StageManager\t\t\t\t\tfrom \"awayjs-stagegl/lib/managers/StageManager\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"./elements/GL_ElementsBase\";\nimport ISurfaceClassGL\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"./renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"./managers/RTTBufferManager\";\nimport SurfacePool\t\t\t\t\tfrom \"./surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nimport IEntitySorter\t\t\t\tfrom \"./sort/IEntitySorter\";\nimport RenderableMergeSort\t\t\tfrom \"./sort/RenderableMergeSort\";\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\t\n\tprivate _cameraPosition:Vector3D;\n\tpublic _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tprivate _sourceEntity:IEntity;\n\tprivate _zIndex:number;\n\tprivate _renderSceneTransform:Matrix3D;\n\n\t\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic shareContext:boolean;\n\t\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t\t\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:GL_ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.elementsType] || (this._objectPools[elements.elementsType] = new SurfacePool(elements.elementsClass, this._pStage, this._surfaceClassGL));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tvar i:number\n\t\tfor (i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through pass\n\t\tpass._iActivate(camera);\n\t}\n\n\tpublic deactivatePass(pass:IPass)\n\t{\n\t\t//deactivate shader object through pass\n\t\tpass._iDeactivate();\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this.shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this.shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isRenderable() && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._sourceEntity = entity;\n\n\t\t// project onto camera's z-axis\n\t\tthis._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n\n\t\t//save sceneTransform\n\t\tthis._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n\n\t\t//collect renderables\n\t\tentity._acceptTraverser(this);\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\trenderableGL.sourceEntity = this._sourceEntity;\n\t\trenderableGL.zIndex = this._zIndex;\n\t\trenderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = this._renderSceneTransform;\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elementsGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default RendererBase;",
    "import IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimationSetError\t\t\tfrom \"../errors/AnimationSetError\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport default AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport RequestAnimationFrame\t\t\tfrom \"awayjs-core/lib/utils/RequestAnimationFrame\";\nimport getTimer\t\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport IAnimationState\t\t\t\t\tfrom \"../animators/states/IAnimationState\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport AnimatorEvent\t\t\t\t\tfrom \"../events/AnimatorEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar sprite:Sprite;\n\t\tvar len:number = this._pOwners.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsprite = this._pOwners[i];\n\t\t\tsprite.graphics.invalidateElements();\n\t\t}\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../animators/data/ParticleAnimationData\";\nimport ParticleProperties\t\t\t\tfrom \"../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../animators/nodes/ParticleTimeNode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterData:AnimationRegisterData;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//grab animationRegisterData from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterData = shader.animationRegisterData;\n\n\t\tif (this._iAnimationRegisterData == null)\n\t\t\tthis._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData();\n\n\t\t//reset animationRegisterData\n\t\tthis._iAnimationRegisterData.reset(registerCache, sharedRegisters, this.needVelocity);\n\n\t\tvar code:string = \"\";\n\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tcode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \",\" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this._iAnimationRegisterData.positionTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.velocityTarget + \".xyz,\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t}\n\n\t\tcode += \"add \" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.scaleAndRotateTarget + \".xyz,\" + this._iAnimationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t}\n\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis._iAnimationRegisterData.colorMulTarget = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(this._iAnimationRegisterData.colorMulTarget, 1);\n\t\t\tthis._iAnimationRegisterData.colorMulVary = registerCache.getFreeVarying();\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorMulTarget + \",\" + this._iAnimationRegisterData.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis._iAnimationRegisterData.colorAddTarget = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(this._iAnimationRegisterData.colorAddTarget, 1);\n\t\t\tthis._iAnimationRegisterData.colorAddVary = registerCache.getFreeVarying();\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorAddTarget + \",\" + this._iAnimationRegisterData.vertexZeroConst + \"\\n\";\n\t\t}\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t}\n\t\tif (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorMulVary + \",\" + this._iAnimationRegisterData.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this._iAnimationRegisterData.colorAddVary + \",\" + this._iAnimationRegisterData.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterData.setUVSourceAndTarget(sharedRegisters);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.uvTarget + \".xy,\" + this._iAnimationRegisterData.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this, registerCache, this._iAnimationRegisterData);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterData.uvVar + \",\" + this._iAnimationRegisterData.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + shadedTarget + \",\" + shadedTarget + \",\" + this._iAnimationRegisterData.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tshader.setVertexConst(this._iAnimationRegisterData.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic):AnimationElements\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number, j:number, k:number;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number = particles.length;\n\t\tvar numParticles:number = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number;\n\t\tvar oneDataOffset:number;\n\t\tvar counterForVertex:number;\n\t\tvar counterForOneData:number;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number;\n\t\tvar startingOffset:number;\n\t\tvar vertexOffset:number;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport default ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../animators/ParticleAnimationSet\";\nimport AnimationElements\t\t\t\tfrom \"../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../animators/states/ParticleStateBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tvar animationRegisterData:AnimationRegisterData = this._particleAnimationSet._iAnimationRegisterData;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\t\tvar i:number;\n\t\t\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(shader, renderable, animationElements, animationRegisterData, camera, stage);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(shader, renderable, animatorElements, animationRegisterData, camera, stage);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport default ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number;\n\tprivate _matricesIndex:number;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\t\n\tpublic get matricesIndex():number\n\t{\n\t\treturn this._matricesIndex;\n\t}\n\t\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._matricesIndex = registerCache.numUsedVertexConstants;\n\t\tvar indexOffset0:number = this._matricesIndex;\n\t\tvar indexOffset1:number = this._matricesIndex + 1;\n\t\tvar indexOffset2:number = this._matricesIndex + 2;\n\t\t\n\t\tvar indexStream:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\tshader.jointIndexIndex = indexStream.index;\n\t\t\n\t\tvar weightStream:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\tshader.jointWeightIndex = weightStream.index;\n\t\t\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\n\t\t\tvar source:ShaderRegisterElement = sharedRegisters.animatableAttributes[i];\n\t\t\tvar target:ShaderRegisterElement = sharedRegisters.animationTargetRegisters[i];\n\n\t\t\tfor (var j:number = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + source + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + source + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + target + \", \" + temp1 + \"\\n\";\n\t\t\t\telse\n\t\t\t\t\tcode += \"add \" + target + \", \" + target + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport default SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport SkeletonAnimationSet\t\t\t\tfrom \"../animators/SkeletonAnimationSet\";\nimport JointPose\t\t\t\t\t\tfrom \"../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../animators/data/Skeleton\";\nimport SkeletonJoint\t\t\t\t\tfrom \"../animators/data/SkeletonJoint\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../animators/data/SkeletonPose\";\nimport ISkeletonAnimationState\t\t\tfrom \"../animators/states/ISkeletonAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport AnimationStateEvent\t\t\t\tfrom \"../events/AnimationStateEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeletonAnimationSet:SkeletonAnimationSet;\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeletonAnimationSet = animationSet;\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number = 0;\n\t\tfor (var i:number = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new SkeletonAnimator(this._skeletonAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tshader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._condensedMatrices);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tshader.setVertexConstFromArray(this._skeletonAnimationSet.matricesIndex, this._globalMatrices);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tthis.invalidateElements();\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\tsourceElements.normals;\n\t\t\tsourceElements.tangents;\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number = 0;\n\t\tvar i0:number = 0;\n\t\tvar i1:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _iAnimationRegisterData:AnimationRegisterData;\n\t\n\tprivate _numPoses:number;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//grab animationRegisterData from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterData = shader.animationRegisterData;\n\n\t\tif (this._iAnimationRegisterData == null)\n\t\t\tthis._iAnimationRegisterData = shader.animationRegisterData = new AnimationRegisterData();\n\t\t\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader, registerCache, sharedRegisters);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader, registerCache, sharedRegisters);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar regs:Array<string> = new Array<string>(\".x\", \".y\", \".z\", \".w\");\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tvar constantReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tthis._iAnimationRegisterData.weightsIndex = constantReg.index;\n\t\tthis._iAnimationRegisterData.poseIndices = new Array<number>(this._numPoses);\n\t\tvar poseInput:ShaderRegisterElement;\n\t\tvar k:number = 0;\n\t\t\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\t\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + sharedRegisters.animatableAttributes[i] + \", \" + constantReg + regs[0] + \"\\n\";\n\t\t\n\t\t\tfor (var j:number = 1; j < this._numPoses; ++j) {\n\t\t\t\tposeInput = registerCache.getFreeVertexAttribute();\n\t\t\t\tthis._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n\t\t\t\tcode += \"mul \" + temp2 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\";\n\t\t\n\t\t\t\tif (j < this._numPoses - 1) //TODO this is always the case, write better?\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t}\n\t\t\n\t\t\tcode += \"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\t\t\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\t//\n\t\t// // simply write attributes to targets, do not animate them\n\t\t// // projection will pick up on targets[0] to do the projection\n\t\t// var len:number = sharedRegisters.animatableAttributes.length;\n\t\t// for (var i:number = 0; i < len; ++i)\n\t\t// \tcode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\".x\", \".y\", \".z\", \".w\"];\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar constantReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tthis._iAnimationRegisterData.weightsIndex = constantReg.index;\n\t\tthis._iAnimationRegisterData.poseIndices = new Array<number>(this._numPoses);\n\t\tvar poseInput:ShaderRegisterElement;\n\t\tvar k:number = 0;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + sharedRegisters.animationTargetRegisters[0] + \", \" + sharedRegisters.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + sharedRegisters.animationTargetRegisters[1] + \", \" + sharedRegisters.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tfor (var j:number = 0; j < this._numPoses; ++j) {\n\t\t\t\tposeInput = registerCache.getFreeVertexAttribute();\n\t\t\t\tthis._iAnimationRegisterData.poseIndices[k++] = poseInput.index;\n\t\t\t\tcode += \"mul \" + temp1 + \", \" + poseInput + \", \" + constantReg + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + sharedRegisters.animatableAttributes[2] + \", \" + sharedRegisters.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + sharedRegisters.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + sharedRegisters.animationTargetRegisters[2] + \", \" + sharedRegisters.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport default VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport VertexAnimationSet\t\t\t\tfrom \"../animators/VertexAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport VertexAnimationMode\t\t\t\tfrom \"../animators/data/VertexAnimationMode\";\nimport IVertexAnimationState\t\t\tfrom \"../animators/states/IVertexAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"../animators/transitions/IAnimationTransition\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"../renderables/GL_GraphicRenderable\";\nimport GL_RenderableBase\t\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_ElementsBase\t\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics)\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag)\n\t\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage);\n\t\t\treturn;\n\t\t}\n\n\t\tvar animationRegisterData:AnimationRegisterData = shader.animationRegisterData;\n\t\tvar i:number;\n\t\tvar len:number = this._vertexAnimationSet.numPoses;\n\n\t\tshader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n\n\t\tif (this._vertexAnimationSet.blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\t\tvar k:number = 0;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = <GL_ElementsBase> stage.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = (<GL_ElementsBase> stage.getAbstraction(graphic.elements)).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage)\n\t{\n\t\tvar animationRegisterData:AnimationRegisterData = shader.animationRegisterData;\n\t\t\n\t\tshader.setVertexConstFromArray(animationRegisterData.weightsIndex, this._weights);\n\n\t\tvar elementsGL:GL_ElementsBase = (<GL_ElementsBase> stage.getAbstraction(elements));\n\t\tvar k:number = 0;\n\t\t\n\t\tif (this._vertexAnimationSet.blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number = this._vertexAnimationSet.numPoses;\n\t\t\tfor (var i:number = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(animationRegisterData.poseIndices[k++], (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._vertexAnimationSet.blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default VertexAnimator;",
    "import Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IVertexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number;\n\n\tprivate _totalLenOfOneVertex:number;\n\n\tpublic numProcessedVertices:number = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number, totalLenOfOneVertex:number)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number, bufferOffset:number, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport default AnimationElements;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n\n/**\n * ...\n */\nclass AnimationRegisterData\n{\n\t//vertex animation data\n\tpublic weightsIndex:number;\n\tpublic poseIndices:Array<number>;\n\t\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic reset(registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData, needVelocity:boolean)\n\t{\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = sharedRegisters.animatableAttributes[0];\n\t\tthis.scaleAndRotateTarget = sharedRegisters.animationTargetRegisters[0];\n\n\t\tfor (var i:number = 1; i < sharedRegisters.animationTargetRegisters.length; i++)\n\t\t\tthis.rotationRegisters.push(sharedRegisters.animationTargetRegisters[i]);\n\t\t\n\t\t//allot const register\n\t\tthis.vertexZeroConst = registerCache.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (needVelocity) {\n\t\t\tthis.velocityTarget = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(sharedRegisters:ShaderRegisterData)\n\t{\n\t\tthis.uvVar = sharedRegisters.uvTarget;\n\t\tthis.uvAttribute = sharedRegisters.uvSource;\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number, registerIndex:number)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8);\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number):number\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n}\n\nexport default AnimationRegisterData;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport default ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport default JointPose;",
    "import ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number;\n\tpublic numVertices:number;\n\n\tconstructor(index:number, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport default ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number = 2;\n}\n\nexport default ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport default ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number = this.jointPoses.length;\n\t\tfor (var i:number = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport default SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\tfrom \"../../animators/data/SkeletonJoint\";\n\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport default Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport default VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number = 0;\n\tpublic _pLastFrame:number;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number>\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport default AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleAccelerationState\t\tfrom \"../../animators/states/ParticleAccelerationState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterData.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport default ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBezierCurveState\t\t\tfrom \"../../animators/states/ParticleBezierCurveState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterData.vertexOneConst + \",\" + animationRegisterData.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterData.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterData.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport default ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleBillboardState\t\t\tfrom \"../../animators/states/ParticleBillboardState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number = 0; i < animationRegisterData.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterData.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport default ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleColorState\t\t\t\tfrom \"../../animators/states/ParticleColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\t\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterData.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterData.colorMulTarget + \",\" + temp + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterData.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + temp + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport default ParticleColorNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleFollowState\t\t\t\tfrom \"../../animators/states/ParticleFollowState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationSet.hasBillboard) {\n\t\t\t\tregisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = registerCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tregisterCache.removeVertexTempUsage(temp1);\n\t\t\tregisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationSet.hasBillboard)\n\t\t\t\tregisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\t\tvar i:number;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationSet.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationSet.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationSet.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport default ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleInitialColorState\t\tfrom \"../../animators/states/ParticleInitialColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterData.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterData.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? registerCache.getFreeVertexAttribute() : registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterData.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport default ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number;\n\n\tpublic _pMode:number;\n\tpublic _pDataLength:number = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number, dataLength:number, priority:number = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport default ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOrbitState\t\t\t\tfrom \"../../animators/states/ParticleOrbitState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tregisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterData.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterData.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterData.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport default ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleOscillatorState\t\t\tfrom \"../../animators/states/ParticleOscillatorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterData.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport default ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticlePositionState\t\t\tfrom \"../../animators/states/ParticlePositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterData.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticlePositionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToHeadingState\t\tfrom \"../../animators/states/ParticleRotateToHeadingState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\tvar i:number;\n\t\tif (animationSet.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\n\t\t\tregisterCache.removeVertexTempUsage(temp1);\n\t\t\tregisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tregisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tregisterCache.removeVertexTempUsage(xAxis);\n\t\t\tregisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterData.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterData.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterData.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport default ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToPositionState\tfrom \"../../animators/states/ParticleRotateToPositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\tvar i:number;\n\t\tif (animationSet.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\t\t\tregisterCache.getFreeVertexConstant();\n\n\t\t\tregisterCache.removeVertexTempUsage(temp1);\n\t\t\tregisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterData.rotationRegisters[i] + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tregisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tregisterCache.removeVertexTempUsage(temp);\n\t\t\tregisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterData.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterData.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterData.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterData.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterData.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterData.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterData.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterData.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleRotationalVelocityState\tfrom \"../../animators/states/ParticleRotationalVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tregisterCache.removeVertexTempUsage(nrmVel);\n\t\tregisterCache.removeVertexTempUsage(xAxis);\n\t\tregisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number = animationRegisterData.rotationRegisters.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterData.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterData.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterData.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport default ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleScaleState\t\t\t\tfrom \"../../animators/states/ParticleScaleState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterData.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport default ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSegmentedColorState\t\tfrom \"../../animators/states/ParticleSegmentedColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = registerCache.getFreeVertexVectorTemp();\n\t\t\t\tregisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tregisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tregisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tregisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(registerCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = registerCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterData.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(registerCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterData.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterData.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterData.colorMulTarget + \",\" + animationRegisterData.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterData.colorAddTarget + \",\" + animationRegisterData.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport default ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleSpriteSheetState\t\t\tfrom \"../../animators/states/ParticleSpriteSheetState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number;\n\t/** @private */\n\tpublic _iNumColumns:number;\n\t/** @private */\n\tpublic _iNumRows:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number, usesCycle:boolean, usesPhase:boolean, numColumns:number = 1, numRows:number = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterData.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterData.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterData.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleTimeState\t\t\t\tfrom \"../../animators/states/ParticleTimeState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t\t\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = registerCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterData.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterData.vertexTime + \",\" + animationRegisterData.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterData.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterData.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + animationRegisterData.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterData.vertexLife + \",\" + animationRegisterData.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport default ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleUVState\t\t\t\t\tfrom \"../../animators/states/ParticleUVState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterData.uvTarget.regName, animationRegisterData.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = registerCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterData.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport default ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport ParticleProperties\t\t\t\tfrom \"../../animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleVelocityState\t\t\tfrom \"../../animators/states/ParticleVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationSet:ParticleAnimationSet, registerCache:ShaderRegisterCache, animationRegisterData:AnimationRegisterData):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? registerCache.getFreeVertexConstant() : registerCache.getFreeVertexAttribute();\n\t\tanimationRegisterData.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterData.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterData.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterData.positionTarget + \".xyz\\n\";\n\n\t\tif (animationSet.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterData.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterData.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport default ParticleVelocityNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport SkeletonClipState\t\t\t\tfrom \"../../animators/states/SkeletonClipState\";\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDifferenceState\t\t\tfrom \"../../animators/states/SkeletonDifferenceState\";\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonDirectionalState\t\t\tfrom \"../../animators/states/SkeletonDirectionalState\";\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport default SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonNaryLERPState\t\t\tfrom \"../../animators/states/SkeletonNaryLERPState\";\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number;\n\n\tpublic get numInputs():number\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport VertexClipState\t\t\t\t\tfrom \"../../animators/states/VertexClipState\";\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport AnimationClipNodeBase\t\t\tfrom \"../../animators/nodes/AnimationClipNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number;\n\tpublic _pNextFrame:number;\n\n\tpublic _pOldFrame:number;\n\tpublic _pTimeDir:number;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number = this._animationClipNode.lastFrame;\n\t\tvar time:number = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number = 0, frameTime:number;\n\t\t\tvar durations:Array<number> = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport default AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../../animators/states/IAnimationState\";\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport default AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleAccelerationNode\t\t\tfrom \"../../animators/nodes/ParticleAccelerationNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tshader.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport default ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleBezierCurveNode\t\t\tfrom \"../../animators/nodes/ParticleBezierCurveNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar controlIndex:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tshader.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tshader.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport default ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Orientation3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleBillboardNode\t\t\tfrom \"../../animators/nodes/ParticleBillboardNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport default ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleColorNode\t\t\t\tfrom \"../../animators/nodes/ParticleColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar dataOffset:number = this._particleColorNode._iDataOffset;\n\t\t\tvar index:number;\n\t\t\tif (this._usesCycle)\n\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t} else {\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleColorState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleFollowNode\t\t\t\tfrom \"../../animators/nodes/ParticleFollowNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleFollowState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleInitialColorNode\t\t\tfrom \"../../animators/nodes/ParticleInitialColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tvar index:number;\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport default ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOrbitNode\t\t\t\tfrom \"../../animators/nodes/ParticleOrbitNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tshader.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport default ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleOscillatorNode\t\t\tfrom \"../../animators/nodes/ParticleOscillatorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tshader.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport default ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticlePositionNode\t\t\t\tfrom \"../../animators/nodes/ParticlePositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tshader.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif ((<ParticleAnimationSet> this._pParticleAnimator.animationSet).hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport default ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport ParticleAnimationSet\t\t\t\tfrom \"../../animators/ParticleAnimationSet\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotateToPositionNode\t\tfrom \"../../animators/nodes/ParticleRotateToPositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif ((<ParticleAnimationSet> this._pParticleAnimator.animationSet).hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tshader.setVertexConstFromMatrix(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tshader.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport default ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleRotationalVelocityNode\tfrom \"../../animators/nodes/ParticleRotationalVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tshader.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport default ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleScaleNode\t\t\t\tfrom \"../../animators/nodes/ParticleScaleNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tshader.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport default ParticleScaleState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ColorSegmentPoint\t\t\t\tfrom \"../../animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSegmentedColorNode\t\tfrom \"../../animators/nodes/ParticleSegmentedColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number;\n\n\tprivate _timeLifeData:Float32Array;\n\tprivate _multiplierData:Float32Array;\n\tprivate _offsetData:Float32Array;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\t\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (shader.usesFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tshader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tshader.setVertexConstFromArray(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Float32Array(4);\n\t\tthis._multiplierData = new Float32Array(4*(this._numSegmentPoint + 1));\n\t\tthis._offsetData = new Float32Array(4*(this._numSegmentPoint + 1));\n\n\t\t//cut off the time data\n\t\tvar i:number;\n\t\tvar j:number = 0;\n\t\tvar count:number = this._numSegmentPoint > 3? 3 : this._numSegmentPoint;\n\t\tfor (i = 0; i < count; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData[j++] = this._segmentPoints[i].life;\n\t\t\telse\n\t\t\t\tthis._timeLifeData[j++] = this._segmentPoints[i].life - this._segmentPoints[i - 1].life;\n\t\t}\n\t\ti = count;\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData[j++] = 1;\n\t\telse\n\t\t\tthis._timeLifeData[j++] = 1 - this._segmentPoints[i - 1].life;\n\n\t\tif (this._usesMultiplier) {\n\t\t\tj = 0;\n\t\t\tthis._multiplierData[j++] = this._startColor.redMultiplier;\n\t\t\tthis._multiplierData[j++] = this._startColor.greenMultiplier;\n\t\t\tthis._multiplierData[j++] = this._startColor.blueMultiplier;\n\t\t\tthis._multiplierData[j++] = this._startColor.alphaMultiplier;\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i];\n\t\t\t\t} else {\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i];\n\t\t\t\t\tthis._multiplierData[j++] = (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = this._numSegmentPoint;\n\t\t\tif (this._numSegmentPoint == 0) {\n\t\t\t\tthis._multiplierData[j++] = this._endColor.redMultiplier - this._startColor.redMultiplier;\n\t\t\t\tthis._multiplierData[j++] = this._endColor.greenMultiplier - this._startColor.greenMultiplier;\n\t\t\t\tthis._multiplierData[j++] = this._endColor.blueMultiplier - this._startColor.blueMultiplier;\n\t\t\t\tthis._multiplierData[j++] = this._endColor.alphaMultiplier - this._startColor.alphaMultiplier;\n\t\t\t} else {\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i];\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i];\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i];\n\t\t\t\tthis._multiplierData[j++] = (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i];\n\t\t\t}\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tj = 0;\n\t\t\tthis._offsetData[j++] = this._startColor.redOffset/255;\n\t\t\tthis._offsetData[j++] = this._startColor.greenOffset/255;\n\t\t\tthis._offsetData[j++] = this._startColor.blueOffset/255;\n\t\t\tthis._offsetData[j++] = this._startColor.alphaOffset/255;\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255;\n\t\t\t\t} else {\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255;\n\t\t\t\t\tthis._offsetData[j++] = (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = this._numSegmentPoint;\n\t\t\tif (this._numSegmentPoint == 0) {\n\t\t\t\tthis._offsetData[j++] = (this._endColor.redOffset - this._startColor.redOffset)/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.greenOffset - this._startColor.greenOffset)/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.blueOffset - this._startColor.blueOffset)/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.alphaOffset - this._startColor.alphaOffset)/255;\n\t\t\t} else {\n\t\t\t\tthis._offsetData[i] = (this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255;\n\t\t\t\tthis._offsetData[j++] = (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleSpriteSheetNode\t\t\tfrom \"../../animators/nodes/ParticleSpriteSheetNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number;\n\tprivate _numColumns:number;\n\tprivate _numRows:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (!shader.usesUVTransform) {\n\t\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tshader.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"../../animators/data/ParticleAnimationData\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"../../animators/nodes/ParticleNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\tpublic _pParticleAnimator:ParticleAnimator;\n\t\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._pParticleAnimator = animator;\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number = this._particleNode.dataLength;\n\t\tvar dataOffset:number = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number;\n\t\t//\t\t\tvar particleOffset:number;\n\t\tvar startingOffset:number;\n\t\tvar vertexOffset:number;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number = _positions.length/dataLength;\n\t\tvar numParticles:number = this._pDynamicProperties.length;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleTimeNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tshader.setVertexConst(animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport default ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticleUVNode\t\t\t\t\tfrom \"../../animators/nodes/ParticleUVNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (!shader.usesUVTransform) {\n\t\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tshader.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport default ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"../../animators/ParticleAnimator\";\nimport AnimationRegisterData\t\t\tfrom \"../../animators/data/AnimationRegisterData\";\nimport AnimationElements\t\t\t\tfrom \"../../animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"../../animators/data/ParticlePropertiesMode\";\nimport ParticleVelocityNode\t\t\t\tfrom \"../../animators/nodes/ParticleVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"../../animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterData:AnimationRegisterData, camera:Camera, stage:Stage)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number = animationRegisterData.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tshader.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport default SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonAnimator\t\t\t\t\tfrom \"../../animators/SkeletonAnimator\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonClipNode\t\t\t\t\tfrom \"../../animators/nodes/SkeletonClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport default SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDifferenceNode\t\t\tfrom \"../../animators/nodes/SkeletonDifferenceNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonDirectionalNode\t\t\tfrom \"../../animators/nodes/SkeletonDirectionalNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport default SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"../../animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"../../animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"../../animators/data/SkeletonPose\";\nimport SkeletonNaryLERPNode\t\t\t\tfrom \"../../animators/nodes/SkeletonNaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"../../animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"../../animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number)\n\t{\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport default SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport VertexAnimator\t\t\t\t\tfrom \"../../animators/VertexAnimator\";\nimport VertexClipNode\t\t\t\t\tfrom \"../../animators/nodes/VertexClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"../../animators/states/AnimationClipState\";\nimport IVertexAnimationState\t\t\tfrom \"../../animators/states/IVertexAnimationState\";\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport default VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport CrossfadeTransitionState\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport default CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"../../animators/nodes/SkeletonBinaryLERPNode\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"../../animators/states/SkeletonBinaryLERPState\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport AnimationStateEvent\t\t\t\tfrom \"../../animators/../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport default CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../../animators/AnimatorBase\";\nimport CrossfadeTransitionNode\t\t\tfrom \"../../animators/transitions/CrossfadeTransitionNode\";\nimport IAnimationTransition\t\t\t\tfrom \"../../animators/transitions/IAnimationTransition\";\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport default CrossfadeTransition;",
    "export {default as AnimationElements}\t\t\t\tfrom \"./animators/data/AnimationElements\";\nexport {default as AnimationRegisterData}\t\t\tfrom \"./animators/data/AnimationRegisterData\";\nexport {default as ColorSegmentPoint}\t\t\t\tfrom \"./animators/data/ColorSegmentPoint\";\nexport {default as JointPose}\t\t\t\t\t\tfrom \"./animators/data/JointPose\";\nexport {default as ParticleAnimationData}\t\t\tfrom \"./animators/data/ParticleAnimationData\";\nexport {default as ParticleProperties}\t\t\t\tfrom \"./animators/data/ParticleProperties\";\nexport {default as ParticlePropertiesMode}\t\t\tfrom \"./animators/data/ParticlePropertiesMode\";\nexport {default as Skeleton}\t\t\t\t\t\tfrom \"./animators/data/Skeleton\";\nexport {default as SkeletonJoint}\t\t\t\t\tfrom \"./animators/data/SkeletonJoint\";\nexport {default as SkeletonPose}\t\t\t\t\tfrom \"./animators/data/SkeletonPose\";\nexport {default as VertexAnimationMode}\t\t\t\tfrom \"./animators/data/VertexAnimationMode\";\nexport {default as AnimationClipNodeBase}\t\t\tfrom \"./animators/nodes/AnimationClipNodeBase\";\nexport {default as ParticleAccelerationNode}\t\tfrom \"./animators/nodes/ParticleAccelerationNode\";\nexport {default as ParticleBezierCurveNode}\t\t\tfrom \"./animators/nodes/ParticleBezierCurveNode\";\nexport {default as ParticleBillboardNode}\t\t\tfrom \"./animators/nodes/ParticleBillboardNode\";\nexport {default as ParticleColorNode}\t\t\t\tfrom \"./animators/nodes/ParticleColorNode\";\nexport {default as ParticleFollowNode}\t\t\t\tfrom \"./animators/nodes/ParticleFollowNode\";\nexport {default as ParticleInitialColorNode}\t\tfrom \"./animators/nodes/ParticleInitialColorNode\";\nexport {default as ParticleNodeBase}\t\t\t\tfrom \"./animators/nodes/ParticleNodeBase\";\nexport {default as ParticleOrbitNode}\t\t\t\tfrom \"./animators/nodes/ParticleOrbitNode\";\nexport {default as ParticleOscillatorNode}\t\t\tfrom \"./animators/nodes/ParticleOscillatorNode\";\nexport {default as ParticlePositionNode}\t\t\tfrom \"./animators/nodes/ParticlePositionNode\";\nexport {default as ParticleRotateToHeadingNode}\t\tfrom \"./animators/nodes/ParticleRotateToHeadingNode\";\nexport {default as ParticleRotateToPositionNode}\tfrom \"./animators/nodes/ParticleRotateToPositionNode\";\nexport {default as ParticleRotationalVelocityNode}\tfrom \"./animators/nodes/ParticleRotationalVelocityNode\";\nexport {default as ParticleScaleNode}\t\t\t\tfrom \"./animators/nodes/ParticleScaleNode\";\nexport {default as ParticleSegmentedColorNode}\t\tfrom \"./animators/nodes/ParticleSegmentedColorNode\";\nexport {default as ParticleSpriteSheetNode}\t\t\tfrom \"./animators/nodes/ParticleSpriteSheetNode\";\nexport {default as ParticleTimeNode}\t\t\t\tfrom \"./animators/nodes/ParticleTimeNode\";\nexport {default as ParticleUVNode}\t\t\t\t\tfrom \"./animators/nodes/ParticleUVNode\";\nexport {default as ParticleVelocityNode}\t\t\tfrom \"./animators/nodes/ParticleVelocityNode\";\nexport {default as SkeletonBinaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonBinaryLERPNode\";\nexport {default as SkeletonClipNode}\t\t\t\tfrom \"./animators/nodes/SkeletonClipNode\";\nexport {default as SkeletonDifferenceNode}\t\t\tfrom \"./animators/nodes/SkeletonDifferenceNode\";\nexport {default as SkeletonDirectionalNode}\t\t\tfrom \"./animators/nodes/SkeletonDirectionalNode\";\nexport {default as SkeletonNaryLERPNode}\t\t\tfrom \"./animators/nodes/SkeletonNaryLERPNode\";\nexport {default as VertexClipNode}\t\t\t\t\tfrom \"./animators/nodes/VertexClipNode\";\nexport {default as AnimationClipState}\t\t\t\tfrom \"./animators/states/AnimationClipState\";\nexport {default as AnimationStateBase}\t\t\t\tfrom \"./animators/states/AnimationStateBase\";\nexport {default as IAnimationState}\t\t\t\t\tfrom \"./animators/states/IAnimationState\";\nexport {default as ISkeletonAnimationState}\t\t\tfrom \"./animators/states/ISkeletonAnimationState\";\nexport {default as IVertexAnimationState}\t\t\tfrom \"./animators/states/IVertexAnimationState\";\nexport {default as ParticleAccelerationState}\t\tfrom \"./animators/states/ParticleAccelerationState\";\nexport {default as ParticleBezierCurveState}\t\tfrom \"./animators/states/ParticleBezierCurveState\";\nexport {default as ParticleBillboardState}\t\t\tfrom \"./animators/states/ParticleBillboardState\";\nexport {default as ParticleColorState}\t\t\t\tfrom \"./animators/states/ParticleColorState\";\nexport {default as ParticleFollowState}\t\t\t\tfrom \"./animators/states/ParticleFollowState\";\nexport {default as ParticleInitialColorState}\t\tfrom \"./animators/states/ParticleInitialColorState\";\nexport {default as ParticleStateBase}\t\t\t\tfrom \"./animators/states/ParticleStateBase\";\nexport {default as ParticleOrbitState}\t\t\t\tfrom \"./animators/states/ParticleOrbitState\";\nexport {default as ParticleOscillatorState}\t\t\tfrom \"./animators/states/ParticleOscillatorState\";\nexport {default as ParticlePositionState}\t\t\tfrom \"./animators/states/ParticlePositionState\";\nexport {default as ParticleRotateToHeadingState}\tfrom \"./animators/states/ParticleRotateToHeadingState\";\nexport {default as ParticleRotateToPositionState}\tfrom \"./animators/states/ParticleRotateToPositionState\";\nexport {default as ParticleRotationalVelocityState}\tfrom \"./animators/states/ParticleRotationalVelocityState\";\nexport {default as ParticleScaleState}\t\t\t\tfrom \"./animators/states/ParticleScaleState\";\nexport {default as ParticleSegmentedColorState}\t\tfrom \"./animators/states/ParticleSegmentedColorState\";\nexport {default as ParticleSpriteSheetState}\t\tfrom \"./animators/states/ParticleSpriteSheetState\";\nexport {default as ParticleTimeState}\t\t\t\tfrom \"./animators/states/ParticleTimeState\";\nexport {default as ParticleUVState}\t\t\t\t\tfrom \"./animators/states/ParticleUVState\";\nexport {default as ParticleVelocityState}\t\t\tfrom \"./animators/states/ParticleVelocityState\";\nexport {default as SkeletonBinaryLERPState}\t\t\tfrom \"./animators/states/SkeletonBinaryLERPState\";\nexport {default as SkeletonClipState}\t\t\t\tfrom \"./animators/states/SkeletonClipState\";\nexport {default as SkeletonDifferenceState}\t\t\tfrom \"./animators/states/SkeletonDifferenceState\";\nexport {default as SkeletonDirectionalState}\t\tfrom \"./animators/states/SkeletonDirectionalState\";\nexport {default as SkeletonNaryLERPState}\t\t\tfrom \"./animators/states/SkeletonNaryLERPState\";\nexport {default as VertexClipState}\t\t\t\t\tfrom \"./animators/states/VertexClipState\";\nexport {default as CrossfadeTransition}\t\t\t\tfrom \"./animators/transitions/CrossfadeTransition\";\nexport {default as CrossfadeTransitionNode}\t\t\tfrom \"./animators/transitions/CrossfadeTransitionNode\";\nexport {default as CrossfadeTransitionState}\t\tfrom \"./animators/transitions/CrossfadeTransitionState\";\nexport {default as IAnimationTransition}\t\t\tfrom \"./animators/transitions/IAnimationTransition\";\nexport {default as AnimationSetBase}\t\t\t\tfrom \"./animators/AnimationSetBase\";\nexport {default as AnimatorBase}\t\t\t\t\tfrom \"./animators/AnimatorBase\";\nexport {default as ParticleAnimationSet}\t\t\tfrom \"./animators/ParticleAnimationSet\";\nexport {default as ParticleAnimator}\t\t\t\tfrom \"./animators/ParticleAnimator\";\nexport {default as SkeletonAnimationSet}\t\t\tfrom \"./animators/SkeletonAnimationSet\";\nexport {default as SkeletonAnimator}\t\t\t\tfrom \"./animators/SkeletonAnimator\";\nexport {default as VertexAnimationSet}\t\t\t\tfrom \"./animators/VertexAnimationSet\";\nexport {default as VertexAnimator}\t\t\t\t\tfrom \"./animators/VertexAnimator\";",
    "import Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nimport IAbstractionPool \t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_AttributesBuffer\t\t\tfrom \"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tpublic _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\t\n\tpublic get elementsType():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\tpublic get elementsClass():IElementsClassGL\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\t\n\tconstructor(elements:ElementsBase, stage:Stage)\n\t{\n\t\tsuper(elements, stage);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._stage = stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferGL():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferGL(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\t//TODO replace overflow system with something sensible\n\t\t//this._render(renderable, camera, viewProjection);\n\t\t//\n\t\t// if (this._overflow)\n\t\t// \tthis._overflow._iRender(renderable, camera, viewProjection);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = this._elements.numVertices;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_ElementsBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static elementsType:string = \"[elements Line]\";\n\t\n\tpublic get elementsType():string\n\t{\n\t\treturn GL_LineElements.elementsType;\n\t}\n\t\n\tpublic get elementsClass():IElementsClassGL\n\t{\n\t\treturn GL_LineElements;\n\t}\n\t\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//get the projection coordinates\n\t\tvar position0:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\t\tvar position1:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\t\tvar thickness:ShaderRegisterElement = registerCache.getFreeVertexAttribute();\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tregisterCache.getFreeVertexConstant(); // not used\n\t\tvar constOne:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tvar constNegOne:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tvar misc:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\t\t\n\t\tvar q0:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(q0, 1);\n\t\tvar q1:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(q1, 1);\n\t\t\n\t\tvar l:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(l, 1);\n\t\tvar behind:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(behind, 1);\n\t\tvar qclipped:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(qclipped, 1);\n\t\tvar offset:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\tregisterCache.addVertexTempUsages(offset, 1);\n\n\t\treturn \"m44 \" + q0 + \", \" + position0 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 \" + q1 + \", \" + position1 + \", \" + sceneMatrixReg + \"\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub \" + l + \", \" + q1 + \", \" + q0 + \" \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\"slt \" + behind + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub \" + behind + \".y, \" + constOne + \".x, \" + behind + \".x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add \" + offset + \".x, \" + q0 + \".z, \" + misc + \".z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub \" + offset + \".y, \" + q0 + \".z, \" + q1 + \".z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq \" + offset + \".z, \" + offset + \".y \" + constNegOne + \".x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add \" + offset + \".y, \" + offset + \".y, \" + offset + \".z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div \" + offset + \".z, \" + offset + \".x, \" + offset + \".y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul \" + offset + \".xyz, \" + offset + \".zzz, \" + l + \".xyz\t\\n\" + // t(L)\n\t\t\t\"add \" + qclipped + \".xyz, \" + q0 + \".xyz, \" + offset + \".xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul \" + q0 + \", \" + q0 + \", \" + behind + \".yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul \" + qclipped + \", \" + qclipped + \", \" + behind + \".xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add \" + q0 + \", \" + q0 + \", \" + qclipped + \"\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"nrm \" + l + \".xyz, \" + l + \".xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm \" + behind + \".xyz, \" + q0 + \".xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov \" + behind + \".w, \" + constOne + \".x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs \" + qclipped + \".xyz, \" + l + \", \" + behind + \"\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm \" + qclipped + \".xyz, \" + qclipped + \".xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + thickness + \".xxx\t\\n\" + // S *= weight\n\t\t\t\"mov \" + qclipped + \".w, \" + constOne + \".x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 \" + offset + \".x, \" + q0 + \", \" + constNegOne + \"\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul \" + offset + \".x, \" + offset + \".x, \" + misc + \".x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul \" + qclipped + \".xyz, \" + qclipped + \".xyz, \" + offset + \".xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add \" + q0 + \".xyz, \" + q0 + \".xyz, \" + qclipped + \".xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, \" + q0 + \", \" + viewMatrixReg + \"\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\t\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, stage:Stage)\n\t{\n\t\tsuper(lineElements, stage);\n\n\t\tthis._lineElements = lineElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, shader, camera, viewProjection);\n\t\t\n\t\tif (shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(3, this._lineElements.thickness);\n\n\t\tshader.vertexConstantData[4+16] = 1;\n\t\tshader.vertexConstantData[5+16] = 1;\n\t\tshader.vertexConstantData[6+16] = 1;\n\t\tshader.vertexConstantData[7+16] = 1;\n\n\t\tshader.vertexConstantData[10+16] = -1;\n\n\t\tshader.vertexConstantData[12+16] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\t\tshader.vertexConstantData[13+16] = 1/255;\n\t\tshader.vertexConstantData[14+16] = camera.projection.near;\n\n\t\tvar context:IContextGL = this._stage.context;\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\t\n\t\t// projection matrix\n\t\tcamera.projection.matrix.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tthis._calcMatrix.copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, shader.vertexConstantData);\n\t\t\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._stage);\n\t}\n}\n\nexport default GL_LineElements;",
    "import Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TriangleElements\t\t\tfrom \"../elements/GL_TriangleElements\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\t\n\tpublic static elementsType:string = \"[elements Skybox]\";\n\n\tpublic get elementsType():string\n\t{\n\t\treturn GL_SkyboxElements.elementsType;\n\t}\n\t\n\tpublic get elementsClass():IElementsClassGL\n\t{\n\t\treturn GL_SkyboxElements;\n\t}\n\t\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tvar scenePosition:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tshader.scenePositionIndex = scenePosition.index*4;\n\n\t\tvar skyboxScale:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\t\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\n\t\tcode += \"mul \" + temp + \", \" + position + \", \" + skyboxScale + \"\\n\" +\n\t\t\t\"add \" + temp + \", \" + temp + \", \" + scenePosition + \"\\n\";\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tcode += \"m44 \" + temp + \", \" + temp + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + temp + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\tvar index:number = shader.scenePositionIndex;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tshader.vertexConstantData[index++] = 2*pos.x;\n\t\tshader.vertexConstantData[index++] = 2*pos.y;\n\t\tshader.vertexConstantData[index++] = 2*pos.z;\n\t\tshader.vertexConstantData[index++] = 1;\n\t\tshader.vertexConstantData[index++] = shader.vertexConstantData[index++] = shader.vertexConstantData[index++] = camera.projection.far/Math.sqrt(3);\n\t\tshader.vertexConstantData[index] = 1;\n\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(viewProjection);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t\t\n\t\t//set constants\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tthis._skyboxProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tthis._skyboxProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, shader.vertexConstantData);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, shader.fragmentConstantData);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n}\n\nexport default GL_SkyboxElements;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static elementsType:string = \"[elements Triangle]\";\n\n\tpublic get elementsType():string\n\t{\n\t\treturn GL_TriangleElements.elementsType;\n\t}\n\t\n\tpublic get elementsClass():IElementsClassGL\n\t{\n\t\treturn GL_TriangleElements;\n\t}\n\t\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\t\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, stage:Stage)\n\t{\n\t\tsuper(triangleElements, stage);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, shader, camera, viewProjection);\n\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\t}\n\n\tpublic draw(renderable:GL_RenderableBase, shader:ShaderBase, camera:Camera, viewProjection:Matrix3D, count:number, offset:number)\n\t{\n\t\t//set constants\n\t\tif (shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(shader.vertexConstantData, shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.renderSceneTransform);\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shader.vertexConstantData, shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, shader.vertexConstantData);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, shader.fragmentConstantData);\n\n\t\tif (this._indices)\n\t\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, this.numIndices);\n\t\telse\n\t\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, offset, count || this.numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._stage);\n\t}\n}\n\nexport default GL_TriangleElements;",
    "export {default as GL_ElementsBase}\t\t\t\t\tfrom \"./elements/GL_ElementsBase\";\nexport {default as GL_LineElements}\t\t\t\t\tfrom \"./elements/GL_LineElements\";\nexport {default as GL_SkyboxElements}\t\t\t\tfrom \"./elements/GL_SkyboxElements\";\nexport {default as GL_TriangleElements}\t\t\t\tfrom \"./elements/GL_TriangleElements\";\nexport {default as IElementsClassGL}\t\t\t\tfrom \"./elements/IElementsClassGL\";",
    "import ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default AnimationSetError;",
    "export {default as AnimationSetError}\t\t\t\tfrom \"./errors/AnimationSetError\";",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport EventBase\t\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"../animators/states/IAnimationState\";\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport default AnimationStateEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport default AnimatorEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IPass\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport default PassEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport RTTBufferManager\t\t\tfrom \"../managers/RTTBufferManager\";\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport default RTTEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport default ShadingMethodEvent;",
    "export {default as AnimationStateEvent}\t\t\t\tfrom \"./events/AnimationStateEvent\";\nexport {default as AnimatorEvent}\t\t\t\t\tfrom \"./events/AnimatorEvent\";\nexport {default as PassEvent}\t\t\t\t\t\tfrom \"./events/PassEvent\";\nexport {default as RTTEvent}\t\t\t\t\t\tfrom \"./events/RTTEvent\";\nexport {default as ShadingMethodEvent}\t\t\t\tfrom \"./events/ShadingMethodEvent\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DHBlurTask\t\t\tfrom \"../filters/tasks/Filter3DHBlurTask\";\nimport Filter3DVBlurTask\t\t\tfrom \"../filters/tasks/Filter3DVBlurTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport default BlurFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DCompositeTask\t\tfrom \"../filters/tasks/Filter3DCompositeTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport default CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DFXAATask\t\t\t\tfrom \"../filters/tasks/Filter3DFXAATask\";\nimport Filter3DBase\t\t\t\t\tfrom \"../filters/Filter3DBase\";\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport default FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../filters/tasks/Filter3DTaskBase\";\nimport RTTBufferManager from \"../managers/RTTBufferManager\";\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport default Filter3DBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tprivate _overlayTextureIndex:number;\n\tprivate _exposureIndex:number;\n\tprivate _scalingIndex:number;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\t\tvar temp1:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp2, 1);\n\t\tvar temp3:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp3, 1);\n\t\tvar temp4:ShaderRegisterElement = this._registerCache.getFreeFragmentVectorTemp();\n\t\tthis._registerCache.addFragmentTempUsages(temp4, 1);\n\t\t\n\t\t\n\t\tvar inputTexture:ShaderRegisterElement = this._registerCache.getFreeTextureReg();\n\t\tthis._inputTextureIndex = inputTexture.index;\n\t\t\n\t\tvar overlayTexture:ShaderRegisterElement = this._registerCache.getFreeTextureReg();\n\t\tthis._overlayTextureIndex = overlayTexture.index;\n\t\t\n\t\tvar exposure:ShaderRegisterElement = this._registerCache.getFreeFragmentConstant();\n\t\tthis._exposureIndex = exposure.index*4;\n\n\t\tvar scaling:ShaderRegisterElement = this._registerCache.getFreeFragmentConstant();\n\t\tthis._scalingIndex = scaling.index*4;\n\t\t\n\t\tvar code:string;\n\t\t\n\t\tcode = \"tex \" + temp1 + \", \" + this._uvVarying + \", \" + inputTexture + \" <2d,linear,clamp>\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + this._uvVarying + \", \" + scaling + \".zw\\n\" +\n\t\t\t\"add \" + temp2 + \", \" + temp2 + \", \" + scaling + \".xy\\n\" +\n\t\t\t\"tex \" + temp2 + \", \" + temp2 + \", \" + overlayTexture + \" <2d,linear,clamp>\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\" +\n\t\t\t\"add \" + temp2 + \", \" + temp2 + \", \" + exposure + \".xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge \" + temp3 + \", \" + temp1 + \", \" + exposure + \".yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub \" + temp1 + \", \" + temp3 + \", \" + temp1 + \"\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub \" + temp2 + \", \" + temp2 + \", \" + temp3 + \"\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub \" + temp4 + \", \" + temp3 + \", \" + exposure + \".yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div \" + temp2 + \", \" + temp2 + \", \" + temp4 + \"\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, \" + temp2 + \", \" + temp3 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, \" + temp1 + \"\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t\t\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(this._overlayTextureIndex, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport default Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport IProgram\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IProgram\";\n\nimport RTTBufferManager\t\t\t\tfrom \"../../managers/RTTBufferManager\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\n\nclass Filter3DTaskBase\n{\n\tpublic _registerCache:ShaderRegisterCache;\n\t\n\tpublic _positionIndex:number;\n\tpublic _uvIndex:number;;\n\tpublic _inputTextureIndex:number;\n\tpublic _uvVarying:ShaderRegisterElement;\n\t\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t\tthis._registerCache = new ShaderRegisterCache(\"baseline\");\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tthis._registerCache.reset();\n\t\t\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\tvar position:ShaderRegisterElement = this._registerCache.getFreeVertexAttribute();\n\t\tthis._positionIndex = position.index;\n\t\t\n\t\tvar uv:ShaderRegisterElement = this._registerCache.getFreeVertexAttribute();\n\t\tthis._uvIndex = uv.index;\n\t\t\n\t\tthis._uvVarying = this._registerCache.getFreeVarying();\n\t\t\n\t\tvar code:string;\n\t\t\n\t\tcode = \"mov op, \" + position + \"\\n\" + \n\t\t\t\"mov \" + this._uvVarying + \", \" + uv + \"\\n\";\n\t\t\n\t\treturn code;\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport default Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"../../filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, this._data);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DVBlurTask;",
    "export {default as Filter3DCompositeTask}\t\t\tfrom \"./filters/tasks/Filter3DCompositeTask\";\nexport {default as Filter3DFXAATask}\t\t\t\tfrom \"./filters/tasks/Filter3DFXAATask\";\nexport {default as Filter3DHBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DHBlurTask\";\nexport {default as Filter3DTaskBase}\t\t\t\tfrom \"./filters/tasks/Filter3DTaskBase\";\nexport {default as Filter3DVBlurTask}\t\t\t\tfrom \"./filters/tasks/Filter3DVBlurTask\";\nexport {default as BlurFilter3D}\t\t\t\t\tfrom \"./filters/BlurFilter3D\";\nexport {default as CompositeFilter3D}\t\t\t\tfrom \"./filters/CompositeFilter3D\";\nexport {default as Filter3DBase}\t\t\t\t\tfrom \"./filters/Filter3DBase\";\nexport {default as FXAAFilter3D}\t\t\t\t\tfrom \"./filters/FXAAFilter3D\";",
    "import Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ImageUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\nimport RTTEvent\t\t\t\t\t\tfrom \"../events/RTTEvent\";\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport default RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "export {default as RTTBufferManager}\t\t\t\tfrom \"./managers/RTTBufferManager\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():GL_ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn <GL_ElementsBase> this._stage.getAbstraction(elements);\n\t}\n\n\tpublic _pGetSurface():GL_SurfaceBase\n\t{\n\t\treturn this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this._billboard.material || DefaultMaterialManager.getDefaultMaterial(this.renderable));\n\t}\n\n}\n\nexport default GL_Billboard;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():GL_ElementsBase\n\t{\n\t\tthis._offset = this.graphic.offset;\n\t\tthis._count = this.graphic.count;\n\n\t\t\n\t\treturn <GL_ElementsBase> this._stage.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this.graphic.elements) : this.graphic.elements);\n\t}\n\n\n\tpublic _pGetSurface():GL_SurfaceBase\n\t{\n\t\treturn this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this.graphic.material || DefaultMaterialManager.getDefaultMaterial(this.renderable));\n\t}\n}\n\nexport default GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():GL_ElementsBase\n\t{\n\t\tvar elements:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array = new Float32Array(6);\n\t\tvar thickness:Float32Array = new Float32Array(1);\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\telements.setPositions(positions);\n\t\telements.setThickness(thickness);\n\n\t\treturn <GL_ElementsBase> this._stage.getAbstraction(elements);\n\t}\n\n\tpublic _pGetSurface():GL_SurfaceBase\n\t{\n\t\treturn this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this._lineSegment.material || DefaultMaterialManager.getDefaultMaterial(this.renderable));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport default GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport RenderableEvent\t\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onInvalidateSurfaceDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _count:number = 0;\n\tpublic _offset:number = 0;\n\tprivate _elementsGL:GL_ElementsBase;\n\tprivate _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elementsGL():GL_ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elementsGL;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onInvalidateSurfaceDelegate = (event:RenderableEvent) => this._onInvalidateSurface(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_SURFACE, this._onInvalidateSurfaceDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_SURFACE, this._onInvalidateSurfaceDelegate);\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elementsGL = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onInvalidateSurface(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():GL_SurfaceBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tthis._elementsGL.draw(this, pass.shader, camera, viewProjection, this._count, this._offset)\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tpass._setRenderState(this, camera, viewProjection);\n\t\t\n\t\tif (pass.shader.activeElements != this._elementsGL) {\n\t\t\tpass.shader.activeElements = this._elementsGL;\n\t\t\tthis._elementsGL._setRenderState(this, pass.shader, camera, viewProjection);\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elementsGL = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surfaceGL:GL_SurfaceBase = this._pGetSurface();\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : this._surfaceGL.surface.style? this._surfaceGL.surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = this._surfaceGL.surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surfaceGL.surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport default GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport RendererBase\t\t\t\t\tfrom \"../RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_SkyboxElements\t\t\tfrom \"../elements/GL_SkyboxElements\";\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tprivate static _elementsGL:GL_SkyboxElements;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():GL_SkyboxElements\n\t{\n\t\tvar elementsGL:GL_SkyboxElements = GL_SkyboxRenderable._elementsGL;\n\n\t\tif (!elementsGL) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\telements.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\n\t\t\telementsGL = GL_SkyboxRenderable._elementsGL = new GL_SkyboxElements(elements, this._stage);\n\t\t}\n\n\t\treturn elementsGL;\n\t}\n\n\tpublic _pGetSurface():GL_SurfaceBase\n\t{\n\t\treturn this._renderer.getSurfacePool(this.elementsGL).getAbstraction(this._skybox);\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport default GL_SkyboxRenderable;",
    "export {default as GL_BillboardRenderable}\t\t\tfrom \"./renderables/GL_BillboardRenderable\";\nexport {default as GL_GraphicRenderable}\t\t\tfrom \"./renderables/GL_GraphicRenderable\";\nexport {default as GL_LineSegmentRenderable}\t\tfrom \"./renderables/GL_LineSegmentRenderable\";\nexport {default as GL_RenderableBase}\t\t\t\tfrom \"./renderables/GL_RenderableBase\";\nexport {default as GL_SkyboxRenderable}\t\t\t\tfrom \"./renderables/GL_SkyboxRenderable\";",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport LightSources\t\t\t\t\tfrom \"awayjs-display/lib/materials/LightSources\";\n\nimport ContextGLProfile\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProfile\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport ILightingPass\t\t\t\tfrom \"../surfaces/passes/ILightingPass\";\n\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport LightingCompiler\t\t\t\tfrom \"../shaders/compilers/LightingCompiler\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport default LightingShader;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport default RegisterPool;\n",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLTriangleFace\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTriangleFace\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport AnimationRegisterData\t\tfrom \"../animators/data/AnimationRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"../elements/GL_ElementsBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport CompilerBase\t\t\t\t\tfrom \"../shaders/compilers/CompilerBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\t\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\tprivate _numUsedVertexConstants:number;\n\tprivate _numUsedFragmentConstants:number;\n\tprivate _numUsedStreams:number;\n\tprivate _numUsedTextures:number;\n\tprivate _usesAnimation:boolean;\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic get usesAnimation():boolean\n\t{\n\t\treturn this._usesAnimation;\n\t}\n\n\tpublic set usesAnimation(value:boolean)\n\t{\n\t\tif (this._usesAnimation == value)\n\t\t\treturn;\n\n\t\tthis._usesAnimation = value;\n\n\t\tthis.invalidateProgram();\n\t}\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterData:AnimationRegisterData;\n\n\t\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\t\t\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\t\t\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\t\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._numUsedTextures;\n\t}\n\n\tpublic numLights:number;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * \n\t */\n\tpublic skyboxScaleIndex:number;\n\t\n\t/**\n\t * \n\t */\n\tpublic scenePositionIndex:number;\n\t\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * \n\t */\n\tpublic activeElements:GL_ElementsBase;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis._numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis._numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis._numUsedStreams = registerCache.numUsedStreams;\n\t\tthis._numUsedTextures = registerCache.numUsedTextures;\n\n\t\tthis.vertexConstantData = new Float32Array(registerCache.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(registerCache.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t\t\n\t\t// init constant data in pass\n\t\tthis._pass._iInitConstantData(this);\n\t\t\n\t\t//init constant data in animation\n\t\tif (this.usesAnimation)\n\t\t\tthis._pass.animationSet.doneAGALCode(this);\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\tthis.activeElements = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.activeElements = null;\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase = this.createCompiler(this._elementsClass, this._pass);\n\t\tcompiler.compile();\n\n\t\tthis._calcAnimationCode(compiler._pRegisterCache, compiler.shadedTarget, compiler._pSharedRegisters);\n\n\t\t//initialise the required shader constants\n\t\tthis.initConstantData(compiler._pRegisterCache);\n\t\t\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(registerCache:ShaderRegisterCache, shadedTarget:ShaderRegisterElement, sharedRegisters:ShaderRegisterData)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this, registerCache, sharedRegisters);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this, registerCache, sharedRegisters);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, registerCache, shadedTarget);\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = sharedRegisters.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + sharedRegisters.animationTargetRegisters[i] + \", \" + sharedRegisters.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + sharedRegisters.uvTarget + \",\" + sharedRegisters.uvSource + \"\\n\";\n\t\t}\n\t}\n\n\n\tpublic setVertexConst(index:number, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tindex *= 4;\n\t\tthis.vertexConstantData[index++] = x;\n\t\tthis.vertexConstantData[index++] = y;\n\t\tthis.vertexConstantData[index++] = z;\n\t\tthis.vertexConstantData[index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number, data:Float32Array)\n\t{\n\t\tindex *= 4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number, matrix:Matrix3D)\n\t{\n\t\tindex *= 4;\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tthis.vertexConstantData[index++] = rawData[0];\n\t\tthis.vertexConstantData[index++] = rawData[4];\n\t\tthis.vertexConstantData[index++] = rawData[8];\n\t\tthis.vertexConstantData[index++] = rawData[12];\n\t\tthis.vertexConstantData[index++] = rawData[1];\n\t\tthis.vertexConstantData[index++] = rawData[5];\n\t\tthis.vertexConstantData[index++] = rawData[9];\n\t\tthis.vertexConstantData[index++] = rawData[13];\n\t\tthis.vertexConstantData[index++] = rawData[2];\n\t\tthis.vertexConstantData[index++] = rawData[6];\n\t\tthis.vertexConstantData[index++] = rawData[10];\n\t\tthis.vertexConstantData[index++] = rawData[14];\n\t\tthis.vertexConstantData[index++] = rawData[3];\n\t\tthis.vertexConstantData[index++] = rawData[7];\n\t\tthis.vertexConstantData[index++] = rawData[11];\n\t\tthis.vertexConstantData[index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tindex *= 4;\n\t\tthis.fragmentConstantData[index++] = x;\n\t\tthis.fragmentConstantData[index++] = y;\n\t\tthis.fragmentConstantData[index++] = z;\n\t\tthis.fragmentConstantData[index] = w;\n\t}\n}\n\nexport default ShaderBase;",
    "import RegisterPool\t\t\t\t\tfrom \"../shaders/RegisterPool\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t\t\n\t\tthis.reset();\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport default ShaderRegisterCache;",
    "import ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\n\tpublic animatableAttributes:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\tpublic animationTargetRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\tpublic uvSource:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport default ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport default ShaderRegisterElement;",
    "import ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._pSharedRegisters.uvTarget = varying;\n\t\t\tthis._pSharedRegisters.uvSource = uvAttributeReg;\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pSharedRegisters.animatableAttributes.push(this._pRegisterCache.getFreeVertexAttribute());\n\t\tthis._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedPosition);\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.tangentInput);\n\t\t\tthis._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedTangent);\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pSharedRegisters.animatableAttributes.push(this._pSharedRegisters.normalInput);\n\t\t\tthis._pSharedRegisters.animationTargetRegisters.push(this._pSharedRegisters.animatedNormal);\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():ShaderRegisterElement\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget;\n\t}\n}\n\nexport default CompilerBase;",
    "import LightingShader\t\t\t\tfrom \"../../shaders/LightingShader\";\nimport CompilerBase\t\t\t\t\tfrom \"../../shaders/compilers/CompilerBase\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport ILightingPass\t\t\t\tfrom \"../../surfaces/passes/ILightingPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport default LightingCompiler;",
    "export {default as CompilerBase}\t\t\t\t\tfrom \"./shaders/compilers/CompilerBase\";\nexport {default as LightingCompiler}\t\t\t\tfrom \"./shaders/compilers/LightingCompiler\";\nexport {default as LightingShader}\t\t\t\t\tfrom \"./shaders/LightingShader\";\nexport {default as RegisterPool}\t\t\t\t\tfrom \"./shaders/RegisterPool\";\nexport {default as ShaderBase}\t\t\t\t\t\tfrom \"./shaders/ShaderBase\";\nexport {default as ShaderRegisterCache}\t\t\t\tfrom \"./shaders/ShaderRegisterCache\";\nexport {default as ShaderRegisterData}\t\t\t\tfrom \"./shaders/ShaderRegisterData\";\nexport {default as ShaderRegisterElement}\t\t\tfrom \"./shaders/ShaderRegisterElement\";",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport default RenderableMergeSort;",
    "import IEntitySorter\t\t\t\tfrom \"../sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport default RenderableNullSort;",
    "export {default as IEntitySorter}\t\t\t\t\tfrom \"./sort/IEntitySorter\";\nexport {default as RenderableMergeSort}\t\t\t\tfrom \"./sort/RenderableMergeSort\";\nexport {default as RenderableNullSort}\t\t\t\tfrom \"./sort/RenderableNullSort\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\n\nimport BasicMaterialPass\t\t\tfrom \"../surfaces/passes/BasicMaterialPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport default GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default DistanceRender;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\n\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\n\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"../surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport default GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"../animators/AnimatorBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport SurfacePool\t\t\t\t\tfrom \"../surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _usesAnimation:boolean = true;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar usesAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\t\t\tshader.usesAnimation = usesAnimation;\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\t\t\n\t\tif (this._usesAnimation != usesAnimation) {\n\t\t\tthis._usesAnimation = usesAnimation;\n\n\t\t\tvar renderables:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = renderables.length;\n\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\trenderables[j].invalidateElements();\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar renderables:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = renderables.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tvar shader:ShaderBase;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tshader = this._passes[i].shader;\n\t\t\t\tshader.usesAnimation = false;\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (renderables[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> renderables[j].animator).testGPUCompatibility(shader);\n\t\t\t}\n\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../surfaces/passes/IPass\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateProgram();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._setRenderState(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport IElementsClassGL\t\t\t\tfrom \"../elements/IElementsClassGL\";\nimport ISurfaceClassGL\t\t\t\tfrom \"../surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport default SurfacePool;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../../shaders/ShaderRegisterElement\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport PassBase\t\t\t\t\t\tfrom \"../../surfaces/passes/PassBase\";\nimport GL_TextureBase\t\t\t\tfrom \"../../textures/GL_TextureBase\";\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport default BasicMaterialPass;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\tfrom \"../../animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"../../events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"../../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../../shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"../../surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"../../elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"../../renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"../../surfaces/GL_SurfaceBase\";\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateProgram();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _setRenderState(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._setRenderState(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default PassBase;",
    "export {default as BasicMaterialPass}\t\t\t\tfrom \"./surfaces/passes/BasicMaterialPass\";\nexport {default as ILightingPass}\t\t\t\t\tfrom \"./surfaces/passes/ILightingPass\";\nexport {default as IPass}\t\t\t\t\t\t\tfrom \"./surfaces/passes/IPass\";\nexport {default as PassBase}\t\t\t\t\t\tfrom \"./surfaces/passes/PassBase\";\nexport {default as GL_BasicMaterialSurface}\t\t\tfrom \"./surfaces/GL_BasicMaterialSurface\";\nexport {default as GL_DepthSurface}\t\t\t\t\tfrom \"./surfaces/GL_DepthSurface\";\nexport {default as GL_DistanceSurface}\t\t\t\tfrom \"./surfaces/GL_DistanceSurface\";\nexport {default as GL_SkyboxSurface}\t\t\t\tfrom \"./surfaces/GL_SkyboxSurface\";\nexport {default as GL_SurfaceBase}\t\t\t\t\tfrom \"./surfaces/GL_SurfaceBase\";\nexport {default as GL_SurfacePassBase}\t\t\t\tfrom \"./surfaces/GL_SurfacePassBase\";\nexport {default as ISurfaceClassGL}\t\t\t\t\tfrom \"./surfaces/ISurfaceClassGL\";\nexport {default as SurfacePool}\t\t\t\t\t\tfrom \"./surfaces/SurfacePool\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport GL_Image2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Image2D\";\nimport GL_Sampler2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Sampler2D\";\n\nimport MappingMode\t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport GL_SamplerCube\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerCube\";\n\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"../textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport default GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ContextGLTextureFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTextureFormat\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"../surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"../renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"../shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"../shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"../shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"../shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport default GL_TextureBase;",
    "export {default as GL_Single2DTexture}\t\t\t\tfrom \"./textures/GL_Single2DTexture\";\nexport {default as GL_SingleCubeTexture}\t\t\tfrom \"./textures/GL_SingleCubeTexture\";\nexport {default as GL_TextureBase}\t\t\t\t\tfrom \"./textures/GL_TextureBase\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix3DUtils\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\n\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport default Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport default ParticleGraphicsTransform;",
    "export {default as Merge}\t\t\t\t\t\t\tfrom \"./tools/commands/Merge\";\nexport {default as ParticleGraphicsTransform}\t\tfrom \"./tools/data/ParticleGraphicsTransform\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport ParticleGraphicsTransform\t\tfrom \"../tools/data/ParticleGraphicsTransform\";\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport default ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport default PerspectiveMatrix3D;",
    "export {default as ParticleGraphicsHelper}\t\t\tfrom \"./utils/ParticleGraphicsHelper\";\nexport {default as PerspectiveMatrix3D}\t\t\t\tfrom \"./utils/PerspectiveMatrix3D\";"
  ],
  "sourceRoot": ""
}