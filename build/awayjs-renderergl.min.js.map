{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-renderergl.js",
    "../index.ts",
    "lib/DefaultRenderer.ts",
    "lib/DepthRenderer.ts",
    "lib/DistanceRenderer.ts",
    "lib/Filter3DRenderer.ts",
    "lib/RendererBase.ts",
    "lib/lib/animators/AnimationSetBase.ts",
    "lib/lib/animators/AnimatorBase.ts",
    "lib/lib/animators/ParticleAnimationSet.ts",
    "lib/lib/animators/ParticleAnimator.ts",
    "lib/lib/animators/SkeletonAnimationSet.ts",
    "lib/lib/animators/SkeletonAnimator.ts",
    "lib/lib/animators/VertexAnimationSet.ts",
    "lib/lib/animators/VertexAnimator.ts",
    "lib/animators/lib/animators/data/AnimationElements.ts",
    "lib/animators/lib/animators/data/AnimationRegisterCache.ts",
    "lib/animators/lib/animators/data/ColorSegmentPoint.ts",
    "lib/animators/lib/animators/data/JointPose.ts",
    "lib/animators/lib/animators/data/ParticleAnimationData.ts",
    "lib/animators/lib/animators/data/ParticlePropertiesMode.ts",
    "lib/animators/lib/animators/data/ParticleProperties.ts",
    "lib/animators/lib/animators/data/SkeletonJoint.ts",
    "lib/animators/lib/animators/data/SkeletonPose.ts",
    "lib/animators/lib/animators/data/Skeleton.ts",
    "lib/animators/lib/animators/data/VertexAnimationMode.ts",
    "lib/animators/lib/animators/nodes/AnimationClipNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleAccelerationNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBezierCurveNode.ts",
    "lib/animators/lib/animators/nodes/ParticleBillboardNode.ts",
    "lib/animators/lib/animators/nodes/ParticleColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleFollowNode.ts",
    "lib/animators/lib/animators/nodes/ParticleInitialColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleNodeBase.ts",
    "lib/animators/lib/animators/nodes/ParticleOrbitNode.ts",
    "lib/animators/lib/animators/nodes/ParticleOscillatorNode.ts",
    "lib/animators/lib/animators/nodes/ParticlePositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToHeadingNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotateToPositionNode.ts",
    "lib/animators/lib/animators/nodes/ParticleRotationalVelocityNode.ts",
    "lib/animators/lib/animators/nodes/ParticleScaleNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSegmentedColorNode.ts",
    "lib/animators/lib/animators/nodes/ParticleSpriteSheetNode.ts",
    "lib/animators/lib/animators/nodes/ParticleTimeNode.ts",
    "lib/animators/lib/animators/nodes/ParticleUVNode.ts",
    "lib/animators/lib/animators/nodes/ParticleVelocityNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonBinaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonClipNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDifferenceNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonDirectionalNode.ts",
    "lib/animators/lib/animators/nodes/SkeletonNaryLERPNode.ts",
    "lib/animators/lib/animators/nodes/VertexClipNode.ts",
    "lib/animators/lib/animators/states/AnimationClipState.ts",
    "lib/animators/lib/animators/states/AnimationStateBase.ts",
    "lib/animators/lib/animators/states/ParticleAccelerationState.ts",
    "lib/animators/lib/animators/states/ParticleBezierCurveState.ts",
    "lib/animators/lib/animators/states/ParticleBillboardState.ts",
    "lib/animators/lib/animators/states/ParticleColorState.ts",
    "lib/animators/lib/animators/states/ParticleFollowState.ts",
    "lib/animators/lib/animators/states/ParticleInitialColorState.ts",
    "lib/animators/lib/animators/states/ParticleOrbitState.ts",
    "lib/animators/lib/animators/states/ParticleOscillatorState.ts",
    "lib/animators/lib/animators/states/ParticlePositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToHeadingState.ts",
    "lib/animators/lib/animators/states/ParticleRotateToPositionState.ts",
    "lib/animators/lib/animators/states/ParticleRotationalVelocityState.ts",
    "lib/animators/lib/animators/states/ParticleScaleState.ts",
    "lib/animators/lib/animators/states/ParticleSegmentedColorState.ts",
    "lib/animators/lib/animators/states/ParticleSpriteSheetState.ts",
    "lib/animators/lib/animators/states/ParticleStateBase.ts",
    "lib/animators/lib/animators/states/ParticleTimeState.ts",
    "lib/animators/lib/animators/states/ParticleUVState.ts",
    "lib/animators/lib/animators/states/ParticleVelocityState.ts",
    "lib/animators/lib/animators/states/SkeletonBinaryLERPState.ts",
    "lib/animators/lib/animators/states/SkeletonClipState.ts",
    "lib/animators/lib/animators/states/SkeletonDifferenceState.ts",
    "lib/animators/lib/animators/states/SkeletonDirectionalState.ts",
    "lib/animators/lib/animators/states/SkeletonNaryLERPState.ts",
    "lib/animators/lib/animators/states/VertexClipState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionNode.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransitionState.ts",
    "lib/animators/lib/animators/transitions/CrossfadeTransition.ts",
    "lib/animators.ts",
    "lib/lib/elements/ElementsPool.ts",
    "lib/lib/elements/GL_ElementsBase.ts",
    "lib/lib/elements/GL_LineElements.ts",
    "lib/lib/elements/GL_SkyboxElements.ts",
    "lib/lib/elements/GL_TriangleElements.ts",
    "lib/elements.ts",
    "lib/lib/errors/AnimationSetError.ts",
    "lib/errors.ts",
    "lib/lib/events/AnimationStateEvent.ts",
    "lib/lib/events/AnimatorEvent.ts",
    "lib/lib/events/PassEvent.ts",
    "lib/lib/events/RTTEvent.ts",
    "lib/lib/events/ShadingMethodEvent.ts",
    "lib/events.ts",
    "lib/lib/filters/BlurFilter3D.ts",
    "lib/lib/filters/CompositeFilter3D.ts",
    "lib/lib/filters/FXAAFilter3D.ts",
    "lib/lib/filters/Filter3DBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DCompositeTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DFXAATask.ts",
    "lib/filters/lib/filters/tasks/Filter3DHBlurTask.ts",
    "lib/filters/lib/filters/tasks/Filter3DTaskBase.ts",
    "lib/filters/lib/filters/tasks/Filter3DVBlurTask.ts",
    "lib/filters.ts",
    "lib/lib/managers/RTTBufferManager.ts",
    "lib/managers.ts",
    "lib/lib/renderables/GL_BillboardRenderable.ts",
    "lib/lib/renderables/GL_GraphicRenderable.ts",
    "lib/lib/renderables/GL_LineSegmentRenderable.ts",
    "lib/lib/renderables/GL_RenderableBase.ts",
    "lib/lib/renderables/GL_SkyboxRenderable.ts",
    "lib/renderables.ts",
    "lib/lib/shaders/LightingShader.ts",
    "lib/lib/shaders/RegisterPool.ts",
    "lib/lib/shaders/ShaderBase.ts",
    "lib/lib/shaders/ShaderRegisterCache.ts",
    "lib/lib/shaders/ShaderRegisterData.ts",
    "lib/lib/shaders/ShaderRegisterElement.ts",
    "lib/shaders/lib/shaders/compilers/CompilerBase.ts",
    "lib/shaders/lib/shaders/compilers/LightingCompiler.ts",
    "lib/shaders.ts",
    "lib/lib/sort/RenderableMergeSort.ts",
    "lib/lib/sort/RenderableNullSort.ts",
    "lib/sort.ts",
    "lib/lib/surfaces/GL_BasicMaterialSurface.ts",
    "lib/lib/surfaces/GL_DepthSurface.ts",
    "lib/lib/surfaces/GL_DistanceSurface.ts",
    "lib/lib/surfaces/GL_SkyboxSurface.ts",
    "lib/lib/surfaces/GL_SurfaceBase.ts",
    "lib/lib/surfaces/GL_SurfacePassBase.ts",
    "lib/lib/surfaces/SurfacePool.ts",
    "lib/surfaces/lib/surfaces/passes/BasicMaterialPass.ts",
    "lib/surfaces/lib/surfaces/passes/PassBase.ts",
    "lib/surfaces.ts",
    "lib/lib/textures/GL_Single2DTexture.ts",
    "lib/lib/textures/GL_SingleCubeTexture.ts",
    "lib/lib/textures/GL_TextureBase.ts",
    "lib/textures.ts",
    "lib/tools/lib/tools/commands/Merge.ts",
    "lib/tools/lib/tools/data/ParticleGraphicsTransform.ts",
    "lib/tools.ts",
    "lib/lib/utils/ParticleGraphicsHelper.ts",
    "lib/lib/utils/PerspectiveMatrix3D.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "animators",
    "elements",
    "errors",
    "events",
    "filters",
    "managers",
    "renderables",
    "shaders",
    "sort",
    "surfaces",
    "textures",
    "tools",
    "utils",
    "DefaultRenderer_1",
    "DefaultRenderer",
    "default",
    "DepthRenderer_1",
    "DepthRenderer",
    "DistanceRenderer_1",
    "DistanceRenderer",
    "Filter3DRenderer_1",
    "Filter3DRenderer",
    "RendererBase_1",
    "RendererBase",
    "BasicMaterial_1",
    "Skybox_1",
    "Billboard_1",
    "LineSegment_1",
    "LineElements_1",
    "TriangleElements_1",
    "Graphic_1",
    "Single2DTexture_1",
    "SingleCubeTexture_1",
    "SurfacePool",
    "registerAbstraction",
    "GL_BasicMaterialSurface",
    "GL_SkyboxSurface",
    "ElementsPool",
    "GL_LineElements",
    "GL_TriangleElements",
    "ShaderBase",
    "GL_Single2DTexture",
    "GL_SingleCubeTexture",
    "GL_BillboardRenderable",
    "GL_LineSegmentRenderable",
    "GL_GraphicRenderable",
    "GL_SkyboxRenderable",
    "awayjs-display/lib/display/Billboard",
    "undefined",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/graphics/LineElements",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-renderergl/lib/DefaultRenderer",
    "awayjs-renderergl/lib/DepthRenderer",
    "awayjs-renderergl/lib/DistanceRenderer",
    "awayjs-renderergl/lib/Filter3DRenderer",
    "awayjs-renderergl/lib/RendererBase",
    "awayjs-renderergl/lib/animators",
    "awayjs-renderergl/lib/elements",
    "awayjs-renderergl/lib/errors",
    "awayjs-renderergl/lib/events",
    "awayjs-renderergl/lib/filters",
    "awayjs-renderergl/lib/managers",
    "awayjs-renderergl/lib/renderables",
    "awayjs-renderergl/lib/shaders",
    "awayjs-renderergl/lib/sort",
    "awayjs-renderergl/lib/surfaces",
    "awayjs-renderergl/lib/textures",
    "awayjs-renderergl/lib/tools",
    "awayjs-renderergl/lib/utils",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "Object",
    "create",
    "BitmapImage2D_1",
    "Matrix3D_1",
    "Vector3D_1",
    "ContextGLCompareMode_1",
    "ContextGLClearMask_1",
    "GL_SkyboxElements_1",
    "RTTBufferManager_1",
    "SurfacePool_1",
    "_super",
    "stage",
    "forceSoftware",
    "profile",
    "mode",
    "_skyboxProjection",
    "_antiAlias",
    "_directionalLights",
    "Array",
    "_pointLights",
    "_lightProbes",
    "shareContext",
    "_pRttBufferManager",
    "getInstance",
    "_pStage",
    "_pDepthRenderer",
    "_pDistanceRenderer",
    "_width",
    "width",
    "window",
    "innerWidth",
    "viewWidth",
    "_height",
    "height",
    "innerHeight",
    "viewHeight",
    "_skyBoxSurfacePool",
    "defineProperty",
    "get",
    "set",
    "value",
    "_pBackBufferInvalid",
    "enumerable",
    "configurable",
    "_depthPrepass",
    "_pFilter3DRenderer",
    "dispose",
    "_pRequireDepthRender",
    "requireDepthRender",
    "_pDepthRender",
    "enterNode",
    "node",
    "enter",
    "debugVisible",
    "applyEntity",
    "bounds",
    "boundsPrimitive",
    "render",
    "camera",
    "scene",
    "recoverFromDisposal",
    "pUpdateBackBuffer",
    "_pContext",
    "clear",
    "DEPTH",
    "textureRatioX",
    "textureRatioY",
    "pRenderSceneDepthToTexture",
    "pRenderDepthPrepass",
    "_iRender",
    "getMainInputTexture",
    "renderToTextureRect",
    "_pScissorRect",
    "present",
    "bufferClear",
    "pExecuteRender",
    "target",
    "scissorRect",
    "surfaceSelector",
    "updateLights",
    "len",
    "light",
    "shadowMapper",
    "shadowsEnabled",
    "autoUpdateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "pDraw",
    "_skybox",
    "setDepthTest",
    "ALWAYS",
    "drawSkybox",
    "renderable",
    "getAbstraction",
    "renderSceneTransform",
    "getRenderSceneTransform",
    "_cameraTransform",
    "updateSkyboxProjection",
    "pass",
    "surfaceGL",
    "surface",
    "passes",
    "activatePass",
    "deactivatePass",
    "near",
    "copyFrom",
    "_pRttViewProjectionMatrix",
    "copyRowTo",
    "camPos",
    "scenePosition",
    "cx",
    "x",
    "cy",
    "y",
    "cz",
    "z",
    "cw",
    "Math",
    "sqrt",
    "signX",
    "signY",
    "inverse",
    "clone",
    "invert",
    "q",
    "transformVector",
    "w",
    "copyRowFrom",
    "applyDirectionalLight",
    "entity",
    "push",
    "applyLightProbe",
    "applyPointLight",
    "applySkybox",
    "disableColor",
    "_pDepthTextureInvalid",
    "initDepthTexture",
    "context",
    "configureBackBuffer",
    "textureWidth",
    "textureHeight",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-renderergl/lib/elements/GL_SkyboxElements",
    "awayjs-renderergl/lib/managers/RTTBufferManager",
    "awayjs-renderergl/lib/surfaces/SurfacePool",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "GL_DepthSurface_1",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iCollectionMark",
    "isCastingShadow",
    "awayjs-renderergl/lib/surfaces/GL_DepthSurface",
    "GL_DistanceSurface_1",
    "awayjs-renderergl/lib/surfaces/GL_DistanceSurface",
    "ContextGLDrawMode_1",
    "ContextGLBlendFactor_1",
    "ContextGLVertexBufferFormat_1",
    "RTTEvent_1",
    "_this",
    "_filterSizesInvalid",
    "_onRTTResizeDelegate",
    "event",
    "onRTTResize",
    "_stage",
    "_rttManager",
    "addEventListener",
    "RESIZE",
    "_requireDepthRender",
    "_filterTasksInvalid",
    "updateFilterTasks",
    "_mainInputTexture",
    "_filters",
    "updateFilterSizes",
    "_tasks",
    "filter",
    "setRenderTargets",
    "concat",
    "tasks",
    "depthTexture",
    "task",
    "indexBuffer",
    "vertexBuffer",
    "renderToTextureVertexBuffer",
    "update",
    "setProgram",
    "getProgram",
    "setVertexBufferAt",
    "FLOAT_2",
    "setRenderTarget",
    "activate",
    "renderToScreenVertexBuffer",
    "setBlendFactors",
    "ONE",
    "ZERO",
    "drawIndices",
    "TRIANGLES",
    "deactivate",
    "setTextureAt",
    "rttManager",
    "removeEventListener",
    "awayjs-renderergl/lib/events/RTTEvent",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "Matrix3DUtils_1",
    "Point_1",
    "Rectangle_1",
    "EventDispatcher_1",
    "RendererEvent_1",
    "AGALMiniAssembler_1",
    "StageEvent_1",
    "StageManager_1",
    "ElementsPool_1",
    "RenderableMergeSort_1",
    "surfaceClassGL",
    "_objectPools",
    "_abstractionPool",
    "_activeMasksConfig",
    "_registeredMasks",
    "_numUsedStreams",
    "_numUsedTextures",
    "_cameraForward",
    "_viewPort",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_backgroundAlpha",
    "_localPos",
    "_globalPos",
    "_pNumElements",
    "_disableColor",
    "_renderBlended",
    "_numCullPlanes",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onContextUpdateDelegate",
    "onContextUpdate",
    "renderableSorter",
    "getFreeStage",
    "CONTEXT_CREATED",
    "CONTEXT_RECREATED",
    "VIEWPORT_UPDATED",
    "_abstractionClassPool",
    "_customCullPlanes",
    "updateGlobalPos",
    "notifyScissorUpdate",
    "id",
    "assetType",
    "clearAbstraction",
    "getSurfacePool",
    "renderableClass",
    "assetClass",
    "renderableGL",
    "shader",
    "numUsedStreams",
    "numUsedTextures",
    "programData",
    "program",
    "createProgram",
    "vertexByteCode",
    "assemble",
    "vertexString",
    "data",
    "fragmentByteCode",
    "fragmentString",
    "upload",
    "_iActivate",
    "_iDeactivate",
    "_viewportDirty",
    "_scissorDirty",
    "_pBlendedRenderableHead",
    "_pOpaqueRenderableHead",
    "_cullPlanes",
    "frustumPlanes",
    "_cameraPosition",
    "sceneTransform",
    "getForward",
    "traversePartitions",
    "sortOpaqueRenderables",
    "sortBlendedRenderables",
    "viewProjection",
    "appendScale",
    "_iRenderCascades",
    "numCascades",
    "scissorRects",
    "cameras",
    "LESS",
    "head",
    "first",
    "LESS_EQUAL",
    "_snapshotRequired",
    "_snapshotBitmapImage2D",
    "drawToBitmapImage2D",
    "queueSnapshot",
    "bmd",
    "setColorMask",
    "drawRenderables",
    "renderableGL2",
    "setStencilActions",
    "gl",
    "disable",
    "STENCIL_TEST",
    "_maskConfig",
    "_surface",
    "alphaThreshold",
    "next",
    "_activeMasksDirty",
    "_checkMasksConfig",
    "masksConfig",
    "stencilFunc",
    "stencilOp",
    "KEEP",
    "_renderMasks",
    "sourceEntity",
    "_iAssignedMasks",
    "maskId",
    "_registerMask",
    "_scissorUpdated",
    "SCISSOR_UPDATED",
    "dispatchEvent",
    "notifyViewportUpdate",
    "_viewPortUpdated",
    "viewPort",
    "isInFrustum",
    "_sourceEntity",
    "_zIndex",
    "zOffset",
    "subtract",
    "dotProduct",
    "_renderSceneTransform",
    "_acceptTraverser",
    "applyRenderable",
    "surfaceID",
    "renderOrderId",
    "cascaded",
    "zIndex",
    "_iAssignedMaskId",
    "_iMasksConfig",
    "requiresBlending",
    "numElements",
    "obj",
    "masks",
    "enable",
    "REPLACE",
    "numLayers",
    "numRenderables",
    "children",
    "numChildren",
    "mask",
    "EQUAL",
    "INCR",
    "j",
    "k",
    "_drawMask",
    "childConfig",
    "activeNumChildren",
    "activeChildConfig",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-renderergl/lib/elements/ElementsPool",
    "awayjs-renderergl/lib/sort/RenderableMergeSort",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "awayjs-stagegl/lib/events/StageEvent",
    "awayjs-stagegl/lib/managers/StageManager",
    "awayjs-renderergl/lib/animators/AnimationSetBase",
    "AssetBase_1",
    "AbstractMethodError_1",
    "AnimationSetError_1",
    "AnimationSetBase",
    "_animations",
    "_animationNames",
    "_animationDictionary",
    "_pFindTempReg",
    "exclude",
    "excludeAnother",
    "reg",
    "indexOf",
    "_usesCPU",
    "resetGPUCompatibility",
    "cancelGPUCompatibility",
    "getAGALVertexCode",
    "getAGALFragmentCode",
    "shadedTarget",
    "getAGALUVCode",
    "doneAGALCode",
    "hasAnimation",
    "name",
    "getAnimation",
    "addAnimation",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-renderergl/lib/errors/AnimationSetError",
    "awayjs-renderergl/lib/animators/AnimatorBase",
    "RequestAnimationFrame_1",
    "getTimer_1",
    "AnimatorEvent_1",
    "AnimatorBase",
    "animationSet",
    "_autoUpdate",
    "_time",
    "_playbackSpeed",
    "_pOwners",
    "_pAbsoluteTime",
    "_animationStates",
    "updatePosition",
    "_pAnimationSet",
    "_broadcaster",
    "onEnterFrame",
    "getAnimationState",
    "className",
    "stateClass",
    "uID",
    "getAnimationStateByName",
    "_pActiveState",
    "_pActiveAnimationName",
    "start",
    "stop",
    "phase",
    "setRenderState",
    "vertexConstantOffset",
    "vertexStreamOffset",
    "_isPlaying",
    "hasEventListener",
    "START",
    "_startEvent",
    "STOP",
    "_stopEvent",
    "time",
    "dt",
    "playbackSpeed",
    "_pUpdateDeltaTime",
    "reset",
    "offset",
    "addOwner",
    "sprite",
    "removeOwner",
    "splice",
    "applyPositionDelta",
    "delta",
    "positionDelta",
    "dist",
    "transform",
    "translateLocal",
    "dispatchCycleEvent",
    "CYCLE_COMPLETE",
    "_cycleEvent",
    "testGPUCompatibility",
    "getRenderableElements",
    "sourceElements",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-renderergl/lib/events/AnimatorEvent",
    "awayjs-renderergl/lib/animators/ParticleAnimationSet",
    "AnimationSetBase_1",
    "AnimationRegisterCache_1",
    "AnimationElements_1",
    "ParticleAnimationData_1",
    "ParticleProperties_1",
    "ParticlePropertiesMode_1",
    "ParticleTimeNode_1",
    "ParticleAnimationSet",
    "usesDuration",
    "usesLooping",
    "usesDelay",
    "_animationElements",
    "_particleNodes",
    "_localDynamicNodes",
    "_localStaticNodes",
    "_totalLenOfOneVertex",
    "shareAnimationGraphics",
    "_timeNode",
    "_iProcessAnimationSetting",
    "LOCAL_STATIC",
    "_iDataOffset",
    "dataLength",
    "LOCAL_DYNAMIC",
    "priority",
    "_iAnimationRegisterCache",
    "animationRegisterCache",
    "numUsedVertexConstants",
    "vertexAttributesOffset",
    "varyingsOffset",
    "numUsedVaryings",
    "fragmentConstantOffset",
    "numUsedFragmentConstants",
    "hasUVNode",
    "needVelocity",
    "hasBillboard",
    "sourceRegisters",
    "animatableAttributes",
    "targetRegisters",
    "animationTargetRegisters",
    "needFragmentAnimation",
    "usesFragmentAnimation",
    "needUVAnimation",
    "usesUVTransform",
    "hasColorAddNode",
    "hasColorMulNode",
    "getInitCode",
    "POST_PRIORITY",
    "getCombinationCode",
    "COLOR_PRIORITY",
    "initColorRegisters",
    "getColorPassCode",
    "setUVSourceAndTarget",
    "uvSource",
    "uvTarget",
    "uvAttribute",
    "toString",
    "uvVar",
    "getColorCombinationCode",
    "setDataLength",
    "setVertexConst",
    "vertexZeroConst",
    "index",
    "key",
    "getAnimationElements",
    "graphic",
    "animationElements",
    "_iGenerateAnimationElements",
    "parent",
    "graphics",
    "initParticleFunc",
    "newAnimationElements",
    "localNode",
    "count",
    "getGraphicAt",
    "createVertexData",
    "numVertices",
    "particles",
    "particlesLength",
    "numParticles",
    "particleProperties",
    "particle",
    "oneDataLen",
    "oneDataOffset",
    "counterForVertex",
    "counterForOneData",
    "oneData",
    "vertexData",
    "vertexLength",
    "startingOffset",
    "vertexOffset",
    "total",
    "startTime",
    "duration",
    "delay",
    "initParticleScope",
    "_iGeneratePropertyOfOneParticle",
    "particleIndex",
    "numProcessedVertices",
    "animationParticles",
    "awayjs-renderergl/lib/animators/data/AnimationElements",
    "awayjs-renderergl/lib/animators/data/AnimationRegisterCache",
    "awayjs-renderergl/lib/animators/data/ParticleAnimationData",
    "awayjs-renderergl/lib/animators/data/ParticleProperties",
    "awayjs-renderergl/lib/animators/data/ParticlePropertiesMode",
    "awayjs-renderergl/lib/animators/nodes/ParticleTimeNode",
    "awayjs-renderergl/lib/animators/ParticleAnimator",
    "ContextGLProgramType_1",
    "AnimatorBase_1",
    "ParticleAnimator",
    "particleAnimationSet",
    "_animationParticleStates",
    "_animatorParticleStates",
    "_timeParticleStates",
    "_animatorSubGeometries",
    "_particleAnimationSet",
    "state",
    "particleNodes",
    "needUpdateTime",
    "animatorElements",
    "getAnimatorElements",
    "setProgramConstantsFromArray",
    "VERTEX",
    "vertexConstantData",
    "numVertexConstant",
    "numFragmentConstant",
    "FRAGMENT",
    "fragmentConstantData",
    "resetTime",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "awayjs-renderergl/lib/animators/SkeletonAnimationSet",
    "SkeletonAnimationSet",
    "jointsPerVertex",
    "_jointsPerVertex",
    "indexOffset0",
    "indexOffset1",
    "indexOffset2",
    "indexStream",
    "weightStream",
    "indices",
    "weights",
    "temp1",
    "temp2",
    "dot",
    "src",
    "awayjs-renderergl/lib/animators/SkeletonAnimator",
    "ElementsEvent_1",
    "JointPose_1",
    "SkeletonPose_1",
    "AnimationStateEvent_1",
    "SkeletonAnimator",
    "skeleton",
    "forceCPU",
    "_globalPose",
    "_morphedElements",
    "_morphedElementsDirty",
    "_skeleton",
    "_forceCPU",
    "_numJoints",
    "numJoints",
    "_globalMatrices",
    "Float32Array",
    "_onTransitionCompleteDelegate",
    "onTransitionComplete",
    "_onIndicesUpdateDelegate",
    "onIndicesUpdate",
    "_onVerticesUpdateDelegate",
    "onVerticesUpdate",
    "_globalPropertiesDirty",
    "updateGlobalProperties",
    "_useCondensedIndices",
    "play",
    "transition",
    "NaN",
    "_pActiveNode",
    "getAnimationNode",
    "TRANSITION_COMPLETE",
    "_activeSkeletonState",
    "isNaN",
    "useCondensedIndices",
    "updateCondensedMatrices",
    "condensedIndexLookUp",
    "_condensedMatrices",
    "usesCPU",
    "morphElements",
    "jointIndexIndex",
    "jointWeightIndex",
    "srcIndex",
    "localToGlobalPose",
    "getSkeletonPose",
    "mtxOffset",
    "globalPoses",
    "jointPoses",
    "raw",
    "ox",
    "oy",
    "oz",
    "ow",
    "xy2",
    "xz2",
    "xw2",
    "yz2",
    "yw2",
    "zw2",
    "n11",
    "n12",
    "n13",
    "n21",
    "n22",
    "n23",
    "n31",
    "n32",
    "n33",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "joints",
    "pose",
    "quat",
    "vec",
    "orientation",
    "translation",
    "inverseBindPose",
    "targetElements",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "INVALIDATE_INDICES",
    "INVALIDATE_VERTICES",
    "sourcePositions",
    "positions",
    "sourceNormals",
    "normals",
    "sourceTangents",
    "tangents",
    "posDim",
    "dimensions",
    "jointIndices",
    "jointWeights",
    "targetPositions",
    "targetNormals",
    "targetTangents",
    "i0",
    "i1",
    "vx",
    "vy",
    "vz",
    "nx",
    "ny",
    "nz",
    "tx",
    "ty",
    "tz",
    "weight",
    "vertX",
    "vertY",
    "vertZ",
    "normX",
    "normY",
    "normZ",
    "tangX",
    "tangY",
    "tangZ",
    "setPositions",
    "setNormals",
    "setTangents",
    "sourcePose",
    "targetPose",
    "globalJointPose",
    "numJointPoses",
    "parentIndex",
    "joint",
    "parentPose",
    "or",
    "tr",
    "x1",
    "y1",
    "z1",
    "w1",
    "x2",
    "y2",
    "z2",
    "w2",
    "x3",
    "y3",
    "z3",
    "type",
    "animationNode",
    "animationState",
    "setIndices",
    "morphGraphics",
    "attributesView",
    "uvs",
    "setUVs",
    "getCustomAtributes",
    "setCustomAttributes",
    "awayjs-display/lib/events/ElementsEvent",
    "awayjs-renderergl/lib/animators/data/JointPose",
    "awayjs-renderergl/lib/animators/data/SkeletonPose",
    "awayjs-renderergl/lib/events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/VertexAnimationSet",
    "VertexAnimationMode_1",
    "VertexAnimationSet",
    "numPoses",
    "blendMode",
    "_numPoses",
    "_blendMode",
    "ABSOLUTE",
    "getAbsoluteAGALCode",
    "getAdditiveAGALCode",
    "regs",
    "constantReg",
    "streamIndex",
    "tangentDependencies",
    "outputsNormals",
    "normalDependencies",
    "awayjs-renderergl/lib/animators/data/VertexAnimationMode",
    "awayjs-renderergl/lib/animators/VertexAnimator",
    "VertexAnimator",
    "vertexAnimationSet",
    "_poses",
    "_weights",
    "_vertexAnimationSet",
    "_activeVertexState",
    "geometryFlag",
    "currentGraphics",
    "nextGraphics",
    "blendWeight",
    "invalidateElements",
    "setNullPose",
    "elementsGL",
    "_iIndex",
    "_elementsPool",
    "_indexMappings",
    "getIndexMappings",
    "isAsset",
    "activateVertexBufferVO",
    "AnimationElements",
    "_pVertexBuffer",
    "_pBufferContext",
    "_pBufferDirty",
    "previousTime",
    "Number",
    "NEGATIVE_INFINITY",
    "_iUniqueId",
    "SUBGEOM_ID_COUNT",
    "totalLenOfOneVertex",
    "_numVertices",
    "_pVertexData",
    "activateVertexBuffer",
    "bufferOffset",
    "format",
    "contextIndex",
    "stageIndex",
    "buffer",
    "createVertexBuffer",
    "uploadFromArray",
    "pop",
    "invalidateBuffer",
    "ShaderRegisterCache_1",
    "ShaderRegisterElement_1",
    "AnimationRegisterCache",
    "indexDictionary",
    "rotationRegisters",
    "positionAttribute",
    "getRegisterFromString",
    "scaleAndRotateTarget",
    "addVertexTempUsages",
    "regName",
    "getFreeVertexConstant",
    "vertexOneConst",
    "vertexTwoConst",
    "positionTarget",
    "getFreeVertexVectorTemp",
    "velocityTarget",
    "vertexTime",
    "vertexLife",
    "tempTime",
    "UVAttribute",
    "UVVaring",
    "setRegisterIndex",
    "parameterIndex",
    "registerIndex",
    "getRegisterIndex",
    "colorMulTarget",
    "colorMulVary",
    "getFreeVarying",
    "colorAddTarget",
    "colorAddVary",
    "colorTarget",
    "addFragmentTempUsages",
    "temp",
    "split",
    "parseInt",
    "_numVertexConstant",
    "_numFragmentConstant",
    "_index",
    "setVertexConstFromArray",
    "setVertexConstFromMatrix",
    "matrix",
    "rawData",
    "setFragmentConst",
    "awayjs-renderergl/lib/animators/../shaders/ShaderRegisterCache",
    "awayjs-renderergl/lib/animators/../shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/data/ColorSegmentPoint",
    "ColorSegmentPoint",
    "life",
    "color",
    "_life",
    "_color",
    "Quaternion_1",
    "JointPose",
    "toMatrix3D",
    "appendTranslation",
    "awayjs-core/lib/geom/Quaternion",
    "ParticleAnimationData",
    "totalTime",
    "startVertexIndex",
    "ParticlePropertiesMode",
    "GLOBAL",
    "ParticleProperties",
    "awayjs-renderergl/lib/animators/data/SkeletonJoint",
    "SkeletonJoint",
    "SkeletonPose",
    "jointPoseFromName",
    "jointName",
    "jointPoseIndex",
    "jointPoseIndexFromName",
    "jointPose",
    "cloneJointPose",
    "thisJointPose",
    "awayjs-renderergl/lib/animators/data/Skeleton",
    "Skeleton",
    "jointFromName",
    "jointIndex",
    "jointIndexFromName",
    "VertexAnimationMode",
    "ADDITIVE",
    "awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase",
    "AnimationNodeBase_1",
    "AnimationClipNodeBase",
    "_pLooping",
    "_pTotalDuration",
    "_pStitchDirty",
    "_pStitchFinalFrame",
    "_pNumFrames",
    "_pDurations",
    "_pTotalDelta",
    "fixedFrameRate",
    "_pUpdateStitch",
    "_pLastFrame",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode",
    "ParticleNodeBase_1",
    "ParticleAccelerationState_1",
    "ParticleAccelerationNode",
    "acceleration",
    "_pStateClass",
    "_acceleration",
    "pGetAGALVertexCode",
    "accelerationValue",
    "_pMode",
    "getFreeVertexAttribute",
    "ACCELERATION_INDEX",
    "removeVertexTempUsage",
    "animator",
    "param",
    "tempAcceleration",
    "ACCELERATION_VECTOR3D",
    "_pOneData",
    "awayjs-renderergl/lib/animators/nodes/ParticleNodeBase",
    "awayjs-renderergl/lib/animators/states/ParticleAccelerationState",
    "awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode",
    "ParticleBezierCurveState_1",
    "ParticleBezierCurveNode",
    "controlPoint",
    "endPoint",
    "_iControlPoint",
    "_iEndPoint",
    "controlValue",
    "BEZIER_CONTROL_INDEX",
    "endValue",
    "BEZIER_END_INDEX",
    "rev_time",
    "time_2",
    "time_temp",
    "distance",
    "bezierControl",
    "BEZIER_CONTROL_VECTOR3D",
    "bezierEnd",
    "BEZIER_END_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleBezierCurveState",
    "awayjs-renderergl/lib/shaders/ShaderRegisterElement",
    "awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode",
    "ParticleBillboardState_1",
    "ParticleBillboardNode",
    "billboardAxis",
    "_iBillboardAxis",
    "rotationMatrixRegister",
    "MATRIX_INDEX",
    "shaderRegisterElement",
    "awayjs-renderergl/lib/animators/states/ParticleBillboardState",
    "awayjs-renderergl/lib/animators/nodes/ParticleColorNode",
    "ColorTransform_1",
    "ParticleAnimationSet_1",
    "ParticleColorState_1",
    "ParticleColorNode",
    "usesMultiplier",
    "usesOffset",
    "usesCycle",
    "usesPhase",
    "startColor",
    "endColor",
    "cycleDuration",
    "cyclePhase",
    "_iUsesMultiplier",
    "_iUsesOffset",
    "_iUsesCycle",
    "_iUsesPhase",
    "_iStartColor",
    "_iEndColor",
    "_iCycleDuration",
    "_iCyclePhase",
    "cycleConst",
    "CYCLE_INDEX",
    "sin",
    "getFreeVertexSingleTemp",
    "startMultiplierValue",
    "deltaMultiplierValue",
    "START_MULTIPLIER_INDEX",
    "DELTA_MULTIPLIER_INDEX",
    "startOffsetValue",
    "deltaOffsetValue",
    "START_OFFSET_INDEX",
    "DELTA_OFFSET_INDEX",
    "COLOR_START_COLORTRANSFORM",
    "COLOR_END_COLORTRANSFORM",
    "redMultiplier",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-renderergl/lib/animators/states/ParticleColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleFollowNode",
    "ParticleFollowState_1",
    "ParticleFollowNode",
    "usesPosition",
    "usesRotation",
    "smooth",
    "_iUsesPosition",
    "_iUsesRotation",
    "_iSmooth",
    "rotationAttribute",
    "FOLLOW_ROTATION_INDEX",
    "temp3",
    "temp4",
    "FOLLOW_POSITION_INDEX",
    "awayjs-renderergl/lib/animators/states/ParticleFollowState",
    "awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode",
    "ParticleInitialColorState_1",
    "ParticleInitialColorNode",
    "initialColor",
    "_iInitialColor",
    "multiplierValue",
    "MULTIPLIER_INDEX",
    "offsetValue",
    "OFFSET_INDEX",
    "COLOR_INITIAL_COLORTRANSFORM",
    "awayjs-renderergl/lib/animators/states/ParticleInitialColorState",
    "ParticleNodeBase",
    "_pDataLength",
    "MODES",
    "_priority",
    0,
    2,
    "awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode",
    "ParticleOrbitState_1",
    "ParticleOrbitNode",
    "usesEulers",
    "radius",
    "eulers",
    "_iUsesEulers",
    "_iRadius",
    "_iEulers",
    "orbitRegister",
    "ORBIT_INDEX",
    "eulersMatrixRegister",
    "EULERS_INDEX",
    "cos",
    "degree",
    "orbit",
    "ORBIT_VECTOR3D",
    "PI",
    "awayjs-renderergl/lib/animators/states/ParticleOrbitState",
    "awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode",
    "ParticleOscillatorState_1",
    "ParticleOscillatorNode",
    "oscillator",
    "_iOscillator",
    "oscillatorRegister",
    "OSCILLATOR_INDEX",
    "dgree",
    "drift",
    "OSCILLATOR_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleOscillatorState",
    "awayjs-renderergl/lib/animators/nodes/ParticlePositionNode",
    "ParticlePositionState_1",
    "ParticlePositionNode",
    "position",
    "_iPosition",
    "POSITION_INDEX",
    "POSITION_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticlePositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode",
    "ParticleRotateToHeadingState_1",
    "ParticleRotateToHeadingNode",
    "nrmVel",
    "xAxis",
    "R",
    "R_rev",
    "cos2",
    "tempSingle",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode",
    "ParticleRotateToPositionState_1",
    "ParticleRotateToPositionNode",
    "nrmDirection",
    "o_temp",
    "awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState",
    "awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode",
    "ParticleRotationalVelocityState_1",
    "ParticleRotationalVelocityNode",
    "rotationalVelocity",
    "_iRotationalVelocity",
    "rotationRegister",
    "ROTATIONALVELOCITY_INDEX",
    "Rtemp",
    "rotate",
    "ROTATIONALVELOCITY_VECTOR3D",
    "normalize",
    "awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState",
    "awayjs-renderergl/lib/animators/nodes/ParticleScaleNode",
    "ParticleScaleState_1",
    "ParticleScaleNode",
    "minScale",
    "maxScale",
    "_iMinScale",
    "_iMaxScale",
    "scaleRegister",
    "SCALE_INDEX",
    "scale",
    "SCALE_VECTOR3D",
    "abs",
    "awayjs-renderergl/lib/animators/states/ParticleScaleState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode",
    "ParticleSegmentedColorState_1",
    "ParticleSegmentedColorNode",
    "numSegmentPoint",
    "segmentPoints",
    "_iNumSegmentPoint",
    "_iSegmentPoints",
    "accMultiplierColor",
    "tempColor",
    "accTime",
    "lifeTimeRegister",
    "TIME_DATA_INDEX",
    "startMulValue",
    "deltaMulValues",
    "deltaOffsetValues",
    "awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState",
    "awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode",
    "ParticleSpriteSheetState_1",
    "ParticleSpriteSheetNode",
    "numColumns",
    "numRows",
    "totalFrames",
    "MAX_VALUE",
    "_iNumColumns",
    "_iNumRows",
    "_iTotalFrames",
    "min",
    "uvParamConst1",
    "uvParamConst2",
    "UV_INDEX_0",
    "UV_INDEX_1",
    "uTotal",
    "uStep",
    "vStep",
    "uSpeed",
    "cycle",
    "phaseTime",
    "vOffset",
    "v",
    "uvCycle",
    "UV_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState",
    "ParticleTimeState_1",
    "ParticleTimeNode",
    "_iUsesDuration",
    "_iUsesLooping",
    "_iUsesDelay",
    "timeStreamRegister",
    "TIME_STREAM_INDEX",
    "timeConst",
    "TIME_CONSTANT_INDEX",
    "div",
    "sge",
    "awayjs-renderergl/lib/animators/states/ParticleTimeState",
    "awayjs-renderergl/lib/animators/nodes/ParticleUVNode",
    "ParticleUVState_1",
    "ParticleUVNode",
    "axis",
    "_cycle",
    "_scale",
    "_axis",
    "updateUVData",
    "uvConst",
    "UV_INDEX",
    "axisIndex",
    "_iUvData",
    "U_AXIS",
    "V_AXIS",
    "awayjs-renderergl/lib/animators/states/ParticleUVState",
    "awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode",
    "ParticleVelocityState_1",
    "ParticleVelocityNode",
    "velocity",
    "_iVelocity",
    "velocityValue",
    "VELOCITY_INDEX",
    "_tempVelocity",
    "VELOCITY_VECTOR3D",
    "awayjs-renderergl/lib/animators/states/ParticleVelocityState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode",
    "SkeletonBinaryLERPState_1",
    "SkeletonBinaryLERPNode",
    "awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonClipNode",
    "AnimationClipNodeBase_1",
    "SkeletonClipState_1",
    "SkeletonClipNode",
    "_frames",
    "highQuality",
    "addFrame",
    "skeletonPose",
    "p1",
    "p2",
    "awayjs-renderergl/lib/animators/states/SkeletonClipState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode",
    "SkeletonDifferenceState_1",
    "SkeletonDifferenceNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDifferenceState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode",
    "SkeletonDirectionalState_1",
    "SkeletonDirectionalNode",
    "awayjs-renderergl/lib/animators/states/SkeletonDirectionalState",
    "awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode",
    "SkeletonNaryLERPState_1",
    "SkeletonNaryLERPNode",
    "_iInputs",
    "_numInputs",
    "getInputIndex",
    "input",
    "getInputAt",
    "addInput",
    "awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState",
    "awayjs-renderergl/lib/animators/nodes/VertexClipNode",
    "VertexClipState_1",
    "VertexClipNode",
    "_translations",
    "geometry",
    "awayjs-renderergl/lib/animators/states/VertexClipState",
    "awayjs-renderergl/lib/animators/states/AnimationClipState",
    "AnimationStateBase_1",
    "AnimationClipState",
    "animationClipNode",
    "_pFramesDirty",
    "_animationClipNode",
    "_pUpdateFrames",
    "_pBlendWeight",
    "_pCurrentFrame",
    "_pNextFrame",
    "looping",
    "_pStartTime",
    "totalDuration",
    "_pTime",
    "_pUpdateTime",
    "_pTimeDir",
    "lastFrame",
    "notifyPlaybackComplete",
    "floor",
    "dur",
    "frameTime",
    "durations",
    "_animationStatePlaybackComplete",
    "PLAYBACK_COMPLETE",
    "_pAnimator",
    "awayjs-renderergl/lib/animators/../events/AnimationStateEvent",
    "awayjs-renderergl/lib/animators/states/AnimationStateBase",
    "AnimationStateBase",
    "_pRootDelta",
    "_pPositionDeltaDirty",
    "_pAnimationNode",
    "_pUpdatePositionDelta",
    "awayjs-renderergl/lib/animators/states/IAnimationState",
    "awayjs-renderergl/lib/animators/states/ISkeletonAnimationState",
    "awayjs-renderergl/lib/animators/states/IVertexAnimationState",
    "ParticleStateBase_1",
    "ParticleAccelerationState",
    "particleAccelerationNode",
    "_particleAccelerationNode",
    "updateAccelerationData",
    "FLOAT_3",
    "_halfAcceleration",
    "awayjs-renderergl/lib/animators/states/ParticleStateBase",
    "ParticleBezierCurveState",
    "particleBezierCurveNode",
    "_particleBezierCurveNode",
    "_controlPoint",
    "_endPoint",
    "controlIndex",
    "endIndex",
    "MathConsts_1",
    "Orientation3D_1",
    "ParticleBillboardState",
    "particleNode",
    "_matrix",
    "_billboardAxis",
    "comps",
    "pos",
    "look",
    "right",
    "crossProduct",
    "decompose",
    "AXIS_ANGLE",
    "copyColumnFrom",
    "appendRotation",
    "RADIANS_TO_DEGREES",
    "append",
    "inverseSceneTransform",
    "identity",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Orientation3D",
    "ParticleColorState",
    "particleColorNode",
    "_particleColorNode",
    "_usesMultiplier",
    "_usesOffset",
    "_usesCycle",
    "_usesPhase",
    "_startColor",
    "_endColor",
    "_cycleDuration",
    "_cyclePhase",
    "updateColorData",
    "dataOffset",
    "_cycleData",
    "FLOAT_4",
    "_startMultiplierData",
    "_deltaMultiplierData",
    "_startOffsetData",
    "_deltaOffsetData",
    "ParticleFollowState",
    "particleFollowNode",
    "_targetPos",
    "_targetEuler",
    "_temp",
    "_particleFollowNode",
    "_smooth",
    "_followTarget",
    "scaleX",
    "scaleY",
    "scaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleBy",
    "DEGREES_TO_RADIANS",
    "_prePos",
    "_preEuler",
    "currentTime",
    "deltaTime",
    "needProcess",
    "processPositionAndRotation",
    "processPosition",
    "precessRotation",
    "changed",
    "interpolatedPos",
    "posVelocity",
    "inc",
    "add",
    "interpolatedRotation",
    "rotationVelocity",
    "ParticleInitialColorState",
    "particleInitialColorNode",
    "_particleInitialColorNode",
    "_initialColor",
    "_multiplierData",
    "_offsetData",
    "ParticleOrbitState",
    "particleOrbitNode",
    "_particleOrbitNode",
    "_usesEulers",
    "_eulers",
    "_radius",
    "updateOrbitData",
    "_orbitData",
    "_eulersMatrix",
    "X_AXIS",
    "Y_AXIS",
    "Z_AXIS",
    "ParticleOscillatorState",
    "particleOscillatorNode",
    "_particleOscillatorNode",
    "_oscillator",
    "updateOscillatorData",
    "_oscillatorData",
    "ParticlePositionState",
    "particlePositionNode",
    "_particlePositionNode",
    "_position",
    "getPositions",
    "_pDynamicProperties",
    "_pDynamicPropertiesDirty",
    "_pUpdateDynamicProperties",
    "ParticleRotateToHeadingState",
    "ParticleRotateToPositionState",
    "particleRotateToPositionNode",
    "_particleRotateToPositionNode",
    "_offset",
    "ParticleRotationalVelocityState",
    "particleRotationNode",
    "_particleRotationalVelocityNode",
    "_rotationalVelocity",
    "updateRotationalVelocityData",
    "getRotationalVelocities",
    "setRotationalVelocities",
    "_rotationalVelocityData",
    "rotation",
    "ParticleScaleState",
    "particleScaleNode",
    "_particleScaleNode",
    "_minScale",
    "_maxScale",
    "updateScaleData",
    "_scaleData",
    "ParticleSegmentedColorState",
    "particleSegmentedColorNode",
    "_segmentPoints",
    "_numSegmentPoint",
    "_timeLifeData",
    "ParticleSpriteSheetState",
    "particleSpriteSheetNode",
    "_particleSpriteSheetNode",
    "_totalFrames",
    "_numColumns",
    "_numRows",
    "updateSpriteSheetData",
    "_spriteSheetData",
    "ParticleStateBase",
    "_particleNode",
    "_pNeedUpdateTime",
    "animationParticle",
    "ParticleTimeState",
    "particleTimeNode",
    "_particleTimeNode",
    "particleTime",
    "ParticleUVState",
    "particleUVNode",
    "_particleUVNode",
    "ParticleVelocityState",
    "particleVelocityNode",
    "_particleVelocityNode",
    "_velocity",
    "getVelocities",
    "setVelocities",
    "SkeletonBinaryLERPState",
    "skeletonAnimationNode",
    "_blendWeight",
    "_skeletonPose",
    "_skeletonPoseDirty",
    "_skeletonAnimationNode",
    "_inputA",
    "inputA",
    "_inputB",
    "inputB",
    "updateSkeletonPose",
    "deltA",
    "deltB",
    "endPose",
    "endPoses",
    "poses1",
    "poses2",
    "pose1",
    "pose2",
    "lerp",
    "AnimationClipState_1",
    "SkeletonClipState",
    "skeletonClipNode",
    "_rootPos",
    "_skeletonClipNode",
    "frames",
    "_currentPose",
    "_nextPose",
    "currentPose",
    "nextPose",
    "slerp",
    "p3",
    "totalDelta",
    "_pOldFrame",
    "dx",
    "dy",
    "dz",
    "stitchFinalFrame",
    "SkeletonDifferenceState",
    "_baseInput",
    "baseInput",
    "_differenceInput",
    "differenceInput",
    "basePoses",
    "diffPoses",
    "base",
    "diff",
    "basePos",
    "diffPos",
    "_tempQuat",
    "multiply",
    "SkeletonDirectionalState",
    "_direction",
    "_blendDirty",
    "_forward",
    "forward",
    "_backward",
    "backward",
    "_left",
    "left",
    "_right",
    "updateBlend",
    "_pUdateTime",
    "SkeletonNaryLERPState",
    "_blendWeights",
    "_inputs",
    "numInputs",
    "getBlendWeightAt",
    "setBlendWeightAt",
    "poses",
    "endTr",
    "endQuat",
    "firstPose",
    "w0",
    "x0",
    "y0",
    "z0",
    "VertexClipState",
    "vertexClipNode",
    "_vertexClipNode",
    "_currentGraphics",
    "_nextGraphics",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode",
    "SkeletonBinaryLERPNode_1",
    "CrossfadeTransitionState_1",
    "CrossfadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState",
    "CrossfadeTransitionState",
    "_crossfadeTransitionNode",
    "startBlend",
    "blendSpeed",
    "_animationStateTransitionComplete",
    "awayjs-renderergl/lib/animators/transitions/CrossfadeTransition",
    "CrossfadeTransitionNode_1",
    "CrossfadeTransition",
    "startNode",
    "endNode",
    "crossFadeTransitionNode",
    "awayjs-renderergl/lib/animators/transitions/IAnimationTransition",
    "ColorSegmentPoint_1",
    "Skeleton_1",
    "SkeletonJoint_1",
    "ParticleAccelerationNode_1",
    "ParticleBezierCurveNode_1",
    "ParticleBillboardNode_1",
    "ParticleColorNode_1",
    "ParticleFollowNode_1",
    "ParticleInitialColorNode_1",
    "ParticleOrbitNode_1",
    "ParticleOscillatorNode_1",
    "ParticlePositionNode_1",
    "ParticleRotateToHeadingNode_1",
    "ParticleRotateToPositionNode_1",
    "ParticleRotationalVelocityNode_1",
    "ParticleScaleNode_1",
    "ParticleSegmentedColorNode_1",
    "ParticleSpriteSheetNode_1",
    "ParticleUVNode_1",
    "ParticleVelocityNode_1",
    "SkeletonClipNode_1",
    "SkeletonDifferenceNode_1",
    "SkeletonDirectionalNode_1",
    "SkeletonNaryLERPNode_1",
    "VertexClipNode_1",
    "CrossfadeTransition_1",
    "ParticleAnimator_1",
    "SkeletonAnimationSet_1",
    "SkeletonAnimator_1",
    "VertexAnimationSet_1",
    "VertexAnimator_1",
    "elementsClass",
    "_shader",
    "_elementsClass",
    "awayjs-renderergl/lib/elements/GL_ElementsBase",
    "AbstractionBase_1",
    "AssetEvent_1",
    "ElementsUtils_1",
    "GL_ElementsBase",
    "pool",
    "usages",
    "_vertices",
    "_verticesUpdated",
    "_numIndices",
    "_elements",
    "_onInvalidateIndicesDelegate",
    "_onInvalidateIndices",
    "_onClearIndicesDelegate",
    "_onClearIndices",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "_onClearVerticesDelegate",
    "_onClearVertices",
    "CLEAR_INDICES",
    "CLEAR_VERTICES",
    "_indicesUpdated",
    "_updateIndices",
    "getIndexBufferGL",
    "_indices",
    "getVertexBufferGL",
    "bufferId",
    "_updateVertices",
    "size",
    "unsigned",
    "onClear",
    "_overflow",
    "_render",
    "_drawElements",
    "_drawArrays",
    "firstIndex",
    "numIndices",
    "firstVertex",
    "indexOffset",
    "getSubIndices",
    "_attributesBuffer",
    "_pGetOverflowElements",
    "CLEAR",
    "getSubVertices",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/utils/ElementsUtils",
    "awayjs-renderergl/lib/elements/GL_LineElements",
    "GL_ElementsBase_1",
    "lineElements",
    "_constants",
    "_calcMatrix",
    "_thickness",
    "_lineElements",
    "_iIncludeDependencies",
    "colorDependencies",
    "_iGetVertexCode",
    "registerCache",
    "sharedRegisters",
    "_iGetFragmentCode",
    "colorBufferIndex",
    "colors",
    "projection",
    "setProgramConstantsFromMatrix",
    "pONE_VECTOR",
    "pFRONT_VECTOR",
    "thickness",
    "draw",
    "drawVertices",
    "_pool",
    "GL_TriangleElements_1",
    "GL_SkyboxElements",
    "apply",
    "arguments",
    "awayjs-renderergl/lib/elements/GL_TriangleElements",
    "triangleElements",
    "_triangleElements",
    "globalPosDependencies",
    "globalPositionVertex",
    "animatedPosition",
    "viewMatrixReg",
    "viewMatrixIndex",
    "projectionDependencies",
    "projectionFragment",
    "normalIndex",
    "tangentIndex",
    "curvesIndex",
    "uvIndex",
    "secondaryUVIndex",
    "sceneMatrixIndex",
    "copyRawDataTo",
    "matrix3D",
    "CALCULATION_MATRIX",
    "awayjs-renderergl/lib/elements/IElementsClassGL",
    "GL_LineElements_1",
    "ErrorBase_1",
    "AnimationSetError",
    "message",
    "awayjs-core/lib/errors/ErrorBase",
    "EventBase_1",
    "AnimationStateEvent",
    "_animator",
    "_animationState",
    "_animationNode",
    "awayjs-core/lib/events/EventBase",
    "AnimatorEvent",
    "awayjs-renderergl/lib/events/PassEvent",
    "PassEvent",
    "_pass",
    "INVALIDATE",
    "RTTEvent",
    "awayjs-renderergl/lib/events/ShadingMethodEvent",
    "ShadingMethodEvent",
    "SHADER_INVALIDATED",
    "PassEvent_1",
    "ShadingMethodEvent_1",
    "awayjs-renderergl/lib/filters/BlurFilter3D",
    "Filter3DHBlurTask_1",
    "Filter3DVBlurTask_1",
    "Filter3DBase_1",
    "BlurFilter3D",
    "blurX",
    "blurY",
    "stepSize",
    "_hBlurTask",
    "_vBlurTask",
    "addTask",
    "amount",
    "mainTarget",
    "awayjs-renderergl/lib/filters/Filter3DBase",
    "awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask",
    "awayjs-renderergl/lib/filters/CompositeFilter3D",
    "Filter3DCompositeTask_1",
    "CompositeFilter3D",
    "exposure",
    "_compositeTask",
    "overlayTexture",
    "awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask",
    "awayjs-renderergl/lib/filters/FXAAFilter3D",
    "Filter3DFXAATask_1",
    "FXAAFilter3D",
    "_fxaaTask",
    "awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask",
    "Filter3DBase",
    "_textureWidth",
    "_textureHeight",
    "Filter3DTaskBase_1",
    "Filter3DCompositeTask",
    "_data",
    "_overlayTexture",
    "_overlayWidth",
    "_overlayHeight",
    "getFragmentCode",
    "op",
    "camera3D",
    "_scaledTextureWidth",
    "_scaledTextureHeight",
    "awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase",
    "Filter3DFXAATask",
    "_stepSize",
    "_amount",
    "invalidateProgram",
    "updateBlurData",
    "calculateStepSize",
    "lum",
    "_0",
    "_025",
    "_05",
    "_075",
    "_1",
    "pix",
    "mOne",
    "mul",
    "fxaaReduceMin",
    "fxaaReduceMul",
    "fxaaSpanMax",
    "delta1",
    "delta2",
    "delta3",
    "delta4",
    "uv_in",
    "uv",
    "uvx",
    "uvy",
    "TL",
    "TR",
    "BL",
    "BR",
    "M",
    "tempf1",
    "tempf2",
    "tempf3",
    "tex",
    "dir",
    "dirx",
    "diry",
    "dirxy",
    "dirReduce",
    "inverseDirAdjustment",
    "result1",
    "result2",
    "lumaMin",
    "lumaMax",
    "sample",
    "tempxy",
    "join",
    "updateTextures",
    "_realStepSize",
    "MAX_AUTO_SAMPLES",
    "Filter3DHBlurTask",
    "numSamples",
    "invW",
    "Image2D_1",
    "Filter3DTaskBase",
    "_textureDimensionsInvalid",
    "_program3DInvalid",
    "_textureScale",
    "_target",
    "_program3D",
    "updateProgram",
    "getVertexCode",
    "awayjs-core/lib/image/Image2D",
    "Filter3DVBlurTask",
    "invH",
    "BlurFilter3D_1",
    "CompositeFilter3D_1",
    "FXAAFilter3D_1",
    "ImageUtils_1",
    "RTTBufferManager",
    "_viewWidth",
    "_viewHeight",
    "_buffersInvalid",
    "_renderToTextureRect",
    "_instances",
    "rttBufferManager",
    "getRTTBufferManagerFromStage",
    "vo",
    "RTTBufferManagerVO",
    "stage3d",
    "rttbfm",
    "c",
    "deleteRTTBufferManager",
    "updateRTTBuffers",
    "_textureRatioX",
    "_textureRatioY",
    "getBestPowerOf2",
    "_renderToTextureVertexBuffer",
    "_renderToScreenVertexBuffer",
    "_indexBuffer",
    "textureVerts",
    "screenVerts",
    "createIndexBuffer",
    "u1",
    "u2",
    "v1",
    "v2",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-renderergl/lib/renderables/GL_BillboardRenderable",
    "AttributesBuffer_1",
    "DefaultMaterialManager_1",
    "GL_RenderableBase_1",
    "GL_Billboard",
    "billboard",
    "renderer",
    "_billboard",
    "_pGetElements",
    "texture",
    "material",
    "getTextureAt",
    "style",
    "getSamplerAt",
    "getDefaultSampler",
    "_id",
    "_samplerElements",
    "billboardWidth",
    "billboardHeight",
    "billboardRect",
    "_pGetSurface",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "awayjs-renderergl/lib/renderables/GL_RenderableBase",
    "awayjs-renderergl/lib/renderables/GL_GraphicRenderable",
    "awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable",
    "lineSegment",
    "_lineSegment",
    "_lineGraphics",
    "startPostion",
    "end",
    "endPosition",
    "setThickness",
    "_pGetOverflowRenderable",
    "_renderer",
    "RenderableEvent_1",
    "GL_RenderableBase",
    "_elementsDirty",
    "_surfaceDirty",
    "images",
    "samplers",
    "_onSurfaceUpdatedDelegate",
    "_onSurfaceUpdated",
    "_onInvalidateElementsDelegate",
    "onInvalidateElements",
    "INVALIDATE_RENDER_OWNER",
    "INVALIDATE_ELEMENTS",
    "_updateElements",
    "_updateSurface",
    "_surfaceGL",
    "_setRenderState",
    "getDefaultMaterial",
    "numImages",
    "uvMatrix",
    "numTextures",
    "getNumTextures",
    "image",
    "sampler",
    "getNumImages",
    "getImageIndex",
    "getImageAt",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-renderergl/lib/renderables/GL_SkyboxRenderable",
    "skybox",
    "_vertexArray",
    "_geometry",
    "far",
    "GL_BillboardRenderable_1",
    "GL_GraphicRenderable_1",
    "GL_LineSegmentRenderable_1",
    "GL_SkyboxRenderable_1",
    "awayjs-renderergl/lib/shaders/LightingShader",
    "LightSources_1",
    "ContextGLProfile_1",
    "ShaderBase_1",
    "LightingCompiler_1",
    "LightingShader",
    "lightingPass",
    "_includeCasters",
    "_lightingPass",
    "numPointLights",
    "numDirectionalLights",
    "numLightProbes",
    "numAllLights",
    "diffuseLightSources",
    "_iUsesDiffuse",
    "specularLightSources",
    "_iUsesSpecular",
    "combinedLightSources",
    "usesLightFallOff",
    "enableLightFallOff",
    "BASELINE_CONSTRAINED",
    "usesCommonData",
    "numLights",
    "usesLights",
    "LIGHTS",
    "usesProbes",
    "PROBES",
    "usesLightsForSpecular",
    "usesProbesForSpecular",
    "usesLightsForDiffuse",
    "usesProbesForDiffuse",
    "usesShadows",
    "_iUsesShadows",
    "createCompiler",
    "lightPicker",
    "collectLights",
    "updateProbes",
    "dirLight",
    "pointLight",
    "dirPos",
    "numLightTypes",
    "ambientR",
    "ambientG",
    "ambientB",
    "lightVertexConstantIndex",
    "lightFragmentConstantIndex",
    "cast",
    "dirLights",
    "directionalLights",
    "directionalLightsOffset",
    "castingDirectionalLights",
    "sceneDirection",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "usesTangentSpace",
    "_pInverseSceneMatrix",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "pointLights",
    "pointLightsOffset",
    "castingPointLights",
    "usesGlobalPosFragment",
    "_pRadius",
    "_pFallOffFactor",
    "probe",
    "lightProbes",
    "lightProbeWeights",
    "lightProbesOffset",
    "addDiff",
    "addSpec",
    "diffuseMap",
    "lightProbeDiffuseIndices",
    "diffuseSampler",
    "mipmap",
    "specularMap",
    "lightProbeSpecularIndices",
    "probeWeightsIndex",
    "awayjs-display/lib/materials/LightSources",
    "awayjs-renderergl/lib/shaders/ShaderBase",
    "awayjs-renderergl/lib/shaders/compilers/LightingCompiler",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "awayjs-renderergl/lib/shaders/RegisterPool",
    "RegisterPool",
    "regCount",
    "persistent",
    "_regName",
    "_regCount",
    "_persistent",
    "initRegisters",
    "requestFreeVectorReg",
    "isRegisterUsed",
    "_usedVectorCount",
    "_vectorRegisters",
    "requestFreeRegComponent",
    "_usedSingleCount",
    "_registerComponents",
    "addUsage",
    "register",
    "usageCount",
    "_component",
    "removeUsage",
    "hasRegisteredRegs",
    "hash",
    "_initPool",
    "_regPool",
    "_regCompsPool",
    "_initArray",
    "vectorRegisters",
    "registerComponents",
    "val",
    "BlendMode_1",
    "ArgumentError_1",
    "ContextGLTriangleFace_1",
    "CompilerBase_1",
    "_blendFactorSource",
    "_blendFactorDest",
    "_invalidShader",
    "_invalidProgram",
    "_animationVertexCode",
    "_animationFragmentCode",
    "usesBlending",
    "useImageRect",
    "usesCurves",
    "depthCompareMode",
    "writeDepth",
    "_defaultCulling",
    "BACK",
    "usesPositionFragment",
    "imageIndices",
    "_updateProgram",
    "_programData",
    "gl_assetClass",
    "viewDirDependencies",
    "uvDependencies",
    "secondaryUVDependencies",
    "outputsTangentNormals",
    "pInitRegisterIndices",
    "commonsDataIndex",
    "cameraPositionIndex",
    "uvMatrixIndex",
    "colorTransformIndex",
    "sceneNormalMatrixIndex",
    "initConstantData",
    "setBlendMode",
    "NORMAL",
    "LAYER",
    "SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_ALPHA",
    "MULTIPLY",
    "SOURCE_COLOR",
    "ADD",
    "ALPHA",
    "usesAnimation",
    "setCulling",
    "useBothSides",
    "NONE",
    "coordinateSystem",
    "usesColorTransform",
    "colorTransform",
    "_iAssignedColorTransform",
    "invalidateShader",
    "compiler",
    "compile",
    "_calcAnimationCode",
    "getProgramData",
    "vertexCode",
    "fragmentCode",
    "postAnimationFragmentCode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-renderergl/lib/shaders/compilers/CompilerBase",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "awayjs-renderergl/lib/shaders/ShaderRegisterCache",
    "RegisterPool_1",
    "ShaderRegisterCache",
    "_numUsedVertexConstants",
    "_numUsedFragmentConstants",
    "_numUsedVaryings",
    "_profile",
    "_fragmentTempCache",
    "_vertexTempCache",
    "_varyingCache",
    "_textureCache",
    "_vertexAttributesCache",
    "_fragmentConstantsCache",
    "_vertexConstantsCache",
    "_fragmentOutputRegister",
    "_vertexOutputRegister",
    "_vertexAttributesOffset",
    "_vertexConstantOffset",
    "_varyingsOffset",
    "_fragmentConstantOffset",
    "getFreeFragmentConstant",
    "removeFragmentTempUsage",
    "getFreeFragmentVectorTemp",
    "getFreeFragmentSingleTemp",
    "getFreeTextureReg",
    "awayjs-renderergl/lib/shaders/ShaderRegisterData",
    "ShaderRegisterData",
    "ShaderRegisterElement",
    "component",
    "_toStr",
    "COMPONENTS",
    "ShaderRegisterData_1",
    "CompilerBase",
    "_pVertexCode",
    "_pFragmentCode",
    "_pPostAnimationFragmentCode",
    "_pAnimatableAttributes",
    "_pAnimationTargetRegisters",
    "_pElementsClass",
    "_pRenderPass",
    "_pShader",
    "_pSharedRegisters",
    "_pRegisterCache",
    "pCompileDependencies",
    "compileColorTransformCode",
    "fragmentOutputRegister",
    "_uvSource",
    "_uvTarget",
    "_iInitConstantData",
    "ct1",
    "ct2",
    "compileGlobalPositionCode",
    "compilePositionCode",
    "compileCurvesCode",
    "compileUVCode",
    "compileSecondaryUVCode",
    "compileNormalCode",
    "compileViewDirCode",
    "_iGetPreLightingVertexCode",
    "_iGetPreLightingFragmentCode",
    "sceneMatrixReg",
    "globalPositionVarying",
    "positionVarying",
    "curvesInput",
    "curvesVarying",
    "uvAttributeReg",
    "varying",
    "uvVarying",
    "uvTransform1",
    "uvTransform2",
    "secondaryUVVarying",
    "cameraPositionReg",
    "viewDirVarying",
    "viewDirFragment",
    "animatedTangent",
    "normalFragment",
    "_iGetNormalVertexCode",
    "_iGetNormalFragmentCode",
    "normalMatrix",
    "normalVarying",
    "animatedNormal",
    "bitangent",
    "tangentVarying",
    "bitangentVarying",
    "normalInput",
    "commons",
    "tangentInput",
    "colorInput",
    "colorVarying",
    "LightingCompiler",
    "shaderLightingObject",
    "_shaderLightingObject",
    "pCompileShadowCode",
    "initLightRegisters",
    "compileLightCode",
    "compileLightProbeCode",
    "_iGetPostLightingVertexCode",
    "_iGetPostLightingFragmentCode",
    "shadowTarget",
    "_dirLightVertexConstants",
    "_pointLightVertexConstants",
    "_dirLightFragmentConstants",
    "_pointLightFragmentConstants",
    "diffuseColorReg",
    "specularColorReg",
    "lightPosReg",
    "lightDirReg",
    "vertexRegIndex",
    "fragmentRegIndex",
    "lightVarying",
    "_iGetPerLightDiffuseFragmentCode",
    "_iGetPerLightSpecularFragmentCode",
    "weightReg",
    "weightComponents",
    "weightRegisters",
    "texReg",
    "_pNumProbeRegisters",
    "_iGetPerProbeDiffuseFragmentCode",
    "_iGetPerProbeSpecularFragmentCode",
    "ceil",
    "LightingShader_1",
    "awayjs-renderergl/lib/sort/IEntitySorter",
    "RenderableMergeSort",
    "headB",
    "fast",
    "slow",
    "result",
    "curr",
    "cmp",
    "aid",
    "bid",
    "ma",
    "mb",
    "awayjs-renderergl/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "RenderableNullSort_1",
    "awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface",
    "BasicMaterialPass_1",
    "GL_SurfaceBase_1",
    "renderPool",
    "_material",
    "_pAddPass",
    "_pUpdateRender",
    "_pRequiresBlending",
    "alphaBlending",
    "preserveAlpha",
    "awayjs-renderergl/lib/surfaces/GL_SurfaceBase",
    "awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass",
    "GL_SurfacePassBase_1",
    "GL_DepthSurface",
    "invalidate",
    "_textureVO",
    "_fragmentConstantsIndex",
    "targetReg",
    "dataReg1",
    "dataReg2",
    "albedo",
    "cutOffReg",
    "awayjs-renderergl/lib/surfaces/GL_SurfacePassBase",
    "DistanceRender",
    "awayjs-renderergl/lib/surfaces/GL_SkyboxSurface",
    "_texture",
    "SurfaceEvent_1",
    "MaterialBase_1",
    "GL_SurfaceBase",
    "_forceSeparateMVP",
    "_invalidAnimation",
    "_invalidRender",
    "_invalidImages",
    "_passes",
    "_imageIndices",
    "_onInvalidateAnimationDelegate",
    "onInvalidateAnimation",
    "_onInvalidatePassesDelegate",
    "onInvalidatePasses",
    "INVALIDATE_ANIMATION",
    "INVALIDATE_PASSES",
    "_onPassInvalidateDelegate",
    "onPassInvalidate",
    "_updateAnimation",
    "_renderOrderId",
    "_updateImages",
    "_numImages",
    "imageRect",
    "curves",
    "useAlphaPremultiplied",
    "alphaPremultiplied",
    "bothSides",
    "animateUVs",
    "useColorTransform",
    "onInvalidate",
    "enabledGPUAnimation",
    "_getEnabledGPUAnimation",
    "mult",
    "getDefaultImage2D",
    "_pRemovePass",
    "_pClearPasses",
    "owners",
    "iOwners",
    "numOwners",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/materials/MaterialBase",
    "GL_SurfacePassBase",
    "awayjs-renderergl/lib/surfaces/ISurfaceClassGL",
    "_surfaceClassGL",
    "PassBase_1",
    "BasicMaterialPass",
    "_diffuseR",
    "_diffuseG",
    "_diffuseB",
    "_diffuseA",
    "regCache",
    "sharedReg",
    "alphaReg",
    "diffuseInputReg",
    "awayjs-renderergl/lib/surfaces/passes/PassBase",
    "awayjs-renderergl/lib/surfaces/passes/ILightingPass",
    "awayjs-renderergl/lib/surfaces/passes/IPass",
    "PassBase",
    "_preserveAlpha",
    "GL_BasicMaterialSurface_1",
    "GL_DistanceSurface",
    "GL_SkyboxSurface_1",
    "awayjs-renderergl/lib/textures/GL_Single2DTexture",
    "MappingMode_1",
    "GL_TextureBase_1",
    "single2DTexture",
    "_single2DTexture",
    "inputReg",
    "wrap",
    "mappingMode",
    "RADIAL_GRADIENT",
    "samplerReg",
    "_samplerIndex",
    "_imageIndex",
    "textureReg",
    "getTextureReg",
    "_textureIndex",
    "_sampler",
    "awayjs-display/lib/textures/MappingMode",
    "awayjs-renderergl/lib/textures/GL_TextureBase",
    "awayjs-renderergl/lib/textures/GL_SingleCubeTexture",
    "singleCubeTexture",
    "_singleCubeTexture",
    "includeInput",
    "ContextGLTextureFormat_1",
    "GL_TextureBase",
    "imageIndex",
    "getFormatString",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "GL_Single2DTexture_1",
    "GL_SingleCubeTexture_1",
    "awayjs-renderergl/lib/tools/commands/Merge",
    "Sprite_1",
    "Merge",
    "keepMaterial",
    "disposeSources",
    "objectSpace",
    "_keepMaterial",
    "_disposeSources",
    "_objectSpace",
    "applyToContainer",
    "receiver",
    "objectContainer",
    "parseContainer",
    "collect",
    "merge",
    "applyToSpritees",
    "sprites",
    "_toDispose",
    "_graphicVOs",
    "destSprite",
    "destGraphics",
    "useSubMaterials",
    "vertices",
    "addGraphic",
    "subIdx",
    "calc",
    "iIdx",
    "vIdx",
    "nIdx",
    "tIdx",
    "uIdx",
    "ind",
    "pd",
    "nd",
    "td",
    "ud",
    "getGraphicData",
    "transformVectors",
    "deltaTransformVectors",
    "GraphicVO",
    "object",
    "child",
    "getChildAt",
    "awayjs-display/lib/display/Sprite",
    "awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform",
    "ParticleGraphicsTransform",
    "_defaultVertexTransform",
    "_defaultInvVertexTransform",
    "transpose",
    "_defaultUVTransform",
    "Merge_1",
    "ParticleGraphicsTransform_1",
    "awayjs-renderergl/lib/utils/ParticleGraphicsHelper",
    "ParticleData_1",
    "ParticleGraphicsHelper",
    "generateGraphics",
    "output",
    "graphicsArray",
    "transforms",
    "indicesVector",
    "positionsVector",
    "normalsVector",
    "tangentsVector",
    "uvsVector",
    "vertexCounters",
    "elementsArray",
    "sourceGraphics",
    "numGraphics",
    "vertexCounter",
    "sub2SubMap",
    "tempVertex",
    "tempNormal",
    "tempTangents",
    "tempUV",
    "MAX_VERTEX",
    "particleData",
    "tempLen",
    "compact",
    "product",
    "sourceUVs",
    "particleGraphicsTransform",
    "vertexTransform",
    "invVertexTransform",
    "UVTransform",
    "deltaTransformVector",
    "transformPoint",
    "sourceIndices",
    "awayjs-display/lib/animators/data/ParticleData",
    "awayjs-renderergl/lib/utils/PerspectiveMatrix3D",
    "PerspectiveMatrix3D",
    "perspectiveFieldOfViewLH",
    "fieldOfViewY",
    "aspectRatio",
    "zNear",
    "zFar",
    "yScale",
    "tan",
    "xScale",
    "ParticleGraphicsHelper_1",
    "PerspectiveMatrix3D_1"
  ],
  "mappings": "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",
  "file": "awayjs-renderergl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar animators = require(\"awayjs-renderergl/lib/animators\");\nexports.animators = animators;\nvar elements = require(\"awayjs-renderergl/lib/elements\");\nexports.elements = elements;\nvar errors = require(\"awayjs-renderergl/lib/errors\");\nexports.errors = errors;\nvar events = require(\"awayjs-renderergl/lib/events\");\nexports.events = events;\nvar filters = require(\"awayjs-renderergl/lib/filters\");\nexports.filters = filters;\nvar managers = require(\"awayjs-renderergl/lib/managers\");\nexports.managers = managers;\nvar renderables = require(\"awayjs-renderergl/lib/renderables\");\nexports.renderables = renderables;\nvar shaders = require(\"awayjs-renderergl/lib/shaders\");\nexports.shaders = shaders;\nvar sort = require(\"awayjs-renderergl/lib/sort\");\nexports.sort = sort;\nvar surfaces = require(\"awayjs-renderergl/lib/surfaces\");\nexports.surfaces = surfaces;\nvar textures = require(\"awayjs-renderergl/lib/textures\");\nexports.textures = textures;\nvar tools = require(\"awayjs-renderergl/lib/tools\");\nexports.tools = tools;\nvar utils = require(\"awayjs-renderergl/lib/utils\");\nexports.utils = utils;\nvar DefaultRenderer_1 = require(\"awayjs-renderergl/lib/DefaultRenderer\");\nexports.DefaultRenderer = DefaultRenderer_1.default;\nvar DepthRenderer_1 = require(\"awayjs-renderergl/lib/DepthRenderer\");\nexports.DepthRenderer = DepthRenderer_1.default;\nvar DistanceRenderer_1 = require(\"awayjs-renderergl/lib/DistanceRenderer\");\nexports.DistanceRenderer = DistanceRenderer_1.default;\nvar Filter3DRenderer_1 = require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nexports.Filter3DRenderer = Filter3DRenderer_1.default;\nvar RendererBase_1 = require(\"awayjs-renderergl/lib/RendererBase\");\nexports.RendererBase = RendererBase_1.default;\nvar BasicMaterial_1 = require(\"awayjs-display/lib/materials/BasicMaterial\");\nvar Skybox_1 = require(\"awayjs-display/lib/display/Skybox\");\nvar Billboard_1 = require(\"awayjs-display/lib/display/Billboard\");\nvar LineSegment_1 = require(\"awayjs-display/lib/display/LineSegment\");\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Graphic_1 = require(\"awayjs-display/lib/graphics/Graphic\");\nvar Single2DTexture_1 = require(\"awayjs-display/lib/textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial_1.default);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox_1.default);\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements_1.default);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture_1.default);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_BillboardRenderable, Billboard_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_GraphicRenderable, Graphic_1.default);\nRendererBase_1.default.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox_1.default);\n\n},{\"awayjs-display/lib/display/Billboard\":undefined,\"awayjs-display/lib/display/LineSegment\":undefined,\"awayjs-display/lib/display/Skybox\":undefined,\"awayjs-display/lib/graphics/Graphic\":undefined,\"awayjs-display/lib/graphics/LineElements\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/materials/BasicMaterial\":undefined,\"awayjs-display/lib/textures/Single2DTexture\":undefined,\"awayjs-display/lib/textures/SingleCubeTexture\":undefined,\"awayjs-renderergl/lib/DefaultRenderer\":\"awayjs-renderergl/lib/DefaultRenderer\",\"awayjs-renderergl/lib/DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"awayjs-renderergl/lib/DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"awayjs-renderergl/lib/Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"awayjs-renderergl/lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"awayjs-renderergl/lib/animators\":\"awayjs-renderergl/lib/animators\",\"awayjs-renderergl/lib/elements\":\"awayjs-renderergl/lib/elements\",\"awayjs-renderergl/lib/errors\":\"awayjs-renderergl/lib/errors\",\"awayjs-renderergl/lib/events\":\"awayjs-renderergl/lib/events\",\"awayjs-renderergl/lib/filters\":\"awayjs-renderergl/lib/filters\",\"awayjs-renderergl/lib/managers\":\"awayjs-renderergl/lib/managers\",\"awayjs-renderergl/lib/renderables\":\"awayjs-renderergl/lib/renderables\",\"awayjs-renderergl/lib/shaders\":\"awayjs-renderergl/lib/shaders\",\"awayjs-renderergl/lib/sort\":\"awayjs-renderergl/lib/sort\",\"awayjs-renderergl/lib/surfaces\":\"awayjs-renderergl/lib/surfaces\",\"awayjs-renderergl/lib/textures\":\"awayjs-renderergl/lib/textures\",\"awayjs-renderergl/lib/tools\":\"awayjs-renderergl/lib/tools\",\"awayjs-renderergl/lib/utils\":\"awayjs-renderergl/lib/utils\"}],\"awayjs-renderergl/lib/DefaultRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLClearMask_1 = require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nvar RendererBase_1 = require(\"awayjs-renderergl/lib/RendererBase\");\nvar DepthRenderer_1 = require(\"awayjs-renderergl/lib/DepthRenderer\");\nvar DistanceRenderer_1 = require(\"awayjs-renderergl/lib/DistanceRenderer\");\nvar Filter3DRenderer_1 = require(\"awayjs-renderergl/lib/Filter3DRenderer\");\nvar GL_SkyboxElements_1 = require(\"awayjs-renderergl/lib/elements/GL_SkyboxElements\");\nvar RTTBufferManager_1 = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nvar SurfacePool_1 = require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nvar DefaultRenderer = (function (_super) {\n    __extends(DefaultRenderer, _super);\n    /**\n     * Creates a new DefaultRenderer object.\n     *\n     * @param antiAlias The amount of anti-aliasing to use.\n     * @param renderMode The render mode to use.\n     */\n    function DefaultRenderer(stage, forceSoftware, profile, mode) {\n        if (stage === void 0) { stage = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this, stage, null, forceSoftware, profile, mode);\n        this._skyboxProjection = new Matrix3D_1.default();\n        this._antiAlias = 0;\n        this._directionalLights = new Array();\n        this._pointLights = new Array();\n        this._lightProbes = new Array();\n        if (stage)\n            this.shareContext = true;\n        this._pRttBufferManager = RTTBufferManager_1.default.getInstance(this._pStage);\n        this._pDepthRenderer = new DepthRenderer_1.default(this._pStage);\n        this._pDistanceRenderer = new DistanceRenderer_1.default(this._pStage);\n        if (this._width == 0)\n            this.width = window.innerWidth;\n        else\n            this._pRttBufferManager.viewWidth = this._width;\n        if (this._height == 0)\n            this.height = window.innerHeight;\n        else\n            this._pRttBufferManager.viewHeight = this._height;\n        this._skyBoxSurfacePool = new SurfacePool_1.default(GL_SkyboxElements_1.default, this._pStage);\n    }\n    Object.defineProperty(DefaultRenderer.prototype, \"antiAlias\", {\n        get: function () {\n            return this._antiAlias;\n        },\n        set: function (value) {\n            if (this._antiAlias == value)\n                return;\n            this._antiAlias = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"depthPrepass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._depthPrepass;\n        },\n        set: function (value) {\n            this._depthPrepass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultRenderer.prototype, \"filters3d\", {\n        /**\n         *\n         * @returns {*}\n         */\n        get: function () {\n            return this._pFilter3DRenderer ? this._pFilter3DRenderer.filters : null;\n        },\n        set: function (value) {\n            if (value && value.length == 0)\n                value = null;\n            if (this._pFilter3DRenderer && !value) {\n                this._pFilter3DRenderer.dispose();\n                this._pFilter3DRenderer = null;\n            }\n            else if (!this._pFilter3DRenderer && value) {\n                this._pFilter3DRenderer = new Filter3DRenderer_1.default(this._pStage);\n                this._pFilter3DRenderer.filters = value;\n            }\n            if (this._pFilter3DRenderer) {\n                this._pFilter3DRenderer.filters = value;\n                this._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n            }\n            else {\n                this._pRequireDepthRender = false;\n                if (this._pDepthRender) {\n                    this._pDepthRender.dispose();\n                    this._pDepthRender = null;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DefaultRenderer.prototype.enterNode = function (node) {\n        var enter = _super.prototype.enterNode.call(this, node);\n        if (enter && node.debugVisible)\n            this.applyEntity(node.bounds.boundsPrimitive);\n        return enter;\n    };\n    DefaultRenderer.prototype.render = function (camera, scene) {\n        _super.prototype.render.call(this, camera, scene);\n        if (!this._pStage.recoverFromDisposal()) {\n            this._pBackBufferInvalid = true;\n            return;\n        }\n        if (this._pBackBufferInvalid)\n            this.pUpdateBackBuffer();\n        if (this.shareContext && this._pContext)\n            this._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask_1.default.DEPTH);\n        if (this._pFilter3DRenderer) {\n            this.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this.textureRatioY = this._pRttBufferManager.textureRatioY;\n        }\n        else {\n            this.textureRatioX = 1;\n            this.textureRatioY = 1;\n        }\n        if (this._pRequireDepthRender)\n            this.pRenderSceneDepthToTexture(camera, scene);\n        if (this._depthPrepass)\n            this.pRenderDepthPrepass(camera, scene);\n        //reset lights\n        this._directionalLights.length = 0;\n        this._pointLights.length = 0;\n        this._lightProbes.length = 0;\n        if (this._pFilter3DRenderer && this._pContext) {\n            this._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n            this._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n        }\n        else {\n            if (this.shareContext)\n                this._iRender(camera, scene, null, this._pScissorRect);\n            else\n                this._iRender(camera, scene);\n        }\n        if (!this.shareContext && this._pContext)\n            this._pContext.present();\n        // register that a view has been rendered\n        this._pStage.bufferClear = false;\n    };\n    DefaultRenderer.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this.updateLights(camera);\n        _super.prototype.pExecuteRender.call(this, camera, target, scissorRect, surfaceSelector);\n    };\n    DefaultRenderer.prototype.updateLights = function (camera) {\n        var len, i;\n        var light;\n        var shadowMapper;\n        len = this._directionalLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._directionalLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n        }\n        len = this._pointLights.length;\n        for (i = 0; i < len; ++i) {\n            light = this._pointLights[i];\n            shadowMapper = light.shadowMapper;\n            if (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n                shadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DefaultRenderer.prototype.pDraw = function (camera) {\n        if (this._skybox) {\n            this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.ALWAYS);\n            this.drawSkybox(camera);\n        }\n        _super.prototype.pDraw.call(this, camera);\n    };\n    /**\n     * Draw the skybox if present.\n     **/\n    DefaultRenderer.prototype.drawSkybox = function (camera) {\n        var renderable = this.getAbstraction(this._skybox);\n        renderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n        this.updateSkyboxProjection(camera);\n        var pass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n        this.activatePass(renderable, pass, camera);\n        renderable._iRender(pass, camera, this._skyboxProjection);\n        this.deactivatePass(renderable, pass);\n    };\n    DefaultRenderer.prototype.updateSkyboxProjection = function (camera) {\n        var near = new Vector3D_1.default();\n        this._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n        this._skyboxProjection.copyRowTo(2, near);\n        var camPos = camera.scenePosition;\n        var cx = near.x;\n        var cy = near.y;\n        var cz = near.z;\n        var cw = -(near.x * camPos.x + near.y * camPos.y + near.z * camPos.z + Math.sqrt(cx * cx + cy * cy + cz * cz));\n        var signX = cx >= 0 ? 1 : -1;\n        var signY = cy >= 0 ? 1 : -1;\n        var p = new Vector3D_1.default(signX, signY, 1, 1);\n        var inverse = this._skyboxProjection.clone();\n        inverse.invert();\n        var q = inverse.transformVector(p);\n        this._skyboxProjection.copyRowTo(3, p);\n        var a = (q.x * p.x + q.y * p.y + q.z * p.z + q.w * p.w) / (cx * q.x + cy * q.y + cz * q.z + cw * q.w);\n        this._skyboxProjection.copyRowFrom(2, new Vector3D_1.default(cx * a, cy * a, cz * a, cw * a));\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyDirectionalLight = function (entity) {\n        this._directionalLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyLightProbe = function (entity) {\n        this._lightProbes.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applyPointLight = function (entity) {\n        this._pointLights.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    DefaultRenderer.prototype.applySkybox = function (entity) {\n        this._skybox = entity;\n    };\n    DefaultRenderer.prototype.dispose = function () {\n        if (!this.shareContext)\n            this._pStage.dispose();\n        this._pRttBufferManager.dispose();\n        this._pRttBufferManager = null;\n        this._pDepthRenderer.dispose();\n        this._pDistanceRenderer.dispose();\n        this._pDepthRenderer = null;\n        this._pDistanceRenderer = null;\n        this._pDepthRender = null;\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderDepthPrepass = function (camera, scene) {\n        this._pDepthRenderer.disableColor = true;\n        if (this._pFilter3DRenderer) {\n            this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n            this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n            this._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n        }\n        else {\n            this._pDepthRenderer.textureRatioX = 1;\n            this._pDepthRenderer.textureRatioY = 1;\n            this._pDepthRenderer._iRender(camera, scene);\n        }\n        this._pDepthRenderer.disableColor = false;\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.pRenderSceneDepthToTexture = function (camera, scene) {\n        if (this._pDepthTextureInvalid || !this._pDepthRender)\n            this.initDepthTexture(this._pStage.context);\n        this._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n        this._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n        this._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n    };\n    /**\n     * Updates the backbuffer dimensions.\n     */\n    DefaultRenderer.prototype.pUpdateBackBuffer = function () {\n        // No reason trying to configure back buffer if there is no context available.\n        // Doing this anyway (and relying on _stage to cache width/height for\n        // context does get available) means usesSoftwareRendering won't be reliable.\n        if (this._pStage.context && !this.shareContext) {\n            if (this._width && this._height) {\n                this._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n                this._pBackBufferInvalid = false;\n            }\n        }\n    };\n    /**\n     *\n     */\n    DefaultRenderer.prototype.initDepthTexture = function (context) {\n        this._pDepthTextureInvalid = false;\n        if (this._pDepthRender)\n            this._pDepthRender.dispose();\n        this._pDepthRender = new BitmapImage2D_1.default(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n    };\n    return DefaultRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DefaultRenderer;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-renderergl/lib/DepthRenderer\":\"awayjs-renderergl/lib/DepthRenderer\",\"awayjs-renderergl/lib/DistanceRenderer\":\"awayjs-renderergl/lib/DistanceRenderer\",\"awayjs-renderergl/lib/Filter3DRenderer\":\"awayjs-renderergl/lib/Filter3DRenderer\",\"awayjs-renderergl/lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"awayjs-renderergl/lib/elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"awayjs-renderergl/lib/managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"awayjs-renderergl/lib/surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-stagegl/lib/base/ContextGLClearMask\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/DepthRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"awayjs-renderergl/lib/RendererBase\");\nvar GL_DepthSurface_1 = require(\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\");\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nvar DepthRenderer = (function (_super) {\n    __extends(DepthRenderer, _super);\n    /**\n     * Creates a new DepthRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DepthRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DepthSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DepthRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DepthRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DepthRenderer;\n\n},{\"awayjs-renderergl/lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\"}],\"awayjs-renderergl/lib/DistanceRenderer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar RendererBase_1 = require(\"awayjs-renderergl/lib/RendererBase\");\nvar GL_DistanceSurface_1 = require(\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\");\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nvar DistanceRenderer = (function (_super) {\n    __extends(DistanceRenderer, _super);\n    /**\n     * Creates a new DistanceRenderer object.\n     * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n     * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n     */\n    function DistanceRenderer(stage) {\n        if (stage === void 0) { stage = null; }\n        _super.call(this, stage, GL_DistanceSurface_1.default);\n        this._iBackgroundR = 1;\n        this._iBackgroundG = 1;\n        this._iBackgroundB = 1;\n    }\n    /**\n     *\n     */\n    DistanceRenderer.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase_1.default._iCollectionMark && node.isCastingShadow();\n        if (!enter) {\n            node._iCollectionMark = RendererBase_1.default._iCollectionMark;\n            return false;\n        }\n        return _super.prototype.enterNode.call(this, node);\n    };\n    return DistanceRenderer;\n}(RendererBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRenderer;\n\n},{\"awayjs-renderergl/lib/RendererBase\":\"awayjs-renderergl/lib/RendererBase\",\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\"}],\"awayjs-renderergl/lib/Filter3DRenderer\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar RTTEvent_1 = require(\"awayjs-renderergl/lib/events/RTTEvent\");\nvar RTTBufferManager_1 = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\n/**\n * @class away.render.Filter3DRenderer\n */\nvar Filter3DRenderer = (function () {\n    function Filter3DRenderer(stage) {\n        var _this = this;\n        this._filterSizesInvalid = true;\n        this._onRTTResizeDelegate = function (event) { return _this.onRTTResize(event); };\n        this._stage = stage;\n        this._rttManager = RTTBufferManager_1.default.getInstance(stage);\n        this._rttManager.addEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n    }\n    Filter3DRenderer.prototype.onRTTResize = function (event) {\n        this._filterSizesInvalid = true;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.getMainInputTexture = function (stage) {\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        return this._mainInputTexture;\n    };\n    Object.defineProperty(Filter3DRenderer.prototype, \"filters\", {\n        get: function () {\n            return this._filters;\n        },\n        set: function (value) {\n            this._filters = value;\n            this._filterTasksInvalid = true;\n            this._requireDepthRender = false;\n            if (!this._filters)\n                return;\n            for (var i = 0; i < this._filters.length; ++i)\n                if (this._filters[i].requireDepthRender)\n                    this._requireDepthRender = true;\n            this._filterSizesInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DRenderer.prototype.updateFilterTasks = function (stage) {\n        var len;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (!this._filters) {\n            this._tasks = null;\n            return;\n        }\n        this._tasks = new Array();\n        len = this._filters.length - 1;\n        var filter;\n        for (var i = 0; i <= len; ++i) {\n            // make sure all internal tasks are linked together\n            filter = this._filters[i];\n            filter.setRenderTargets(i == len ? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n            this._tasks = this._tasks.concat(filter.tasks);\n        }\n        this._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n    };\n    Filter3DRenderer.prototype.render = function (stage, camera, depthTexture) {\n        var len;\n        var i;\n        var task;\n        var context = stage.context;\n        var indexBuffer = this._rttManager.indexBuffer;\n        var vertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n        if (!this._filters)\n            return;\n        if (this._filterSizesInvalid)\n            this.updateFilterSizes();\n        if (this._filterTasksInvalid)\n            this.updateFilterTasks(stage);\n        len = this._filters.length;\n        for (i = 0; i < len; ++i)\n            this._filters[i].update(stage, camera);\n        len = this._tasks.length;\n        if (len > 1) {\n            context.setProgram(this._tasks[0].getProgram(stage));\n            context.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            context.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        for (i = 0; i < len; ++i) {\n            task = this._tasks[i];\n            stage.setRenderTarget(task.target);\n            context.setProgram(task.getProgram(stage));\n            stage.getAbstraction(task.getMainInputTexture(stage)).activate(0, false);\n            if (!task.target) {\n                stage.scissorRect = null;\n                vertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n                context.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                context.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n            }\n            context.clear(0.0, 0.0, 0.0, 0.0);\n            task.activate(stage, camera, depthTexture);\n            context.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n            context.drawIndices(ContextGLDrawMode_1.default.TRIANGLES, indexBuffer, 0, 6);\n            task.deactivate(stage);\n        }\n        context.setTextureAt(0, null);\n        context.setVertexBufferAt(0, null);\n        context.setVertexBufferAt(1, null);\n    };\n    Filter3DRenderer.prototype.updateFilterSizes = function () {\n        for (var i = 0; i < this._filters.length; ++i) {\n            this._filters[i].textureWidth = this._rttManager.textureWidth;\n            this._filters[i].textureHeight = this._rttManager.textureHeight;\n            this._filters[i].rttManager = this._rttManager;\n        }\n        this._filterSizesInvalid = true;\n    };\n    Filter3DRenderer.prototype.dispose = function () {\n        this._rttManager.removeEventListener(RTTEvent_1.default.RESIZE, this._onRTTResizeDelegate);\n        this._rttManager = null;\n        this._stage = null;\n    };\n    return Filter3DRenderer;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DRenderer;\n\n},{\"awayjs-renderergl/lib/events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"awayjs-renderergl/lib/managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\",\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/RendererBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar RendererEvent_1 = require(\"awayjs-display/lib/events/RendererEvent\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar StageEvent_1 = require(\"awayjs-stagegl/lib/events/StageEvent\");\nvar StageManager_1 = require(\"awayjs-stagegl/lib/managers/StageManager\");\nvar SurfacePool_1 = require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nvar ElementsPool_1 = require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nvar RenderableMergeSort_1 = require(\"awayjs-renderergl/lib/sort/RenderableMergeSort\");\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nvar RendererBase = (function (_super) {\n    __extends(RendererBase, _super);\n    /**\n     * Creates a new RendererBase object.\n     */\n    function RendererBase(stage, surfaceClassGL, forceSoftware, profile, mode) {\n        var _this = this;\n        if (stage === void 0) { stage = null; }\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        _super.call(this);\n        this._objectPools = new Object();\n        this._abstractionPool = new Object();\n        this._activeMasksConfig = new Array();\n        this._registeredMasks = new Array();\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._cameraForward = new Vector3D_1.default();\n        this._viewPort = new Rectangle_1.default();\n        this._pBackBufferInvalid = true;\n        this._pDepthTextureInvalid = true;\n        this._depthPrepass = false;\n        this._backgroundR = 0;\n        this._backgroundG = 0;\n        this._backgroundB = 0;\n        this._backgroundAlpha = 1;\n        this.textureRatioX = 1;\n        this.textureRatioY = 1;\n        this._pRttViewProjectionMatrix = new Matrix3D_1.default();\n        this._localPos = new Point_1.default();\n        this._globalPos = new Point_1.default();\n        this._pScissorRect = new Rectangle_1.default();\n        this._pNumElements = 0;\n        this._disableColor = false;\n        this._renderBlended = true;\n        this._numCullPlanes = 0;\n        this._onViewportUpdatedDelegate = function (event) { return _this.onViewportUpdated(event); };\n        this._onContextUpdateDelegate = function (event) { return _this.onContextUpdate(event); };\n        //default sorting algorithm\n        this.renderableSorter = new RenderableMergeSort_1.default();\n        //set stage\n        this._pStage = stage || StageManager_1.default.getInstance().getFreeStage(forceSoftware, profile, mode);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.addEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.stage = value;\n         */\n        if (this._pStage.context)\n            this._pContext = this._pStage.context;\n        for (var i in ElementsPool_1.default._abstractionClassPool)\n            this._objectPools[i] = new SurfacePool_1.default(ElementsPool_1.default._abstractionClassPool[i], this._pStage, surfaceClassGL);\n    }\n    Object.defineProperty(RendererBase.prototype, \"cullPlanes\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._customCullPlanes;\n        },\n        set: function (value) {\n            this._customCullPlanes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"renderBlended\", {\n        get: function () {\n            return this._renderBlended;\n        },\n        set: function (value) {\n            this._renderBlended = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"disableColor\", {\n        get: function () {\n            return this._disableColor;\n        },\n        set: function (value) {\n            this._disableColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"numElements\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pNumElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"viewPort\", {\n        /**\n         * A viewPort rectangle equivalent of the Stage size and position.\n         */\n        get: function () {\n            return this._viewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"scissorRect\", {\n        /**\n         * A scissor rectangle equivalent of the view size and position.\n         */\n        get: function () {\n            return this._pScissorRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.x;\n        },\n        set: function (value) {\n            if (this.x == value)\n                return;\n            this._globalPos.x = this._localPos.x = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._localPos.y;\n        },\n        set: function (value) {\n            if (this.y == value)\n                return;\n            this._globalPos.y = this._localPos.y = value;\n            this.updateGlobalPos();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._pScissorRect.width = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewWidth = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._pScissorRect.height = value;\n            if (this._pRttBufferManager)\n                this._pRttBufferManager.viewHeight = value;\n            this._pBackBufferInvalid = true;\n            this._pDepthTextureInvalid = true;\n            this.notifyScissorUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RendererBase.prototype.getAbstraction = function (renderable) {\n        return this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new RendererBase._abstractionClassPool[renderable.assetType](renderable, this));\n    };\n    /**\n     *\n     * @param image\n     */\n    RendererBase.prototype.clearAbstraction = function (renderable) {\n        this._abstractionPool[renderable.id] = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsClass\n     * @returns SurfacePool\n     */\n    RendererBase.prototype.getSurfacePool = function (elements) {\n        return this._objectPools[elements.assetType];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    RendererBase.registerAbstraction = function (renderableClass, assetClass) {\n        RendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n    };\n    RendererBase.prototype.activatePass = function (renderableGL, pass, camera) {\n        //clear unused vertex streams\n        for (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n            this._pContext.setVertexBufferAt(i, null);\n        //clear unused texture streams\n        for (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n            this._pContext.setTextureAt(i, null);\n        //check program data is uploaded\n        var programData = pass.shader.programData;\n        if (!programData.program) {\n            programData.program = this._pContext.createProgram();\n            var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n            var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n            programData.program.upload(vertexByteCode, fragmentByteCode);\n        }\n        //set program data\n        this._pContext.setProgram(programData.program);\n        //activate shader object through renderableGL\n        renderableGL._iActivate(pass, camera);\n    };\n    RendererBase.prototype.deactivatePass = function (renderableGL, pass) {\n        //deactivate shader object\n        renderableGL._iDeactivate(pass);\n        this._numUsedStreams = pass.shader.numUsedStreams;\n        this._numUsedTextures = pass.shader.numUsedTextures;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundR\", {\n        /**\n         * The background color's red component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundR;\n        },\n        set: function (value) {\n            if (this._backgroundR == value)\n                return;\n            this._backgroundR = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundG\", {\n        /**\n         * The background color's green component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundG;\n        },\n        set: function (value) {\n            if (this._backgroundG == value)\n                return;\n            this._backgroundG = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundB\", {\n        /**\n         * The background color's blue component, used when clearing.\n         *\n         * @private\n         */\n        get: function () {\n            return this._backgroundB;\n        },\n        set: function (value) {\n            if (this._backgroundB == value)\n                return;\n            this._backgroundB = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"context\", {\n        get: function () {\n            return this._pContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RendererBase.prototype, \"stage\", {\n        /**\n         * The Stage that will provide the ContextGL used for rendering.\n         */\n        get: function () {\n            return this._pStage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Disposes the resources used by the RendererBase.\n     */\n    RendererBase.prototype.dispose = function () {\n        for (var id in this._abstractionPool)\n            this._abstractionPool[id].clear();\n        this._abstractionPool = null;\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n        this._pStage.removeEventListener(StageEvent_1.default.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n        this._pStage = null;\n        this._pContext = null;\n        /*\n         if (_backgroundImageRenderer) {\n         _backgroundImageRenderer.dispose();\n         _backgroundImageRenderer = null;\n         }\n         */\n    };\n    RendererBase.prototype.render = function (camera, scene) {\n        this._viewportDirty = false;\n        this._scissorDirty = false;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture.\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype._iRender = function (camera, scene, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        //TODO refactor setTarget so that rendertextures are created before this check\n        if (!this._pStage || !this._pContext)\n            return;\n        //reset head values\n        this._pBlendedRenderableHead = null;\n        this._pOpaqueRenderableHead = null;\n        this._pNumElements = 0;\n        this._cullPlanes = this._customCullPlanes ? this._customCullPlanes : camera.frustumPlanes;\n        this._numCullPlanes = this._cullPlanes ? this._cullPlanes.length : 0;\n        this._cameraPosition = camera.scenePosition;\n        this._cameraTransform = camera.sceneTransform;\n        this._cameraForward = Matrix3DUtils_1.default.getForward(camera.sceneTransform, this._cameraForward);\n        RendererBase._iCollectionMark++;\n        scene.traversePartitions(this);\n        //sort the resulting renderables\n        if (this.renderableSorter) {\n            this._pOpaqueRenderableHead = this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n            this._pBlendedRenderableHead = this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n        }\n        this._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n        this._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n        this.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n        // generate mip maps on target (if target exists) //TODO\n        //if (target)\n        //\t(<Texture>target).generateMipmaps();\n        // clear buffers\n        for (var i = 0; i < 8; ++i) {\n            this._pContext.setVertexBufferAt(i, null);\n            this._pContext.setTextureAt(i, null);\n        }\n    };\n    RendererBase.prototype._iRenderCascades = function (camera, scene, target, numCascades, scissorRects, cameras) {\n        this._pStage.setRenderTarget(target, true, 0);\n        this._pContext.clear(1, 1, 1, 1, 1, 0);\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS);\n        var head = this._pOpaqueRenderableHead;\n        var first = true;\n        //TODO cascades must have separate collectors, rather than separate draw commands\n        for (var i = numCascades - 1; i >= 0; --i) {\n            this._pStage.scissorRect = scissorRects[i];\n            //this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n            first = false;\n        }\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        this._pContext.setDepthTest(false, ContextGLCompareMode_1.default.LESS_EQUAL);\n        this._pStage.scissorRect = null;\n    };\n    /**\n     * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n     *\n     * @param target An option target texture to render to.\n     * @param surfaceSelector The index of a CubeTexture's face to render to.\n     * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n     */\n    RendererBase.prototype.pExecuteRender = function (camera, target, scissorRect, surfaceSelector) {\n        if (target === void 0) { target = null; }\n        if (scissorRect === void 0) { scissorRect = null; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        this._pStage.setRenderTarget(target, true, surfaceSelector);\n        if ((target || !this.shareContext) && !this._depthPrepass)\n            this._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n        this._pStage.scissorRect = scissorRect;\n        /*\n         if (_backgroundImageRenderer)\n         _backgroundImageRenderer.render();\n         */\n        this._pContext.setBlendFactors(ContextGLBlendFactor_1.default.ONE, ContextGLBlendFactor_1.default.ZERO);\n        this.pDraw(camera);\n        //line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n        //this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n        if (!this.shareContext) {\n            if (this._snapshotRequired && this._snapshotBitmapImage2D) {\n                this._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n                this._snapshotRequired = false;\n            }\n        }\n        this._pStage.scissorRect = null;\n    };\n    /*\n     * Will draw the renderer's output on next render to the provided bitmap data.\n     * */\n    RendererBase.prototype.queueSnapshot = function (bmd) {\n        this._snapshotRequired = true;\n        this._snapshotBitmapImage2D = bmd;\n    };\n    /**\n     * Performs the actual drawing of geometry to the target.\n     */\n    RendererBase.prototype.pDraw = function (camera) {\n        this._pContext.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n        if (this._disableColor)\n            this._pContext.setColorMask(false, false, false, false);\n        this.drawRenderables(camera, this._pOpaqueRenderableHead);\n        if (this._renderBlended)\n            this.drawRenderables(camera, this._pBlendedRenderableHead);\n        if (this._disableColor)\n            this._pContext.setColorMask(true, true, true, true);\n    };\n    //private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n    //{\n    //\tvar renderableGL2:GL_RenderableBase;\n    //\tvar render:GL_SurfaceBase;\n    //\tvar pass:IPass;\n    //\n    //\twhile (renderableGL) {\n    //\t\trenderableGL2 = renderableGL;\n    //\t\trender = renderableGL.render;\n    //\t\tpass = render.passes[0] //assuming only one pass per material\n    //\n    //\t\tthis.activatePass(renderableGL, pass, camera);\n    //\n    //\t\tdo {\n    //\t\t\t// if completely in front, it will fall in a different cascade\n    //\t\t\t// do not use near and far planes\n    //\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n    //\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n    //\t\t\t} else {\n    //\t\t\t\trenderableGL2.cascaded = true;\n    //\t\t\t}\n    //\n    //\t\t\trenderableGL2 = renderableGL2.next;\n    //\n    //\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n    //\n    //\t\tthis.deactivatePass(renderableGL, pass);\n    //\n    //\t\trenderableGL = renderableGL2;\n    //\t}\n    //}\n    /**\n     * Draw a list of renderables.\n     *\n     * @param renderables The renderables to draw.\n     */\n    RendererBase.prototype.drawRenderables = function (camera, renderableGL) {\n        var i;\n        var len;\n        var renderableGL2;\n        var surfaceGL;\n        var passes;\n        var pass;\n        this._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n        this._registeredMasks.length = 0;\n        var gl = this._pContext[\"_gl\"];\n        if (gl) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        this._maskConfig = 0;\n        while (renderableGL) {\n            surfaceGL = renderableGL.surfaceGL;\n            passes = surfaceGL.passes;\n            // otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n            if (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n                renderableGL2 = renderableGL;\n                // fast forward\n                do {\n                    renderableGL2 = renderableGL2.next;\n                } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n            }\n            else {\n                if (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n                    this._activeMasksConfig = renderableGL.masksConfig;\n                    if (!this._activeMasksConfig.length) {\n                        // disable stencil\n                        if (gl) {\n                            gl.disable(gl.STENCIL_TEST);\n                            gl.stencilFunc(gl.ALWAYS, 0, 0xff);\n                            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n                        }\n                    }\n                    else {\n                        this._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n                    }\n                    this._activeMasksDirty = false;\n                }\n                //iterate through each shader object\n                len = passes.length;\n                for (i = 0; i < len; i++) {\n                    renderableGL2 = renderableGL;\n                    pass = passes[i];\n                    this.activatePass(renderableGL, pass, camera);\n                    do {\n                        if (renderableGL2.maskId !== -1) {\n                            if (i == 0)\n                                this._registerMask(renderableGL2);\n                        }\n                        else {\n                            renderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n                        }\n                        renderableGL2 = renderableGL2.next;\n                    } while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n                    this.deactivatePass(renderableGL, pass);\n                }\n            }\n            renderableGL = renderableGL2;\n        }\n    };\n    /**\n     * Assign the context once retrieved\n     */\n    RendererBase.prototype.onContextUpdate = function (event) {\n        this._pContext = this._pStage.context;\n    };\n    Object.defineProperty(RendererBase.prototype, \"_iBackgroundAlpha\", {\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        set: function (value) {\n            if (this._backgroundAlpha == value)\n                return;\n            this._backgroundAlpha = value;\n            this._pBackBufferInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /*\n     public get iBackground():Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*\n     public set iBackground(value:Texture2DBase)\n     {\n     if (this._backgroundImageRenderer && !value) {\n     this._backgroundImageRenderer.dispose();\n     this._backgroundImageRenderer = null;\n     }\n\n     if (!this._backgroundImageRenderer && value)\n     {\n\n     this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n     }\n\n\n     this._background = value;\n\n     if (this._backgroundImageRenderer)\n     this._backgroundImageRenderer.texture = value;\n     }\n     */\n    /*\n     public get backgroundImageRenderer():BackgroundImageRenderer\n     {\n     return _backgroundImageRenderer;\n     }\n     */\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyScissorUpdate = function () {\n        if (this._scissorDirty)\n            return;\n        this._scissorDirty = true;\n        if (!this._scissorUpdated)\n            this._scissorUpdated = new RendererEvent_1.default(RendererEvent_1.default.SCISSOR_UPDATED);\n        this.dispatchEvent(this._scissorUpdated);\n    };\n    /**\n     * @private\n     */\n    RendererBase.prototype.notifyViewportUpdate = function () {\n        if (this._viewportDirty)\n            return;\n        this._viewportDirty = true;\n        if (!this._viewPortUpdated)\n            this._viewPortUpdated = new RendererEvent_1.default(RendererEvent_1.default.VIEWPORT_UPDATED);\n        this.dispatchEvent(this._viewPortUpdated);\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.onViewportUpdated = function (event) {\n        this._viewPort = this._pStage.viewPort;\n        //TODO stop firing viewport updated for every stagegl viewport change\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._pStage.x;\n            this._pScissorRect.y = this._globalPos.y - this._pStage.y;\n            this.notifyScissorUpdate();\n        }\n        this.notifyViewportUpdate();\n    };\n    /**\n     *\n     */\n    RendererBase.prototype.updateGlobalPos = function () {\n        if (this.shareContext) {\n            this._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n            this._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n        }\n        else {\n            this._pScissorRect.x = 0;\n            this._pScissorRect.y = 0;\n            this._viewPort.x = this._globalPos.x;\n            this._viewPort.y = this._globalPos.y;\n        }\n        this.notifyScissorUpdate();\n    };\n    /**\n     *\n     * @param node\n     * @returns {boolean}\n     */\n    RendererBase.prototype.enterNode = function (node) {\n        var enter = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n        node._iCollectionMark = RendererBase._iCollectionMark;\n        return enter;\n    };\n    RendererBase.prototype.applyEntity = function (entity) {\n        this._sourceEntity = entity;\n        // project onto camera's z-axis\n        this._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n        //save sceneTransform\n        this._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n        //collect renderables\n        entity._acceptTraverser(this);\n    };\n    RendererBase.prototype.applyRenderable = function (renderable) {\n        var renderableGL = this.getAbstraction(renderable);\n        var surfaceGL = renderableGL.surfaceGL;\n        //set local vars for faster referencing\n        renderableGL.surfaceID = surfaceGL.surfaceID;\n        renderableGL.renderOrderId = surfaceGL.renderOrderId;\n        renderableGL.cascaded = false;\n        renderableGL.sourceEntity = this._sourceEntity;\n        renderableGL.zIndex = this._zIndex;\n        renderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n        renderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n        //store reference to scene transform\n        renderableGL.renderSceneTransform = this._renderSceneTransform;\n        if (surfaceGL.requiresBlending) {\n            renderableGL.next = this._pBlendedRenderableHead;\n            this._pBlendedRenderableHead = renderableGL;\n        }\n        else {\n            renderableGL.next = this._pOpaqueRenderableHead;\n            this._pOpaqueRenderableHead = renderableGL;\n        }\n        this._pNumElements += renderableGL.elements.numElements;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RendererBase.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    RendererBase.prototype._registerMask = function (obj) {\n        //console.log(\"registerMask\");\n        this._registeredMasks.push(obj);\n    };\n    RendererBase.prototype._renderMasks = function (camera, masks) {\n        var gl = this._pContext[\"_gl\"];\n        //var oldRenderTarget = this._stage.renderTarget;\n        //this._stage.setRenderTarget(this._image);\n        //this._stage.clear();\n        this._pContext.setColorMask(false, false, false, false);\n        // TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n        //context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n        gl.enable(gl.STENCIL_TEST);\n        this._maskConfig++;\n        gl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n        gl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n        var numLayers = masks.length;\n        var numRenderables = this._registeredMasks.length;\n        var renderableGL;\n        var children;\n        var numChildren;\n        var mask;\n        for (var i = 0; i < numLayers; ++i) {\n            if (i != 0) {\n                gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n                gl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n                this._maskConfig++;\n            }\n            children = masks[i];\n            numChildren = children.length;\n            for (var j = 0; j < numChildren; ++j) {\n                mask = children[j];\n                for (var k = 0; k < numRenderables; ++k) {\n                    renderableGL = this._registeredMasks[k];\n                    //console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n                    if (renderableGL.maskId == mask.id) {\n                        //console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n                        this._drawMask(camera, renderableGL);\n                    }\n                }\n            }\n        }\n        gl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        this._pContext.setColorMask(true, true, true, true);\n        //this._stage.setRenderTarget(oldRenderTarget);\n    };\n    RendererBase.prototype._drawMask = function (camera, renderableGL) {\n        var surfaceGL = renderableGL.surfaceGL;\n        var passes = surfaceGL.passes;\n        var len = passes.length;\n        var pass = passes[len - 1];\n        this.activatePass(renderableGL, pass, camera);\n        // only render last pass for now\n        renderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n        this.deactivatePass(renderableGL, pass);\n    };\n    RendererBase.prototype._checkMasksConfig = function (masksConfig) {\n        if (this._activeMasksConfig.length != masksConfig.length)\n            return true;\n        var numLayers = masksConfig.length;\n        var numChildren;\n        var childConfig;\n        var activeNumChildren;\n        var activeChildConfig;\n        for (var i = 0; i < numLayers; i++) {\n            childConfig = masksConfig[i];\n            numChildren = childConfig.length;\n            activeChildConfig = this._activeMasksConfig[i];\n            activeNumChildren = activeChildConfig.length;\n            if (activeNumChildren != numChildren)\n                return true;\n            for (var j = 0; j < numChildren; j++) {\n                if (activeChildConfig[j] != childConfig[j])\n                    return true;\n            }\n        }\n        return false;\n    };\n    RendererBase._iCollectionMark = 0;\n    RendererBase._abstractionClassPool = new Object();\n    return RendererBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RendererBase;\n\n},{\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/events/RendererEvent\":undefined,\"awayjs-renderergl/lib/elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"awayjs-renderergl/lib/sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"awayjs-renderergl/lib/surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined,\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/events/StageEvent\":undefined,\"awayjs-stagegl/lib/managers/StageManager\":undefined}],\"awayjs-renderergl/lib/animators/AnimationSetBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AnimationSetError_1 = require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nvar AnimationSetBase = (function (_super) {\n    __extends(AnimationSetBase, _super);\n    function AnimationSetBase() {\n        _super.call(this);\n        this._animations = new Array();\n        this._animationNames = new Array();\n        this._animationDictionary = new Object();\n    }\n    /**\n     * Retrieves a temporary GPU register that's still free.\n     *\n     * @param exclude An array of non-free temporary registers.\n     * @param excludeAnother An additional register that's not free.\n     * @return A temporary register that can be used.\n     */\n    AnimationSetBase.prototype._pFindTempReg = function (exclude, excludeAnother) {\n        if (excludeAnother === void 0) { excludeAnother = null; }\n        var i = 0;\n        var reg;\n        while (true) {\n            reg = \"vt\" + i;\n            if (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n                return reg;\n            ++i;\n        }\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"usesCPU\", {\n        /**\n         * Indicates whether the properties of the animation data contained within the set combined with\n         * the vertex registers already in use on shading materials allows the animation data to utilise\n         * GPU calls.\n         */\n        get: function () {\n            return this._usesCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called by the material to reset the GPU indicator before testing whether register space in the shader\n     * is available for running GPU-based animation code.\n     *\n     * @private\n     */\n    AnimationSetBase.prototype.resetGPUCompatibility = function () {\n        this._usesCPU = false;\n    };\n    AnimationSetBase.prototype.cancelGPUCompatibility = function () {\n        this._usesCPU = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALVertexCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.activate = function (shader, stage) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.deactivate = function (shader, stage) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.getAGALUVCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationSetBase.prototype.doneAGALCode = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimationSetBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationSetBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animations\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationSetBase.prototype, \"animationNames\", {\n        /**\n         * Returns a vector of animation state objects that make up the contents of the animation data set.\n         */\n        get: function () {\n            return this._animationNames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check to determine whether a state is registered in the animation set under the given name.\n     *\n     * @param stateName The name of the animation state object to be checked.\n     */\n    AnimationSetBase.prototype.hasAnimation = function (name) {\n        return this._animationDictionary[name] != null;\n    };\n    /**\n     * Retrieves the animation state object registered in the animation data set under the given name.\n     *\n     * @param stateName The name of the animation state object to be retrieved.\n     */\n    AnimationSetBase.prototype.getAnimation = function (name) {\n        return this._animationDictionary[name];\n    };\n    /**\n     * Adds an animation state object to the aniamtion data set under the given name.\n     *\n     * @param stateName The name under which the animation state object will be stored.\n     * @param animationState The animation state object to be staored in the set.\n     */\n    AnimationSetBase.prototype.addAnimation = function (node) {\n        if (this._animationDictionary[node.name])\n            throw new AnimationSetError_1.default(\"root node name '\" + node.name + \"' already exists in the set\");\n        this._animationDictionary[node.name] = node;\n        this._animations.push(node);\n        this._animationNames.push(node.name);\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     */\n    AnimationSetBase.prototype.dispose = function () {\n    };\n    AnimationSetBase.assetType = \"[asset AnimationSet]\";\n    return AnimationSetBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-renderergl/lib/errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\"}],\"awayjs-renderergl/lib/animators/AnimatorBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar RequestAnimationFrame_1 = require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar AnimatorEvent_1 = require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nvar AnimatorBase = (function (_super) {\n    __extends(AnimatorBase, _super);\n    /**\n     * Creates a new <code>AnimatorBase</code> object.\n     *\n     * @param animationSet The animation data set to be used by the animator object.\n     */\n    function AnimatorBase(animationSet) {\n        _super.call(this);\n        this._autoUpdate = true;\n        this._time = 0;\n        this._playbackSpeed = 1;\n        this._pOwners = new Array();\n        this._pAbsoluteTime = 0;\n        this._animationStates = new Object();\n        /**\n         * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n         *\n         * @see away.animators.IAnimationState#positionDelta\n         */\n        this.updatePosition = true;\n        this._pAnimationSet = animationSet;\n        this._broadcaster = new RequestAnimationFrame_1.default(this.onEnterFrame, this);\n    }\n    AnimatorBase.prototype.getAnimationState = function (node) {\n        var className = node.stateClass;\n        var uID = node.id;\n        if (this._animationStates[uID] == null)\n            this._animationStates[uID] = new className(this, node);\n        return this._animationStates[uID];\n    };\n    AnimatorBase.prototype.getAnimationStateByName = function (name) {\n        return this.getAnimationState(this._pAnimationSet.getAnimation(name));\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"absoluteTime\", {\n        /**\n         * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n         *\n         * @see #time\n         * @see #playbackSpeed\n         */\n        get: function () {\n            return this._pAbsoluteTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"animationSet\", {\n        /**\n         * Returns the animation data set in use by the animator.\n         */\n        get: function () {\n            return this._pAnimationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeState\", {\n        /**\n         * Returns the current active animation state.\n         */\n        get: function () {\n            return this._pActiveState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimation\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"activeAnimationName\", {\n        /**\n         * Returns the current active animation node.\n         */\n        get: function () {\n            return this._pActiveAnimationName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"autoUpdate\", {\n        /**\n         * Determines whether the animators internal update mechanisms are active. Used in cases\n         * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n         * Defaults to true.\n         *\n         * @see #time\n         * @see #update()\n         */\n        get: function () {\n            return this._autoUpdate;\n        },\n        set: function (value) {\n            if (this._autoUpdate == value)\n                return;\n            this._autoUpdate = value;\n            if (this._autoUpdate)\n                this.start();\n            else\n                this.stop();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimatorBase.prototype, \"time\", {\n        /**\n         * Gets and sets the internal time clock of the animator.\n         */\n        get: function () {\n            return this._time;\n        },\n        set: function (value /*int*/) {\n            if (this._time == value)\n                return;\n            this.update(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the animation phase of the current active state's animation clip(s).\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimatorBase.prototype.phase = function (value) {\n        this._pActiveState.phase(value);\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"playbackSpeed\", {\n        /**\n         * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n         */\n        get: function () {\n            return this._playbackSpeed;\n        },\n        set: function (value) {\n            this._playbackSpeed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Resumes the automatic playback clock controling the active state of the animator.\n     */\n    AnimatorBase.prototype.start = function () {\n        if (this._isPlaying || !this._autoUpdate)\n            return;\n        this._time = this._pAbsoluteTime = getTimer_1.default();\n        this._isPlaying = true;\n        this._broadcaster.start();\n        if (!this.hasEventListener(AnimatorEvent_1.default.START))\n            return;\n        if (this._startEvent == null)\n            this._startEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.START, this);\n        this.dispatchEvent(this._startEvent);\n    };\n    /**\n     * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n     * <code>time</code> property or <code>update()</code> method.\n     *\n     * @see #time\n     * @see #update()\n     */\n    AnimatorBase.prototype.stop = function () {\n        if (!this._isPlaying)\n            return;\n        this._isPlaying = false;\n        this._broadcaster.stop();\n        if (!this.hasEventListener(AnimatorEvent_1.default.STOP))\n            return;\n        if (this._stopEvent == null)\n            this._stopEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.STOP, this);\n        this.dispatchEvent(this._stopEvent);\n    };\n    /**\n     * Provides a way to manually update the active state of the animator when automatic\n     * updates are disabled.\n     *\n     * @see #stop()\n     * @see #autoUpdate\n     */\n    AnimatorBase.prototype.update = function (time /*int*/) {\n        var dt = (time - this._time) * this.playbackSpeed;\n        this._pUpdateDeltaTime(dt);\n        this._time = time;\n    };\n    AnimatorBase.prototype.reset = function (name, offset) {\n        if (offset === void 0) { offset = 0; }\n        this.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n    };\n    /**\n     * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.addOwner = function (sprite) {\n        this._pOwners.push(sprite);\n    };\n    /**\n     * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.removeOwner = function (sprite) {\n        this._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n    };\n    /**\n     * Internal abstract method called when the time delta property of the animator's contents requires updating.\n     *\n     * @private\n     */\n    AnimatorBase.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        this._pActiveState.update(this._pAbsoluteTime);\n        if (this.updatePosition)\n            this.applyPositionDelta();\n    };\n    /**\n     * Enter frame event handler for automatically updating the active state of the animator.\n     */\n    AnimatorBase.prototype.onEnterFrame = function (event) {\n        if (event === void 0) { event = null; }\n        this.update(getTimer_1.default());\n    };\n    AnimatorBase.prototype.applyPositionDelta = function () {\n        var delta = this._pActiveState.positionDelta;\n        var dist = delta.length;\n        var len;\n        if (dist > 0) {\n            len = this._pOwners.length;\n            for (var i = 0; i < len; ++i)\n                this._pOwners[i].transform.translateLocal(delta, dist);\n        }\n    };\n    /**\n     *  for internal use.\n     *\n     * @private\n     */\n    AnimatorBase.prototype.dispatchCycleEvent = function () {\n        if (this.hasEventListener(AnimatorEvent_1.default.CYCLE_COMPLETE)) {\n            if (this._cycleEvent == null)\n                this._cycleEvent = new AnimatorEvent_1.default(AnimatorEvent_1.default.CYCLE_COMPLETE, this);\n            this.dispatchEvent(this._cycleEvent);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.dispose = function () {\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimatorBase.prototype.testGPUCompatibility = function (shader) {\n        throw new AbstractMethodError_1.default();\n    };\n    Object.defineProperty(AnimatorBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimatorBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimatorBase.prototype.getRenderableElements = function (renderable, sourceElements) {\n        //nothing to do here\n        return sourceElements;\n    };\n    AnimatorBase.assetType = \"[asset Animator]\";\n    return AnimatorBase;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-core/lib/utils/RequestAnimationFrame\":undefined,\"awayjs-core/lib/utils/getTimer\":undefined,\"awayjs-renderergl/lib/events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\"}],\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nvar AnimationRegisterCache_1 = require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nvar AnimationElements_1 = require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nvar ParticleAnimationData_1 = require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nvar ParticleProperties_1 = require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleTimeNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nvar ParticleAnimationSet = (function (_super) {\n    __extends(ParticleAnimationSet, _super);\n    /**\n     * Creates a new <code>ParticleAnimationSet</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleAnimationSet(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this);\n        this._animationElements = new Object();\n        this._particleNodes = new Array();\n        this._localDynamicNodes = new Array();\n        this._localStaticNodes = new Array();\n        this._totalLenOfOneVertex = 0;\n        /**\n         *\n         */\n        this.shareAnimationGraphics = true;\n        //automatically add a particle time node to the set\n        this.addAnimation(this._timeNode = new ParticleTimeNode_1.default(usesDuration, usesLooping, usesDelay));\n    }\n    Object.defineProperty(ParticleAnimationSet.prototype, \"particleNodes\", {\n        /**\n         * Returns a vector of the particle animation nodes contained within the set.\n         */\n        get: function () {\n            return this._particleNodes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.addAnimation = function (node) {\n        var i;\n        var n = node;\n        n._iProcessAnimationSetting(this);\n        if (n.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            n._iDataOffset = this._totalLenOfOneVertex;\n            this._totalLenOfOneVertex += n.dataLength;\n            this._localStaticNodes.push(n);\n        }\n        else if (n.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC)\n            this._localDynamicNodes.push(n);\n        for (i = this._particleNodes.length - 1; i >= 0; i--) {\n            if (this._particleNodes[i].priority <= n.priority)\n                break;\n        }\n        this._particleNodes.splice(i + 1, 0, n);\n        _super.prototype.addAnimation.call(this, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.activate = function (shader, stage) {\n        //\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.deactivate = function (shader, stage) {\n        //\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n        //\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n        //\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n        //\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n        //\t\t\t\tcontext.setVertexBufferAt(i, null);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALVertexCode = function (shader) {\n        //grab animationRegisterCache from the materialpassbase or create a new one if the first time\n        this._iAnimationRegisterCache = shader.animationRegisterCache;\n        if (this._iAnimationRegisterCache == null)\n            this._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache_1.default(shader.profile);\n        //reset animationRegisterCache\n        this._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n        this._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n        this._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n        this._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n        this._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n        this._iAnimationRegisterCache.needVelocity = this.needVelocity;\n        this._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n        this._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n        this._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n        this._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n        this._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n        this._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n        this._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n        this._iAnimationRegisterCache.reset();\n        var code = \"\";\n        code += this._iAnimationRegisterCache.getInitCode();\n        var node;\n        var i;\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority < ParticleAnimationSet.POST_PRIORITY)\n                code += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n        }\n        code += this._iAnimationRegisterCache.getCombinationCode();\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n        }\n        code += this._iAnimationRegisterCache.initColorRegisters();\n        for (i = 0; i < this._particleNodes.length; i++) {\n            node = this._particleNodes[i];\n            if (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n                code += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n        }\n        code += this._iAnimationRegisterCache.getColorPassCode();\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALUVCode = function (shader) {\n        var code = \"\";\n        if (this.hasUVNode) {\n            this._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n            code += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n            var node;\n            for (var i = 0; i < this._particleNodes.length; i++)\n                node = this._particleNodes[i];\n            code += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n            code += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n        }\n        else\n            code += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        return this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.doneAGALCode = function (shader) {\n        this._iAnimationRegisterCache.setDataLength();\n        //set vertexZeroConst,vertexOneConst,vertexTwoConst\n        this._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n    };\n    Object.defineProperty(ParticleAnimationSet.prototype, \"usesCPU\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimationSet.prototype.cancelGPUCompatibility = function () {\n    };\n    ParticleAnimationSet.prototype.dispose = function () {\n        for (var key in this._animationElements)\n            this._animationElements[key].dispose();\n        _super.prototype.dispose.call(this);\n    };\n    ParticleAnimationSet.prototype.getAnimationElements = function (graphic) {\n        var animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n        if (animationElements)\n            return animationElements;\n        this._iGenerateAnimationElements(graphic.parent);\n        return (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n    };\n    /** @private */\n    ParticleAnimationSet.prototype._iGenerateAnimationElements = function (graphics) {\n        if (this.initParticleFunc == null)\n            throw (new Error(\"no initParticleFunc set\"));\n        var i /*int*/, j /*int*/, k;\n        var animationElements;\n        var newAnimationElements = false;\n        var elements;\n        var graphic;\n        var localNode;\n        for (i = 0; i < graphics.count; i++) {\n            graphic = graphics.getGraphicAt(i);\n            elements = graphic.elements;\n            if (this.shareAnimationGraphics) {\n                animationElements = this._animationElements[elements.id];\n                if (animationElements)\n                    continue;\n            }\n            animationElements = new AnimationElements_1.default();\n            if (this.shareAnimationGraphics)\n                this._animationElements[elements.id] = animationElements;\n            else\n                this._animationElements[graphic.id] = animationElements;\n            newAnimationElements = true;\n            //create the vertexData vector that will be used for local node data\n            animationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        }\n        if (!newAnimationElements)\n            return;\n        var particles = graphics.particles;\n        var particlesLength = particles.length;\n        var numParticles = graphics.numParticles;\n        var particleProperties = new ParticleProperties_1.default();\n        var particle;\n        var oneDataLen;\n        var oneDataOffset;\n        var counterForVertex;\n        var counterForOneData;\n        var oneData;\n        var numVertices;\n        var vertexData;\n        var vertexLength;\n        var startingOffset;\n        var vertexOffset;\n        //default values for particle param\n        particleProperties.total = numParticles;\n        particleProperties.startTime = 0;\n        particleProperties.duration = 1000;\n        particleProperties.delay = 0.1;\n        i = 0;\n        j = 0;\n        while (i < numParticles) {\n            particleProperties.index = i;\n            //call the init on the particle parameters\n            this.initParticleFunc.call(this.initParticleScope, particleProperties);\n            //create the next set of node properties for the particle\n            for (k = 0; k < this._localStaticNodes.length; k++)\n                this._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n            //loop through all particle data for the curent particle\n            while (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n                //find the target animationElements\n                for (k = 0; k < graphics.count; k++) {\n                    graphic = graphics.getGraphicAt(k);\n                    if (graphic.elements == particle.elements) {\n                        animationElements = (this.shareAnimationGraphics) ? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n                        break;\n                    }\n                }\n                numVertices = particle.numVertices;\n                vertexData = animationElements.vertexData;\n                vertexLength = numVertices * this._totalLenOfOneVertex;\n                startingOffset = animationElements.numProcessedVertices * this._totalLenOfOneVertex;\n                //loop through each static local node in the animation set\n                for (k = 0; k < this._localStaticNodes.length; k++) {\n                    localNode = this._localStaticNodes[k];\n                    oneData = localNode.oneData;\n                    oneDataLen = localNode.dataLength;\n                    oneDataOffset = startingOffset + localNode._iDataOffset;\n                    //loop through each vertex set in the vertex data\n                    for (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n                        vertexOffset = oneDataOffset + counterForVertex;\n                        //add the data for the local node to the vertex data\n                        for (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n                            vertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n                    }\n                }\n                //store particle properties if they need to be retreived for dynamic local nodes\n                if (this._localDynamicNodes.length)\n                    animationElements.animationParticles.push(new ParticleAnimationData_1.default(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n                animationElements.numProcessedVertices += numVertices;\n                //next index\n                j++;\n            }\n            //next particle\n            i++;\n        }\n    };\n    /**\n     * Property used by particle nodes that require compilers at the end of the shader\n     */\n    ParticleAnimationSet.POST_PRIORITY = 9;\n    /**\n     * Property used by particle nodes that require color compilers\n     */\n    ParticleAnimationSet.COLOR_PRIORITY = 18;\n    return ParticleAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationSet;\n\n},{\"awayjs-renderergl/lib/animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"awayjs-renderergl/lib/animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\",\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"awayjs-renderergl/lib/animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\"}],\"awayjs-renderergl/lib/animators/ParticleAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar AnimatorBase_1 = require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nvar AnimationElements_1 = require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nvar ParticleAnimator = (function (_super) {\n    __extends(ParticleAnimator, _super);\n    /**\n     * Creates a new <code>ParticleAnimator</code> object.\n     *\n     * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n     */\n    function ParticleAnimator(particleAnimationSet) {\n        _super.call(this, particleAnimationSet);\n        this._animationParticleStates = new Array();\n        this._animatorParticleStates = new Array();\n        this._timeParticleStates = new Array();\n        this._totalLenOfOneVertex = 0;\n        this._animatorSubGeometries = new Object();\n        this._particleAnimationSet = particleAnimationSet;\n        var state;\n        var node;\n        for (var i = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n            node = this._particleAnimationSet.particleNodes[i];\n            state = this.getAnimationState(node);\n            if (node.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC) {\n                this._animatorParticleStates.push(state);\n                node._iDataOffset = this._totalLenOfOneVertex;\n                this._totalLenOfOneVertex += node.dataLength;\n            }\n            else {\n                this._animationParticleStates.push(state);\n            }\n            if (state.needUpdateTime)\n                this._timeParticleStates.push(state);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.clone = function () {\n        return new ParticleAnimator(this._particleAnimationSet);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        var animationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n        var graphic = renderable.graphic;\n        var state;\n        var i;\n        if (!graphic)\n            throw (new Error(\"Must be graphic\"));\n        //process animation sub geometries\n        var animationElements = this._particleAnimationSet.getAnimationElements(graphic);\n        for (i = 0; i < this._animationParticleStates.length; i++)\n            this._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n        //process animator subgeometries\n        var animatorElements = this.getAnimatorElements(graphic);\n        for (i = 0; i < this._animatorParticleStates.length; i++)\n            this._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n        if (animationRegisterCache.numFragmentConstant > 0)\n            stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.start = function () {\n        _super.prototype.start.call(this);\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        this._pAbsoluteTime += dt;\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].update(this._pAbsoluteTime);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAnimator.prototype.resetTime = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        for (var i = 0; i < this._timeParticleStates.length; i++)\n            this._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n        this.update(this.time);\n    };\n    ParticleAnimator.prototype.dispose = function () {\n        for (var key in this._animatorSubGeometries)\n            this._animatorSubGeometries[key].dispose();\n    };\n    ParticleAnimator.prototype.getAnimatorElements = function (graphic) {\n        if (!this._animatorParticleStates.length)\n            return;\n        var elements = graphic.elements;\n        var animatorElements = this._animatorSubGeometries[elements.id] = new AnimationElements_1.default();\n        //create the vertexData vector that will be used for local state data\n        animatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n        //pass the particles data to the animator elements\n        animatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n    };\n    return ParticleAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimator;\n\n},{\"awayjs-renderergl/lib/animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"awayjs-renderergl/lib/animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nvar SkeletonAnimationSet = (function (_super) {\n    __extends(SkeletonAnimationSet, _super);\n    /**\n     * Creates a new <code>SkeletonAnimationSet</code> object.\n     *\n     * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n     */\n    function SkeletonAnimationSet(jointsPerVertex) {\n        if (jointsPerVertex === void 0) { jointsPerVertex = 4; }\n        _super.call(this);\n        this._jointsPerVertex = jointsPerVertex;\n    }\n    Object.defineProperty(SkeletonAnimationSet.prototype, \"jointsPerVertex\", {\n        /**\n         * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n         * maximum allowed value is 4.\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALVertexCode = function (shader) {\n        var len = shader.animatableAttributes.length;\n        var indexOffset0 = shader.numUsedVertexConstants;\n        var indexOffset1 = indexOffset0 + 1;\n        var indexOffset2 = indexOffset0 + 2;\n        var indexStream = \"va\" + shader.numUsedStreams;\n        var weightStream = \"va\" + (shader.numUsedStreams + 1);\n        var indices = [indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\"];\n        var weights = [weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\"];\n        var temp1 = this._pFindTempReg(shader.animationTargetRegisters);\n        var temp2 = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n        var dot = \"dp4\";\n        var code = \"\";\n        for (var i = 0; i < len; ++i) {\n            var src = shader.animatableAttributes[i];\n            for (var j = 0; j < this._jointsPerVertex; ++j) {\n                code += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n                    dot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n                    \"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n                    \"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n                // add or mov to target. Need to write to a temp reg first, because an output can be a target\n                if (j == 0)\n                    code += \"mov \" + temp2 + \", \" + temp1 + \"\\n\";\n                else\n                    code += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n            }\n            // switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n            dot = \"dp3\";\n            code += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.activate = function (shader, stage) {\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.deactivate = function (shader, stage) {\n        //\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n        //\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n        //\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n        //\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.getAGALUVCode = function (shader) {\n        return \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    return SkeletonAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimationSet;\n\n},{\"awayjs-renderergl/lib/animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\"}],\"awayjs-renderergl/lib/animators/SkeletonAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar AnimatorBase_1 = require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nvar AnimationStateEvent_1 = require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar SkeletonAnimator = (function (_super) {\n    __extends(SkeletonAnimator, _super);\n    /**\n     * Creates a new <code>SkeletonAnimator</code> object.\n     *\n     * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n     * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n     * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n     */\n    function SkeletonAnimator(animationSet, skeleton, forceCPU) {\n        var _this = this;\n        if (forceCPU === void 0) { forceCPU = false; }\n        _super.call(this, animationSet);\n        this._globalPose = new SkeletonPose_1.default();\n        this._morphedElements = new Object();\n        this._morphedElementsDirty = new Object();\n        this._skeleton = skeleton;\n        this._forceCPU = forceCPU;\n        this._jointsPerVertex = animationSet.jointsPerVertex;\n        this._numJoints = this._skeleton.numJoints;\n        this._globalMatrices = new Float32Array(this._numJoints * 12);\n        var j = 0;\n        for (var i = 0; i < this._numJoints; ++i) {\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 0;\n            this._globalMatrices[j++] = 1;\n            this._globalMatrices[j++] = 0;\n        }\n        this._onTransitionCompleteDelegate = function (event) { return _this.onTransitionComplete(event); };\n        this._onIndicesUpdateDelegate = function (event) { return _this.onIndicesUpdate(event); };\n        this._onVerticesUpdateDelegate = function (event) { return _this.onVerticesUpdate(event); };\n    }\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalMatrices\", {\n        /**\n         * returns the calculated global matrices of the current skeleton pose.\n         *\n         * @see #globalPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalMatrices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"globalPose\", {\n        /**\n         * returns the current skeleton pose output from the animator.\n         *\n         * @see away.animators.data.SkeletonPose\n         */\n        get: function () {\n            if (this._globalPropertiesDirty)\n                this.updateGlobalProperties();\n            return this._globalPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"skeleton\", {\n        /**\n         * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n         * skinned geoemtry to which skeleon animator is applied.\n         */\n        get: function () {\n            return this._skeleton;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"forceCPU\", {\n        /**\n         * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n         * Defaults to false.\n         */\n        get: function () {\n            return this._forceCPU;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonAnimator.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.clone = function () {\n        /* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n         through the constructor, which will only accept a SkeletonAnimationSet. */\n        return new SkeletonAnimator(this._pAnimationSet, this._skeleton, this._forceCPU);\n    };\n    /**\n     * Plays an animation state registered with the given name in the animation data set.\n     *\n     * @param name The data set name of the animation state to be played.\n     * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n     * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n     */\n    SkeletonAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        if (transition && this._pActiveNode) {\n            //setup the transition\n            this._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n            this._pActiveNode.addEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n        }\n        else\n            this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeSkeletonState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        // do on request of globalProperties\n        if (this._globalPropertiesDirty)\n            this.updateGlobalProperties();\n        var elements = renderable.graphic.elements;\n        elements.useCondensedIndices = this._useCondensedIndices;\n        if (this._useCondensedIndices) {\n            // using a condensed data set\n            this.updateCondensedMatrices(elements.condensedIndexLookUp);\n            stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length / 4);\n        }\n        else {\n            if (this._pAnimationSet.usesCPU) {\n                if (this._morphedElementsDirty[elements.id])\n                    this.morphElements(renderable, elements);\n                return;\n            }\n            stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints * 3);\n        }\n        shader.jointIndexIndex = vertexStreamOffset++;\n        shader.jointWeightIndex = vertexStreamOffset++;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonAnimator.prototype.testGPUCompatibility = function (shader) {\n        if (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints * 3 > 128))\n            this._pAnimationSet.cancelGPUCompatibility();\n    };\n    /**\n     * Applies the calculated time delta to the active animation state node or state transition object.\n     */\n    SkeletonAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        //invalidate pose matrices\n        this._globalPropertiesDirty = true;\n        //trigger geometry invalidation if using CPU animation\n        if (this._pAnimationSet.usesCPU)\n            for (var key in this._morphedElementsDirty)\n                this._morphedElementsDirty[key] = true;\n    };\n    SkeletonAnimator.prototype.updateCondensedMatrices = function (condensedIndexLookUp) {\n        var j = 0, k = 0;\n        var len = condensedIndexLookUp.length;\n        var srcIndex;\n        this._condensedMatrices = new Float32Array(len * 12);\n        for (var i = 0; i < len; i++) {\n            srcIndex = condensedIndexLookUp[i] * 12; //12 required for the three 4-component vectors that store the matrix\n            k = 12;\n            // copy into condensed\n            while (k--)\n                this._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n        }\n    };\n    SkeletonAnimator.prototype.updateGlobalProperties = function () {\n        this._globalPropertiesDirty = false;\n        //get global pose\n        this.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n        // convert pose to matrix\n        var mtxOffset = 0;\n        var globalPoses = this._globalPose.jointPoses;\n        var raw;\n        var ox, oy, oz, ow;\n        var xy2, xz2, xw2;\n        var yz2, yw2, zw2;\n        var n11, n12, n13;\n        var n21, n22, n23;\n        var n31, n32, n33;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        var joints = this._skeleton.joints;\n        var pose;\n        var quat;\n        var vec;\n        var t;\n        for (var i = 0; i < this._numJoints; ++i) {\n            pose = globalPoses[i];\n            quat = pose.orientation;\n            vec = pose.translation;\n            ox = quat.x;\n            oy = quat.y;\n            oz = quat.z;\n            ow = quat.w;\n            xy2 = (t = 2.0 * ox) * oy;\n            xz2 = t * oz;\n            xw2 = t * ow;\n            yz2 = (t = 2.0 * oy) * oz;\n            yw2 = t * ow;\n            zw2 = 2.0 * oz * ow;\n            yz2 = 2.0 * oy * oz;\n            yw2 = 2.0 * oy * ow;\n            zw2 = 2.0 * oz * ow;\n            ox *= ox;\n            oy *= oy;\n            oz *= oz;\n            ow *= ow;\n            n11 = (t = ox - oy) - oz + ow;\n            n12 = xy2 - zw2;\n            n13 = xz2 + yw2;\n            n21 = xy2 + zw2;\n            n22 = -t - oz + ow;\n            n23 = yz2 - xw2;\n            n31 = xz2 - yw2;\n            n32 = yz2 + xw2;\n            n33 = -ox - oy + oz + ow;\n            // prepend inverse bind pose\n            raw = joints[i].inverseBindPose;\n            m11 = raw[0];\n            m12 = raw[4];\n            m13 = raw[8];\n            m14 = raw[12];\n            m21 = raw[1];\n            m22 = raw[5];\n            m23 = raw[9];\n            m24 = raw[13];\n            m31 = raw[2];\n            m32 = raw[6];\n            m33 = raw[10];\n            m34 = raw[14];\n            this._globalMatrices[mtxOffset] = n11 * m11 + n12 * m21 + n13 * m31;\n            this._globalMatrices[mtxOffset + 1] = n11 * m12 + n12 * m22 + n13 * m32;\n            this._globalMatrices[mtxOffset + 2] = n11 * m13 + n12 * m23 + n13 * m33;\n            this._globalMatrices[mtxOffset + 3] = n11 * m14 + n12 * m24 + n13 * m34 + vec.x;\n            this._globalMatrices[mtxOffset + 4] = n21 * m11 + n22 * m21 + n23 * m31;\n            this._globalMatrices[mtxOffset + 5] = n21 * m12 + n22 * m22 + n23 * m32;\n            this._globalMatrices[mtxOffset + 6] = n21 * m13 + n22 * m23 + n23 * m33;\n            this._globalMatrices[mtxOffset + 7] = n21 * m14 + n22 * m24 + n23 * m34 + vec.y;\n            this._globalMatrices[mtxOffset + 8] = n31 * m11 + n32 * m21 + n33 * m31;\n            this._globalMatrices[mtxOffset + 9] = n31 * m12 + n32 * m22 + n33 * m32;\n            this._globalMatrices[mtxOffset + 10] = n31 * m13 + n32 * m23 + n33 * m33;\n            this._globalMatrices[mtxOffset + 11] = n31 * m14 + n32 * m24 + n33 * m34 + vec.z;\n            mtxOffset = mtxOffset + 12;\n        }\n    };\n    SkeletonAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = true;\n        //early out for GPU animations\n        if (!this._pAnimationSet.usesCPU)\n            return sourceElements;\n        var targetElements;\n        if (!(targetElements = this._morphedElements[sourceElements.id])) {\n            //not yet stored\n            targetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n            //turn off auto calculations on the morphed geometry\n            targetElements.autoDeriveNormals = false;\n            targetElements.autoDeriveTangents = false;\n            //add event listeners for any changes in UV values on the source geometry\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n            sourceElements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n        }\n        return targetElements;\n    };\n    /**\n     * If the animation can't be performed on GPU, transform vertices manually\n     * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n     * @param pass The material pass for which we need to transform the vertices\n     */\n    SkeletonAnimator.prototype.morphElements = function (renderable, sourceElements) {\n        this._morphedElementsDirty[sourceElements.id] = false;\n        var numVertices = sourceElements.numVertices;\n        var sourcePositions = sourceElements.positions.get(numVertices);\n        var sourceNormals = sourceElements.normals.get(numVertices);\n        var sourceTangents = sourceElements.tangents.get(numVertices);\n        var posDim = sourceElements.positions.dimensions;\n        var jointIndices = sourceElements.jointIndices.get(numVertices);\n        var jointWeights = sourceElements.jointWeights.get(numVertices);\n        var targetElements = this._morphedElements[sourceElements.id];\n        var targetPositions = targetElements.positions.get(numVertices);\n        var targetNormals = targetElements.normals.get(numVertices);\n        var targetTangents = targetElements.tangents.get(numVertices);\n        var index = 0;\n        var i0 = 0;\n        var i1 = 0;\n        var j = 0;\n        var k;\n        var vx, vy, vz;\n        var nx, ny, nz;\n        var tx, ty, tz;\n        var weight;\n        var vertX, vertY, vertZ;\n        var normX, normY, normZ;\n        var tangX, tangY, tangZ;\n        var m11, m12, m13, m14;\n        var m21, m22, m23, m24;\n        var m31, m32, m33, m34;\n        while (index < numVertices) {\n            i0 = index * posDim;\n            vertX = sourcePositions[i0];\n            vertY = sourcePositions[i0 + 1];\n            vertZ = (posDim == 3) ? sourcePositions[i0 + 2] : 0;\n            i1 = index * 3;\n            normX = sourceNormals[i1];\n            normY = sourceNormals[i1 + 1];\n            normZ = sourceNormals[i1 + 2];\n            tangX = sourceTangents[i1];\n            tangY = sourceTangents[i1 + 1];\n            tangZ = sourceTangents[i1 + 2];\n            vx = 0;\n            vy = 0;\n            vz = 0;\n            nx = 0;\n            ny = 0;\n            nz = 0;\n            tx = 0;\n            ty = 0;\n            tz = 0;\n            k = 0;\n            while (k < this._jointsPerVertex) {\n                weight = jointWeights[j];\n                if (weight > 0) {\n                    // implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n                    var mtxOffset = jointIndices[j++] << 2;\n                    m11 = this._globalMatrices[mtxOffset];\n                    m12 = this._globalMatrices[mtxOffset + 1];\n                    m13 = this._globalMatrices[mtxOffset + 2];\n                    m14 = this._globalMatrices[mtxOffset + 3];\n                    m21 = this._globalMatrices[mtxOffset + 4];\n                    m22 = this._globalMatrices[mtxOffset + 5];\n                    m23 = this._globalMatrices[mtxOffset + 6];\n                    m24 = this._globalMatrices[mtxOffset + 7];\n                    m31 = this._globalMatrices[mtxOffset + 8];\n                    m32 = this._globalMatrices[mtxOffset + 9];\n                    m33 = this._globalMatrices[mtxOffset + 10];\n                    m34 = this._globalMatrices[mtxOffset + 11];\n                    vx += weight * (m11 * vertX + m12 * vertY + m13 * vertZ + m14);\n                    vy += weight * (m21 * vertX + m22 * vertY + m23 * vertZ + m24);\n                    vz += weight * (m31 * vertX + m32 * vertY + m33 * vertZ + m34);\n                    nx += weight * (m11 * normX + m12 * normY + m13 * normZ);\n                    ny += weight * (m21 * normX + m22 * normY + m23 * normZ);\n                    nz += weight * (m31 * normX + m32 * normY + m33 * normZ);\n                    tx += weight * (m11 * tangX + m12 * tangY + m13 * tangZ);\n                    ty += weight * (m21 * tangX + m22 * tangY + m23 * tangZ);\n                    tz += weight * (m31 * tangX + m32 * tangY + m33 * tangZ);\n                    ++k;\n                }\n                else {\n                    j += (this._jointsPerVertex - k);\n                    k = this._jointsPerVertex;\n                }\n            }\n            targetPositions[i0] = vx;\n            targetPositions[i0 + 1] = vy;\n            if (posDim == 3)\n                targetPositions[i0 + 2] = vz;\n            targetNormals[i1] = nx;\n            targetNormals[i1 + 1] = ny;\n            targetNormals[i1 + 2] = nz;\n            targetTangents[i1] = tx;\n            targetTangents[i1 + 1] = ty;\n            targetTangents[i1 + 2] = tz;\n            index++;\n        }\n        targetElements.setPositions(targetPositions);\n        targetElements.setNormals(targetNormals);\n        targetElements.setTangents(targetTangents);\n    };\n    /**\n     * Converts a local hierarchical skeleton pose to a global pose\n     * @param targetPose The SkeletonPose object that will contain the global pose.\n     * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n     */\n    SkeletonAnimator.prototype.localToGlobalPose = function (sourcePose, targetPose, skeleton) {\n        var globalPoses = targetPose.jointPoses;\n        var globalJointPose;\n        var joints = skeleton.joints;\n        var len = sourcePose.numJointPoses;\n        var jointPoses = sourcePose.jointPoses;\n        var parentIndex;\n        var joint;\n        var parentPose;\n        var pose;\n        var or;\n        var tr;\n        var t;\n        var q;\n        var x1, y1, z1, w1;\n        var x2, y2, z2, w2;\n        var x3, y3, z3;\n        // :s\n        if (globalPoses.length != len)\n            globalPoses.length = len;\n        for (var i = 0; i < len; ++i) {\n            globalJointPose = globalPoses[i];\n            if (globalJointPose == null)\n                globalJointPose = globalPoses[i] = new JointPose_1.default();\n            joint = joints[i];\n            parentIndex = joint.parentIndex;\n            pose = jointPoses[i];\n            q = globalJointPose.orientation;\n            t = globalJointPose.translation;\n            if (parentIndex < 0) {\n                tr = pose.translation;\n                or = pose.orientation;\n                q.x = or.x;\n                q.y = or.y;\n                q.z = or.z;\n                q.w = or.w;\n                t.x = tr.x;\n                t.y = tr.y;\n                t.z = tr.z;\n            }\n            else {\n                // append parent pose\n                parentPose = globalPoses[parentIndex];\n                // rotate point\n                or = parentPose.orientation;\n                tr = pose.translation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                x3 = tr.x;\n                y3 = tr.y;\n                z3 = tr.z;\n                w1 = -x2 * x3 - y2 * y3 - z2 * z3;\n                x1 = w2 * x3 + y2 * z3 - z2 * y3;\n                y1 = w2 * y3 - x2 * z3 + z2 * x3;\n                z1 = w2 * z3 + x2 * y3 - y2 * x3;\n                // append parent translation\n                tr = parentPose.translation;\n                t.x = -w1 * x2 + x1 * w2 - y1 * z2 + z1 * y2 + tr.x;\n                t.y = -w1 * y2 + x1 * z2 + y1 * w2 - z1 * x2 + tr.y;\n                t.z = -w1 * z2 - x1 * y2 + y1 * x2 + z1 * w2 + tr.z;\n                // append parent orientation\n                x1 = or.x;\n                y1 = or.y;\n                z1 = or.z;\n                w1 = or.w;\n                or = pose.orientation;\n                x2 = or.x;\n                y2 = or.y;\n                z2 = or.z;\n                w2 = or.w;\n                q.w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n                q.x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n                q.y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n                q.z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onTransitionComplete = function (event) {\n        if (event.type == AnimationStateEvent_1.default.TRANSITION_COMPLETE) {\n            event.animationNode.removeEventListener(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n            //if this is the current active state transition, revert control to the active node\n            if (this._pActiveState == event.animationState) {\n                this._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n                this._pActiveState = this.getAnimationState(this._pActiveNode);\n                this._activeSkeletonState = this._pActiveState;\n            }\n        }\n    };\n    SkeletonAnimator.prototype.onIndicesUpdate = function (event) {\n        var elements = event.target;\n        this._morphedElements[elements.id].setIndices(elements.indices);\n    };\n    SkeletonAnimator.prototype.onVerticesUpdate = function (event) {\n        var elements = event.target;\n        var morphGraphics = this._morphedElements[elements.id];\n        switch (event.attributesView) {\n            case elements.uvs:\n                morphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n                break;\n            case elements.getCustomAtributes(\"secondaryUVs\"):\n                morphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n                break;\n        }\n    };\n    return SkeletonAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonAnimator;\n\n},{\"awayjs-display/lib/events/ElementsEvent\":undefined,\"awayjs-renderergl/lib/animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/animators/VertexAnimationSet\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationSetBase_1 = require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nvar VertexAnimationMode_1 = require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nvar VertexAnimationSet = (function (_super) {\n    __extends(VertexAnimationSet, _super);\n    /**\n     * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n     */\n    //\t\tpublic get useNormals():boolean\n    //\t\t{\n    //\t\t\treturn this._uploadNormals;\n    //\t\t}\n    /**\n     * Creates a new <code>VertexAnimationSet</code> object.\n     *\n     * @param numPoses The number of poses made available at once to the GPU animation code.\n     * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n     *\n     * @see away3d.animators.data.VertexAnimationMode\n     */\n    function VertexAnimationSet(numPoses, blendMode) {\n        if (numPoses === void 0) { numPoses = 2; }\n        if (blendMode === void 0) { blendMode = \"absolute\"; }\n        _super.call(this);\n        this._numPoses = numPoses;\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(VertexAnimationSet.prototype, \"numPoses\", {\n        /**\n         * Returns the number of poses made available at once to the GPU animation code.\n         */\n        get: function () {\n            return this._numPoses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexAnimationSet.prototype, \"blendMode\", {\n        /**\n         * Returns the active blend mode of the vertex animator object.\n         */\n        get: function () {\n            return this._blendMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALVertexCode = function (shader) {\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            return this.getAbsoluteAGALCode(shader);\n        else\n            return this.getAdditiveAGALCode(shader);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.activate = function (shader, stage) {\n        //\t\t\tvar uID:number = pass._iUniqueId;\n        //\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n        //\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.deactivate = function (shader, stage) {\n        //\t\t\tvar uID:number = pass._iUniqueId;\n        //\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n        //\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n        //\t\t\tcontext.setVertexBufferAt(index, null);\n        //\t\t\tif (this._uploadNormals)\n        //\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n        //\t\t\tif (this._uploadTangents)\n        //\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALFragmentCode = function (shader, shadedTarget) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.getAGALUVCode = function (shader) {\n        return \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimationSet.prototype.doneAGALCode = function (shader) {\n    };\n    /**\n     * Generates the vertex AGAL code for absolute blending.\n     */\n    VertexAnimationSet.prototype.getAbsoluteAGALCode = function (shader) {\n        var code = \"\";\n        var temp1 = this._pFindTempReg(shader.animationTargetRegisters);\n        var temp2 = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n        var regs = new Array(\"x\", \"y\", \"z\", \"w\");\n        var len = shader.animatableAttributes.length;\n        var constantReg = \"vc\" + shader.numUsedVertexConstants;\n        if (len > 2)\n            len = 2;\n        var streamIndex = shader.numUsedStreams;\n        for (var i = 0; i < len; ++i) {\n            code += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n            for (var j = 1; j < this._numPoses; ++j) {\n                code += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n                if (j < this._numPoses - 1)\n                    code += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n                ++streamIndex;\n            }\n            code += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        }\n        // add code for bitangents if tangents are used\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * Generates the vertex AGAL code for additive blending.\n     */\n    VertexAnimationSet.prototype.getAdditiveAGALCode = function (shader) {\n        var code = \"\";\n        var len = shader.animatableAttributes.length;\n        var regs = [\"x\", \"y\", \"z\", \"w\"];\n        var temp1 = this._pFindTempReg(shader.animationTargetRegisters);\n        var k;\n        var streamIndex = shader.numUsedStreams;\n        if (len > 2)\n            len = 2;\n        code += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n        if (shader.normalDependencies > 0)\n            code += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n        for (var i = 0; i < len; ++i) {\n            for (var j = 0; j < this._numPoses; ++j) {\n                code += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n                    \"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n                k++;\n            }\n        }\n        if (shader.tangentDependencies > 0 || shader.outputsNormals) {\n            code += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n                \"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n                \"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n        }\n        return code;\n    };\n    return VertexAnimationSet;\n}(AnimationSetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationSet;\n\n},{\"awayjs-renderergl/lib/animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\"}],\"awayjs-renderergl/lib/animators/VertexAnimator\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar AnimatorBase_1 = require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nvar VertexAnimationMode_1 = require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nvar VertexAnimator = (function (_super) {\n    __extends(VertexAnimator, _super);\n    /**\n     * Creates a new <code>VertexAnimator</code> object.\n     *\n     * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n     */\n    function VertexAnimator(vertexAnimationSet) {\n        _super.call(this, vertexAnimationSet);\n        this._poses = new Array();\n        this._weights = new Float32Array([1, 0, 0, 0]);\n        this._vertexAnimationSet = vertexAnimationSet;\n        this._numPoses = vertexAnimationSet.numPoses;\n        this._blendMode = vertexAnimationSet.blendMode;\n    }\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.clone = function () {\n        return new VertexAnimator(this._vertexAnimationSet);\n    };\n    /**\n     * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n     * @param sequenceName The name of the clip to be played.\n     */\n    VertexAnimator.prototype.play = function (name, transition, offset) {\n        if (transition === void 0) { transition = null; }\n        if (offset === void 0) { offset = NaN; }\n        if (this._pActiveAnimationName == name)\n            return;\n        this._pActiveAnimationName = name;\n        //TODO: implement transitions in vertex animator\n        if (!this._pAnimationSet.hasAnimation(name))\n            throw new Error(\"Animation root node \" + name + \" not found!\");\n        this._pActiveNode = this._pAnimationSet.getAnimation(name);\n        this._pActiveState = this.getAnimationState(this._pActiveNode);\n        if (this.updatePosition) {\n            //update straight away to reset position deltas\n            this._pActiveState.update(this._pAbsoluteTime);\n            this._pActiveState.positionDelta;\n        }\n        this._activeVertexState = this._pActiveState;\n        this.start();\n        //apply a time offset if specified\n        if (!isNaN(offset))\n            this.reset(name, offset);\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype._pUpdateDeltaTime = function (dt) {\n        _super.prototype._pUpdateDeltaTime.call(this, dt);\n        var geometryFlag = false;\n        if (this._poses[0] != this._activeVertexState.currentGraphics) {\n            this._poses[0] = this._activeVertexState.currentGraphics;\n            geometryFlag = true;\n        }\n        if (this._poses[1] != this._activeVertexState.nextGraphics) {\n            this._poses[1] = this._activeVertexState.nextGraphics;\n            geometryFlag = true;\n        }\n        this._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n        if (geometryFlag) {\n            //invalidate sprites\n            var sprite;\n            var len = this._pOwners.length;\n            for (var i = 0; i < len; i++) {\n                sprite = this._pOwners[i];\n                sprite.graphics.invalidateElements();\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexAnimator.prototype.setRenderState = function (shader, renderable, stage, camera, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        // todo: add code for when running on cpu\n        // this type of animation can only be SubSprite\n        var graphic = renderable.graphic;\n        var elements = graphic.elements;\n        // if no poses defined, set temp data\n        if (!this._poses.length) {\n            this.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n            return;\n        }\n        var i;\n        var len = this._numPoses;\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._weights, 1);\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE)\n            i = 1;\n        else\n            i = 0;\n        var elementsGL;\n        for (; i < len; ++i) {\n            elements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n            elementsGL = shader._elementsPool.getAbstraction(elements);\n            elementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n            if (elements.isAsset(TriangleElements_1.default)) {\n                elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.positions);\n                if (shader.normalDependencies > 0)\n                    elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.normals);\n            }\n        }\n    };\n    VertexAnimator.prototype.setNullPose = function (shader, elements, stage, vertexConstantOffset /*int*/, vertexStreamOffset /*int*/) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, vertexConstantOffset, this._weights, 1);\n        var elementsGL = shader._elementsPool.getAbstraction(elements);\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE) {\n            var len = this._numPoses;\n            for (var i = 1; i < len; ++i) {\n                if (elements.isAsset(TriangleElements_1.default)) {\n                    elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.positions);\n                    if (shader.normalDependencies > 0)\n                        elementsGL.activateVertexBufferVO(vertexStreamOffset++, elements.normals);\n                }\n            }\n        }\n        // todo: set temp data for additive?\n    };\n    /**\n     * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n     * Needs to be called if gpu code is potentially required.\n     */\n    VertexAnimator.prototype.testGPUCompatibility = function (shader) {\n    };\n    VertexAnimator.prototype.getRenderableElements = function (renderable, sourceElements) {\n        if (this._blendMode == VertexAnimationMode_1.default.ABSOLUTE && this._poses.length)\n            return this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n        //nothing to do here\n        return sourceElements;\n    };\n    return VertexAnimator;\n}(AnimatorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimator;\n\n},{\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-renderergl/lib/animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/animators/data/AnimationElements\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar AnimationElements = (function () {\n    function AnimationElements() {\n        this._pVertexBuffer = new Array(8);\n        this._pBufferContext = new Array(8);\n        this._pBufferDirty = new Array(8);\n        this.numProcessedVertices = 0;\n        this.previousTime = Number.NEGATIVE_INFINITY;\n        this.animationParticles = new Array();\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n        this._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n    }\n    AnimationElements.prototype.createVertexData = function (numVertices /*uint*/, totalLenOfOneVertex /*uint*/) {\n        this._numVertices = numVertices;\n        this._totalLenOfOneVertex = totalLenOfOneVertex;\n        this._pVertexData = new Array(numVertices * totalLenOfOneVertex);\n    };\n    AnimationElements.prototype.activateVertexBuffer = function (index /*int*/, bufferOffset /*int*/, stage, format) {\n        var contextIndex = stage.stageIndex;\n        var context = stage.context;\n        var buffer = this._pVertexBuffer[contextIndex];\n        if (!buffer || this._pBufferContext[contextIndex] != context) {\n            buffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex * 4);\n            this._pBufferContext[contextIndex] = context;\n            this._pBufferDirty[contextIndex] = true;\n        }\n        if (this._pBufferDirty[contextIndex]) {\n            buffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n            this._pBufferDirty[contextIndex] = false;\n        }\n        context.setVertexBufferAt(index, buffer, bufferOffset * 4, format);\n    };\n    AnimationElements.prototype.dispose = function () {\n        while (this._pVertexBuffer.length) {\n            var vertexBuffer = this._pVertexBuffer.pop();\n            if (vertexBuffer)\n                vertexBuffer.dispose();\n        }\n    };\n    AnimationElements.prototype.invalidateBuffer = function () {\n        for (var i = 0; i < 8; i++)\n            this._pBufferDirty[i] = true;\n    };\n    Object.defineProperty(AnimationElements.prototype, \"vertexData\", {\n        get: function () {\n            return this._pVertexData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationElements.prototype, \"totalLenOfOneVertex\", {\n        get: function () {\n            return this._totalLenOfOneVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationElements.SUBGEOM_ID_COUNT = 0;\n    return AnimationElements;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationElements;\n\n},{}],\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ShaderRegisterCache_1 = require(\"awayjs-renderergl/lib/animators/../shaders/ShaderRegisterCache\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/animators/../shaders/ShaderRegisterElement\");\n/**\n * ...\n */\nvar AnimationRegisterCache = (function (_super) {\n    __extends(AnimationRegisterCache, _super);\n    function AnimationRegisterCache(profile) {\n        _super.call(this, profile);\n        this.indexDictionary = new Object();\n    }\n    AnimationRegisterCache.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this.rotationRegisters = new Array();\n        this.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n        this.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n        this.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n        for (var i = 1; i < this.targetRegisters.length; i++) {\n            this.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n            this.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n        }\n        this.scaleAndRotateTarget = new ShaderRegisterElement_1.default(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n        //allot const register\n        this.vertexZeroConst = this.getFreeVertexConstant();\n        this.vertexZeroConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n        this.vertexOneConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n        this.vertexTwoConst = new ShaderRegisterElement_1.default(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n        //allot temp register\n        this.positionTarget = this.getFreeVertexVectorTemp();\n        this.addVertexTempUsages(this.positionTarget, 1);\n        this.positionTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n        if (this.needVelocity) {\n            this.velocityTarget = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(this.velocityTarget, 1);\n            this.velocityTarget = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index);\n            this.vertexTime = new ShaderRegisterElement_1.default(this.velocityTarget.regName, this.velocityTarget.index, 3);\n            this.vertexLife = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index, 3);\n        }\n        else {\n            var tempTime = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(tempTime, 1);\n            this.vertexTime = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 0);\n            this.vertexLife = new ShaderRegisterElement_1.default(tempTime.regName, tempTime.index, 1);\n        }\n    };\n    AnimationRegisterCache.prototype.setUVSourceAndTarget = function (UVAttribute, UVVaring) {\n        this.uvVar = this.getRegisterFromString(UVVaring);\n        this.uvAttribute = this.getRegisterFromString(UVAttribute);\n        //uv action is processed after normal actions,so use offsetTarget as uvTarget\n        this.uvTarget = new ShaderRegisterElement_1.default(this.positionTarget.regName, this.positionTarget.index);\n    };\n    AnimationRegisterCache.prototype.setRegisterIndex = function (node, parameterIndex /*int*/, registerIndex /*int*/) {\n        //8 should be enough for any node.\n        var t = this.indexDictionary[node.id];\n        if (t == null)\n            t = this.indexDictionary[node.id] = new Array(8) /*int*/;\n        t[parameterIndex] = registerIndex;\n    };\n    AnimationRegisterCache.prototype.getRegisterIndex = function (node, parameterIndex /*int*/) {\n        return this.indexDictionary[node.id][parameterIndex];\n    };\n    AnimationRegisterCache.prototype.getInitCode = function () {\n        var len = this.sourceRegisters.length;\n        var code = \"\";\n        for (var i = 0; i < len; i++)\n            code += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n        code += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n        if (this.needVelocity)\n            code += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n        return code;\n    };\n    AnimationRegisterCache.prototype.getCombinationCode = function () {\n        return \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n    };\n    AnimationRegisterCache.prototype.initColorRegisters = function () {\n        var code = \"\";\n        if (this.hasColorMulNode) {\n            this.colorMulTarget = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(this.colorMulTarget, 1);\n            this.colorMulVary = this.getFreeVarying();\n            code += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n        }\n        if (this.hasColorAddNode) {\n            this.colorAddTarget = this.getFreeVertexVectorTemp();\n            this.addVertexTempUsages(this.colorAddTarget, 1);\n            this.colorAddVary = this.getFreeVarying();\n            code += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n        }\n        return code;\n    };\n    AnimationRegisterCache.prototype.getColorPassCode = function () {\n        var code = \"\";\n        if (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            if (this.hasColorMulNode)\n                code += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n        }\n        return code;\n    };\n    AnimationRegisterCache.prototype.getColorCombinationCode = function (shadedTarget) {\n        var code = \"\";\n        if (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n            var colorTarget = this.getRegisterFromString(shadedTarget);\n            this.addFragmentTempUsages(colorTarget, 1);\n            if (this.hasColorMulNode)\n                code += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n            if (this.hasColorAddNode)\n                code += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n        }\n        return code;\n    };\n    AnimationRegisterCache.prototype.getRegisterFromString = function (code) {\n        var temp = code.split(/(\\d+)/);\n        return new ShaderRegisterElement_1.default(temp[0], parseInt(temp[1]));\n    };\n    Object.defineProperty(AnimationRegisterCache.prototype, \"numVertexConstant\", {\n        get: function () {\n            return this._numVertexConstant;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationRegisterCache.prototype, \"numFragmentConstant\", {\n        get: function () {\n            return this._numFragmentConstant;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationRegisterCache.prototype.setDataLength = function () {\n        this._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n        this._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n        this.vertexConstantData = new Float32Array(this._numVertexConstant * 4);\n        this.fragmentConstantData = new Float32Array(this._numFragmentConstant * 4);\n    };\n    AnimationRegisterCache.prototype.setVertexConst = function (index /*int*/, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        var _index = (index - this.vertexConstantOffset) * 4;\n        this.vertexConstantData[_index++] = x;\n        this.vertexConstantData[_index++] = y;\n        this.vertexConstantData[_index++] = z;\n        this.vertexConstantData[_index] = w;\n    };\n    AnimationRegisterCache.prototype.setVertexConstFromArray = function (index /*int*/, data) {\n        var _index = (index - this.vertexConstantOffset) * 4;\n        for (var i = 0; i < data.length; i++)\n            this.vertexConstantData[_index++] = data[i];\n    };\n    AnimationRegisterCache.prototype.setVertexConstFromMatrix = function (index /*int*/, matrix) {\n        var rawData = matrix.rawData;\n        var _index = (index - this.vertexConstantOffset) * 4;\n        this.vertexConstantData[_index++] = rawData[0];\n        this.vertexConstantData[_index++] = rawData[4];\n        this.vertexConstantData[_index++] = rawData[8];\n        this.vertexConstantData[_index++] = rawData[12];\n        this.vertexConstantData[_index++] = rawData[1];\n        this.vertexConstantData[_index++] = rawData[5];\n        this.vertexConstantData[_index++] = rawData[9];\n        this.vertexConstantData[_index++] = rawData[13];\n        this.vertexConstantData[_index++] = rawData[2];\n        this.vertexConstantData[_index++] = rawData[6];\n        this.vertexConstantData[_index++] = rawData[10];\n        this.vertexConstantData[_index++] = rawData[14];\n        this.vertexConstantData[_index++] = rawData[3];\n        this.vertexConstantData[_index++] = rawData[7];\n        this.vertexConstantData[_index++] = rawData[11];\n        this.vertexConstantData[_index] = rawData[15];\n    };\n    AnimationRegisterCache.prototype.setFragmentConst = function (index /*int*/, x, y, z, w) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        if (w === void 0) { w = 0; }\n        var _index = (index - this.fragmentConstantOffset) * 4;\n        this.fragmentConstantData[_index++] = x;\n        this.fragmentConstantData[_index++] = y;\n        this.fragmentConstantData[_index++] = z;\n        this.fragmentConstantData[_index] = w;\n    };\n    return AnimationRegisterCache;\n}(ShaderRegisterCache_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationRegisterCache;\n\n},{\"awayjs-renderergl/lib/animators/../shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"awayjs-renderergl/lib/animators/../shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\":[function(require,module,exports){\n\"use strict\";\nvar ColorSegmentPoint = (function () {\n    function ColorSegmentPoint(life, color) {\n        //0<life<1\n        if (life <= 0 || life >= 1)\n            throw (new Error(\"life exceeds range (0,1)\"));\n        this._life = life;\n        this._color = color;\n    }\n    Object.defineProperty(ColorSegmentPoint.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ColorSegmentPoint.prototype, \"life\", {\n        get: function () {\n            return this._life;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorSegmentPoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ColorSegmentPoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/JointPose\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nvar JointPose = (function () {\n    function JointPose() {\n        /**\n         * The rotation of the pose stored as a quaternion\n         */\n        this.orientation = new Quaternion_1.default();\n        /**\n         * The translation of the pose\n         */\n        this.translation = new Vector3D_1.default();\n    }\n    /**\n     * Converts the transformation to a Matrix3D representation.\n     *\n     * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n     * @return The transformation matrix of the pose.\n     */\n    JointPose.prototype.toMatrix3D = function (target) {\n        if (target === void 0) { target = null; }\n        if (target == null)\n            target = new Matrix3D_1.default();\n        this.orientation.toMatrix3D(target);\n        target.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n        return target;\n    };\n    /**\n     * Copies the transformation data from a source pose object into the existing pose object.\n     *\n     * @param pose The source pose to copy from.\n     */\n    JointPose.prototype.copyFrom = function (pose) {\n        var or = pose.orientation;\n        var tr = pose.translation;\n        this.orientation.x = or.x;\n        this.orientation.y = or.y;\n        this.orientation.z = or.z;\n        this.orientation.w = or.w;\n        this.translation.x = tr.x;\n        this.translation.y = tr.y;\n        this.translation.z = tr.z;\n    };\n    return JointPose;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = JointPose;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Quaternion\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleAnimationData = (function () {\n    function ParticleAnimationData(index /*uint*/, startTime, duration, delay, particle) {\n        this.index = index;\n        this.startTime = startTime;\n        this.totalTime = duration + delay;\n        this.duration = duration;\n        this.delay = delay;\n        this.startVertexIndex = particle.startVertexIndex;\n        this.numVertices = particle.numVertices;\n    }\n    return ParticleAnimationData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAnimationData;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the properties mode of a particle animation node.\n */\nvar ParticlePropertiesMode = (function () {\n    function ParticlePropertiesMode() {\n    }\n    /**\n     * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n     */\n    ParticlePropertiesMode.GLOBAL = 0;\n    /**\n     * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n     */\n    ParticlePropertiesMode.LOCAL_STATIC = 1;\n    /**\n     * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n     */\n    ParticlePropertiesMode.LOCAL_DYNAMIC = 2;\n    return ParticlePropertiesMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePropertiesMode;\n\n},{}],\"awayjs-renderergl/lib/animators/data/ParticleProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nvar ParticleProperties = (function () {\n    function ParticleProperties() {\n    }\n    return ParticleProperties;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleProperties;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonJoint\":[function(require,module,exports){\n\"use strict\";\n/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nvar SkeletonJoint = (function () {\n    /**\n     * Creates a new <code>SkeletonJoint</code> object\n     */\n    function SkeletonJoint() {\n        /**\n         * The index of the parent joint in the skeleton's joints vector.\n         *\n         * @see away.animators.Skeleton#joints\n         */\n        this.parentIndex = -1;\n    }\n    return SkeletonJoint;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonJoint;\n\n},{}],\"awayjs-renderergl/lib/animators/data/SkeletonPose\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nvar SkeletonPose = (function (_super) {\n    __extends(SkeletonPose, _super);\n    /**\n     * Creates a new <code>SkeletonPose</code> object.\n     */\n    function SkeletonPose() {\n        _super.call(this);\n        this.jointPoses = new Array();\n    }\n    Object.defineProperty(SkeletonPose.prototype, \"numJointPoses\", {\n        /**\n         * The total number of joint poses in the skeleton pose.\n         */\n        get: function () {\n            return this.jointPoses.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonPose.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return SkeletonPose.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint pose object with the given joint name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object whose pose is to be found.\n     * @return The pose object with the given joint name.\n     */\n    SkeletonPose.prototype.jointPoseFromName = function (jointName) {\n        var jointPoseIndex = this.jointPoseIndexFromName(jointName);\n        if (jointPoseIndex != -1)\n            return this.jointPoses[jointPoseIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n     *\n     * @param The name of the joint object whose pose is to be found.\n     * @return The index of the pose object in the jointPoses Array\n     *\n     * @see #jointPoses\n     */\n    SkeletonPose.prototype.jointPoseIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointPoseIndex;\n        var jointPose;\n        for (var i; i < this.jointPoses.length; i++) {\n            jointPose = this.jointPoses[i];\n            if (jointPose.name == jointName)\n                return jointPoseIndex;\n            jointPoseIndex++;\n        }\n        return -1;\n    };\n    /**\n     * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n     *\n     * @return SkeletonPose\n     */\n    SkeletonPose.prototype.clone = function () {\n        var clone = new SkeletonPose();\n        var numJointPoses = this.jointPoses.length;\n        for (var i = 0; i < numJointPoses; i++) {\n            var cloneJointPose = new JointPose_1.default();\n            var thisJointPose = this.jointPoses[i];\n            cloneJointPose.name = thisJointPose.name;\n            cloneJointPose.copyFrom(thisJointPose);\n            clone.jointPoses[i] = cloneJointPose;\n        }\n        return clone;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonPose.prototype.dispose = function () {\n        this.jointPoses.length = 0;\n    };\n    SkeletonPose.assetType = \"[asset SkeletonPose]\";\n    return SkeletonPose;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonPose;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined,\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\"}],\"awayjs-renderergl/lib/animators/data/Skeleton\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nvar Skeleton = (function (_super) {\n    __extends(Skeleton, _super);\n    /**\n     * Creates a new <code>Skeleton</code> object\n     */\n    function Skeleton() {\n        _super.call(this);\n        // in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n        this.joints = new Array();\n    }\n    Object.defineProperty(Skeleton.prototype, \"numJoints\", {\n        /**\n         * The total number of joints in the skeleton.\n         */\n        get: function () {\n            return this.joints.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The joint object with the given name.\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointFromName = function (jointName) {\n        var jointIndex = this.jointIndexFromName(jointName);\n        if (jointIndex != -1)\n            return this.joints[jointIndex];\n        else\n            return null;\n    };\n    /**\n     * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n     *\n     * @param jointName The name of the joint object to be found.\n     * @return The index of the joint object in the joints Array\n     *\n     * @see #joints\n     */\n    Skeleton.prototype.jointIndexFromName = function (jointName) {\n        // this is implemented as a linear search, rather than a possibly\n        // more optimal method (Dictionary lookup, for example) because:\n        // a) it is assumed that it will be called once for each joint\n        // b) it is assumed that it will be called only during load, and not during main loop\n        // c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n        //    rather than direct array access.  this would be sub-optimal.\n        var jointIndex;\n        var joint;\n        for (var i; i < this.joints.length; i++) {\n            joint = this.joints[i];\n            if (joint.name == jointName)\n                return jointIndex;\n            jointIndex++;\n        }\n        return -1;\n    };\n    /**\n     * @inheritDoc\n     */\n    Skeleton.prototype.dispose = function () {\n        this.joints.length = 0;\n    };\n    Object.defineProperty(Skeleton.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return Skeleton.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skeleton.assetType = \"[asset Skeleton]\";\n    return Skeleton;\n}(AssetBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Skeleton;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nvar VertexAnimationMode = (function () {\n    function VertexAnimationMode() {\n    }\n    /**\n     * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ADDITIVE = \"additive\";\n    /**\n     * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n     */\n    VertexAnimationMode.ABSOLUTE = \"absolute\";\n    return VertexAnimationMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexAnimationMode;\n\n},{}],\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nvar AnimationClipNodeBase = (function (_super) {\n    __extends(AnimationClipNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationClipNodeBase</code> object.\n     */\n    function AnimationClipNodeBase() {\n        _super.call(this);\n        this._pLooping = true;\n        this._pTotalDuration = 0;\n        this._pStitchDirty = true;\n        this._pStitchFinalFrame = false;\n        this._pNumFrames = 0;\n        this._pDurations = new Array();\n        /*uint*/\n        this._pTotalDelta = new Vector3D_1.default();\n        this.fixedFrameRate = true;\n    }\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"looping\", {\n        /**\n         * Determines whether the contents of the animation node have looping characteristics enabled.\n         */\n        get: function () {\n            return this._pLooping;\n        },\n        set: function (value) {\n            if (this._pLooping == value)\n                return;\n            this._pLooping = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"stitchFinalFrame\", {\n        /**\n         * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n         * assumption that both first and last frames are identical (false). Defaults to false.\n         */\n        get: function () {\n            return this._pStitchFinalFrame;\n        },\n        set: function (value) {\n            if (this._pStitchFinalFrame == value)\n                return;\n            this._pStitchFinalFrame = value;\n            this._pStitchDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDuration\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"totalDelta\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pTotalDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"lastFrame\", {\n        get: function () {\n            if (this._pStitchDirty)\n                this._pUpdateStitch();\n            return this._pLastFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipNodeBase.prototype, \"durations\", {\n        /**\n         * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n         */\n        get: function () {\n            return this._pDurations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the node's final frame stitch state.\n     *\n     * @see #stitchFinalFrame\n     */\n    AnimationClipNodeBase.prototype._pUpdateStitch = function () {\n        this._pStitchDirty = false;\n        this._pLastFrame = (this._pStitchFinalFrame) ? this._pNumFrames : this._pNumFrames - 1;\n        this._pTotalDuration = 0;\n        this._pTotalDelta.x = 0;\n        this._pTotalDelta.y = 0;\n        this._pTotalDelta.z = 0;\n    };\n    return AnimationClipNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipNodeBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleAccelerationState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nvar ParticleAccelerationNode = (function (_super) {\n    __extends(ParticleAccelerationNode, _super);\n    /**\n     * Creates a new <code>ParticleAccelerationNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n     */\n    function ParticleAccelerationNode(mode /*uint*/, acceleration) {\n        if (acceleration === void 0) { acceleration = null; }\n        _super.call(this, \"ParticleAcceleration\", mode, 3);\n        this._pStateClass = ParticleAccelerationState_1.default;\n        this._acceleration = acceleration || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.pGetAGALVertexCode = function (shader, animationRegisterCache) {\n        var accelerationValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleAccelerationState_1.default.ACCELERATION_INDEX, accelerationValue.index);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var code = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n        if (animationRegisterCache.needVelocity) {\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            code += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        }\n        animationRegisterCache.removeVertexTempUsage(temp);\n        code += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var tempAcceleration = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n        if (!tempAcceleration)\n            throw new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n        this._pOneData[0] = tempAcceleration.x / 2;\n        this._pOneData[1] = tempAcceleration.y / 2;\n        this._pOneData[2] = tempAcceleration.z / 2;\n    };\n    /**\n     * Reference for acceleration node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n     */\n    ParticleAccelerationNode.ACCELERATION_VECTOR3D = \"AccelerationVector3D\";\n    return ParticleAccelerationNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleBezierCurveState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nvar ParticleBezierCurveNode = (function (_super) {\n    __extends(ParticleBezierCurveNode, _super);\n    /**\n     * Creates a new <code>ParticleBezierCurveNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n     * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n     */\n    function ParticleBezierCurveNode(mode /*uint*/, controlPoint, endPoint) {\n        if (controlPoint === void 0) { controlPoint = null; }\n        if (endPoint === void 0) { endPoint = null; }\n        _super.call(this, \"ParticleBezierCurve\", mode, 6);\n        this._pStateClass = ParticleBezierCurveState_1.default;\n        this._iControlPoint = controlPoint || new Vector3D_1.default();\n        this._iEndPoint = endPoint || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var controlValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_CONTROL_INDEX, controlValue.index);\n        var endValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState_1.default.BEZIER_END_INDEX, endValue.index);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var rev_time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var time_2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var time_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        animationRegisterCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n        code += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n        code += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        code += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity) {\n            code += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n            code += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n            code += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBezierCurveNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var bezierControl = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n        if (!bezierControl)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n        var bezierEnd = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n        if (!bezierEnd)\n            throw new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n        this._pOneData[0] = bezierControl.x;\n        this._pOneData[1] = bezierControl.y;\n        this._pOneData[2] = bezierControl.z;\n        this._pOneData[3] = bezierEnd.x;\n        this._pOneData[4] = bezierEnd.y;\n        this._pOneData[5] = bezierEnd.z;\n    };\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D = \"BezierControlVector3D\";\n    /**\n     * Reference for bezier curve node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n     */\n    ParticleBezierCurveNode.BEZIER_END_VECTOR3D = \"BezierEndVector3D\";\n    return ParticleBezierCurveNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleBillboardState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nvar ParticleBillboardNode = (function (_super) {\n    __extends(ParticleBillboardNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleBillboardNode(billboardAxis) {\n        if (billboardAxis === void 0) { billboardAxis = null; }\n        _super.call(this, \"ParticleBillboard\", ParticlePropertiesMode_1.default.GLOBAL, 0, 4);\n        this._pStateClass = ParticleBillboardState_1.default;\n        this._iBillboardAxis = billboardAxis;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var rotationMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleBillboardState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var code = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n            \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        var shaderRegisterElement;\n        for (var i = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n            shaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n            code += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n                \"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleBillboardNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasBillboard = true;\n    };\n    return ParticleBillboardNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardNode;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleColorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nvar ParticleColorNode = (function (_super) {\n    __extends(ParticleColorNode, _super);\n    /**\n     * Creates a new <code>ParticleColorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n     * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n     * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleColorNode(mode /*uint*/, usesMultiplier, usesOffset, usesCycle, usesPhase, startColor, endColor, cycleDuration, cyclePhase) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (startColor === void 0) { startColor = null; }\n        if (endColor === void 0) { endColor = null; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleColor\", mode, (usesMultiplier && usesOffset) ? 16 : 8, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iStartColor = startColor || new ColorTransform_1.default();\n        this._iEndColor = endColor || new ColorTransform_1.default();\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        if (animationRegisterCache.needFragmentAnimation) {\n            var temp = animationRegisterCache.getFreeVertexVectorTemp();\n            if (this._iUsesCycle) {\n                var cycleConst = animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.CYCLE_INDEX, cycleConst.index);\n                animationRegisterCache.addVertexTempUsages(temp, 1);\n                var sin = animationRegisterCache.getFreeVertexSingleTemp();\n                animationRegisterCache.removeVertexTempUsage(temp);\n                code += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n                if (this._iUsesPhase)\n                    code += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n                code += \"sin \" + sin + \",\" + sin + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                var startMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n                var deltaMultiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n                code += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle ? sin : animationRegisterCache.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n                code += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var startOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n                var deltaOffsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                animationRegisterCache.setRegisterIndex(this, ParticleColorState_1.default.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n                code += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle ? sin : animationRegisterCache.vertexLife) + \"\\n\";\n                code += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var startColor = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n        if (!startColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n        var endColor = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n        if (!endColor)\n            throw (new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        if (!this._iUsesCycle) {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = startColor.redMultiplier;\n                this._pOneData[i++] = startColor.greenMultiplier;\n                this._pOneData[i++] = startColor.blueMultiplier;\n                this._pOneData[i++] = startColor.alphaMultiplier;\n                this._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n                this._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n                this._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n                this._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = startColor.redOffset / 255;\n                this._pOneData[i++] = startColor.greenOffset / 255;\n                this._pOneData[i++] = startColor.blueOffset / 255;\n                this._pOneData[i++] = startColor.alphaOffset / 255;\n                this._pOneData[i++] = (endColor.redOffset - startColor.redOffset) / 255;\n                this._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset) / 255;\n                this._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset) / 255;\n                this._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset) / 255;\n            }\n        }\n        else {\n            //multiplier\n            if (this._iUsesMultiplier) {\n                this._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier) / 2;\n                this._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier) / 2;\n                this._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier) / 2;\n                this._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier) / 2;\n                this._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier) / 2;\n            }\n            //offset\n            if (this._iUsesOffset) {\n                this._pOneData[i++] = (startColor.redOffset + endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.redOffset - endColor.redOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset) / (255 * 2);\n                this._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset) / (255 * 2);\n            }\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_START_COLORTRANSFORM = \"ColorStartColorTransform\";\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n     */\n    ParticleColorNode.COLOR_END_COLORTRANSFORM = \"ColorEndColorTransform\";\n    return ParticleColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorNode;\n\n},{\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleFollowState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nvar ParticleFollowNode = (function (_super) {\n    __extends(ParticleFollowNode, _super);\n    /**\n     * Creates a new <code>ParticleFollowNode</code>\n     *\n     * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n     * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n     * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n     */\n    function ParticleFollowNode(usesPosition, usesRotation, smooth) {\n        if (usesPosition === void 0) { usesPosition = true; }\n        if (usesRotation === void 0) { usesRotation = true; }\n        if (smooth === void 0) { smooth = false; }\n        _super.call(this, \"ParticleFollow\", ParticlePropertiesMode_1.default.LOCAL_DYNAMIC, (usesPosition && usesRotation) ? 6 : 3, ParticleAnimationSet_1.default.POST_PRIORITY);\n        this._pStateClass = ParticleFollowState_1.default;\n        this._iUsesPosition = usesPosition;\n        this._iUsesRotation = usesRotation;\n        this._iSmooth = smooth;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        //TODO: use Quaternion to implement this function\n        var code = \"\";\n        if (this._iUsesRotation) {\n            var rotationAttribute = animationRegisterCache.getFreeVertexAttribute();\n            animationRegisterCache.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n            var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp1, 1);\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp2, 1);\n            var temp3 = animationRegisterCache.getFreeVertexVectorTemp();\n            var temp4;\n            if (animationRegisterCache.hasBillboard) {\n                animationRegisterCache.addVertexTempUsages(temp3, 1);\n                temp4 = animationRegisterCache.getFreeVertexVectorTemp();\n            }\n            animationRegisterCache.removeVertexTempUsage(temp1);\n            animationRegisterCache.removeVertexTempUsage(temp2);\n            if (animationRegisterCache.hasBillboard)\n                animationRegisterCache.removeVertexTempUsage(temp3);\n            var len = animationRegisterCache.rotationRegisters.length;\n            var i;\n            //x axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n            code += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n            code += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n            code += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n            if (animationRegisterCache.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //y axis\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n            code += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n            code += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n            if (animationRegisterCache.hasBillboard)\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n            else {\n                code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n            //z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n            code += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            if (animationRegisterCache.hasBillboard) {\n                code += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n                code += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n                code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            }\n            else {\n                code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n                for (i = 0; i < len; i++)\n                    code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n            }\n        }\n        if (this._iUsesPosition) {\n            var positionAttribute = animationRegisterCache.getFreeVertexAttribute();\n            animationRegisterCache.setRegisterIndex(this, ParticleFollowState_1.default.FOLLOW_POSITION_INDEX, positionAttribute.index);\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return ParticleFollowNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowNode;\n\n},{\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleInitialColorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\n/**\n *\n */\nvar ParticleInitialColorNode = (function (_super) {\n    __extends(ParticleInitialColorNode, _super);\n    function ParticleInitialColorNode(mode /*uint*/, usesMultiplier, usesOffset, initialColor) {\n        if (usesMultiplier === void 0) { usesMultiplier = true; }\n        if (usesOffset === void 0) { usesOffset = false; }\n        if (initialColor === void 0) { initialColor = null; }\n        _super.call(this, \"ParticleInitialColor\", mode, (usesMultiplier && usesOffset) ? 8 : 4, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleInitialColorState_1.default;\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iInitialColor = initialColor || new ColorTransform_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        if (animationRegisterCache.needFragmentAnimation) {\n            if (this._iUsesMultiplier) {\n                var multiplierValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n                animationRegisterCache.setRegisterIndex(this, ParticleInitialColorState_1.default.MULTIPLIER_INDEX, multiplierValue.index);\n                code += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                var offsetValue = (this._pMode == ParticlePropertiesMode_1.default.LOCAL_STATIC) ? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleInitialColorState_1.default.OFFSET_INDEX, offsetValue.index);\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var initialColor = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n        if (!initialColor)\n            throw (new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n        var i = 0;\n        //multiplier\n        if (this._iUsesMultiplier) {\n            this._pOneData[i++] = initialColor.redMultiplier;\n            this._pOneData[i++] = initialColor.greenMultiplier;\n            this._pOneData[i++] = initialColor.blueMultiplier;\n            this._pOneData[i++] = initialColor.alphaMultiplier;\n        }\n        //offset\n        if (this._iUsesOffset) {\n            this._pOneData[i++] = initialColor.redOffset / 255;\n            this._pOneData[i++] = initialColor.greenOffset / 255;\n            this._pOneData[i++] = initialColor.blueOffset / 255;\n            this._pOneData[i++] = initialColor.alphaOffset / 255;\n        }\n    };\n    /**\n     * Reference for color node properties on a single particle (when in local property mode).\n     * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n     */\n    ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM = \"ColorInitialColorTransform\";\n    return ParticleInitialColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorNode;\n\n},{\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nvar ParticleNodeBase = (function (_super) {\n    __extends(ParticleNodeBase, _super);\n    /**\n     * Creates a new <code>ParticleNodeBase</code> object.\n     *\n     * @param               name            Defines the generic name of the particle animation node.\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n     * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n     */\n    function ParticleNodeBase(name, mode /*uint*/, dataLength /*uint*/, priority) {\n        if (priority === void 0) { priority = 1; }\n        _super.call(this);\n        this._pDataLength = 3;\n        name = name + ParticleNodeBase.MODES[mode];\n        this.name = name;\n        this._pMode = mode;\n        this._priority = priority;\n        this._pDataLength = dataLength;\n        this._pOneData = new Array(this._pDataLength);\n    }\n    Object.defineProperty(ParticleNodeBase.prototype, \"mode\", {\n        /**\n         * Returns the property mode of the particle animation node. Typically set in the node constructor\n         *\n         * @see away.animators.ParticlePropertiesMode\n         */\n        get: function () {\n            return this._pMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"priority\", {\n        /**\n         * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._priority;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"dataLength\", {\n        /**\n         * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #getAGALVertexCode\n         */\n        get: function () {\n            return this._pDataLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleNodeBase.prototype, \"oneData\", {\n        /**\n         * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n         *\n         * @see away.animators.ParticleAnimationSet\n         * @see #generatePropertyOfOneParticle\n         */\n        get: function () {\n            return this._pOneData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the AGAL code of the particle animation node for use in the vertex shader.\n     */\n    ParticleNodeBase.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader.\n     */\n    ParticleNodeBase.prototype.getAGALFragmentCode = function (shader, animationRegisterCache) {\n        return \"\";\n    };\n    /**\n     * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n     */\n    ParticleNodeBase.prototype.getAGALUVCode = function (shader, animationRegisterCache) {\n        return \"\";\n    };\n    /**\n     * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n     *\n     * @see away.animators.ParticleAnimationSet#initParticleFunc\n     */\n    ParticleNodeBase.prototype._iGeneratePropertyOfOneParticle = function (param) {\n    };\n    /**\n     * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n     */\n    ParticleNodeBase.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n    };\n    //modes alias\n    ParticleNodeBase.GLOBAL = 'Global';\n    ParticleNodeBase.LOCAL_STATIC = 'LocalStatic';\n    ParticleNodeBase.LOCAL_DYNAMIC = 'LocalDynamic';\n    //modes list\n    ParticleNodeBase.MODES = {\n        0: ParticleNodeBase.GLOBAL,\n        1: ParticleNodeBase.LOCAL_STATIC,\n        2: ParticleNodeBase.LOCAL_DYNAMIC\n    };\n    return ParticleNodeBase;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleNodeBase;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined}],\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleOrbitState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nvar ParticleOrbitNode = (function (_super) {\n    __extends(ParticleOrbitNode, _super);\n    /**\n     * Creates a new <code>ParticleOrbitNode</code> object.\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n     * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n     * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n     */\n    function ParticleOrbitNode(mode /*uint*/, usesEulers, usesCycle, usesPhase, radius, cycleDuration, cyclePhase, eulers) {\n        if (usesEulers === void 0) { usesEulers = true; }\n        if (usesCycle === void 0) { usesCycle = false; }\n        if (usesPhase === void 0) { usesPhase = false; }\n        if (radius === void 0) { radius = 100; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (eulers === void 0) { eulers = null; }\n        var len = 3;\n        if (usesPhase)\n            len++;\n        _super.call(this, \"ParticleOrbit\", mode, len);\n        this._pStateClass = ParticleOrbitState_1.default;\n        this._iUsesEulers = usesEulers;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iRadius = radius;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n        this._iEulers = eulers || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var orbitRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleOrbitState_1.default.ORBIT_INDEX, orbitRegister.index);\n        var eulersMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleOrbitState_1.default.EULERS_INDEX, eulersMatrixRegister.index);\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.getFreeVertexConstant();\n        var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(temp1, 1);\n        var distance = new ShaderRegisterElement_1.default(temp1.regName, temp1.index);\n        var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n        var cos = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 1);\n        var degree = new ShaderRegisterElement_1.default(temp2.regName, temp2.index, 2);\n        animationRegisterCache.removeVertexTempUsage(temp1);\n        var code = \"\";\n        if (this._iUsesCycle) {\n            code += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n        }\n        else\n            code += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n        code += \"cos \" + cos + \",\" + degree + \"\\n\";\n        code += \"sin \" + sin + \",\" + degree + \"\\n\";\n        code += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n        code += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n        code += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n        if (this._iUsesEulers)\n            code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity) {\n            code += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n            code += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n            code += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            if (this._iUsesEulers)\n                code += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n            code += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n            code += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n            if (!this._iUsesCycle)\n                code += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOrbitNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n        var orbit = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n        if (!orbit)\n            throw new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n        this._pOneData[0] = orbit.x;\n        if (this._iUsesCycle && orbit.y <= 0)\n            throw (new Error(\"the cycle duration must be greater than zero\"));\n        this._pOneData[1] = Math.PI * 2 / (!this._iUsesCycle ? 1 : orbit.y);\n        this._pOneData[2] = orbit.x * Math.PI * 2;\n        if (this._iUsesPhase)\n            this._pOneData[3] = orbit.z * Math.PI / 180;\n    };\n    /**\n     * Reference for orbit node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n     */\n    ParticleOrbitNode.ORBIT_VECTOR3D = \"OrbitVector3D\";\n    return ParticleOrbitNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleOscillatorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nvar ParticleOscillatorNode = (function (_super) {\n    __extends(ParticleOscillatorNode, _super);\n    /**\n     * Creates a new <code>ParticleOscillatorNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n     */\n    function ParticleOscillatorNode(mode /*uint*/, oscillator) {\n        if (oscillator === void 0) { oscillator = null; }\n        _super.call(this, \"ParticleOscillator\", mode, 4);\n        this._pStateClass = ParticleOscillatorState_1.default;\n        this._iOscillator = oscillator || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var oscillatorRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleOscillatorState_1.default.OSCILLATOR_INDEX, oscillatorRegister.index);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var dgree = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n        var distance = new ShaderRegisterElement_1.default(temp2.regName, temp2.index);\n        animationRegisterCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + dgree + \"\\n\";\n        code += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity) {\n            code += \"cos \" + cos + \",\" + dgree + \"\\n\";\n            code += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n        var drift = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n        if (!drift)\n            throw (new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = drift.x;\n        this._pOneData[1] = drift.y;\n        this._pOneData[2] = drift.z;\n        if (drift.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        this._pOneData[3] = Math.PI * 2 / drift.w;\n    };\n    /**\n     * Reference for ocsillator node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n     */\n    ParticleOscillatorNode.OSCILLATOR_VECTOR3D = \"OscillatorVector3D\";\n    return ParticleOscillatorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticlePositionState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nvar ParticlePositionNode = (function (_super) {\n    __extends(ParticlePositionNode, _super);\n    /**\n     * Creates a new <code>ParticlePositionNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n     */\n    function ParticlePositionNode(mode /*uint*/, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticlePosition\", mode, 3);\n        this._pStateClass = ParticlePositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticlePositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        return \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticlePositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for position node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing position of the particle.\n     */\n    ParticlePositionNode.POSITION_VECTOR3D = \"PositionVector3D\";\n    return ParticlePositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToHeadingState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nvar ParticleRotateToHeadingNode = (function (_super) {\n    __extends(ParticleRotateToHeadingNode, _super);\n    /**\n     * Creates a new <code>ParticleBillboardNode</code>\n     */\n    function ParticleRotateToHeadingNode() {\n        _super.call(this, \"ParticleRotateToHeading\", ParticlePropertiesMode_1.default.GLOBAL, 0, 3);\n        this._pStateClass = ParticleRotateToHeadingState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        var len = animationRegisterCache.rotationRegisters.length;\n        var i;\n        if (animationRegisterCache.hasBillboard) {\n            var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp1, 1);\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp2, 1);\n            var temp3 = animationRegisterCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.removeVertexTempUsage(temp1);\n            animationRegisterCache.removeVertexTempUsage(temp2);\n            //process the velocity\n            code += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmVel = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(nrmVel, 1);\n            var xAxis = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(xAxis, 1);\n            var R = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(R, 1);\n            var R_rev = animationRegisterCache.getFreeVertexVectorTemp();\n            var cos = new ShaderRegisterElement_1.default(R.regName, R.index, 3);\n            var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n            var cos2 = new ShaderRegisterElement_1.default(nrmVel.regName, nrmVel.index, 3);\n            var tempSingle = sin;\n            animationRegisterCache.removeVertexTempUsage(nrmVel);\n            animationRegisterCache.removeVertexTempUsage(xAxis);\n            animationRegisterCache.removeVertexTempUsage(R);\n            code += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n            code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            //use R as temp to judge if nrm is (0,0,0).\n            //if nrm is (0,0,0) ,change it to (0,0,1).\n            code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n            code += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n            code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n            code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n            code += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n            code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n            code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            //use cos as R_rev.w\n            //nrmVel and xAxis are used as temp register\n            code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            //use cos as R.w\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            //code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n                code += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n                code += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n                code += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n                code += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n                code += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n                code += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n                code += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n                code += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n                code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n                code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n                code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n                code += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n                code += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n                code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n                code += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToHeadingNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.needVelocity = true;\n    };\n    return ParticleRotateToHeadingNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingNode;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleRotateToPositionState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nvar ParticleRotateToPositionNode = (function (_super) {\n    __extends(ParticleRotateToPositionNode, _super);\n    /**\n     * Creates a new <code>ParticleRotateToPositionNode</code>\n     */\n    function ParticleRotateToPositionNode(mode /*uint*/, position) {\n        if (position === void 0) { position = null; }\n        _super.call(this, \"ParticleRotateToPosition\", mode, 3, 3);\n        this._pStateClass = ParticleRotateToPositionState_1.default;\n        this._iPosition = position || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var positionAttribute = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState_1.default.POSITION_INDEX, positionAttribute.index);\n        var code = \"\";\n        var len = animationRegisterCache.rotationRegisters.length;\n        var i;\n        if (animationRegisterCache.hasBillboard) {\n            var temp1 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp1, 1);\n            var temp2 = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp2, 1);\n            var temp3 = animationRegisterCache.getFreeVertexVectorTemp();\n            var rotationMatrixRegister = animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState_1.default.MATRIX_INDEX, rotationMatrixRegister.index);\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.removeVertexTempUsage(temp1);\n            animationRegisterCache.removeVertexTempUsage(temp2);\n            //process the position\n            code += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n            code += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n            code += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n            //temp3.x=cos,temp3.y=sin\n            //only process z axis\n            code += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n            code += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n            code += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n            code += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n            for (i = 0; i < len; i++)\n                code += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n        }\n        else {\n            var nrmDirection = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n            var temp = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(temp, 1);\n            var cos = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var sin = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            var o_temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n            var tempSingle = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n            var R = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(R, 1);\n            animationRegisterCache.removeVertexTempUsage(nrmDirection);\n            animationRegisterCache.removeVertexTempUsage(temp);\n            animationRegisterCache.removeVertexTempUsage(R);\n            code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n            code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n            code += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n            code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n            code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n            //judgu if nrmDirection=(0,1,0);\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n            code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n            code += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n            code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n            code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n            code += \"neg \" + cos + \",\" + cos + \"\\n\";\n            code += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n            code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n            code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n            code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n            code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n            code += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n            code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            for (i = 0; i < len; i++) {\n                //just repeat the calculate above\n                //because of the limited registers, no need to optimise\n                code += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n                code += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n                code += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"sqt \" + cos + \",\" + cos + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n                code += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n                code += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                code += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n                code += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                code += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n                code += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n                code += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n                code += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n                code += \"neg \" + cos + \",\" + cos + \"\\n\";\n                code += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n                code += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n                code += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n                code += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n                code += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n                code += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n                code += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n            }\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotateToPositionNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var offset = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n        if (!offset)\n            throw (new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n        this._pOneData[0] = offset.x;\n        this._pOneData[1] = offset.y;\n        this._pOneData[2] = offset.z;\n    };\n    /**\n     * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n     */\n    ParticleRotateToPositionNode.POSITION_VECTOR3D = \"RotateToPositionVector3D\";\n    return ParticleRotateToPositionNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleRotationalVelocityState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nvar ParticleRotationalVelocityNode = (function (_super) {\n    __extends(ParticleRotationalVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleRotationalVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     */\n    function ParticleRotationalVelocityNode(mode /*uint*/, rotationalVelocity) {\n        if (rotationalVelocity === void 0) { rotationalVelocity = null; }\n        _super.call(this, \"ParticleRotationalVelocity\", mode, 4);\n        this._pStateClass = ParticleRotationalVelocityState_1.default;\n        this._iRotationalVelocity = rotationalVelocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var rotationRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState_1.default.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n        var nrmVel = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(nrmVel, 1);\n        var xAxis = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(xAxis, 1);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        animationRegisterCache.addVertexTempUsages(temp, 1);\n        var Rtemp = new ShaderRegisterElement_1.default(temp.regName, temp.index);\n        var R_rev = animationRegisterCache.getFreeVertexVectorTemp();\n        R_rev = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index);\n        var cos = new ShaderRegisterElement_1.default(Rtemp.regName, Rtemp.index, 3);\n        var sin = new ShaderRegisterElement_1.default(R_rev.regName, R_rev.index, 3);\n        animationRegisterCache.removeVertexTempUsage(nrmVel);\n        animationRegisterCache.removeVertexTempUsage(xAxis);\n        animationRegisterCache.removeVertexTempUsage(temp);\n        var code = \"\";\n        code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n        code += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n        code += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n        code += \"sin \" + sin + \",\" + cos + \"\\n\";\n        code += \"cos \" + cos + \",\" + cos + \"\\n\";\n        code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n        code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n        //nrmVel and xAxis are used as temp register\n        code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n        code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n        code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n        //use cos as R_rev.w\n        code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n        code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n        code += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        var len = animationRegisterCache.rotationRegisters.length;\n        for (var i = 0; i < len; i++) {\n            code += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n            code += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            code += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n            code += \"sin \" + sin + \",\" + cos + \"\\n\";\n            code += \"cos \" + cos + \",\" + cos + \"\\n\";\n            code += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n            code += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n            code += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n            code += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n            code += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n            code += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n            code += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n            code += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n        }\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        //(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n        var rotate = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n        if (!rotate)\n            throw (new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n        if (rotate.length <= 0)\n            rotate.z = 1; //set the default direction\n        else\n            rotate.normalize();\n        this._pOneData[0] = rotate.x;\n        this._pOneData[1] = rotate.y;\n        this._pOneData[2] = rotate.z;\n        if (rotate.w <= 0)\n            throw (new Error(\"the cycle duration must greater than zero\"));\n        // it's used as angle/2 in agal\n        this._pOneData[3] = Math.PI / rotate.w;\n    };\n    /**\n     * Reference for rotational velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n     */\n    ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D = \"RotationalVelocityVector3D\";\n    return ParticleRotationalVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleScaleState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nvar ParticleScaleNode = (function (_super) {\n    __extends(ParticleScaleNode, _super);\n    /**\n     * Creates a new <code>ParticleScaleNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n     * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n     * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n     */\n    function ParticleScaleNode(mode /*uint*/, usesCycle, usesPhase, minScale, maxScale, cycleDuration, cyclePhase) {\n        if (minScale === void 0) { minScale = 1; }\n        if (maxScale === void 0) { maxScale = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        _super.call(this, \"ParticleScale\", mode, (usesCycle && usesPhase) ? 4 : ((usesCycle || usesPhase) ? 3 : 2), 3);\n        this._pStateClass = ParticleScaleState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iMinScale = minScale;\n        this._iMaxScale = maxScale;\n        this._iCycleDuration = cycleDuration;\n        this._iCyclePhase = cyclePhase;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        var temp = animationRegisterCache.getFreeVertexSingleTemp();\n        var scaleRegister = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleScaleState_1.default.SCALE_INDEX, scaleRegister.index);\n        if (this._iUsesCycle) {\n            code += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n            if (this._iUsesPhase)\n                code += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n            code += \"sin \" + temp + \",\" + temp + \"\\n\";\n        }\n        code += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle) ? temp : animationRegisterCache.vertexLife) + \"\\n\";\n        code += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n        code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleScaleNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var scale = param[ParticleScaleNode.SCALE_VECTOR3D];\n        if (!scale)\n            throw (new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n        if (this._iUsesCycle) {\n            this._pOneData[0] = (scale.x + scale.y) / 2;\n            this._pOneData[1] = Math.abs(scale.x - scale.y) / 2;\n            if (scale.z <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._pOneData[2] = Math.PI * 2 / scale.z;\n            if (this._iUsesPhase)\n                this._pOneData[3] = scale.w * Math.PI / 180;\n        }\n        else {\n            this._pOneData[0] = scale.x;\n            this._pOneData[1] = scale.y - scale.x;\n        }\n    };\n    /**\n     * Reference for scale node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n     */\n    ParticleScaleNode.SCALE_VECTOR3D = \"ScaleVector3D\";\n    return ParticleScaleNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleNode;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleSegmentedColorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n *\n */\nvar ParticleSegmentedColorNode = (function (_super) {\n    __extends(ParticleSegmentedColorNode, _super);\n    function ParticleSegmentedColorNode(usesMultiplier, usesOffset, numSegmentPoint /*int*/, startColor, endColor, segmentPoints) {\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleSegmentedColor\", ParticlePropertiesMode_1.default.GLOBAL, 0, ParticleAnimationSet_1.default.COLOR_PRIORITY);\n        this._pStateClass = ParticleSegmentedColorState_1.default;\n        if (numSegmentPoint > 4)\n            throw (new Error(\"the numSegmentPoint must be less or equal 4\"));\n        this._iUsesMultiplier = usesMultiplier;\n        this._iUsesOffset = usesOffset;\n        this._iNumSegmentPoint = numSegmentPoint;\n        this._iStartColor = startColor;\n        this._iEndColor = endColor;\n        this._iSegmentPoints = segmentPoints;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        if (this._iUsesMultiplier)\n            particleAnimationSet.hasColorMulNode = true;\n        if (this._iUsesOffset)\n            particleAnimationSet.hasColorAddNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSegmentedColorNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        if (animationRegisterCache.needFragmentAnimation) {\n            var accMultiplierColor;\n            //var accOffsetColor:ShaderRegisterElement;\n            if (this._iUsesMultiplier) {\n                accMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n                animationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n            }\n            var tempColor = animationRegisterCache.getFreeVertexVectorTemp();\n            animationRegisterCache.addVertexTempUsages(tempColor, 1);\n            var temp = animationRegisterCache.getFreeVertexVectorTemp();\n            var accTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n            var tempTime = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n            if (this._iUsesMultiplier)\n                animationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n            animationRegisterCache.removeVertexTempUsage(tempColor);\n            //for saving all the life values (at most 4)\n            var lifeTimeRegister = animationRegisterCache.getFreeVertexConstant();\n            animationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState_1.default.TIME_DATA_INDEX, lifeTimeRegister.index);\n            var i;\n            var startMulValue;\n            var deltaMulValues;\n            if (this._iUsesMultiplier) {\n                startMulValue = animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_MULTIPLIER_INDEX, startMulValue.index);\n                deltaMulValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n            }\n            var startOffsetValue;\n            var deltaOffsetValues;\n            if (this._iUsesOffset) {\n                startOffsetValue = animationRegisterCache.getFreeVertexConstant();\n                animationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState_1.default.START_OFFSET_INDEX, startOffsetValue.index);\n                deltaOffsetValues = new Array();\n                for (i = 0; i < this._iNumSegmentPoint + 1; i++)\n                    deltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n            }\n            if (this._iUsesMultiplier)\n                code += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n            if (this._iUsesOffset)\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n            for (i = 0; i < this._iNumSegmentPoint; i++) {\n                switch (i) {\n                    case 0:\n                        code += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n                        code += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                if (this._iUsesMultiplier) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n                    code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                }\n                if (this._iUsesOffset) {\n                    code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n                    code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n                }\n            }\n            //for the last segment:\n            if (this._iNumSegmentPoint == 0)\n                tempTime = animationRegisterCache.vertexLife;\n            else {\n                switch (this._iNumSegmentPoint) {\n                    case 1:\n                        code += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n                        break;\n                    case 2:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n                        break;\n                    case 3:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n                        break;\n                    case 4:\n                        code += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n                        break;\n                }\n                code += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n            }\n            if (this._iUsesMultiplier) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n                code += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n            }\n            if (this._iUsesOffset) {\n                code += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n                code += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n            }\n        }\n        return code;\n    };\n    return ParticleSegmentedColorNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorNode;\n\n},{\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleSpriteSheetState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nvar ParticleSpriteSheetNode = (function (_super) {\n    __extends(ParticleSpriteSheetNode, _super);\n    /**\n     * Creates a new <code>ParticleSpriteSheetNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n     * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n     * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n     * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n     * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n     */\n    function ParticleSpriteSheetNode(mode /*uint*/, usesCycle, usesPhase, numColumns, numRows, cycleDuration, cyclePhase, totalFrames) {\n        if (numColumns === void 0) { numColumns = 1; }\n        if (numRows === void 0) { numRows = 1; }\n        if (cycleDuration === void 0) { cycleDuration = 1; }\n        if (cyclePhase === void 0) { cyclePhase = 0; }\n        if (totalFrames === void 0) { totalFrames = Number.MAX_VALUE; }\n        _super.call(this, \"ParticleSpriteSheet\", mode, usesCycle ? (usesPhase ? 3 : 2) : 1, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleSpriteSheetState_1.default;\n        this._iUsesCycle = usesCycle;\n        this._iUsesPhase = usesPhase;\n        this._iNumColumns = numColumns;\n        this._iNumRows = numRows;\n        this._iCyclePhase = cyclePhase;\n        this._iCycleDuration = cycleDuration;\n        this._iTotalFrames = Math.min(totalFrames, numColumns * numRows);\n    }\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numColumns\", {\n        /**\n         * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"numRows\", {\n        /**\n         * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n         */\n        get: function () {\n            return this._iNumRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetNode.prototype, \"totalFrames\", {\n        /**\n         * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n         */\n        get: function () {\n            return this._iTotalFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAGALUVCode = function (shader, animationRegisterCache) {\n        //get 2 vc\n        var uvParamConst1 = animationRegisterCache.getFreeVertexConstant();\n        var uvParamConst2 = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_0, uvParamConst1.index);\n        animationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState_1.default.UV_INDEX_1, uvParamConst2.index);\n        var uTotal = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 0);\n        var uStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 1);\n        var vStep = new ShaderRegisterElement_1.default(uvParamConst1.regName, uvParamConst1.index, 2);\n        var uSpeed = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 0);\n        var cycle = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 1);\n        var phaseTime = new ShaderRegisterElement_1.default(uvParamConst2.regName, uvParamConst2.index, 2);\n        var temp = animationRegisterCache.getFreeVertexVectorTemp();\n        var time = new ShaderRegisterElement_1.default(temp.regName, temp.index, 0);\n        var vOffset = new ShaderRegisterElement_1.default(temp.regName, temp.index, 1);\n        temp = new ShaderRegisterElement_1.default(temp.regName, temp.index, 2);\n        var temp2 = new ShaderRegisterElement_1.default(temp.regName, temp.index, 3);\n        var u = new ShaderRegisterElement_1.default(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n        var v = new ShaderRegisterElement_1.default(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n        var code = \"\";\n        //scale uv\n        code += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n        if (this._iUsesCycle) {\n            if (this._iUsesPhase)\n                code += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n            else\n                code += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n            code += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"frc \" + time + \",\" + time + \"\\n\";\n            code += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n            code += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n        }\n        else\n            code += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n        if (this._iNumRows > 1) {\n            code += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n            code += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n            code += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n            code += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n        }\n        code += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n        code += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n        code += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n        code += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n        if (this._iNumRows > 1)\n            code += \"frc \" + temp + \",\" + temp + \"\\n\";\n        code += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleSpriteSheetNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        if (this._iUsesCycle) {\n            var uvCycle = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n            if (!uvCycle)\n                throw (new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n            if (uvCycle.x <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            var uTotal = this._iTotalFrames / this._iNumColumns;\n            this._pOneData[0] = uTotal / uvCycle.x;\n            this._pOneData[1] = uvCycle.x;\n            if (this._iUsesPhase)\n                this._pOneData[2] = uvCycle.y;\n        }\n    };\n    /**\n     * Reference for spritesheet node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n     */\n    ParticleSpriteSheetNode.UV_VECTOR3D = \"UVVector3D\";\n    return ParticleSpriteSheetNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetNode;\n\n},{\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleTimeState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nvar ParticleTimeNode = (function (_super) {\n    __extends(ParticleTimeNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n     * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n     * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n     */\n    function ParticleTimeNode(usesDuration, usesLooping, usesDelay) {\n        if (usesDuration === void 0) { usesDuration = false; }\n        if (usesLooping === void 0) { usesLooping = false; }\n        if (usesDelay === void 0) { usesDelay = false; }\n        _super.call(this, \"ParticleTime\", ParticlePropertiesMode_1.default.LOCAL_STATIC, 4, 0);\n        this._pStateClass = ParticleTimeState_1.default;\n        this._iUsesDuration = usesDuration;\n        this._iUsesLooping = usesLooping;\n        this._iUsesDelay = usesDelay;\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var timeStreamRegister = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n        animationRegisterCache.setRegisterIndex(this, ParticleTimeState_1.default.TIME_STREAM_INDEX, timeStreamRegister.index);\n        var timeConst = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleTimeState_1.default.TIME_CONSTANT_INDEX, timeConst.index);\n        var code = \"\";\n        code += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n        //if time=0,set the position to zero.\n        var temp = animationRegisterCache.getFreeVertexSingleTemp();\n        code += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n        code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n        if (this._iUsesDuration) {\n            if (this._iUsesLooping) {\n                var div = animationRegisterCache.getFreeVertexSingleTemp();\n                if (this._iUsesDelay) {\n                    code += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n                    code += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n                    code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n                }\n                else {\n                    code += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n                    code += \"frc \" + div + \",\" + div + \"\\n\";\n                    code += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n                }\n            }\n            else {\n                var sge = animationRegisterCache.getFreeVertexSingleTemp();\n                code += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n                code += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n            }\n        }\n        code += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleTimeNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        this._pOneData[0] = param.startTime;\n        this._pOneData[1] = param.duration;\n        this._pOneData[2] = param.delay + param.duration;\n        this._pOneData[3] = 1 / param.duration;\n    };\n    return ParticleTimeNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeNode;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleUVState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nvar ParticleUVNode = (function (_super) {\n    __extends(ParticleUVNode, _super);\n    /**\n     * Creates a new <code>ParticleTimeNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n     * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n     */\n    function ParticleUVNode(mode /*uint*/, cycle, scale, axis) {\n        if (cycle === void 0) { cycle = 1; }\n        if (scale === void 0) { scale = 1; }\n        if (axis === void 0) { axis = \"x\"; }\n        //because of the stage3d register limitation, it only support the global mode\n        _super.call(this, \"ParticleUV\", ParticlePropertiesMode_1.default.GLOBAL, 4, ParticleAnimationSet_1.default.POST_PRIORITY + 1);\n        this._pStateClass = ParticleUVState_1.default;\n        this._cycle = cycle;\n        this._scale = scale;\n        this._axis = axis;\n        this.updateUVData();\n    }\n    Object.defineProperty(ParticleUVNode.prototype, \"cycle\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._cycle;\n        },\n        set: function (value) {\n            this._cycle = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"scale\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n            this.updateUVData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleUVNode.prototype, \"axis\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._axis;\n        },\n        set: function (value) {\n            this._axis = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAGALUVCode = function (shader, animationRegisterCache) {\n        var code = \"\";\n        var uvConst = animationRegisterCache.getFreeVertexConstant();\n        animationRegisterCache.setRegisterIndex(this, ParticleUVState_1.default.UV_INDEX, uvConst.index);\n        var axisIndex = this._axis == \"x\" ? 0 : (this._axis == \"y\" ? 1 : 2);\n        var target = new ShaderRegisterElement_1.default(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n        var sin = animationRegisterCache.getFreeVertexSingleTemp();\n        if (this._scale != 1)\n            code += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n        code += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n        code += \"sin \" + sin + \",\" + sin + \"\\n\";\n        code += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    ParticleUVNode.prototype.updateUVData = function () {\n        this._iUvData = new Vector3D_1.default(Math.PI * 2 / this._cycle, this._scale, 0, 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleUVNode.prototype._iProcessAnimationSetting = function (particleAnimationSet) {\n        particleAnimationSet.hasUVNode = true;\n    };\n    /**\n     *\n     */\n    ParticleUVNode.U_AXIS = \"x\";\n    /**\n     *\n     */\n    ParticleUVNode.V_AXIS = \"y\";\n    return ParticleUVNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nvar ParticleVelocityState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nvar ParticleVelocityNode = (function (_super) {\n    __extends(ParticleVelocityNode, _super);\n    /**\n     * Creates a new <code>ParticleVelocityNode</code>\n     *\n     * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n     * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n     */\n    function ParticleVelocityNode(mode /*uint*/, velocity) {\n        if (velocity === void 0) { velocity = null; }\n        _super.call(this, \"ParticleVelocity\", mode, 3);\n        this._pStateClass = ParticleVelocityState_1.default;\n        this._iVelocity = velocity || new Vector3D_1.default();\n    }\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAGALVertexCode = function (shader, animationRegisterCache) {\n        var velocityValue = (this._pMode == ParticlePropertiesMode_1.default.GLOBAL) ? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n        animationRegisterCache.setRegisterIndex(this, ParticleVelocityState_1.default.VELOCITY_INDEX, velocityValue.index);\n        var distance = animationRegisterCache.getFreeVertexVectorTemp();\n        var code = \"\";\n        code += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n        code += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n        if (animationRegisterCache.needVelocity)\n            code += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleVelocityNode.prototype._iGeneratePropertyOfOneParticle = function (param) {\n        var _tempVelocity = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n        if (!_tempVelocity)\n            throw new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n        this._pOneData[0] = _tempVelocity.x;\n        this._pOneData[1] = _tempVelocity.y;\n        this._pOneData[2] = _tempVelocity.z;\n    };\n    /**\n     * Reference for velocity node properties on a single particle (when in local property mode).\n     * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n     */\n    ParticleVelocityNode.VELOCITY_VECTOR3D = \"VelocityVector3D\";\n    return ParticleVelocityNode;\n}(ParticleNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonBinaryLERPState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonBinaryLERPNode = (function (_super) {\n    __extends(SkeletonBinaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n     */\n    function SkeletonBinaryLERPNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonBinaryLERPState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonBinaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPNode;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined,\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nvar SkeletonClipState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nvar SkeletonClipNode = (function (_super) {\n    __extends(SkeletonClipNode, _super);\n    /**\n     * Creates a new <code>SkeletonClipNode</code> object.\n     */\n    function SkeletonClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        /**\n         * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n         * of the output skeleton pose. Defaults to false.\n         */\n        this.highQuality = false;\n        this._pStateClass = SkeletonClipState_1.default;\n    }\n    Object.defineProperty(SkeletonClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a skeleton pose frame to the internal timeline of the animation node.\n     *\n     * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     */\n    SkeletonClipNode.prototype.addFrame = function (skeletonPose, duration /*number /*uint*/) {\n        this._frames.push(skeletonPose);\n        this._pDurations.push(duration);\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._frames[i].jointPoses[0].translation;\n            p2 = this._frames[i + 1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pStitchFinalFrame || !this._pLooping) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return SkeletonClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipNode;\n\n},{\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"awayjs-renderergl/lib/animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDifferenceState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDifferenceNode = (function (_super) {\n    __extends(SkeletonDifferenceNode, _super);\n    /**\n     * Creates a new <code>SkeletonAdditiveNode</code> object.\n     */\n    function SkeletonDifferenceNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDifferenceState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDifferenceNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceNode;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined,\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonDirectionalState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nvar SkeletonDirectionalNode = (function (_super) {\n    __extends(SkeletonDirectionalNode, _super);\n    function SkeletonDirectionalNode() {\n        _super.call(this);\n        this._pStateClass = SkeletonDirectionalState_1.default;\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonDirectionalNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalNode;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined,\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\"}],\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationNodeBase_1 = require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nvar SkeletonNaryLERPState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar SkeletonNaryLERPNode = (function (_super) {\n    __extends(SkeletonNaryLERPNode, _super);\n    /**\n     * Creates a new <code>SkeletonNaryLERPNode</code> object.\n     */\n    function SkeletonNaryLERPNode() {\n        _super.call(this);\n        this._iInputs = new Array();\n        this._pStateClass = SkeletonNaryLERPState_1.default;\n    }\n    Object.defineProperty(SkeletonNaryLERPNode.prototype, \"numInputs\", {\n        get: function () {\n            return this._numInputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns an integer representing the input index of the given skeleton animation node.\n     *\n     * @param input The skeleton animation node for with the input index is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputIndex = function (input) {\n        return this._iInputs.indexOf(input);\n    };\n    /**\n     * Returns the skeleton animation node object that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node is requested.\n     */\n    SkeletonNaryLERPNode.prototype.getInputAt = function (index /*uint*/) {\n        return this._iInputs[index];\n    };\n    /**\n     * Adds a new skeleton animation node input to the animation node.\n     */\n    SkeletonNaryLERPNode.prototype.addInput = function (input) {\n        this._iInputs[this._numInputs++] = input;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPNode.prototype.getAnimationState = function (animator) {\n        return animator.getAnimationState(this);\n    };\n    return SkeletonNaryLERPNode;\n}(AnimationNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPNode;\n\n},{\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":undefined,\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\"}],\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AnimationClipNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nvar VertexClipState_1 = require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nvar VertexClipNode = (function (_super) {\n    __extends(VertexClipNode, _super);\n    /**\n     * Creates a new <code>VertexClipNode</code> object.\n     */\n    function VertexClipNode() {\n        _super.call(this);\n        this._frames = new Array();\n        this._translations = new Array();\n        this._pStateClass = VertexClipState_1.default;\n    }\n    Object.defineProperty(VertexClipNode.prototype, \"frames\", {\n        /**\n         * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n         */\n        get: function () {\n            return this._frames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a geometry object to the internal timeline of the animation node.\n     *\n     * @param geometry The geometry object to add to the timeline of the node.\n     * @param duration The specified duration of the frame in milliseconds.\n     * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n     */\n    VertexClipNode.prototype.addFrame = function (geometry, duration /*uint*/, translation) {\n        if (translation === void 0) { translation = null; }\n        this._frames.push(geometry);\n        this._pDurations.push(duration);\n        this._translations.push(translation || new Vector3D_1.default());\n        this._pNumFrames = this._pDurations.length;\n        this._pStitchDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipNode.prototype._pUpdateStitch = function () {\n        _super.prototype._pUpdateStitch.call(this);\n        var i = this._pNumFrames - 1;\n        var p1, p2, delta;\n        while (i--) {\n            this._pTotalDuration += this._pDurations[i];\n            p1 = this._translations[i];\n            p2 = this._translations[i + 1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n        if (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n            this._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n            p1 = this._translations[0];\n            p2 = this._translations[1];\n            delta = p2.subtract(p1);\n            this._pTotalDelta.x += delta.x;\n            this._pTotalDelta.y += delta.y;\n            this._pTotalDelta.z += delta.z;\n        }\n    };\n    return VertexClipNode;\n}(AnimationClipNodeBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipNode;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"awayjs-renderergl/lib/animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\"}],\"awayjs-renderergl/lib/animators/states/AnimationClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nvar AnimationStateEvent_1 = require(\"awayjs-renderergl/lib/animators/../events/AnimationStateEvent\");\n/**\n *\n */\nvar AnimationClipState = (function (_super) {\n    __extends(AnimationClipState, _super);\n    function AnimationClipState(animator, animationClipNode) {\n        _super.call(this, animator, animationClipNode);\n        this._pFramesDirty = true;\n        this._animationClipNode = animationClipNode;\n    }\n    Object.defineProperty(AnimationClipState.prototype, \"blendWeight\", {\n        /**\n         * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n         * between the current frame (0) and next frame (1) of the animation.\n         *\n         * @see #currentFrame\n         * @see #nextFrame\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pBlendWeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"currentFrame\", {\n        /**\n         * Returns the current frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pCurrentFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationClipState.prototype, \"nextFrame\", {\n        /**\n         * Returns the next frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._pNextFrame;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.update = function (time /*int*/) {\n        if (!this._animationClipNode.looping) {\n            if (time > this._pStartTime + this._animationClipNode.totalDuration)\n                time = this._pStartTime + this._animationClipNode.totalDuration;\n            else if (time < this._pStartTime)\n                time = this._pStartTime;\n        }\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype.phase = function (value) {\n        var time = value * this._animationClipNode.totalDuration + this._pStartTime;\n        if (this._pTime == time - this._pStartTime)\n            return;\n        this._pUpdateTime(time);\n    };\n    /**\n     * @inheritDoc\n     */\n    AnimationClipState.prototype._pUpdateTime = function (time /*int*/) {\n        this._pFramesDirty = true;\n        this._pTimeDir = (time - this._pStartTime > this._pTime) ? 1 : -1;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n     *\n     * @see #currentFrame\n     * @see #nextFrame\n     * @see #blendWeight\n     */\n    AnimationClipState.prototype._pUpdateFrames = function () {\n        this._pFramesDirty = false;\n        var looping = this._animationClipNode.looping;\n        var totalDuration = this._animationClipNode.totalDuration;\n        var lastFrame = this._animationClipNode.lastFrame;\n        var time = this._pTime;\n        //trace(\"time\", time, totalDuration)\n        if (looping && (time >= totalDuration || time < 0)) {\n            time %= totalDuration;\n            if (time < 0)\n                time += totalDuration;\n        }\n        if (!looping && time >= totalDuration) {\n            this.notifyPlaybackComplete();\n            this._pCurrentFrame = lastFrame;\n            this._pNextFrame = lastFrame;\n            this._pBlendWeight = 0;\n        }\n        else if (!looping && time <= 0) {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            this._pBlendWeight = 0;\n        }\n        else if (this._animationClipNode.fixedFrameRate) {\n            var t = time / totalDuration * lastFrame;\n            this._pCurrentFrame = Math.floor(t);\n            this._pBlendWeight = t - this._pCurrentFrame;\n            this._pNextFrame = this._pCurrentFrame + 1;\n        }\n        else {\n            this._pCurrentFrame = 0;\n            this._pNextFrame = 0;\n            var dur = 0, frameTime;\n            var durations = this._animationClipNode.durations;\n            do {\n                frameTime = dur;\n                dur += durations[this._pNextFrame];\n                this._pCurrentFrame = this._pNextFrame++;\n            } while (time > dur);\n            if (this._pCurrentFrame == lastFrame) {\n                this._pCurrentFrame = 0;\n                this._pNextFrame = 1;\n            }\n            this._pBlendWeight = (time - frameTime) / durations[this._pCurrentFrame];\n        }\n    };\n    AnimationClipState.prototype.notifyPlaybackComplete = function () {\n        if (this._animationStatePlaybackComplete == null)\n            this._animationStatePlaybackComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n        this._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n    };\n    return AnimationClipState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationClipState;\n\n},{\"awayjs-renderergl/lib/animators/../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n *\n */\nvar AnimationStateBase = (function () {\n    function AnimationStateBase(animator, animationNode) {\n        this._pRootDelta = new Vector3D_1.default();\n        this._pPositionDeltaDirty = true;\n        this._pStartTime = 0;\n        this._pAnimator = animator;\n        this._pAnimationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateBase.prototype, \"positionDelta\", {\n        /**\n         * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n         */\n        get: function () {\n            if (this._pPositionDeltaDirty) {\n                this._pUpdatePositionDelta();\n            }\n            return this._pRootDelta;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the start time of the node to a  new value.\n     *\n     * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n     */\n    AnimationStateBase.prototype.offset = function (startTime) {\n        this._pStartTime = startTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the configuration of the node to its current state.\n     *\n     * @param time The absolute time (in milliseconds) of the animator's play head position.\n     *\n     * @see AnimatorBase#update()\n     */\n    AnimationStateBase.prototype.update = function (time) {\n        if (this._pTime == time - this._pStartTime) {\n            return;\n        }\n        this._pUpdateTime(time);\n    };\n    /**\n     * Sets the animation phase of the node.\n     *\n     * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n     */\n    AnimationStateBase.prototype.phase = function (value) {\n    };\n    /**\n     * Updates the node's internal playhead position.\n     *\n     * @param time The local time (in milliseconds) of the node's playhead position.\n     */\n    AnimationStateBase.prototype._pUpdateTime = function (time) {\n        this._pTime = time - this._pStartTime;\n        this._pPositionDeltaDirty = true;\n    };\n    /**\n     * Updates the node's root delta position\n     */\n    AnimationStateBase.prototype._pUpdatePositionDelta = function () {\n    };\n    return AnimationStateBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateBase;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-renderergl/lib/animators/states/IAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/IVertexAnimationState\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleAccelerationState = (function (_super) {\n    __extends(ParticleAccelerationState, _super);\n    function ParticleAccelerationState(animator, particleAccelerationNode) {\n        _super.call(this, animator, particleAccelerationNode);\n        this._particleAccelerationNode = particleAccelerationNode;\n        this._acceleration = this._particleAccelerationNode._acceleration;\n        this.updateAccelerationData();\n    }\n    Object.defineProperty(ParticleAccelerationState.prototype, \"acceleration\", {\n        /**\n         * Defines the acceleration vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._acceleration;\n        },\n        set: function (value) {\n            this._acceleration.x = value.x;\n            this._acceleration.y = value.y;\n            this._acceleration.z = value.z;\n            this.updateAccelerationData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleAccelerationState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        else\n            animationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n    };\n    ParticleAccelerationState.prototype.updateAccelerationData = function () {\n        if (this._particleAccelerationNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            this._halfAcceleration = new Vector3D_1.default(this._acceleration.x / 2, this._acceleration.y / 2, this._acceleration.z / 2);\n    };\n    /** @private */\n    ParticleAccelerationState.ACCELERATION_INDEX = 0;\n    return ParticleAccelerationState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleAccelerationState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBezierCurveState = (function (_super) {\n    __extends(ParticleBezierCurveState, _super);\n    function ParticleBezierCurveState(animator, particleBezierCurveNode) {\n        _super.call(this, animator, particleBezierCurveNode);\n        this._particleBezierCurveNode = particleBezierCurveNode;\n        this._controlPoint = this._particleBezierCurveNode._iControlPoint;\n        this._endPoint = this._particleBezierCurveNode._iEndPoint;\n    }\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"controlPoint\", {\n        /**\n         * Defines the default control point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._controlPoint;\n        },\n        set: function (value) {\n            this._controlPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBezierCurveState.prototype, \"endPoint\", {\n        /**\n         * Defines the default end point of the node, used when in global mode.\n         */\n        get: function () {\n            return this._endPoint;\n        },\n        set: function (value) {\n            this._endPoint = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleBezierCurveState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var controlIndex = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n        var endIndex = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n        if (this._particleBezierCurveNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            animationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else {\n            animationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n            animationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n        }\n    };\n    /** @private */\n    ParticleBezierCurveState.BEZIER_CONTROL_INDEX = 0;\n    /** @private */\n    ParticleBezierCurveState.BEZIER_END_INDEX = 1;\n    return ParticleBezierCurveState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBezierCurveState;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Orientation3D_1 = require(\"awayjs-core/lib/geom/Orientation3D\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleBillboardState = (function (_super) {\n    __extends(ParticleBillboardState, _super);\n    /**\n     *\n     */\n    function ParticleBillboardState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default;\n        this._billboardAxis = particleNode._iBillboardAxis;\n    }\n    ParticleBillboardState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var comps;\n        if (this._billboardAxis) {\n            var pos = renderable.sourceEntity.sceneTransform.position;\n            var look = camera.sceneTransform.position.subtract(pos);\n            var right = look.crossProduct(this._billboardAxis);\n            right.normalize();\n            look = this.billboardAxis.crossProduct(right);\n            look.normalize();\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            this._matrix.copyColumnFrom(0, right);\n            this._matrix.copyColumnFrom(1, this.billboardAxis);\n            this._matrix.copyColumnFrom(2, look);\n            this._matrix.copyColumnFrom(3, pos);\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        else {\n            //create a quick inverse projection matrix\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            //decompose using axis angle rotations\n            comps = this._matrix.decompose(Orientation3D_1.default.AXIS_ANGLE);\n            //recreate the matrix with just the rotation data\n            this._matrix.identity();\n            this._matrix.appendRotation(-comps[1].w * MathConsts_1.default.RADIANS_TO_DEGREES, comps[1]);\n        }\n        //set a new matrix transform constant\n        animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n    };\n    Object.defineProperty(ParticleBillboardState.prototype, \"billboardAxis\", {\n        /**\n         * Defines the billboard axis.\n         */\n        get: function () {\n            return this.billboardAxis;\n        },\n        set: function (value) {\n            this.billboardAxis = value ? value.clone() : null;\n            if (this.billboardAxis)\n                this.billboardAxis.normalize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    ParticleBillboardState.MATRIX_INDEX = 0;\n    return ParticleBillboardState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleBillboardState;\n\n},{\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Orientation3D\":undefined,\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticleColorState = (function (_super) {\n    __extends(ParticleColorState, _super);\n    function ParticleColorState(animator, particleColorNode) {\n        _super.call(this, animator, particleColorNode);\n        this._particleColorNode = particleColorNode;\n        this._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n        this._usesOffset = this._particleColorNode._iUsesOffset;\n        this._usesCycle = this._particleColorNode._iUsesCycle;\n        this._usesPhase = this._particleColorNode._iUsesPhase;\n        this._startColor = this._particleColorNode._iStartColor;\n        this._endColor = this._particleColorNode._iEndColor;\n        this._cycleDuration = this._particleColorNode._iCycleDuration;\n        this._cyclePhase = this._particleColorNode._iCyclePhase;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleColorState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleColorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needFragmentAnimation) {\n            var dataOffset = this._particleColorNode._iDataOffset;\n            if (this._usesCycle)\n                animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n            if (this._usesMultiplier) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n                }\n            }\n            if (this._usesOffset) {\n                if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                else {\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n                }\n            }\n        }\n    };\n    ParticleColorState.prototype.updateColorData = function () {\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._cycleData = new Vector3D_1.default(Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180, 0, 0);\n        }\n        if (this._particleColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default((this._startColor.redMultiplier + this._endColor.redMultiplier) / 2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier) / 2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier) / 2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier) / 2);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier) / 2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier) / 2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier) / 2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier) / 2);\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default((this._startColor.redOffset + this._endColor.redOffset) / (255 * 2), (this._startColor.greenOffset + this._endColor.greenOffset) / (255 * 2), (this._startColor.blueOffset + this._endColor.blueOffset) / (255 * 2), (this._startColor.alphaOffset + this._endColor.alphaOffset) / (255 * 2));\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / (255 * 2), (this._endColor.greenOffset - this._startColor.greenOffset) / (255 * 2), (this._endColor.blueOffset - this._startColor.blueOffset) / (255 * 2), (this._endColor.alphaOffset - this._startColor.alphaOffset) / (255 * 2));\n                }\n            }\n            else {\n                if (this._usesMultiplier) {\n                    this._startMultiplierData = new Vector3D_1.default(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n                    this._deltaMultiplierData = new Vector3D_1.default((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n                }\n                if (this._usesOffset) {\n                    this._startOffsetData = new Vector3D_1.default(this._startColor.redOffset / 255, this._startColor.greenOffset / 255, this._startColor.blueOffset / 255, this._startColor.alphaOffset / 255);\n                    this._deltaOffsetData = new Vector3D_1.default((this._endColor.redOffset - this._startColor.redOffset) / 255, (this._endColor.greenOffset - this._startColor.greenOffset) / 255, (this._endColor.blueOffset - this._startColor.blueOffset) / 255, (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255);\n                }\n            }\n        }\n    };\n    /** @private */\n    ParticleColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleColorState.DELTA_MULTIPLIER_INDEX = 1;\n    /** @private */\n    ParticleColorState.START_OFFSET_INDEX = 2;\n    /** @private */\n    ParticleColorState.DELTA_OFFSET_INDEX = 3;\n    /** @private */\n    ParticleColorState.CYCLE_INDEX = 4;\n    return ParticleColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleColorState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleFollowState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleFollowState = (function (_super) {\n    __extends(ParticleFollowState, _super);\n    function ParticleFollowState(animator, particleFollowNode) {\n        _super.call(this, animator, particleFollowNode, true);\n        this._targetPos = new Vector3D_1.default();\n        this._targetEuler = new Vector3D_1.default();\n        //temporary vector3D for calculation\n        this._temp = new Vector3D_1.default();\n        this._particleFollowNode = particleFollowNode;\n        this._smooth = particleFollowNode._iSmooth;\n    }\n    Object.defineProperty(ParticleFollowState.prototype, \"followTarget\", {\n        get: function () {\n            return this._followTarget;\n        },\n        set: function (value) {\n            this._followTarget = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleFollowState.prototype, \"smooth\", {\n        get: function () {\n            return this._smooth;\n        },\n        set: function (value) {\n            this._smooth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleFollowState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._followTarget) {\n            if (this._particleFollowNode._iUsesPosition) {\n                this._targetPos.x = this._followTarget.transform.position.x / renderable.sourceEntity.scaleX;\n                this._targetPos.y = this._followTarget.transform.position.y / renderable.sourceEntity.scaleY;\n                this._targetPos.z = this._followTarget.transform.position.z / renderable.sourceEntity.scaleZ;\n            }\n            if (this._particleFollowNode._iUsesRotation) {\n                this._targetEuler.x = this._followTarget.rotationX;\n                this._targetEuler.y = this._followTarget.rotationY;\n                this._targetEuler.z = this._followTarget.rotationZ;\n                this._targetEuler.scaleBy(MathConsts_1.default.DEGREES_TO_RADIANS);\n            }\n        }\n        //initialization\n        if (!this._prePos)\n            this._prePos = this._targetPos.clone();\n        if (!this._preEuler)\n            this._preEuler = this._targetEuler.clone();\n        var currentTime = this._pTime / 1000;\n        var previousTime = animationElements.previousTime;\n        var deltaTime = currentTime - previousTime;\n        var needProcess = previousTime != currentTime;\n        if (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.processPositionAndRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesPosition) {\n            if (needProcess)\n                this.processPosition(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else if (this._particleFollowNode._iUsesRotation) {\n            if (needProcess)\n                this.precessRotation(currentTime, deltaTime, animationElements);\n            animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        this._prePos.copyFrom(this._targetPos);\n        this._targetEuler.copyFrom(this._targetEuler);\n        animationElements.previousTime = currentTime;\n    };\n    ParticleFollowState.prototype.processPosition = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var posVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedPos = this._targetPos;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.precessRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedRotation;\n        var rotationVelocity;\n        if (this._smooth) {\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else\n            interpolatedRotation = this._targetEuler;\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    ParticleFollowState.prototype.processPositionAndRotation = function (currentTime, deltaTime, animationElements) {\n        var data = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var changed = false;\n        var len = data.length;\n        var interpolatedPos;\n        var interpolatedRotation;\n        var posVelocity;\n        var rotationVelocity;\n        if (this._smooth) {\n            posVelocity = this._prePos.subtract(this._targetPos);\n            posVelocity.scaleBy(1 / deltaTime);\n            rotationVelocity = this._preEuler.subtract(this._targetEuler);\n            rotationVelocity.scaleBy(1 / deltaTime);\n        }\n        else {\n            interpolatedPos = this._targetPos;\n            interpolatedRotation = this._targetEuler;\n        }\n        for (var i = 0; i < len; i++) {\n            var k = (currentTime - data[i].startTime) / data[i].totalTime;\n            var t = (k - Math.floor(k)) * data[i].totalTime;\n            if (t - deltaTime <= 0) {\n                var inc = data[i].startVertexIndex * animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n                if (this._smooth) {\n                    this._temp.copyFrom(posVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedPos = this._targetPos.add(this._temp);\n                    this._temp.copyFrom(rotationVelocity);\n                    this._temp.scaleBy(t);\n                    interpolatedRotation = this._targetEuler.add(this._temp);\n                }\n                if (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n                    changed = true;\n                    for (var j = 0; j < data[i].numVertices; j++) {\n                        vertexData[inc++] = interpolatedPos.x;\n                        vertexData[inc++] = interpolatedPos.y;\n                        vertexData[inc++] = interpolatedPos.z;\n                        vertexData[inc++] = interpolatedRotation.x;\n                        vertexData[inc++] = interpolatedRotation.y;\n                        vertexData[inc++] = interpolatedRotation.z;\n                    }\n                }\n            }\n        }\n        if (changed)\n            animationElements.invalidateBuffer();\n    };\n    /** @private */\n    ParticleFollowState.FOLLOW_POSITION_INDEX = 0;\n    /** @private */\n    ParticleFollowState.FOLLOW_ROTATION_INDEX = 1;\n    return ParticleFollowState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleFollowState;\n\n},{\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n*\n*/\nvar ParticleInitialColorState = (function (_super) {\n    __extends(ParticleInitialColorState, _super);\n    function ParticleInitialColorState(animator, particleInitialColorNode) {\n        _super.call(this, animator, particleInitialColorNode);\n        this._particleInitialColorNode = particleInitialColorNode;\n        this._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n        this._usesOffset = particleInitialColorNode._iUsesOffset;\n        this._initialColor = particleInitialColorNode._iInitialColor;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleInitialColorState.prototype, \"initialColor\", {\n        /**\n         * Defines the initial color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._initialColor;\n        },\n        set: function (value) {\n            this._initialColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleInitialColorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        // TODO: not used\n        renderable = renderable;\n        camera = camera;\n        if (animationRegisterCache.needFragmentAnimation) {\n            if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                var dataOffset = this._particleInitialColorNode._iDataOffset;\n                if (this._usesMultiplier) {\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                    dataOffset += 4;\n                }\n                if (this._usesOffset)\n                    animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            }\n            else {\n                if (this._usesMultiplier)\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n                if (this._usesOffset)\n                    animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n            }\n        }\n    };\n    ParticleInitialColorState.prototype.updateColorData = function () {\n        if (this._particleInitialColorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesMultiplier)\n                this._multiplierData = new Vector3D_1.default(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n            if (this._usesOffset)\n                this._offsetData = new Vector3D_1.default(this._initialColor.redOffset / 255, this._initialColor.greenOffset / 255, this._initialColor.blueOffset / 255, this._initialColor.alphaOffset / 255);\n        }\n    };\n    /** @private */\n    ParticleInitialColorState.MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleInitialColorState.OFFSET_INDEX = 1;\n    return ParticleInitialColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleInitialColorState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOrbitState = (function (_super) {\n    __extends(ParticleOrbitState, _super);\n    function ParticleOrbitState(animator, particleOrbitNode) {\n        _super.call(this, animator, particleOrbitNode);\n        this._particleOrbitNode = particleOrbitNode;\n        this._usesEulers = this._particleOrbitNode._iUsesEulers;\n        this._usesCycle = this._particleOrbitNode._iUsesCycle;\n        this._usesPhase = this._particleOrbitNode._iUsesPhase;\n        this._eulers = this._particleOrbitNode._iEulers;\n        this._radius = this._particleOrbitNode._iRadius;\n        this._cycleDuration = this._particleOrbitNode._iCycleDuration;\n        this._cyclePhase = this._particleOrbitNode._iCyclePhase;\n        this.updateOrbitData();\n    }\n    Object.defineProperty(ParticleOrbitState.prototype, \"radius\", {\n        /**\n         * Defines the radius of the orbit when in global mode. Defaults to 100.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleOrbitState.prototype, \"eulers\", {\n        /**\n         * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n         */\n        get: function () {\n            return this._eulers;\n        },\n        set: function (value) {\n            this._eulers = value;\n            this.updateOrbitData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleOrbitState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesPhase)\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n            else\n                animationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n        }\n        else\n            animationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n        if (this._usesEulers)\n            animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n    };\n    ParticleOrbitState.prototype.updateOrbitData = function () {\n        if (this._usesEulers) {\n            this._eulersMatrix = new Matrix3D_1.default();\n            this._eulersMatrix.appendRotation(this._eulers.x, Vector3D_1.default.X_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.y, Vector3D_1.default.Y_AXIS);\n            this._eulersMatrix.appendRotation(this._eulers.z, Vector3D_1.default.Z_AXIS);\n        }\n        if (this._particleOrbitNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._orbitData = new Vector3D_1.default(this._radius, 0, this._radius * Math.PI * 2, this._cyclePhase * Math.PI / 180);\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._orbitData.y = Math.PI * 2 / this._cycleDuration;\n            }\n            else\n                this._orbitData.y = Math.PI * 2;\n        }\n    };\n    /** @private */\n    ParticleOrbitState.ORBIT_INDEX = 0;\n    /** @private */\n    ParticleOrbitState.EULERS_INDEX = 1;\n    return ParticleOrbitState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOrbitState;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleOscillatorState = (function (_super) {\n    __extends(ParticleOscillatorState, _super);\n    function ParticleOscillatorState(animator, particleOscillatorNode) {\n        _super.call(this, animator, particleOscillatorNode);\n        this._particleOscillatorNode = particleOscillatorNode;\n        this._oscillator = this._particleOscillatorNode._iOscillator;\n        this.updateOscillatorData();\n    }\n    Object.defineProperty(ParticleOscillatorState.prototype, \"oscillator\", {\n        /**\n         * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n         */\n        get: function () {\n            return this._oscillator;\n        },\n        set: function (value) {\n            this._oscillator = value;\n            this.updateOscillatorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    ParticleOscillatorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC)\n            animationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        else\n            animationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n    };\n    ParticleOscillatorState.prototype.updateOscillatorData = function () {\n        if (this._particleOscillatorNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._oscillator.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            if (this._oscillatorData == null)\n                this._oscillatorData = new Vector3D_1.default();\n            this._oscillatorData.x = this._oscillator.x;\n            this._oscillatorData.y = this._oscillator.y;\n            this._oscillatorData.z = this._oscillator.z;\n            this._oscillatorData.w = Math.PI * 2 / this._oscillator.w;\n        }\n    };\n    /** @private */\n    ParticleOscillatorState.OSCILLATOR_INDEX = 0;\n    return ParticleOscillatorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleOscillatorState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticlePositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n * @author ...\n */\nvar ParticlePositionState = (function (_super) {\n    __extends(ParticlePositionState, _super);\n    function ParticlePositionState(animator, particlePositionNode) {\n        _super.call(this, animator, particlePositionNode);\n        this._particlePositionNode = particlePositionNode;\n        this._position = this._particlePositionNode._iPosition;\n    }\n    Object.defineProperty(ParticlePositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticlePositionState.prototype.getPositions = function () {\n        return this._pDynamicProperties;\n    };\n    ParticlePositionState.prototype.setPositions = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticlePositionState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n        if (this._particlePositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            animationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticlePositionState.POSITION_INDEX = 0;\n    return ParticlePositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticlePositionState;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToHeadingState = (function (_super) {\n    __extends(ParticleRotateToHeadingState, _super);\n    function ParticleRotateToHeadingState(animator, particleNode) {\n        _super.call(this, animator, particleNode);\n        this._matrix = new Matrix3D_1.default();\n    }\n    ParticleRotateToHeadingState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n        }\n    };\n    /** @private */\n    ParticleRotateToHeadingState.MATRIX_INDEX = 0;\n    return ParticleRotateToHeadingState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToHeadingState;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotateToPositionState = (function (_super) {\n    __extends(ParticleRotateToPositionState, _super);\n    function ParticleRotateToPositionState(animator, particleRotateToPositionNode) {\n        _super.call(this, animator, particleRotateToPositionNode);\n        this._matrix = new Matrix3D_1.default();\n        this._particleRotateToPositionNode = particleRotateToPositionNode;\n        this._position = this._particleRotateToPositionNode._iPosition;\n    }\n    Object.defineProperty(ParticleRotateToPositionState.prototype, \"position\", {\n        /**\n         * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n         */\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            this._position = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleRotateToPositionState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n        if (animationRegisterCache.hasBillboard) {\n            this._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n            this._matrix.append(camera.inverseSceneTransform);\n            animationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n        }\n        if (this._particleRotateToPositionNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            this._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n            animationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n        }\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleRotateToPositionState.MATRIX_INDEX = 0;\n    /** @private */\n    ParticleRotateToPositionState.POSITION_INDEX = 1;\n    return ParticleRotateToPositionState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotateToPositionState;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleRotationalVelocityState = (function (_super) {\n    __extends(ParticleRotationalVelocityState, _super);\n    function ParticleRotationalVelocityState(animator, particleRotationNode) {\n        _super.call(this, animator, particleRotationNode);\n        this._particleRotationalVelocityNode = particleRotationNode;\n        this._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n        this.updateRotationalVelocityData();\n    }\n    Object.defineProperty(ParticleRotationalVelocityState.prototype, \"rotationalVelocity\", {\n        /**\n         * Defines the default rotationalVelocity of the state, used when in global mode.\n         */\n        get: function () {\n            return this._rotationalVelocity;\n        },\n        set: function (value) {\n            this._rotationalVelocity = value;\n            this.updateRotationalVelocityData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleRotationalVelocityState.prototype.getRotationalVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleRotationalVelocityState.prototype.setRotationalVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    /**\n     * @inheritDoc\n     */\n    ParticleRotationalVelocityState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            animationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n        else\n            animationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n    };\n    ParticleRotationalVelocityState.prototype.updateRotationalVelocityData = function () {\n        if (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._rotationalVelocity.w <= 0)\n                throw (new Error(\"the cycle duration must greater than zero\"));\n            var rotation = this._rotationalVelocity.clone();\n            if (rotation.length <= 0)\n                rotation.z = 1; //set the default direction\n            else\n                rotation.normalize();\n            // w is used as angle/2 in agal\n            this._rotationalVelocityData = new Vector3D_1.default(rotation.x, rotation.y, rotation.z, Math.PI / rotation.w);\n        }\n    };\n    /** @private */\n    ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX = 0;\n    return ParticleRotationalVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleRotationalVelocityState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleScaleState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleScaleState = (function (_super) {\n    __extends(ParticleScaleState, _super);\n    function ParticleScaleState(animator, particleScaleNode) {\n        _super.call(this, animator, particleScaleNode);\n        this._particleScaleNode = particleScaleNode;\n        this._usesCycle = this._particleScaleNode._iUsesCycle;\n        this._usesPhase = this._particleScaleNode._iUsesPhase;\n        this._minScale = this._particleScaleNode._iMinScale;\n        this._maxScale = this._particleScaleNode._iMaxScale;\n        this._cycleDuration = this._particleScaleNode._iCycleDuration;\n        this._cyclePhase = this._particleScaleNode._iCyclePhase;\n        this.updateScaleData();\n    }\n    Object.defineProperty(ParticleScaleState.prototype, \"minScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._minScale;\n        },\n        set: function (value) {\n            this._minScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"maxScale\", {\n        /**\n         * Defines the end scale of the state, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._maxScale;\n        },\n        set: function (value) {\n            this._maxScale = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleScaleState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateScaleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleScaleState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n            if (this._usesCycle) {\n                if (this._usesPhase)\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n                else\n                    animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n            }\n            else\n                animationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n        }\n        else\n            animationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n    };\n    ParticleScaleState.prototype.updateScaleData = function () {\n        if (this._particleScaleNode.mode == ParticlePropertiesMode_1.default.GLOBAL) {\n            if (this._usesCycle) {\n                if (this._cycleDuration <= 0)\n                    throw (new Error(\"the cycle duration must be greater than zero\"));\n                this._scaleData = new Vector3D_1.default((this._minScale + this._maxScale) / 2, Math.abs(this._minScale - this._maxScale) / 2, Math.PI * 2 / this._cycleDuration, this._cyclePhase * Math.PI / 180);\n            }\n            else\n                this._scaleData = new Vector3D_1.default(this._minScale, this._maxScale - this._minScale, 0, 0);\n        }\n    };\n    /** @private */\n    ParticleScaleState.SCALE_INDEX = 0;\n    return ParticleScaleState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleScaleState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n *\n */\nvar ParticleSegmentedColorState = (function (_super) {\n    __extends(ParticleSegmentedColorState, _super);\n    function ParticleSegmentedColorState(animator, particleSegmentedColorNode) {\n        _super.call(this, animator, particleSegmentedColorNode);\n        this._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n        this._usesOffset = particleSegmentedColorNode._iUsesOffset;\n        this._startColor = particleSegmentedColorNode._iStartColor;\n        this._endColor = particleSegmentedColorNode._iEndColor;\n        this._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n        this._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n        this.updateColorData();\n    }\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"startColor\", {\n        /**\n         * Defines the start color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._startColor;\n        },\n        set: function (value) {\n            this._startColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"endColor\", {\n        /**\n         * Defines the end color transform of the state, when in global mode.\n         */\n        get: function () {\n            return this._endColor;\n        },\n        set: function (value) {\n            this._endColor = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"numSegmentPoint\", {\n        /**\n         * Defines the number of segments.\n         */\n        get: function () {\n            return this._numSegmentPoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"segmentPoints\", {\n        /**\n         * Defines the key points of color\n         */\n        get: function () {\n            return this._segmentPoints;\n        },\n        set: function (value) {\n            this._segmentPoints = value;\n            this.updateColorData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesMultiplier\", {\n        get: function () {\n            return this._usesMultiplier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSegmentedColorState.prototype, \"usesOffset\", {\n        get: function () {\n            return this._usesOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSegmentedColorState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needFragmentAnimation) {\n            if (this._numSegmentPoint > 0)\n                animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n            if (this._usesMultiplier)\n                animationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n            if (this._usesOffset)\n                animationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n        }\n    };\n    ParticleSegmentedColorState.prototype.updateColorData = function () {\n        this._timeLifeData = new Array();\n        this._multiplierData = new Array();\n        this._offsetData = new Array();\n        var i;\n        for (i = 0; i < this._numSegmentPoint; i++) {\n            if (i == 0)\n                this._timeLifeData.push(this._segmentPoints[i].life);\n            else\n                this._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n        }\n        if (this._numSegmentPoint == 0)\n            this._timeLifeData.push(1);\n        else\n            this._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n        if (this._usesMultiplier) {\n            this._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0)\n                    this._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier) / this._timeLifeData[i]);\n                else\n                    this._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i]);\n            }\n            if (this._numSegmentPoint == 0)\n                this._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n            else\n                this._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier) / this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier) / this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier) / this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier) / this._timeLifeData[i]);\n        }\n        if (this._usesOffset) {\n            this._offsetData.push(this._startColor.redOffset / 255, this._startColor.greenOffset / 255, this._startColor.blueOffset / 255, this._startColor.alphaOffset / 255);\n            for (i = 0; i < this._numSegmentPoint; i++) {\n                if (i == 0)\n                    this._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset) / this._timeLifeData[i] / 255);\n                else\n                    this._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255);\n            }\n            if (this._numSegmentPoint == 0)\n                this._offsetData.push((this._endColor.redOffset - this._startColor.redOffset) / 255, (this._endColor.greenOffset - this._startColor.greenOffset) / 255, (this._endColor.blueOffset - this._startColor.blueOffset) / 255, (this._endColor.alphaOffset - this._startColor.alphaOffset) / 255);\n            else\n                this._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset) / this._timeLifeData[i] / 255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset) / this._timeLifeData[i] / 255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset) / this._timeLifeData[i] / 255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset) / this._timeLifeData[i] / 255);\n        }\n        //cut off the data\n        this._timeLifeData.length = 4;\n    };\n    /** @private */\n    ParticleSegmentedColorState.START_MULTIPLIER_INDEX = 0;\n    /** @private */\n    ParticleSegmentedColorState.START_OFFSET_INDEX = 1;\n    /** @private */\n    ParticleSegmentedColorState.TIME_DATA_INDEX = 2;\n    return ParticleSegmentedColorState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSegmentedColorState;\n\n},{\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleSpriteSheetState = (function (_super) {\n    __extends(ParticleSpriteSheetState, _super);\n    function ParticleSpriteSheetState(animator, particleSpriteSheetNode) {\n        _super.call(this, animator, particleSpriteSheetNode);\n        this._particleSpriteSheetNode = particleSpriteSheetNode;\n        this._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n        this._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n        this._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n        this._numColumns = this._particleSpriteSheetNode._iNumColumns;\n        this._numRows = this._particleSpriteSheetNode._iNumRows;\n        this._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n        this._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n        this.updateSpriteSheetData();\n    }\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cyclePhase\", {\n        /**\n         * Defines the cycle phase, when in global mode. Defaults to zero.\n         */\n        get: function () {\n            return this._cyclePhase;\n        },\n        set: function (value) {\n            this._cyclePhase = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleSpriteSheetState.prototype, \"cycleDuration\", {\n        /**\n         * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n         */\n        get: function () {\n            return this._cycleDuration;\n        },\n        set: function (value) {\n            this._cycleDuration = value;\n            this.updateSpriteSheetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleSpriteSheetState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needUVAnimation) {\n            animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n            if (this._usesCycle) {\n                var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n                if (this._particleSpriteSheetNode.mode == ParticlePropertiesMode_1.default.LOCAL_STATIC) {\n                    if (this._usesPhase)\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n                    else\n                        animationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_2);\n                }\n                else\n                    animationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n            }\n        }\n    };\n    ParticleSpriteSheetState.prototype.updateSpriteSheetData = function () {\n        this._spriteSheetData = new Array(8);\n        var uTotal = this._totalFrames / this._numColumns;\n        this._spriteSheetData[0] = uTotal;\n        this._spriteSheetData[1] = 1 / this._numColumns;\n        this._spriteSheetData[2] = 1 / this._numRows;\n        if (this._usesCycle) {\n            if (this._cycleDuration <= 0)\n                throw (new Error(\"the cycle duration must be greater than zero\"));\n            this._spriteSheetData[4] = uTotal / this._cycleDuration;\n            this._spriteSheetData[5] = this._cycleDuration;\n            if (this._usesPhase)\n                this._spriteSheetData[6] = this._cyclePhase;\n        }\n    };\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_0 = 0;\n    /** @private */\n    ParticleSpriteSheetState.UV_INDEX_1 = 1;\n    return ParticleSpriteSheetState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleSpriteSheetState;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\n/**\n * ...\n */\nvar ParticleStateBase = (function (_super) {\n    __extends(ParticleStateBase, _super);\n    function ParticleStateBase(animator, particleNode, needUpdateTime) {\n        if (needUpdateTime === void 0) { needUpdateTime = false; }\n        _super.call(this, animator, particleNode);\n        this._pDynamicProperties = new Array();\n        this._pDynamicPropertiesDirty = new Object();\n        this._particleNode = particleNode;\n        this._pNeedUpdateTime = needUpdateTime;\n    }\n    Object.defineProperty(ParticleStateBase.prototype, \"needUpdateTime\", {\n        get: function () {\n            return this._pNeedUpdateTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParticleStateBase.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n    };\n    ParticleStateBase.prototype._pUpdateDynamicProperties = function (animationElements) {\n        this._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n        var animationParticles = animationElements.animationParticles;\n        var vertexData = animationElements.vertexData;\n        var totalLenOfOneVertex = animationElements.totalLenOfOneVertex;\n        var dataLength = this._particleNode.dataLength;\n        var dataOffset = this._particleNode._iDataOffset;\n        var vertexLength;\n        //\t\t\tvar particleOffset:number /*uint*/;\n        var startingOffset;\n        var vertexOffset;\n        var data;\n        var animationParticle;\n        //\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n        var numParticles = this._pDynamicProperties.length;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        //loop through all particles\n        while (i < numParticles) {\n            //loop through each particle data for the current particle\n            while (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n                data = this._pDynamicProperties[i];\n                vertexLength = animationParticle.numVertices * totalLenOfOneVertex;\n                startingOffset = animationParticle.startVertexIndex * totalLenOfOneVertex + dataOffset;\n                //loop through each vertex in the particle data\n                for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                    vertexOffset = startingOffset + k;\n                    //\t\t\t\t\t\tparticleOffset = i * dataLength;\n                    //loop through all vertex data for the current particle data\n                    for (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n                        vertexOffset = startingOffset + k;\n                        vertexData[vertexOffset++] = data.x;\n                        vertexData[vertexOffset++] = data.y;\n                        vertexData[vertexOffset++] = data.z;\n                        if (dataLength == 4)\n                            vertexData[vertexOffset++] = data.w;\n                    }\n                }\n                j++;\n            }\n            i++;\n        }\n        animationElements.invalidateBuffer();\n    };\n    return ParticleStateBase;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleStateBase;\n\n},{\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleTimeState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleTimeState = (function (_super) {\n    __extends(ParticleTimeState, _super);\n    function ParticleTimeState(animator, particleTimeNode) {\n        _super.call(this, animator, particleTimeNode, true);\n        this._particleTimeNode = particleTimeNode;\n    }\n    ParticleTimeState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        animationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_4);\n        var particleTime = this._pTime / 1000;\n        animationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n    };\n    /** @private */\n    ParticleTimeState.TIME_STREAM_INDEX = 0;\n    /** @private */\n    ParticleTimeState.TIME_CONSTANT_INDEX = 1;\n    return ParticleTimeState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleTimeState;\n\n},{\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/ParticleUVState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleUVState = (function (_super) {\n    __extends(ParticleUVState, _super);\n    function ParticleUVState(animator, particleUVNode) {\n        _super.call(this, animator, particleUVNode);\n        this._particleUVNode = particleUVNode;\n    }\n    ParticleUVState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (animationRegisterCache.needUVAnimation) {\n            var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n            var data = this._particleUVNode._iUvData;\n            animationRegisterCache.setVertexConst(index, data.x, data.y);\n        }\n    };\n    /** @private */\n    ParticleUVState.UV_INDEX = 0;\n    return ParticleUVState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleUVState;\n\n},{\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\"}],\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLVertexBufferFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\n/**\n * ...\n */\nvar ParticleVelocityState = (function (_super) {\n    __extends(ParticleVelocityState, _super);\n    function ParticleVelocityState(animator, particleVelocityNode) {\n        _super.call(this, animator, particleVelocityNode);\n        this._particleVelocityNode = particleVelocityNode;\n        this._velocity = this._particleVelocityNode._iVelocity;\n    }\n    Object.defineProperty(ParticleVelocityState.prototype, \"velocity\", {\n        /**\n         * Defines the default velocity vector of the state, used when in global mode.\n         */\n        get: function () {\n            return this._velocity;\n        },\n        set: function (value) {\n            this._velocity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ParticleVelocityState.prototype.getVelocities = function () {\n        return this._pDynamicProperties;\n    };\n    ParticleVelocityState.prototype.setVelocities = function (value) {\n        this._pDynamicProperties = value;\n        this._pDynamicPropertiesDirty = new Object();\n    };\n    ParticleVelocityState.prototype.setRenderState = function (stage, renderable, animationElements, animationRegisterCache, camera) {\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n            this._pUpdateDynamicProperties(animationElements);\n        var index = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n        if (this._particleVelocityNode.mode == ParticlePropertiesMode_1.default.GLOBAL)\n            animationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n        else\n            animationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat_1.default.FLOAT_3);\n    };\n    /** @private */\n    ParticleVelocityState.VELOCITY_INDEX = 0;\n    return ParticleVelocityState;\n}(ParticleStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleVelocityState;\n\n},{\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":undefined}],\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonBinaryLERPState = (function (_super) {\n    __extends(SkeletonBinaryLERPState, _super);\n    function SkeletonBinaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._inputA = animator.getAnimationState(this._skeletonAnimationNode.inputA);\n        this._inputB = animator.getAnimationState(this._skeletonAnimationNode.inputB);\n    }\n    Object.defineProperty(SkeletonBinaryLERPState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see inputA\n         * @see inputB\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdateTime = function (time /*int*/) {\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonBinaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonBinaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this._pRootDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this._pRootDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this._pRootDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonBinaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    return SkeletonBinaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonBinaryLERPState;\n\n},{\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nvar AnimationClipState_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\n/**\n *\n */\nvar SkeletonClipState = (function (_super) {\n    __extends(SkeletonClipState, _super);\n    function SkeletonClipState(animator, skeletonClipNode) {\n        _super.call(this, animator, skeletonClipNode);\n        this._rootPos = new Vector3D_1.default();\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonClipNode = skeletonClipNode;\n        this._frames = this._skeletonClipNode.frames;\n    }\n    Object.defineProperty(SkeletonClipState.prototype, \"currentPose\", {\n        /**\n         * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonClipState.prototype, \"nextPose\", {\n        /**\n         * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextPose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonClipState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateTime = function (time /*int*/) {\n        this._skeletonPoseDirty = true;\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentPose = this._frames[this._pCurrentFrame];\n        if (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n            this._nextPose = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextPose = this._frames[this._pNextFrame];\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the internal playhead position.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonClipState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (!this._skeletonClipNode.totalDuration)\n            return;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var currentPose = this._currentPose.jointPoses;\n        var nextPose = this._nextPose.jointPoses;\n        var numJoints = skeleton.numJoints;\n        var p1, p2;\n        var pose1, pose2;\n        var endPoses = this._skeletonPose.jointPoses;\n        var endPose;\n        var tr;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        if ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n            throw new Error(\"joint counts don't match!\");\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = currentPose[i];\n            pose2 = nextPose[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            if (this._skeletonClipNode.highQuality)\n                endPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            else\n                endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n            if (i > 0) {\n                tr = endPose.translation;\n                tr.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n                tr.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n                tr.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonClipState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._pFramesDirty)\n            this._pUpdateFrames();\n        var p1, p2, p3;\n        var totalDelta = this._skeletonClipNode.totalDelta;\n        // jumping back, need to reset position\n        if ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n            this._rootPos.x -= totalDelta.x * this._pTimeDir;\n            this._rootPos.y -= totalDelta.y * this._pTimeDir;\n            this._rootPos.z -= totalDelta.z * this._pTimeDir;\n        }\n        var dx = this._rootPos.x;\n        var dy = this._rootPos.y;\n        var dz = this._rootPos.z;\n        if (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n            p1 = this._frames[0].jointPoses[0].translation;\n            p2 = this._frames[1].jointPoses[0].translation;\n            p3 = this._currentPose.jointPoses[0].translation;\n            this._rootPos.x = p3.x + p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p3.y + p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p3.z + p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        else {\n            p1 = this._currentPose.jointPoses[0].translation;\n            p2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n            this._rootPos.x = p1.x + this._pBlendWeight * (p2.x - p1.x);\n            this._rootPos.y = p1.y + this._pBlendWeight * (p2.y - p1.y);\n            this._rootPos.z = p1.z + this._pBlendWeight * (p2.z - p1.z);\n        }\n        this._pRootDelta.x = this._rootPos.x - dx;\n        this._pRootDelta.y = this._rootPos.y - dy;\n        this._pRootDelta.z = this._rootPos.z - dz;\n        this._pOldFrame = this._pNextFrame;\n    };\n    return SkeletonClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonClipState;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\"}],\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Quaternion_1 = require(\"awayjs-core/lib/geom/Quaternion\");\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDifferenceState = (function (_super) {\n    __extends(SkeletonDifferenceState, _super);\n    function SkeletonDifferenceState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._blendWeight = 0;\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._baseInput = animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n        this._differenceInput = animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n    }\n    Object.defineProperty(SkeletonDifferenceState.prototype, \"blendWeight\", {\n        /**\n         * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n         * used to produce the skeleton pose output.\n         *\n         * @see #baseInput\n         * @see #differenceInput\n         */\n        get: function () {\n            return this._blendWeight;\n        },\n        set: function (value) {\n            this._blendWeight = value;\n            this._pPositionDeltaDirty = true;\n            this._skeletonPoseDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._baseInput.phase(value);\n        this._baseInput.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdateTime = function (time /*int*/) {\n        this._skeletonPoseDirty = true;\n        this._baseInput.update(time);\n        this._differenceInput.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDifferenceState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDifferenceState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var deltA = this._baseInput.positionDelta;\n        var deltB = this._differenceInput.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * deltB.x;\n        this.positionDelta.y = deltA.y + this._blendWeight * deltB.y;\n        this.positionDelta.z = deltA.z + this._blendWeight * deltB.z;\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDifferenceState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var basePoses = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n        var diffPoses = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n        var base, diff;\n        var basePos, diffPos;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            base = basePoses[i];\n            diff = diffPoses[i];\n            basePos = base.translation;\n            diffPos = diff.translation;\n            SkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n            endPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = basePos.x + this._blendWeight * diffPos.x;\n            tr.y = basePos.y + this._blendWeight * diffPos.y;\n            tr.z = basePos.z + this._blendWeight * diffPos.z;\n        }\n    };\n    SkeletonDifferenceState._tempQuat = new Quaternion_1.default();\n    return SkeletonDifferenceState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDifferenceState;\n\n},{\"awayjs-core/lib/geom/Quaternion\":undefined,\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonDirectionalState = (function (_super) {\n    __extends(SkeletonDirectionalState, _super);\n    function SkeletonDirectionalState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeight = 0;\n        this._direction = 0;\n        this._blendDirty = true;\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        this._forward = animator.getAnimationState(this._skeletonAnimationNode.forward);\n        this._backward = animator.getAnimationState(this._skeletonAnimationNode.backward);\n        this._left = animator.getAnimationState(this._skeletonAnimationNode.left);\n        this._right = animator.getAnimationState(this._skeletonAnimationNode.right);\n    }\n    Object.defineProperty(SkeletonDirectionalState.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        /**\n         * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n         * used to produce the skeleton pose output.\n         */\n        set: function (value) {\n            if (this._direction == value)\n                return;\n            this._direction = value;\n            this._blendDirty = true;\n            this._skeletonPoseDirty = true;\n            this._pPositionDeltaDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype.phase = function (value) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        this._inputA.phase(value);\n        this._inputB.phase(value);\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUdateTime = function (time /*int*/) {\n        if (this._blendDirty)\n            this.updateBlend();\n        this._skeletonPoseDirty = true;\n        this._inputA.update(time);\n        this._inputB.update(time);\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonDirectionalState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonDirectionalState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var deltA = this._inputA.positionDelta;\n        var deltB = this._inputB.positionDelta;\n        this.positionDelta.x = deltA.x + this._blendWeight * (deltB.x - deltA.x);\n        this.positionDelta.y = deltA.y + this._blendWeight * (deltB.y - deltA.y);\n        this.positionDelta.z = deltA.z + this._blendWeight * (deltB.z - deltA.z);\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonDirectionalState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        if (this._blendDirty)\n            this.updateBlend();\n        var endPose;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses1 = this._inputA.getSkeletonPose(skeleton).jointPoses;\n        var poses2 = this._inputB.getSkeletonPose(skeleton).jointPoses;\n        var pose1, pose2;\n        var p1, p2;\n        var tr;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var i = 0; i < numJoints; ++i) {\n            endPose = endPoses[i];\n            if (endPose == null)\n                endPose = endPoses[i] = new JointPose_1.default();\n            pose1 = poses1[i];\n            pose2 = poses2[i];\n            p1 = pose1.translation;\n            p2 = pose2.translation;\n            endPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n            tr = endPose.translation;\n            tr.x = p1.x + this._blendWeight * (p2.x - p1.x);\n            tr.y = p1.y + this._blendWeight * (p2.y - p1.y);\n            tr.z = p1.z + this._blendWeight * (p2.z - p1.z);\n        }\n    };\n    /**\n     * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n     *\n     * @private\n     */\n    SkeletonDirectionalState.prototype.updateBlend = function () {\n        this._blendDirty = false;\n        if (this._direction < 0 || this._direction > 360) {\n            this._direction %= 360;\n            if (this._direction < 0)\n                this._direction += 360;\n        }\n        if (this._direction < 90) {\n            this._inputA = this._forward;\n            this._inputB = this._right;\n            this._blendWeight = this._direction / 90;\n        }\n        else if (this._direction < 180) {\n            this._inputA = this._right;\n            this._inputB = this._backward;\n            this._blendWeight = (this._direction - 90) / 90;\n        }\n        else if (this._direction < 270) {\n            this._inputA = this._backward;\n            this._inputB = this._left;\n            this._blendWeight = (this._direction - 180) / 90;\n        }\n        else {\n            this._inputA = this._left;\n            this._inputB = this._forward;\n            this._blendWeight = (this._direction - 270) / 90;\n        }\n    };\n    return SkeletonDirectionalState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonDirectionalState;\n\n},{\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\n/**\n *\n */\nvar SkeletonNaryLERPState = (function (_super) {\n    __extends(SkeletonNaryLERPState, _super);\n    function SkeletonNaryLERPState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._skeletonPose = new SkeletonPose_1.default();\n        this._skeletonPoseDirty = true;\n        this._blendWeights = new Array();\n        this._inputs = new Array();\n        this._skeletonAnimationNode = skeletonAnimationNode;\n        var i = this._skeletonAnimationNode.numInputs;\n        while (i--)\n            this._inputs[i] = animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n    }\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype.phase = function (value) {\n        this._skeletonPoseDirty = true;\n        this._pPositionDeltaDirty = true;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(value);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUdateTime = function (time /*int*/) {\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            if (this._blendWeights[j])\n                this._inputs[j].update(time);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    /**\n     * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n     */\n    SkeletonNaryLERPState.prototype.getSkeletonPose = function (skeleton) {\n        if (this._skeletonPoseDirty)\n            this.updateSkeletonPose(skeleton);\n        return this._skeletonPose;\n    };\n    /**\n     * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index for which the skeleton animation node blend weight is requested.\n     */\n    SkeletonNaryLERPState.prototype.getBlendWeightAt = function (index /*uint*/) {\n        return this._blendWeights[index];\n    };\n    /**\n     * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n     *\n     * @param index The input index on which the skeleton animation node blend weight is to be set.\n     * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n     */\n    SkeletonNaryLERPState.prototype.setBlendWeightAt = function (index /*uint*/, blendWeight) {\n        this._blendWeights[index] = blendWeight;\n        this._pPositionDeltaDirty = true;\n        this._skeletonPoseDirty = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    SkeletonNaryLERPState.prototype._pUpdatePositionDelta = function () {\n        this._pPositionDeltaDirty = false;\n        var delta;\n        var weight;\n        this.positionDelta.x = 0;\n        this.positionDelta.y = 0;\n        this.positionDelta.z = 0;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (weight) {\n                delta = this._inputs[j].positionDelta;\n                this.positionDelta.x += weight * delta.x;\n                this.positionDelta.y += weight * delta.y;\n                this.positionDelta.z += weight * delta.z;\n            }\n        }\n    };\n    /**\n     * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n     *\n     * @param skeleton The skeleton used by the animator requesting the ouput pose.\n     */\n    SkeletonNaryLERPState.prototype.updateSkeletonPose = function (skeleton) {\n        this._skeletonPoseDirty = false;\n        var weight;\n        var endPoses = this._skeletonPose.jointPoses;\n        var poses;\n        var endPose, pose;\n        var endTr, tr;\n        var endQuat, q;\n        var firstPose;\n        var i;\n        var w0, x0, y0, z0;\n        var w1, x1, y1, z1;\n        var numJoints = skeleton.numJoints;\n        // :s\n        if (endPoses.length != numJoints)\n            endPoses.length = numJoints;\n        for (var j = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n            weight = this._blendWeights[j];\n            if (!weight)\n                continue;\n            poses = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n            if (!firstPose) {\n                firstPose = poses;\n                for (i = 0; i < numJoints; ++i) {\n                    endPose = endPoses[i];\n                    if (endPose == null)\n                        endPose = endPoses[i] = new JointPose_1.default();\n                    pose = poses[i];\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    endQuat = endPose.orientation;\n                    endQuat.x = weight * q.x;\n                    endQuat.y = weight * q.y;\n                    endQuat.z = weight * q.z;\n                    endQuat.w = weight * q.w;\n                    endTr = endPose.translation;\n                    endTr.x = weight * tr.x;\n                    endTr.y = weight * tr.y;\n                    endTr.z = weight * tr.z;\n                }\n            }\n            else {\n                for (i = 0; i < skeleton.numJoints; ++i) {\n                    endPose = endPoses[i];\n                    pose = poses[i];\n                    q = firstPose[i].orientation;\n                    x0 = q.x;\n                    y0 = q.y;\n                    z0 = q.z;\n                    w0 = q.w;\n                    q = pose.orientation;\n                    tr = pose.translation;\n                    x1 = q.x;\n                    y1 = q.y;\n                    z1 = q.z;\n                    w1 = q.w;\n                    // find shortest direction\n                    if (x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1 < 0) {\n                        x1 = -x1;\n                        y1 = -y1;\n                        z1 = -z1;\n                        w1 = -w1;\n                    }\n                    endQuat = endPose.orientation;\n                    endQuat.x += weight * x1;\n                    endQuat.y += weight * y1;\n                    endQuat.z += weight * z1;\n                    endQuat.w += weight * w1;\n                    endTr = endPose.translation;\n                    endTr.x += weight * tr.x;\n                    endTr.y += weight * tr.y;\n                    endTr.z += weight * tr.z;\n                }\n            }\n        }\n        for (i = 0; i < skeleton.numJoints; ++i)\n            endPoses[i].orientation.normalize();\n    };\n    return SkeletonNaryLERPState;\n}(AnimationStateBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SkeletonNaryLERPState;\n\n},{\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\"}],\"awayjs-renderergl/lib/animators/states/VertexClipState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AnimationClipState_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\n/**\n *\n */\nvar VertexClipState = (function (_super) {\n    __extends(VertexClipState, _super);\n    function VertexClipState(animator, vertexClipNode) {\n        _super.call(this, animator, vertexClipNode);\n        this._vertexClipNode = vertexClipNode;\n        this._frames = this._vertexClipNode.frames;\n    }\n    Object.defineProperty(VertexClipState.prototype, \"currentGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._currentGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexClipState.prototype, \"nextGraphics\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            if (this._pFramesDirty)\n                this._pUpdateFrames();\n            return this._nextGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdateFrames = function () {\n        _super.prototype._pUpdateFrames.call(this);\n        this._currentGraphics = this._frames[this._pCurrentFrame];\n        if (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n            this._nextGraphics = this._frames[0];\n            this._pAnimator.dispatchCycleEvent();\n        }\n        else\n            this._nextGraphics = this._frames[this._pNextFrame];\n    };\n    /**\n     * @inheritDoc\n     */\n    VertexClipState.prototype._pUpdatePositionDelta = function () {\n        //TODO:implement positiondelta functionality for vertex animations\n    };\n    return VertexClipState;\n}(AnimationClipState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexClipState;\n\n},{\"awayjs-renderergl/lib/animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nvar CrossfadeTransitionState_1 = require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nvar CrossfadeTransitionNode = (function (_super) {\n    __extends(CrossfadeTransitionNode, _super);\n    /**\n     * Creates a new <code>CrossfadeTransitionNode</code> object.\n     */\n    function CrossfadeTransitionNode() {\n        _super.call(this);\n        this._pStateClass = CrossfadeTransitionState_1.default;\n    }\n    return CrossfadeTransitionNode;\n}(SkeletonBinaryLERPNode_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionNode;\n\n},{\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SkeletonBinaryLERPState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nvar AnimationStateEvent_1 = require(\"awayjs-renderergl/lib/animators/../events/AnimationStateEvent\");\n/**\n *\n */\nvar CrossfadeTransitionState = (function (_super) {\n    __extends(CrossfadeTransitionState, _super);\n    function CrossfadeTransitionState(animator, skeletonAnimationNode) {\n        _super.call(this, animator, skeletonAnimationNode);\n        this._crossfadeTransitionNode = skeletonAnimationNode;\n    }\n    /**\n     * @inheritDoc\n     */\n    CrossfadeTransitionState.prototype._pUpdateTime = function (time /*int*/) {\n        this.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend) / (1000 * this._crossfadeTransitionNode.blendSpeed);\n        if (this.blendWeight >= 1) {\n            this.blendWeight = 1;\n            if (this._animationStateTransitionComplete == null)\n                this._animationStateTransitionComplete = new AnimationStateEvent_1.default(AnimationStateEvent_1.default.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n            this._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n        }\n        _super.prototype._pUpdateTime.call(this, time);\n    };\n    return CrossfadeTransitionState;\n}(SkeletonBinaryLERPState_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransitionState;\n\n},{\"awayjs-renderergl/lib/animators/../events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\"}],\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\":[function(require,module,exports){\n\"use strict\";\nvar CrossfadeTransitionNode_1 = require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\n/**\n *\n */\nvar CrossfadeTransition = (function () {\n    function CrossfadeTransition(blendSpeed) {\n        this.blendSpeed = 0.5;\n        this.blendSpeed = blendSpeed;\n    }\n    CrossfadeTransition.prototype.getAnimationNode = function (animator, startNode, endNode, startBlend /*int*/) {\n        var crossFadeTransitionNode = new CrossfadeTransitionNode_1.default();\n        crossFadeTransitionNode.inputA = startNode;\n        crossFadeTransitionNode.inputB = endNode;\n        crossFadeTransitionNode.blendSpeed = this.blendSpeed;\n        crossFadeTransitionNode.startBlend = startBlend;\n        return crossFadeTransitionNode;\n    };\n    return CrossfadeTransition;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CrossfadeTransition;\n\n},{\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\"}],\"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar AnimationElements_1 = require(\"awayjs-renderergl/lib/animators/data/AnimationElements\");\nexports.AnimationElements = AnimationElements_1.default;\nvar AnimationRegisterCache_1 = require(\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\");\nexports.AnimationRegisterCache = AnimationRegisterCache_1.default;\nvar ColorSegmentPoint_1 = require(\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\");\nexports.ColorSegmentPoint = ColorSegmentPoint_1.default;\nvar JointPose_1 = require(\"awayjs-renderergl/lib/animators/data/JointPose\");\nexports.JointPose = JointPose_1.default;\nvar ParticleAnimationData_1 = require(\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\");\nexports.ParticleAnimationData = ParticleAnimationData_1.default;\nvar ParticleProperties_1 = require(\"awayjs-renderergl/lib/animators/data/ParticleProperties\");\nexports.ParticleProperties = ParticleProperties_1.default;\nvar ParticlePropertiesMode_1 = require(\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\");\nexports.ParticlePropertiesMode = ParticlePropertiesMode_1.default;\nvar Skeleton_1 = require(\"awayjs-renderergl/lib/animators/data/Skeleton\");\nexports.Skeleton = Skeleton_1.default;\nvar SkeletonJoint_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonJoint\");\nexports.SkeletonJoint = SkeletonJoint_1.default;\nvar SkeletonPose_1 = require(\"awayjs-renderergl/lib/animators/data/SkeletonPose\");\nexports.SkeletonPose = SkeletonPose_1.default;\nvar VertexAnimationMode_1 = require(\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\");\nexports.VertexAnimationMode = VertexAnimationMode_1.default;\nvar AnimationClipNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\");\nexports.AnimationClipNodeBase = AnimationClipNodeBase_1.default;\nvar ParticleAccelerationNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\");\nexports.ParticleAccelerationNode = ParticleAccelerationNode_1.default;\nvar ParticleBezierCurveNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\");\nexports.ParticleBezierCurveNode = ParticleBezierCurveNode_1.default;\nvar ParticleBillboardNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\");\nexports.ParticleBillboardNode = ParticleBillboardNode_1.default;\nvar ParticleColorNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\");\nexports.ParticleColorNode = ParticleColorNode_1.default;\nvar ParticleFollowNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\");\nexports.ParticleFollowNode = ParticleFollowNode_1.default;\nvar ParticleInitialColorNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\");\nexports.ParticleInitialColorNode = ParticleInitialColorNode_1.default;\nvar ParticleNodeBase_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\");\nexports.ParticleNodeBase = ParticleNodeBase_1.default;\nvar ParticleOrbitNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\");\nexports.ParticleOrbitNode = ParticleOrbitNode_1.default;\nvar ParticleOscillatorNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\");\nexports.ParticleOscillatorNode = ParticleOscillatorNode_1.default;\nvar ParticlePositionNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\");\nexports.ParticlePositionNode = ParticlePositionNode_1.default;\nvar ParticleRotateToHeadingNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\");\nexports.ParticleRotateToHeadingNode = ParticleRotateToHeadingNode_1.default;\nvar ParticleRotateToPositionNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\");\nexports.ParticleRotateToPositionNode = ParticleRotateToPositionNode_1.default;\nvar ParticleRotationalVelocityNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\");\nexports.ParticleRotationalVelocityNode = ParticleRotationalVelocityNode_1.default;\nvar ParticleScaleNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\");\nexports.ParticleScaleNode = ParticleScaleNode_1.default;\nvar ParticleSegmentedColorNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\");\nexports.ParticleSegmentedColorNode = ParticleSegmentedColorNode_1.default;\nvar ParticleSpriteSheetNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\");\nexports.ParticleSpriteSheetNode = ParticleSpriteSheetNode_1.default;\nvar ParticleTimeNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\");\nexports.ParticleTimeNode = ParticleTimeNode_1.default;\nvar ParticleUVNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\");\nexports.ParticleUVNode = ParticleUVNode_1.default;\nvar ParticleVelocityNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\");\nexports.ParticleVelocityNode = ParticleVelocityNode_1.default;\nvar SkeletonBinaryLERPNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\");\nexports.SkeletonBinaryLERPNode = SkeletonBinaryLERPNode_1.default;\nvar SkeletonClipNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\");\nexports.SkeletonClipNode = SkeletonClipNode_1.default;\nvar SkeletonDifferenceNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\");\nexports.SkeletonDifferenceNode = SkeletonDifferenceNode_1.default;\nvar SkeletonDirectionalNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\");\nexports.SkeletonDirectionalNode = SkeletonDirectionalNode_1.default;\nvar SkeletonNaryLERPNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\");\nexports.SkeletonNaryLERPNode = SkeletonNaryLERPNode_1.default;\nvar VertexClipNode_1 = require(\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\");\nexports.VertexClipNode = VertexClipNode_1.default;\nvar AnimationClipState_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationClipState\");\nexports.AnimationClipState = AnimationClipState_1.default;\nvar AnimationStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/AnimationStateBase\");\nexports.AnimationStateBase = AnimationStateBase_1.default;\nvar ParticleAccelerationState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\");\nexports.ParticleAccelerationState = ParticleAccelerationState_1.default;\nvar ParticleBezierCurveState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\");\nexports.ParticleBezierCurveState = ParticleBezierCurveState_1.default;\nvar ParticleBillboardState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\");\nexports.ParticleBillboardState = ParticleBillboardState_1.default;\nvar ParticleColorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleColorState\");\nexports.ParticleColorState = ParticleColorState_1.default;\nvar ParticleFollowState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleFollowState\");\nexports.ParticleFollowState = ParticleFollowState_1.default;\nvar ParticleInitialColorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\");\nexports.ParticleInitialColorState = ParticleInitialColorState_1.default;\nvar ParticleStateBase_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleStateBase\");\nexports.ParticleStateBase = ParticleStateBase_1.default;\nvar ParticleOrbitState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\");\nexports.ParticleOrbitState = ParticleOrbitState_1.default;\nvar ParticleOscillatorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\");\nexports.ParticleOscillatorState = ParticleOscillatorState_1.default;\nvar ParticlePositionState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticlePositionState\");\nexports.ParticlePositionState = ParticlePositionState_1.default;\nvar ParticleRotateToHeadingState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\");\nexports.ParticleRotateToHeadingState = ParticleRotateToHeadingState_1.default;\nvar ParticleRotateToPositionState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\");\nexports.ParticleRotateToPositionState = ParticleRotateToPositionState_1.default;\nvar ParticleRotationalVelocityState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\");\nexports.ParticleRotationalVelocityState = ParticleRotationalVelocityState_1.default;\nvar ParticleScaleState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleScaleState\");\nexports.ParticleScaleState = ParticleScaleState_1.default;\nvar ParticleSegmentedColorState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\");\nexports.ParticleSegmentedColorState = ParticleSegmentedColorState_1.default;\nvar ParticleSpriteSheetState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\");\nexports.ParticleSpriteSheetState = ParticleSpriteSheetState_1.default;\nvar ParticleTimeState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleTimeState\");\nexports.ParticleTimeState = ParticleTimeState_1.default;\nvar ParticleUVState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleUVState\");\nexports.ParticleUVState = ParticleUVState_1.default;\nvar ParticleVelocityState_1 = require(\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\");\nexports.ParticleVelocityState = ParticleVelocityState_1.default;\nvar SkeletonBinaryLERPState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\");\nexports.SkeletonBinaryLERPState = SkeletonBinaryLERPState_1.default;\nvar SkeletonClipState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonClipState\");\nexports.SkeletonClipState = SkeletonClipState_1.default;\nvar SkeletonDifferenceState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\");\nexports.SkeletonDifferenceState = SkeletonDifferenceState_1.default;\nvar SkeletonDirectionalState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\");\nexports.SkeletonDirectionalState = SkeletonDirectionalState_1.default;\nvar SkeletonNaryLERPState_1 = require(\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\");\nexports.SkeletonNaryLERPState = SkeletonNaryLERPState_1.default;\nvar VertexClipState_1 = require(\"awayjs-renderergl/lib/animators/states/VertexClipState\");\nexports.VertexClipState = VertexClipState_1.default;\nvar CrossfadeTransition_1 = require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\");\nexports.CrossfadeTransition = CrossfadeTransition_1.default;\nvar CrossfadeTransitionNode_1 = require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\");\nexports.CrossfadeTransitionNode = CrossfadeTransitionNode_1.default;\nvar CrossfadeTransitionState_1 = require(\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\");\nexports.CrossfadeTransitionState = CrossfadeTransitionState_1.default;\nvar AnimationSetBase_1 = require(\"awayjs-renderergl/lib/animators/AnimationSetBase\");\nexports.AnimationSetBase = AnimationSetBase_1.default;\nvar AnimatorBase_1 = require(\"awayjs-renderergl/lib/animators/AnimatorBase\");\nexports.AnimatorBase = AnimatorBase_1.default;\nvar ParticleAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimationSet\");\nexports.ParticleAnimationSet = ParticleAnimationSet_1.default;\nvar ParticleAnimator_1 = require(\"awayjs-renderergl/lib/animators/ParticleAnimator\");\nexports.ParticleAnimator = ParticleAnimator_1.default;\nvar SkeletonAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\");\nexports.SkeletonAnimationSet = SkeletonAnimationSet_1.default;\nvar SkeletonAnimator_1 = require(\"awayjs-renderergl/lib/animators/SkeletonAnimator\");\nexports.SkeletonAnimator = SkeletonAnimator_1.default;\nvar VertexAnimationSet_1 = require(\"awayjs-renderergl/lib/animators/VertexAnimationSet\");\nexports.VertexAnimationSet = VertexAnimationSet_1.default;\nvar VertexAnimator_1 = require(\"awayjs-renderergl/lib/animators/VertexAnimator\");\nexports.VertexAnimator = VertexAnimator_1.default;\n\n},{\"awayjs-renderergl/lib/animators/AnimationSetBase\":\"awayjs-renderergl/lib/animators/AnimationSetBase\",\"awayjs-renderergl/lib/animators/AnimatorBase\":\"awayjs-renderergl/lib/animators/AnimatorBase\",\"awayjs-renderergl/lib/animators/ParticleAnimationSet\":\"awayjs-renderergl/lib/animators/ParticleAnimationSet\",\"awayjs-renderergl/lib/animators/ParticleAnimator\":\"awayjs-renderergl/lib/animators/ParticleAnimator\",\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\":\"awayjs-renderergl/lib/animators/SkeletonAnimationSet\",\"awayjs-renderergl/lib/animators/SkeletonAnimator\":\"awayjs-renderergl/lib/animators/SkeletonAnimator\",\"awayjs-renderergl/lib/animators/VertexAnimationSet\":\"awayjs-renderergl/lib/animators/VertexAnimationSet\",\"awayjs-renderergl/lib/animators/VertexAnimator\":\"awayjs-renderergl/lib/animators/VertexAnimator\",\"awayjs-renderergl/lib/animators/data/AnimationElements\":\"awayjs-renderergl/lib/animators/data/AnimationElements\",\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\":\"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\",\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\":\"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\",\"awayjs-renderergl/lib/animators/data/JointPose\":\"awayjs-renderergl/lib/animators/data/JointPose\",\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\":\"awayjs-renderergl/lib/animators/data/ParticleAnimationData\",\"awayjs-renderergl/lib/animators/data/ParticleProperties\":\"awayjs-renderergl/lib/animators/data/ParticleProperties\",\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\":\"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\",\"awayjs-renderergl/lib/animators/data/Skeleton\":\"awayjs-renderergl/lib/animators/data/Skeleton\",\"awayjs-renderergl/lib/animators/data/SkeletonJoint\":\"awayjs-renderergl/lib/animators/data/SkeletonJoint\",\"awayjs-renderergl/lib/animators/data/SkeletonPose\":\"awayjs-renderergl/lib/animators/data/SkeletonPose\",\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\":\"awayjs-renderergl/lib/animators/data/VertexAnimationMode\",\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\":\"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\",\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\":\"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\",\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\",\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\",\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\":\"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\",\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\",\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\",\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\",\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\",\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\":\"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\",\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\":\"awayjs-renderergl/lib/animators/nodes/VertexClipNode\",\"awayjs-renderergl/lib/animators/states/AnimationClipState\":\"awayjs-renderergl/lib/animators/states/AnimationClipState\",\"awayjs-renderergl/lib/animators/states/AnimationStateBase\":\"awayjs-renderergl/lib/animators/states/AnimationStateBase\",\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\":\"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\",\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\":\"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\",\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\":\"awayjs-renderergl/lib/animators/states/ParticleBillboardState\",\"awayjs-renderergl/lib/animators/states/ParticleColorState\":\"awayjs-renderergl/lib/animators/states/ParticleColorState\",\"awayjs-renderergl/lib/animators/states/ParticleFollowState\":\"awayjs-renderergl/lib/animators/states/ParticleFollowState\",\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\":\"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\",\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\":\"awayjs-renderergl/lib/animators/states/ParticleOrbitState\",\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\":\"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\",\"awayjs-renderergl/lib/animators/states/ParticlePositionState\":\"awayjs-renderergl/lib/animators/states/ParticlePositionState\",\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\",\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\":\"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\",\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\",\"awayjs-renderergl/lib/animators/states/ParticleScaleState\":\"awayjs-renderergl/lib/animators/states/ParticleScaleState\",\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\":\"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\",\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\":\"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\",\"awayjs-renderergl/lib/animators/states/ParticleStateBase\":\"awayjs-renderergl/lib/animators/states/ParticleStateBase\",\"awayjs-renderergl/lib/animators/states/ParticleTimeState\":\"awayjs-renderergl/lib/animators/states/ParticleTimeState\",\"awayjs-renderergl/lib/animators/states/ParticleUVState\":\"awayjs-renderergl/lib/animators/states/ParticleUVState\",\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\":\"awayjs-renderergl/lib/animators/states/ParticleVelocityState\",\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\",\"awayjs-renderergl/lib/animators/states/SkeletonClipState\":\"awayjs-renderergl/lib/animators/states/SkeletonClipState\",\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\":\"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\",\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\":\"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\",\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\":\"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\",\"awayjs-renderergl/lib/animators/states/VertexClipState\":\"awayjs-renderergl/lib/animators/states/VertexClipState\",\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\",\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\",\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\":\"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\"}],\"awayjs-renderergl/lib/elements/ElementsPool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar ElementsPool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function ElementsPool(shader, elementsClass) {\n        this._abstractionPool = new Object();\n        this._shader = shader;\n        this._elementsClass = elementsClass;\n    }\n    /**\n     * //TODO\n     *\n     * @param renderable\n     * @returns IRenderable\n     */\n    ElementsPool.prototype.getAbstraction = function (elements) {\n        return (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param renderable\n     */\n    ElementsPool.prototype.clearAbstraction = function (elements) {\n        delete this._abstractionPool[elements.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ElementsPool.registerAbstraction = function (elementsClass, assetClass) {\n        ElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n    };\n    ElementsPool._abstractionClassPool = new Object();\n    return ElementsPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ElementsPool;\n\n},{}],\"awayjs-renderergl/lib/elements/GL_ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ElementsEvent_1 = require(\"awayjs-display/lib/events/ElementsEvent\");\nvar ElementsUtils_1 = require(\"awayjs-display/lib/utils/ElementsUtils\");\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nvar GL_ElementsBase = (function (_super) {\n    __extends(GL_ElementsBase, _super);\n    function GL_ElementsBase(elements, shader, pool) {\n        var _this = this;\n        _super.call(this, elements, pool);\n        this.usages = 0;\n        this._vertices = new Object();\n        this._verticesUpdated = new Object();\n        this._indexMappings = Array();\n        this._numIndices = 0;\n        this._elements = elements;\n        this._shader = shader;\n        this._stage = shader._stage;\n        this._onInvalidateIndicesDelegate = function (event) { return _this._onInvalidateIndices(event); };\n        this._onClearIndicesDelegate = function (event) { return _this._onClearIndices(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n        this._onClearVerticesDelegate = function (event) { return _this._onClearVertices(event); };\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.addEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n    }\n    Object.defineProperty(GL_ElementsBase.prototype, \"elements\", {\n        get: function () {\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_ElementsBase.prototype, \"numIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexMappings = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indexMappings;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getIndexBufferGL = function () {\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        return this._indices;\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.getVertexBufferGL = function (attributesView) {\n        //first check if indices need updating which may affect vertices\n        if (!this._indicesUpdated)\n            this._updateIndices();\n        var bufferId = attributesView.buffer.id;\n        if (!this._verticesUpdated[bufferId])\n            this._updateVertices(attributesView);\n        return this._vertices[bufferId];\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.activateVertexBufferVO = function (index, attributesView, dimensions, offset) {\n        if (dimensions === void 0) { dimensions = 0; }\n        if (offset === void 0) { offset = 0; }\n        this.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n    };\n    /**\n     *\n     */\n    GL_ElementsBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_INDICES, this._onClearIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.CLEAR_VERTICES, this._onClearVerticesDelegate);\n        this._elements.removeEventListener(ElementsEvent_1.default.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this._elements = null;\n        if (this._overflow) {\n            this._overflow.onClear(event);\n            this._overflow = null;\n        }\n    };\n    GL_ElementsBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        if (!this._verticesUpdated)\n            this._updateIndices();\n        this._render(renderable, camera, viewProjection);\n        if (this._overflow)\n            this._overflow._iRender(renderable, camera, viewProjection);\n    };\n    GL_ElementsBase.prototype._render = function (renderable, camera, viewProjection) {\n        if (this._indices)\n            this._drawElements(0, this._numIndices);\n        else\n            this._drawArrays(0, this._numVertices);\n    };\n    GL_ElementsBase.prototype._drawElements = function (firstIndex, numIndices) {\n        throw new AbstractMethodError_1.default();\n    };\n    GL_ElementsBase.prototype._drawArrays = function (firstVertex, numVertices) {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_ElementsBase.prototype._updateIndices = function (indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var indices = this._elements.indices;\n        if (indices) {\n            this._indices = this._stage.getAbstraction(ElementsUtils_1.default.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n            this._numIndices = this._indices._attributesBuffer.count * indices.dimensions;\n        }\n        else {\n            this._indices = null;\n            this._numIndices = 0;\n            this._indexMappings = Array();\n        }\n        indexOffset += this._numIndices;\n        //check if there is more to split\n        if (indices && indexOffset < indices.count * this._elements.indices.dimensions) {\n            if (!this._overflow)\n                this._overflow = this._pGetOverflowElements();\n            this._overflow._updateIndices(indexOffset);\n        }\n        else if (this._overflow) {\n            this._overflow.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._elements));\n            this._overflow = null;\n        }\n        this._indicesUpdated = true;\n        //invalidate vertices if index mappings exist\n        if (this._indexMappings.length)\n            for (var key in this._verticesUpdated)\n                this._verticesUpdated[key] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param attributesView\n     * @private\n     */\n    GL_ElementsBase.prototype._updateVertices = function (attributesView) {\n        this._numVertices = attributesView.count;\n        var bufferId = attributesView.buffer.id;\n        this._vertices[bufferId] = this._stage.getAbstraction(ElementsUtils_1.default.getSubVertices(attributesView.buffer, this._indexMappings));\n        this._verticesUpdated[bufferId] = true;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indicesUpdated = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearIndices = function (event) {\n        if (!event.attributesView)\n            return;\n        this._indices.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n        this._indices = null;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onInvalidateVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        this._verticesUpdated[bufferId] = false;\n    };\n    /**\n     * //TODO\n     *\n     * @param event\n     * @private\n     */\n    GL_ElementsBase.prototype._onClearVertices = function (event) {\n        if (!event.attributesView)\n            return;\n        var bufferId = event.attributesView.buffer.id;\n        if (this._vertices[bufferId]) {\n            this._vertices[bufferId].onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, event.attributesView));\n            delete this._vertices[bufferId];\n            delete this._verticesUpdated[bufferId];\n        }\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_ElementsBase.prototype._pGetOverflowElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return GL_ElementsBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_ElementsBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/ElementsEvent\":undefined,\"awayjs-display/lib/utils/ElementsUtils\":undefined}],\"awayjs-renderergl/lib/elements/GL_LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_LineElements\n */\nvar GL_LineElements = (function (_super) {\n    __extends(GL_LineElements, _super);\n    function GL_LineElements(lineElements, shader, pool) {\n        _super.call(this, lineElements, shader, pool);\n        this._constants = new Float32Array([0, 0, 0, 0]);\n        this._calcMatrix = new Matrix3D_1.default();\n        this._thickness = 1.25;\n        this._lineElements = lineElements;\n        this._constants[1] = 1 / 255;\n    }\n    GL_LineElements._iIncludeDependencies = function (shader) {\n        shader.colorDependencies++;\n    };\n    GL_LineElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"m44 vt0, va0, vc8\t\t\t\\n\" +\n            \"m44 vt1, va1, vc8\t\t\t\\n\" +\n            \"sub vt2, vt1, vt0 \t\t\t\\n\" +\n            // test if behind camera near plane\n            // if 0 - Q0.z < Camera.near then the point needs to be clipped\n            //\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n            \"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" +\n            \"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" +\n            // p = point on the plane (0,0,-near)\n            // n = plane normal (0,0,-1)\n            // D = Q1 - Q0\n            // t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n            // solve for t where line crosses Camera.near\n            \"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" +\n            \"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" +\n            // fix divide by zero for horizontal lines\n            \"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" +\n            \"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" +\n            \"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" +\n            \"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" +\n            \"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" +\n            \"mov vt3.w, vc5.x\t\t\t\\n\" +\n            // If necessary, replace Q0 with new Qclipped\n            \"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" +\n            \"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" +\n            \"add vt0, vt0, vt3\t\t\t\t\\n\" +\n            // calculate side vector for line\n            \"sub vt2, vt1, vt0 \t\t\t\\n\" +\n            \"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" +\n            \"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" +\n            \"mov vt5.w, vc5.x\t\t\t\t\\n\" +\n            \"crs vt3.xyz, vt2, vt5\t\t\t\\n\" +\n            \"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" +\n            // face the side vector properly for the given point\n            \"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" +\n            \"mov vt3.w, vc5.x\t\t\t\\n\" +\n            // calculate the amount required to move at the point's distance to correspond to the line's pixel width\n            // scale the side vector by that amount\n            \"dp3 vt4.x, vt0, vc6\t\t\t\\n\" +\n            \"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" +\n            \"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" +\n            // add scaled side vector to Q0 and transform to clip space\n            \"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" +\n            \"m44 op, vt0, vc0\t\t\t\\n\"; // transform Q0 to clip space\n    };\n    GL_LineElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_LineElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineElements = null;\n    };\n    GL_LineElements.prototype._render = function (renderable, camera, viewProjection) {\n        if (this._shader.colorBufferIndex >= 0)\n            this.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n        var context = this._stage.context;\n        this._constants[0] = this._thickness / ((this._stage.scissorRect) ? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n        // value to convert distance from camera to model length per pixel width\n        this._constants[2] = camera.projection.near;\n        // projection matrix\n        context.setProgramConstantsFromMatrix(ContextGLProgramType_1.default.VERTEX, 0, camera.projection.matrix, true);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 7, this._constants, 1);\n        this._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n        this._calcMatrix.append(camera.inverseSceneTransform);\n        context.setProgramConstantsFromMatrix(ContextGLProgramType_1.default.VERTEX, 8, this._calcMatrix, true);\n        this.activateVertexBufferVO(0, this._lineElements.positions, 3);\n        this.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n        this.activateVertexBufferVO(2, this._lineElements.thickness);\n        _super.prototype._render.call(this, renderable, camera, viewProjection);\n    };\n    GL_LineElements.prototype._drawElements = function (firstIndex, numIndices) {\n        this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, 0, numIndices);\n    };\n    GL_LineElements.prototype._drawArrays = function (firstVertex, numVertices) {\n        this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, firstVertex, numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @protected\n     */\n    GL_LineElements.prototype._pGetOverflowElements = function () {\n        return new GL_LineElements(this._lineElements, this._shader, this._pool);\n    };\n    GL_LineElements.pONE_VECTOR = new Float32Array([1, 1, 1, 1]);\n    GL_LineElements.pFRONT_VECTOR = new Float32Array([0, 0, -1, 0]);\n    GL_LineElements.vertexAttributesOffset = 3;\n    return GL_LineElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineElements;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-renderergl/lib/elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/GL_SkyboxElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TriangleElements_1 = require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nvar GL_SkyboxElements = (function (_super) {\n    __extends(GL_SkyboxElements, _super);\n    function GL_SkyboxElements() {\n        _super.apply(this, arguments);\n    }\n    GL_SkyboxElements._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"mul vt0, va0, vc5\\n\" +\n            \"add vt0, vt0, vc4\\n\" +\n            \"m44 op, vt0, vc0\\n\";\n    };\n    GL_SkyboxElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SkyboxElements.vertexAttributesOffset = 1;\n    return GL_SkyboxElements;\n}(GL_TriangleElements_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxElements;\n\n},{\"awayjs-renderergl/lib/elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/elements/GL_TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar ContextGLDrawMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLDrawMode\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_ElementsBase_1 = require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nvar GL_TriangleElements = (function (_super) {\n    __extends(GL_TriangleElements, _super);\n    function GL_TriangleElements(triangleElements, shader, pool) {\n        _super.call(this, triangleElements, shader, pool);\n        this._triangleElements = triangleElements;\n    }\n    GL_TriangleElements._iIncludeDependencies = function (shader) {\n    };\n    GL_TriangleElements._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        //get the projection coordinates\n        var position = (shader.globalPosDependencies > 0) ? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n        //reserving vertex constants for projection matrix\n        var viewMatrixReg = registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        registerCache.getFreeVertexConstant();\n        shader.viewMatrixIndex = viewMatrixReg.index * 4;\n        if (shader.projectionDependencies > 0) {\n            sharedRegisters.projectionFragment = registerCache.getFreeVarying();\n            var temp = registerCache.getFreeVertexVectorTemp();\n            code += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n                \"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n                \"mov op, \" + temp + \"\\n\";\n        }\n        else {\n            code += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n        }\n        return code;\n    };\n    GL_TriangleElements._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_TriangleElements.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._triangleElements = null;\n    };\n    GL_TriangleElements.prototype._render = function (renderable, camera, viewProjection) {\n        //set buffers\n        //TODO: find a better way to update a concatenated buffer when autoderiving\n        if (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n            this._triangleElements.normals;\n        if (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n            this._triangleElements.tangents;\n        if (this._shader.curvesIndex >= 0)\n            this.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n        if (this._shader.uvIndex >= 0)\n            this.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n        if (this._shader.secondaryUVIndex >= 0)\n            this.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n        if (this._shader.normalIndex >= 0)\n            this.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n        if (this._shader.tangentIndex >= 0)\n            this.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n        if (this._shader.jointIndexIndex >= 0)\n            this.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n        if (this._shader.jointWeightIndex >= 0)\n            this.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n        this.activateVertexBufferVO(0, this._triangleElements.positions);\n        //set constants\n        if (this._shader.sceneMatrixIndex >= 0) {\n            renderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n            viewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        }\n        else {\n            var matrix3D = Matrix3DUtils_1.default.CALCULATION_MATRIX;\n            matrix3D.copyFrom(renderable.renderSceneTransform);\n            matrix3D.append(viewProjection);\n            matrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n        }\n        var context = this._stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n        _super.prototype._render.call(this, renderable, camera, viewProjection);\n    };\n    GL_TriangleElements.prototype._drawElements = function (firstIndex, numIndices) {\n        this.getIndexBufferGL().draw(ContextGLDrawMode_1.default.TRIANGLES, firstIndex, numIndices);\n    };\n    GL_TriangleElements.prototype._drawArrays = function (firstVertex, numVertices) {\n        this._stage.context.drawVertices(ContextGLDrawMode_1.default.TRIANGLES, firstVertex, numVertices);\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.GL_GraphicRenderable}\n     * @protected\n     */\n    GL_TriangleElements.prototype._pGetOverflowElements = function () {\n        return new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n    };\n    GL_TriangleElements.vertexAttributesOffset = 1;\n    return GL_TriangleElements;\n}(GL_ElementsBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TriangleElements;\n\n},{\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-renderergl/lib/elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-stagegl/lib/base/ContextGLDrawMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/elements/IElementsClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/elements\":[function(require,module,exports){\n\"use strict\";\nvar ElementsPool_1 = require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nexports.ElementsPool = ElementsPool_1.default;\nvar GL_ElementsBase_1 = require(\"awayjs-renderergl/lib/elements/GL_ElementsBase\");\nexports.GL_ElementsBase = GL_ElementsBase_1.default;\nvar GL_LineElements_1 = require(\"awayjs-renderergl/lib/elements/GL_LineElements\");\nexports.GL_LineElements = GL_LineElements_1.default;\nvar GL_SkyboxElements_1 = require(\"awayjs-renderergl/lib/elements/GL_SkyboxElements\");\nexports.GL_SkyboxElements = GL_SkyboxElements_1.default;\nvar GL_TriangleElements_1 = require(\"awayjs-renderergl/lib/elements/GL_TriangleElements\");\nexports.GL_TriangleElements = GL_TriangleElements_1.default;\n\n},{\"awayjs-renderergl/lib/elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"awayjs-renderergl/lib/elements/GL_ElementsBase\":\"awayjs-renderergl/lib/elements/GL_ElementsBase\",\"awayjs-renderergl/lib/elements/GL_LineElements\":\"awayjs-renderergl/lib/elements/GL_LineElements\",\"awayjs-renderergl/lib/elements/GL_SkyboxElements\":\"awayjs-renderergl/lib/elements/GL_SkyboxElements\",\"awayjs-renderergl/lib/elements/GL_TriangleElements\":\"awayjs-renderergl/lib/elements/GL_TriangleElements\"}],\"awayjs-renderergl/lib/errors/AnimationSetError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar AnimationSetError = (function (_super) {\n    __extends(AnimationSetError, _super);\n    function AnimationSetError(message) {\n        _super.call(this, message);\n    }\n    return AnimationSetError;\n}(ErrorBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationSetError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-renderergl/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar AnimationSetError_1 = require(\"awayjs-renderergl/lib/errors/AnimationSetError\");\nexports.AnimationSetError = AnimationSetError_1.default;\n\n},{\"awayjs-renderergl/lib/errors/AnimationSetError\":\"awayjs-renderergl/lib/errors/AnimationSetError\"}],\"awayjs-renderergl/lib/events/AnimationStateEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nvar AnimationStateEvent = (function (_super) {\n    __extends(AnimationStateEvent, _super);\n    /**\n     * Create a new <code>AnimatonStateEvent</code>\n     *\n     * @param type The event type.\n     * @param animator The animation state object that is the subject of this event.\n     * @param animationNode The animation node inside the animation state from which the event originated.\n     */\n    function AnimationStateEvent(type, animator, animationState, animationNode) {\n        _super.call(this, type);\n        this._animator = animator;\n        this._animationState = animationState;\n        this._animationNode = animationNode;\n    }\n    Object.defineProperty(AnimationStateEvent.prototype, \"animator\", {\n        /**\n         * The animator object that is the subject of this event.\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationState\", {\n        /**\n         * The animation state object that is the subject of this event.\n         */\n        get: function () {\n            return this._animationState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnimationStateEvent.prototype, \"animationNode\", {\n        /**\n         * The animation node inside the animation state from which the event originated.\n         */\n        get: function () {\n            return this._animationNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    AnimationStateEvent.prototype.clone = function () {\n        return new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n    };\n    /**\n     * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n     */\n    AnimationStateEvent.PLAYBACK_COMPLETE = \"playbackComplete\";\n    AnimationStateEvent.TRANSITION_COMPLETE = \"transitionComplete\";\n    return AnimationStateEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimationStateEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/AnimatorEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in an animator's state.\n */\nvar AnimatorEvent = (function (_super) {\n    __extends(AnimatorEvent, _super);\n    /**\n     * Create a new <code>AnimatorEvent</code> object.\n     *\n     * @param type The event type.\n     * @param animator The animator object that is the subject of this event.\n     */\n    function AnimatorEvent(type, animator) {\n        _super.call(this, type);\n        this._animator = animator;\n    }\n    Object.defineProperty(AnimatorEvent.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current event object.\n     */\n    AnimatorEvent.prototype.clone = function () {\n        return new AnimatorEvent(this.type, this._animator);\n    };\n    /**\n     * Defines the value of the type property of a start event object.\n     */\n    AnimatorEvent.START = \"animatorStart\";\n    /**\n     * Defines the value of the type property of a stop event object.\n     */\n    AnimatorEvent.STOP = \"animatorStop\";\n    /**\n     * Defines the value of the type property of a cycle complete event object.\n     */\n    AnimatorEvent.CYCLE_COMPLETE = \"animatorCycleComplete\";\n    return AnimatorEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AnimatorEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/PassEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar PassEvent = (function (_super) {\n    __extends(PassEvent, _super);\n    function PassEvent(type, pass) {\n        _super.call(this, type);\n        this._pass = pass;\n    }\n    Object.defineProperty(PassEvent.prototype, \"pass\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    PassEvent.prototype.clone = function () {\n        return new PassEvent(this.type, this._pass);\n    };\n    /**\n     *\n     */\n    PassEvent.INVALIDATE = \"invalidatePass\";\n    return PassEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/RTTEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RTTEvent = (function (_super) {\n    __extends(RTTEvent, _super);\n    function RTTEvent(type, rttManager) {\n        _super.call(this, type);\n        this._rttManager = rttManager;\n    }\n    Object.defineProperty(RTTEvent.prototype, \"rttManager\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._rttManager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    RTTEvent.prototype.clone = function () {\n        return new RTTEvent(this.type, this._rttManager);\n    };\n    /**\n     *\n     */\n    RTTEvent.RESIZE = \"rttManagerResize\";\n    return RTTEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events/ShadingMethodEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ShadingMethodEvent = (function (_super) {\n    __extends(ShadingMethodEvent, _super);\n    function ShadingMethodEvent(type) {\n        _super.call(this, type);\n    }\n    ShadingMethodEvent.SHADER_INVALIDATED = \"ShaderInvalidated\";\n    return ShadingMethodEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShadingMethodEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-renderergl/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar AnimationStateEvent_1 = require(\"awayjs-renderergl/lib/events/AnimationStateEvent\");\nexports.AnimationStateEvent = AnimationStateEvent_1.default;\nvar AnimatorEvent_1 = require(\"awayjs-renderergl/lib/events/AnimatorEvent\");\nexports.AnimatorEvent = AnimatorEvent_1.default;\nvar PassEvent_1 = require(\"awayjs-renderergl/lib/events/PassEvent\");\nexports.PassEvent = PassEvent_1.default;\nvar RTTEvent_1 = require(\"awayjs-renderergl/lib/events/RTTEvent\");\nexports.RTTEvent = RTTEvent_1.default;\nvar ShadingMethodEvent_1 = require(\"awayjs-renderergl/lib/events/ShadingMethodEvent\");\nexports.ShadingMethodEvent = ShadingMethodEvent_1.default;\n\n},{\"awayjs-renderergl/lib/events/AnimationStateEvent\":\"awayjs-renderergl/lib/events/AnimationStateEvent\",\"awayjs-renderergl/lib/events/AnimatorEvent\":\"awayjs-renderergl/lib/events/AnimatorEvent\",\"awayjs-renderergl/lib/events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-renderergl/lib/events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\",\"awayjs-renderergl/lib/events/ShadingMethodEvent\":\"awayjs-renderergl/lib/events/ShadingMethodEvent\"}],\"awayjs-renderergl/lib/filters/BlurFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DHBlurTask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\");\nvar Filter3DVBlurTask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\");\nvar Filter3DBase_1 = require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nvar BlurFilter3D = (function (_super) {\n    __extends(BlurFilter3D, _super);\n    /**\n     * Creates a new BlurFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function BlurFilter3D(blurX, blurY, stepSize) {\n        if (blurX === void 0) { blurX = 3; }\n        if (blurY === void 0) { blurY = 3; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._hBlurTask = new Filter3DHBlurTask_1.default(blurX, stepSize);\n        this._vBlurTask = new Filter3DVBlurTask_1.default(blurY, stepSize);\n        this.addTask(this._hBlurTask);\n        this.addTask(this._vBlurTask);\n    }\n    Object.defineProperty(BlurFilter3D.prototype, \"blurX\", {\n        get: function () {\n            return this._hBlurTask.amount;\n        },\n        set: function (value) {\n            this._hBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"blurY\", {\n        get: function () {\n            return this._vBlurTask.amount;\n        },\n        set: function (value) {\n            this._vBlurTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlurFilter3D.prototype, \"stepSize\", {\n        /**\n         * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n         * Higher values provide better performance at the cost of reduces quality.\n         */\n        get: function () {\n            return this._hBlurTask.stepSize;\n        },\n        set: function (value) {\n            this._hBlurTask.stepSize = value;\n            this._vBlurTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BlurFilter3D.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n        _super.prototype.setRenderTargets.call(this, mainTarget, stage);\n    };\n    return BlurFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BlurFilter3D;\n\n},{\"awayjs-renderergl/lib/filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/filters/CompositeFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DCompositeTask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\");\nvar Filter3DBase_1 = require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nvar CompositeFilter3D = (function (_super) {\n    __extends(CompositeFilter3D, _super);\n    /**\n     * Creates a new CompositeFilter3D object\n     * @param blurX The amount of horizontal blur to apply\n     * @param blurY The amount of vertical blur to apply\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function CompositeFilter3D(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._compositeTask = new Filter3DCompositeTask_1.default(blendMode, exposure);\n        this.addTask(this._compositeTask);\n    }\n    Object.defineProperty(CompositeFilter3D.prototype, \"exposure\", {\n        get: function () {\n            return this._compositeTask.exposure;\n        },\n        set: function (value) {\n            this._compositeTask.exposure = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompositeFilter3D.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._compositeTask.overlayTexture;\n        },\n        set: function (value) {\n            this._compositeTask.overlayTexture = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompositeFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompositeFilter3D;\n\n},{\"awayjs-renderergl/lib/filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\"}],\"awayjs-renderergl/lib/filters/FXAAFilter3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Filter3DFXAATask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\");\nvar Filter3DBase_1 = require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nvar FXAAFilter3D = (function (_super) {\n    __extends(FXAAFilter3D, _super);\n    /**\n     * Creates a new FXAAFilter3D object\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function FXAAFilter3D(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._fxaaTask = new Filter3DFXAATask_1.default(amount, stepSize);\n        this.addTask(this._fxaaTask);\n    }\n    Object.defineProperty(FXAAFilter3D.prototype, \"amount\", {\n        get: function () {\n            return this._fxaaTask.amount;\n        },\n        set: function (value) {\n            this._fxaaTask.amount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FXAAFilter3D.prototype, \"stepSize\", {\n        get: function () {\n            return this._fxaaTask.stepSize;\n        },\n        set: function (value) {\n            this._fxaaTask.stepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FXAAFilter3D;\n}(Filter3DBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FXAAFilter3D;\n\n},{\"awayjs-renderergl/lib/filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\"}],\"awayjs-renderergl/lib/filters/Filter3DBase\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DBase = (function () {\n    function Filter3DBase() {\n        this._tasks = new Array();\n    }\n    Object.defineProperty(Filter3DBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.addTask = function (filter) {\n        this._tasks.push(filter);\n        if (this._requireDepthRender == null)\n            this._requireDepthRender = filter.requireDepthRender;\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"tasks\", {\n        get: function () {\n            return this._tasks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DBase.prototype.getMainInputTexture = function (stage) {\n        return this._tasks[0].getMainInputTexture(stage);\n    };\n    Object.defineProperty(Filter3DBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            this._textureWidth = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            this._rttManager = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].rttManager = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            this._textureHeight = value;\n            for (var i = 0; i < this._tasks.length; ++i)\n                this._tasks[i].textureHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // link up the filters correctly with the next filter\n    Filter3DBase.prototype.setRenderTargets = function (mainTarget, stage) {\n        this._tasks[this._tasks.length - 1].target = mainTarget;\n    };\n    Filter3DBase.prototype.dispose = function () {\n        for (var i = 0; i < this._tasks.length; ++i)\n            this._tasks[i].dispose();\n    };\n    Filter3DBase.prototype.update = function (stage, camera) {\n    };\n    return Filter3DBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DBase;\n\n},{}],\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nvar Filter3DCompositeTask = (function (_super) {\n    __extends(Filter3DCompositeTask, _super);\n    function Filter3DCompositeTask(blendMode, exposure) {\n        if (exposure === void 0) { exposure = 1; }\n        _super.call(this);\n        this._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0]);\n        this._blendMode = blendMode;\n    }\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"overlayTexture\", {\n        get: function () {\n            return this._overlayTexture;\n        },\n        set: function (value) {\n            this._overlayTexture = value;\n            this._overlayWidth = this._overlayTexture.width;\n            this._overlayHeight = this._overlayTexture.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DCompositeTask.prototype, \"exposure\", {\n        get: function () {\n            return this._data[0];\n        },\n        set: function (value) {\n            this._data[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DCompositeTask.prototype.getFragmentCode = function () {\n        var code;\n        var op;\n        code = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n            \"mul ft1, v0, fc1.zw\\n\" +\n            \"add ft1, ft1, fc1.xy\\n\" +\n            \"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n            \"mul ft1, ft1, fc0.xxx\\n\" +\n            \"add ft1, ft1, fc0.xxx\\n\";\n        switch (this._blendMode) {\n            case \"multiply\":\n                code += \"mul oc, ft0, ft1\\n\";\n                break;\n            case \"add\":\n                code += \"add oc, ft0, ft1\\n\";\n                break;\n            case \"subtract\":\n                code += \"sub oc, ft0, ft1\\n\";\n                break;\n            case \"overlay\":\n                code += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n                code += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n                code += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n                code += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n                code += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n                code += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n                code += \"add oc, ft1, ft2\\n\";\n                break;\n            case \"normal\":\n                // for debugging purposes\n                code += \"mov oc, ft0\\n\";\n                break;\n            default:\n                throw new Error(\"Unknown blend mode\");\n        }\n        return code;\n    };\n    Filter3DCompositeTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        this._data[4] = -0.5 * (this._scaledTextureWidth - this._overlayWidth) / this._overlayWidth;\n        this._data[5] = -0.5 * (this._scaledTextureHeight - this._overlayHeight) / this._overlayHeight;\n        this._data[6] = this._scaledTextureWidth / this._overlayWidth;\n        this._data[7] = this._scaledTextureHeight / this._overlayHeight;\n        var context = stage.context;\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 2);\n        stage.getAbstraction(this._overlayTexture).activate(1, false);\n    };\n    Filter3DCompositeTask.prototype.deactivate = function (stage) {\n        stage.context.setTextureAt(1, null);\n    };\n    return Filter3DCompositeTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DCompositeTask;\n\n},{\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nvar Filter3DFXAATask = (function (_super) {\n    __extends(Filter3DFXAATask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DFXAATask(amount, stepSize) {\n        if (amount === void 0) { amount = 1; }\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._data = new Float32Array(20);\n        //luma\n        this._data.set([0.299, 0.587, 0.114, 0], 0); //0.212, 0.716, 0.072\n        //helpers\n        this._data.set([0.25, 0.5, 0.75, 1], 4);\n        //settings (screen x, screen y, ...)\n        this._data.set([1 / 1024, 1 / 1024, -1, 1], 8);\n        //deltas\n        this._data.set([1 / 128, 1 / 8, 8, 0], 12);\n        //deltas\n        this._data.set([1.0 / 3.0 - 0.5, 2.0 / 3.0 - 0.5, 0.0 / 3.0 - 0.5, 3.0 / 3.0 - 0.5], 16);\n        this.amount = amount;\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DFXAATask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DFXAATask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DFXAATask.prototype.getFragmentCode = function () {\n        var lum = \"fc0\"; //\t0.299, 0.587, 0.114\n        var _0 = \"fc0.w\";\n        var _025 = \"fc1.x\";\n        var _05 = \"fc1.y\";\n        var _075 = \"fc1.z\";\n        var _1 = \"fc1.w\";\n        var pix = \"fc2.xy\";\n        var dx = \"fc2.x\"; // 1/1024\n        var dy = \"fc2.y\"; // 1/1024\n        var mOne = \"fc2.z\"; // -1.0\n        var mul = \"fc2.w\"; // 1.0  -- one for now\n        var fxaaReduceMin = \"fc3.x\"; //1/128\n        var fxaaReduceMul = \"fc3.y\"; //1/8\n        var fxaaSpanMax = \"fc3.z\"; //8\n        var delta1 = \"fc4.x\"; //1.0/3.0 - 0.5\n        var delta2 = \"fc4.y\"; //2.0/3.0 - 0.5\n        var delta3 = \"fc4.z\"; //0.0/3.0 - 0.5\n        var delta4 = \"fc4.w\"; //3.0/3.0 - 0.5\n        var uv_in = \"v0\";\n        var uv = \"ft0.xy\";\n        var uvx = \"ft0.x\";\n        var uvy = \"ft0.y\";\n        var TL = \"ft2.x\";\n        var TR = \"ft2.y\";\n        var BL = \"ft2.z\";\n        var BR = \"ft2.w\";\n        var M = \"ft3.x\";\n        var tempf1 = \"ft3.y\";\n        var tempf2 = \"ft3.z\";\n        var tempf3 = \"ft3.w\";\n        var tex = \"ft1\";\n        var dir = \"ft4\";\n        var dirx = \"ft4.x\";\n        var diry = \"ft4.y\";\n        var dirxy = \"ft4.xy\";\n        var dirReduce = \"ft5.x\";\n        var inverseDirAdjustment = \"ft5.y\";\n        var result1 = \"ft6\";\n        var result2 = \"ft7\";\n        var lumaMin = \"ft5.x\";\n        var lumaMax = \"ft5.y\";\n        var sample = \"fs0\";\n        var temp = tex;\n        var tempxy = temp + \".xy\";\n        var code = new Array();\n        //lumas\n        code.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", M, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TL, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uv, uv, pix, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"sub\", uvy, uvy, dy, \"\\n\");\n        code.push(\"add\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", TR, tex, lum, \"\\n\");\n        code.push(\"mov\", uv, uv_in, \"\\n\");\n        code.push(\"add\", uvy, uvy, dy, \"\\n\");\n        code.push(\"sub\", uvx, uvx, dx, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"dp3\", BL, tex, lum, \"\\n\");\n        //dir\n        code.push(\"add\", tempf1, TL, TR, \"\\n\");\n        code.push(\"add\", tempf2, BL, BR, \"\\n\");\n        code.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n        code.push(\"neg\", dirx, dirx, \"\\n\");\n        code.push(\"add\", tempf1, TL, BL, \"\\n\");\n        code.push(\"add\", tempf2, TR, BR, \"\\n\");\n        code.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n        code.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n        code.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n        code.push(\"abs\", tempf1, dirx, \"\\n\");\n        code.push(\"abs\", tempf2, diry, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n        code.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n        code.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n        code.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n        code.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n        code.push(\"neg\", tempf2, tempf2, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n        code.push(\"mul\", diry, tempf1, dy, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result1, result1, tex, \"\\n\");\n        code.push(\"mul\", result1, result1, _05, \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n        code.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n        code.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"mul\", result2, result2, _025, \"\\n\");\n        code.push(\"mul\", tex, result1, _05, \"\\n\");\n        code.push(\"add\", result2, result2, tex, \"\\n\");\n        code.push(\"min\", tempf1, BL, BR, \"\\n\");\n        code.push(\"min\", tempf2, TL, TR, \"\\n\");\n        code.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n        code.push(\"max\", tempf1, BL, BR, \"\\n\");\n        code.push(\"max\", tempf2, TL, TR, \"\\n\");\n        code.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n        code.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n        code.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n        code.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n        code.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n        code.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n        code.push(\"mul\", result1, result1, tempf2, \"\\n\");\n        code.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n        code.push(\"mul\", result2, result2, tempf2, \"\\n\");\n        code.push(\"add\", \"oc\", result1, result2, \"\\n\");\n        //this._data[2] = 1/numSamples;\n        return code.join(\" \");\n    };\n    Filter3DFXAATask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 6);\n    };\n    Filter3DFXAATask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DFXAATask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        if (this._rttManager) {\n            this._data[8] = 1 / this._textureWidth;\n            this._data[9] = 1 / this._textureHeight;\n        }\n    };\n    Filter3DFXAATask.prototype.calculateStepSize = function () {\n        this._realStepSize = 1; //this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    //TODO - remove blur variables and create setters/getters for FXAA\n    Filter3DFXAATask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DFXAATask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DFXAATask;\n\n},{\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nvar Filter3DHBlurTask = (function (_super) {\n    __extends(Filter3DHBlurTask, _super);\n    /**\n     * Creates a new Filter3DHDepthOfFFieldTask\n     * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DHBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n            this.calculateStepSize();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DHBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DHBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.x, v0.x, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.x, ft0.x, fc0.y\\n\" +\n                \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DHBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 1);\n    };\n    Filter3DHBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DHBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invW = 1 / this._textureWidth;\n        this._data[0] = this._amount * .5 * invW;\n        this._data[1] = this._realStepSize * invW;\n    };\n    Filter3DHBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DHBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DHBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DHBlurTask;\n\n},{\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AGALMiniAssembler_1 = require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nvar Filter3DTaskBase = (function () {\n    function Filter3DTaskBase(requireDepthRender) {\n        if (requireDepthRender === void 0) { requireDepthRender = false; }\n        this._scaledTextureWidth = -1;\n        this._scaledTextureHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._textureDimensionsInvalid = true;\n        this._program3DInvalid = true;\n        this._textureScale = 0;\n        this._requireDepthRender = requireDepthRender;\n    }\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureScale\", {\n        /**\n         * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n         */\n        get: function () {\n            return this._textureScale;\n        },\n        set: function (value) {\n            if (this._textureScale == value)\n                return;\n            this._textureScale = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"target\", {\n        get: function () {\n            return this._target;\n        },\n        set: function (value) {\n            this._target = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"rttManager\", {\n        get: function () {\n            return this._rttManager;\n        },\n        set: function (value) {\n            if (this._rttManager == value)\n                return;\n            this._rttManager = value;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        set: function (value) {\n            if (this._textureWidth == value)\n                return;\n            this._textureWidth = value;\n            this._scaledTextureWidth = this._textureWidth >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DTaskBase.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        set: function (value) {\n            if (this._textureHeight == value)\n                return;\n            this._textureHeight = value;\n            this._scaledTextureHeight = this._textureHeight >> this._textureScale;\n            this._textureDimensionsInvalid = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DTaskBase.prototype.getMainInputTexture = function (stage) {\n        if (this._textureDimensionsInvalid)\n            this.updateTextures(stage);\n        return this._mainInputTexture;\n    };\n    Filter3DTaskBase.prototype.dispose = function () {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        if (this._program3D)\n            this._program3D.dispose();\n    };\n    Filter3DTaskBase.prototype.invalidateProgram = function () {\n        this._program3DInvalid = true;\n    };\n    Filter3DTaskBase.prototype.updateProgram = function (stage) {\n        if (this._program3D)\n            this._program3D.dispose();\n        this._program3D = stage.context.createProgram();\n        var vertexByteCode = (new AGALMiniAssembler_1.default().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n        var fragmentByteCode = (new AGALMiniAssembler_1.default().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n        this._program3D.upload(vertexByteCode, fragmentByteCode);\n        this._program3DInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getVertexCode = function () {\n        return \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n    };\n    Filter3DTaskBase.prototype.getFragmentCode = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    Filter3DTaskBase.prototype.updateTextures = function (stage) {\n        if (this._mainInputTexture)\n            this._mainInputTexture.dispose();\n        this._mainInputTexture = new Image2D_1.default(this._scaledTextureWidth, this._scaledTextureHeight);\n        this._textureDimensionsInvalid = false;\n    };\n    Filter3DTaskBase.prototype.getProgram = function (stage) {\n        if (this._program3DInvalid)\n            this.updateProgram(stage);\n        return this._program3D;\n    };\n    Filter3DTaskBase.prototype.activate = function (stage, camera, depthTexture) {\n    };\n    Filter3DTaskBase.prototype.deactivate = function (stage) {\n    };\n    Object.defineProperty(Filter3DTaskBase.prototype, \"requireDepthRender\", {\n        get: function () {\n            return this._requireDepthRender;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Filter3DTaskBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DTaskBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":undefined}],\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar Filter3DTaskBase_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nvar Filter3DVBlurTask = (function (_super) {\n    __extends(Filter3DVBlurTask, _super);\n    /**\n     *\n     * @param amount\n     * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n     */\n    function Filter3DVBlurTask(amount, stepSize) {\n        if (stepSize === void 0) { stepSize = -1; }\n        _super.call(this);\n        this._stepSize = 1;\n        this._amount = amount;\n        this._data = new Float32Array([0, 0, 0, 1]);\n        this.stepSize = stepSize;\n    }\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"amount\", {\n        get: function () {\n            return this._amount;\n        },\n        set: function (value) {\n            if (this._amount == value)\n                return;\n            this._amount = value;\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter3DVBlurTask.prototype, \"stepSize\", {\n        get: function () {\n            return this._stepSize;\n        },\n        set: function (value) {\n            if (this._stepSize == value)\n                return;\n            this._stepSize = value;\n            this.calculateStepSize();\n            this.invalidateProgram();\n            this.updateBlurData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Filter3DVBlurTask.prototype.getFragmentCode = function () {\n        var code;\n        var numSamples = 1;\n        code = \"mov ft0, v0\t\\n\" +\n            \"sub ft0.y, v0.y, fc0.x\\n\";\n        code += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n        for (var x = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n            code += \"add ft0.y, ft0.y, fc0.y\\n\";\n            code += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n                \"add ft1, ft1, ft2\\n\";\n            ++numSamples;\n        }\n        code += \"mul oc, ft1, fc0.z\\n\";\n        this._data[2] = 1 / numSamples;\n        return code;\n    };\n    Filter3DVBlurTask.prototype.activate = function (stage, camera3D, depthTexture) {\n        stage.context.setProgramConstantsFromArray(ContextGLProgramType_1.default.FRAGMENT, 0, this._data, 1);\n    };\n    Filter3DVBlurTask.prototype.updateTextures = function (stage) {\n        _super.prototype.updateTextures.call(this, stage);\n        this.updateBlurData();\n    };\n    Filter3DVBlurTask.prototype.updateBlurData = function () {\n        // todo: must be normalized using view size ratio instead of texture\n        var invH = 1 / this._textureHeight;\n        this._data[0] = this._amount * .5 * invH;\n        this._data[1] = this._realStepSize * invH;\n    };\n    Filter3DVBlurTask.prototype.calculateStepSize = function () {\n        this._realStepSize = this._stepSize > 0 ? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES ? this._amount / Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n    };\n    Filter3DVBlurTask.MAX_AUTO_SAMPLES = 15;\n    return Filter3DVBlurTask;\n}(Filter3DTaskBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Filter3DVBlurTask;\n\n},{\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/filters\":[function(require,module,exports){\n\"use strict\";\nvar Filter3DCompositeTask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\");\nexports.Filter3DCompositeTask = Filter3DCompositeTask_1.default;\nvar Filter3DFXAATask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\");\nexports.Filter3DFXAATask = Filter3DFXAATask_1.default;\nvar Filter3DHBlurTask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\");\nexports.Filter3DHBlurTask = Filter3DHBlurTask_1.default;\nvar Filter3DTaskBase_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\");\nexports.Filter3DTaskBase = Filter3DTaskBase_1.default;\nvar Filter3DVBlurTask_1 = require(\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\");\nexports.Filter3DVBlurTask = Filter3DVBlurTask_1.default;\nvar BlurFilter3D_1 = require(\"awayjs-renderergl/lib/filters/BlurFilter3D\");\nexports.BlurFilter3D = BlurFilter3D_1.default;\nvar CompositeFilter3D_1 = require(\"awayjs-renderergl/lib/filters/CompositeFilter3D\");\nexports.CompositeFilter3D = CompositeFilter3D_1.default;\nvar Filter3DBase_1 = require(\"awayjs-renderergl/lib/filters/Filter3DBase\");\nexports.Filter3DBase = Filter3DBase_1.default;\nvar FXAAFilter3D_1 = require(\"awayjs-renderergl/lib/filters/FXAAFilter3D\");\nexports.FXAAFilter3D = FXAAFilter3D_1.default;\n\n},{\"awayjs-renderergl/lib/filters/BlurFilter3D\":\"awayjs-renderergl/lib/filters/BlurFilter3D\",\"awayjs-renderergl/lib/filters/CompositeFilter3D\":\"awayjs-renderergl/lib/filters/CompositeFilter3D\",\"awayjs-renderergl/lib/filters/FXAAFilter3D\":\"awayjs-renderergl/lib/filters/FXAAFilter3D\",\"awayjs-renderergl/lib/filters/Filter3DBase\":\"awayjs-renderergl/lib/filters/Filter3DBase\",\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\",\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\",\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\",\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\":\"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\",\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\":\"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\"}],\"awayjs-renderergl/lib/managers/RTTBufferManager\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar RTTEvent_1 = require(\"awayjs-renderergl/lib/events/RTTEvent\");\nvar RTTBufferManager = (function (_super) {\n    __extends(RTTBufferManager, _super);\n    function RTTBufferManager(stage) {\n        _super.call(this);\n        this._viewWidth = -1;\n        this._viewHeight = -1;\n        this._textureWidth = -1;\n        this._textureHeight = -1;\n        this._buffersInvalid = true;\n        this._renderToTextureRect = new Rectangle_1.default();\n        this._stage = stage;\n    }\n    RTTBufferManager.getInstance = function (stage) {\n        if (!stage)\n            throw new Error(\"stage key cannot be null!\");\n        if (RTTBufferManager._instances == null)\n            RTTBufferManager._instances = new Array();\n        var rttBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n        if (rttBufferManager == null) {\n            rttBufferManager = new RTTBufferManager(stage);\n            var vo = new RTTBufferManagerVO();\n            vo.stage3d = stage;\n            vo.rttbfm = rttBufferManager;\n            RTTBufferManager._instances.push(vo);\n        }\n        return rttBufferManager;\n    };\n    RTTBufferManager.getRTTBufferManagerFromStage = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage)\n                return r.rttbfm;\n        }\n        return null;\n    };\n    RTTBufferManager.deleteRTTBufferManager = function (stage) {\n        var l = RTTBufferManager._instances.length;\n        var r;\n        for (var c = 0; c < l; c++) {\n            r = RTTBufferManager._instances[c];\n            if (r.stage3d === stage) {\n                RTTBufferManager._instances.splice(c, 1);\n                return;\n            }\n        }\n    };\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioX\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureRatioY\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._textureRatioY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewWidth\", {\n        get: function () {\n            return this._viewWidth;\n        },\n        set: function (value) {\n            if (value == this._viewWidth)\n                return;\n            this._viewWidth = value;\n            this._buffersInvalid = true;\n            this._textureWidth = ImageUtils_1.default.getBestPowerOf2(this._viewWidth);\n            if (this._textureWidth > this._viewWidth) {\n                this._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth) * .5);\n                this._renderToTextureRect.width = this._viewWidth;\n            }\n            else {\n                this._renderToTextureRect.x = 0;\n                this._renderToTextureRect.width = this._textureWidth;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"viewHeight\", {\n        get: function () {\n            return this._viewHeight;\n        },\n        set: function (value) {\n            if (value == this._viewHeight)\n                return;\n            this._viewHeight = value;\n            this._buffersInvalid = true;\n            this._textureHeight = ImageUtils_1.default.getBestPowerOf2(this._viewHeight);\n            if (this._textureHeight > this._viewHeight) {\n                this._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight) * .5);\n                this._renderToTextureRect.height = this._viewHeight;\n            }\n            else {\n                this._renderToTextureRect.y = 0;\n                this._renderToTextureRect.height = this._textureHeight;\n            }\n            this.dispatchEvent(new RTTEvent_1.default(RTTEvent_1.default.RESIZE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToScreenVertexBuffer\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToScreenVertexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"indexBuffer\", {\n        get: function () {\n            return this._indexBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"renderToTextureRect\", {\n        get: function () {\n            if (this._buffersInvalid)\n                this.updateRTTBuffers();\n            return this._renderToTextureRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureWidth\", {\n        get: function () {\n            return this._textureWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RTTBufferManager.prototype, \"textureHeight\", {\n        get: function () {\n            return this._textureHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RTTBufferManager.prototype.dispose = function () {\n        RTTBufferManager.deleteRTTBufferManager(this._stage);\n        if (this._indexBuffer) {\n            this._indexBuffer.dispose();\n            this._renderToScreenVertexBuffer.dispose();\n            this._renderToTextureVertexBuffer.dispose();\n            this._renderToScreenVertexBuffer = null;\n            this._renderToTextureVertexBuffer = null;\n            this._indexBuffer = null;\n        }\n    };\n    // todo: place all this in a separate model, since it's used all over the place\n    // maybe it even has a place in the core (together with screenRect etc)?\n    // needs to be stored per view of course\n    RTTBufferManager.prototype.updateRTTBuffers = function () {\n        var context = this._stage.context;\n        var textureVerts;\n        var screenVerts;\n        var x;\n        var y;\n        if (this._renderToTextureVertexBuffer == null)\n            this._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n        if (this._renderToScreenVertexBuffer == null)\n            this._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n        if (!this._indexBuffer) {\n            this._indexBuffer = context.createIndexBuffer(6);\n            this._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n        }\n        this._textureRatioX = x = Math.min(this._viewWidth / this._textureWidth, 1);\n        this._textureRatioY = y = Math.min(this._viewHeight / this._textureHeight, 1);\n        var u1 = (1 - x) * .5;\n        var u2 = (x + 1) * .5;\n        var v1 = (1 - y) * .5;\n        var v2 = (y + 1) * .5;\n        // last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n        textureVerts = [-x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3];\n        screenVerts = [-1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3];\n        this._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n        this._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n        this._buffersInvalid = false;\n    };\n    return RTTBufferManager;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RTTBufferManager;\nvar RTTBufferManagerVO = (function () {\n    function RTTBufferManagerVO() {\n    }\n    return RTTBufferManagerVO;\n}());\n\n},{\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined,\"awayjs-renderergl/lib/events/RTTEvent\":\"awayjs-renderergl/lib/events/RTTEvent\"}],\"awayjs-renderergl/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar RTTBufferManager_1 = require(\"awayjs-renderergl/lib/managers/RTTBufferManager\");\nexports.RTTBufferManager = RTTBufferManager_1.default;\n\n},{\"awayjs-renderergl/lib/managers/RTTBufferManager\":\"awayjs-renderergl/lib/managers/RTTBufferManager\"}],\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar GL_RenderableBase_1 = require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.pool.RenderableListItem\n */\nvar GL_Billboard = (function (_super) {\n    __extends(GL_Billboard, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param billboard\n     */\n    function GL_Billboard(billboard, renderer) {\n        _super.call(this, billboard, renderer);\n        this._billboard = billboard;\n    }\n    GL_Billboard.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._billboard = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     */\n    GL_Billboard.prototype._pGetElements = function () {\n        var texture = this._billboard.material.getTextureAt(0);\n        var id = -1;\n        if (texture)\n            id = ((this.renderable.style ? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager_1.default.getDefaultSampler()).id;\n        this._id = id;\n        var elements = GL_Billboard._samplerElements[id];\n        var width = this._billboard.billboardWidth;\n        var height = this._billboard.billboardHeight;\n        var billboardRect = this._billboard.billboardRect;\n        if (!elements) {\n            elements = GL_Billboard._samplerElements[id] = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(Array(0, 1, 2, 0, 2, 3));\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n            elements.setNormals(Array(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n            elements.setTangents(Array(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n            elements.setUVs(Array(0, 0, 1, 0, 1, 1, 0, 1));\n        }\n        else {\n            elements.setPositions(Array(-billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, height - billboardRect.y, 0, width - billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n        }\n        return elements;\n    };\n    GL_Billboard.prototype._pGetSurface = function () {\n        return this._billboard.material;\n    };\n    GL_Billboard._samplerElements = new Object();\n    return GL_Billboard;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Billboard;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined,\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\"}],\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_RenderableBase_1 = require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nvar GL_GraphicRenderable = (function (_super) {\n    __extends(GL_GraphicRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param indexOffset\n     */\n    function GL_GraphicRenderable(graphic, renderer) {\n        _super.call(this, graphic, renderer);\n        this.graphic = graphic;\n    }\n    GL_GraphicRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.graphic = null;\n    };\n    /**\n     *\n     * @returns {ElementsBase}\n     * @protected\n     */\n    GL_GraphicRenderable.prototype._pGetElements = function () {\n        return this.graphic.elements;\n    };\n    GL_GraphicRenderable.prototype._pGetSurface = function () {\n        return this.graphic.material;\n    };\n    return GL_GraphicRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_GraphicRenderable;\n\n},{\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\"}],\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LineElements_1 = require(\"awayjs-display/lib/graphics/LineElements\");\nvar GL_RenderableBase_1 = require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nvar GL_LineSegmentRenderable = (function (_super) {\n    __extends(GL_LineSegmentRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param graphic\n     * @param level\n     * @param dataOffset\n     */\n    function GL_LineSegmentRenderable(lineSegment, renderer) {\n        _super.call(this, lineSegment, renderer);\n        this._lineSegment = lineSegment;\n    }\n    GL_LineSegmentRenderable.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._lineSegment = null;\n    };\n    /**\n     * //TODO\n     *\n     * @returns {base.LineElements}\n     * @protected\n     */\n    GL_LineSegmentRenderable.prototype._pGetElements = function () {\n        var geometry = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements_1.default());\n        var start = this._lineSegment.startPostion;\n        var end = this._lineSegment.endPosition;\n        var positions;\n        var thickness;\n        //if (geometry.indices != null) {\n        //\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n        //\tthickness = geometry.thickness.get(geometry.numVertices);\n        //} else {\n        positions = new Float32Array(6);\n        thickness = new Float32Array(1);\n        //}\n        positions[0] = start.x;\n        positions[1] = start.y;\n        positions[2] = start.z;\n        positions[3] = end.x;\n        positions[4] = end.y;\n        positions[5] = end.z;\n        thickness[0] = this._lineSegment.thickness;\n        geometry.setPositions(positions);\n        geometry.setThickness(thickness);\n        return geometry;\n    };\n    GL_LineSegmentRenderable.prototype._pGetSurface = function () {\n        return this._lineSegment.material;\n    };\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param renderable\n     * @param level\n     * @param indexOffset\n     * @returns {away.pool.LineSubSpriteRenderable}\n     * @private\n     */\n    GL_LineSegmentRenderable.prototype._pGetOverflowRenderable = function (indexOffset) {\n        return new GL_LineSegmentRenderable(this.renderable, this._renderer);\n    };\n    GL_LineSegmentRenderable._lineGraphics = new Object();\n    return GL_LineSegmentRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_LineSegmentRenderable;\n\n},{\"awayjs-display/lib/graphics/LineElements\":undefined,\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\"}],\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar RenderableEvent_1 = require(\"awayjs-display/lib/events/RenderableEvent\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\n/**\n * @class RenderableListItem\n */\nvar GL_RenderableBase = (function (_super) {\n    __extends(GL_RenderableBase, _super);\n    /**\n     *\n     * @param renderable\n     * @param sourceEntity\n     * @param surface\n     * @param renderer\n     */\n    function GL_RenderableBase(renderable, renderer) {\n        var _this = this;\n        _super.call(this, renderable, renderer);\n        this._elementsDirty = true;\n        this._surfaceDirty = true;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onSurfaceUpdatedDelegate = function (event) { return _this._onSurfaceUpdated(event); };\n        this._onInvalidateElementsDelegate = function (event) { return _this.onInvalidateElements(event); };\n        //store a reference to the pool for later disposal\n        this._renderer = renderer;\n        this._stage = renderer.stage;\n        this.renderable = renderable;\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n        this.renderable.addEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n    }\n    Object.defineProperty(GL_RenderableBase.prototype, \"elements\", {\n        get: function () {\n            if (this._elementsDirty)\n                this._updateElements();\n            return this._elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_RenderableBase.prototype, \"surfaceGL\", {\n        get: function () {\n            if (this._surfaceDirty)\n                this._updateSurface();\n            return this._surfaceGL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_RenderableBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this.next = null;\n        this.masksConfig = null;\n        this.renderSceneTransform = null;\n        this._renderer = null;\n        this._stage = null;\n        this.sourceEntity = null;\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n        this.renderable.removeEventListener(RenderableEvent_1.default.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n        this.renderable = null;\n        this._surfaceGL.usages--;\n        if (!this._surfaceGL.usages)\n            this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n        this._surfaceGL = null;\n        this._elements = null;\n    };\n    GL_RenderableBase.prototype.onInvalidateElements = function (event) {\n        this._elementsDirty = true;\n    };\n    GL_RenderableBase.prototype._onSurfaceUpdated = function (event) {\n        this._surfaceDirty = true;\n    };\n    GL_RenderableBase.prototype._pGetElements = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    GL_RenderableBase.prototype._pGetSurface = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    /**\n     * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_RenderableBase.prototype._iActivate = function (pass, camera) {\n        pass._iActivate(camera);\n    };\n    /**\n     * Renders an object to the current render target.\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iRender = function (pass, camera, viewProjection) {\n        this._setRenderState(pass, camera, viewProjection);\n        if (this._elementsDirty)\n            this._updateElements();\n        pass.shader._elementsPool.getAbstraction((this.renderable.animator) ? this.renderable.animator.getRenderableElements(this, this._elements) : this._elements)._iRender(this, camera, viewProjection);\n    };\n    GL_RenderableBase.prototype._setRenderState = function (pass, camera, viewProjection) {\n        pass._iRender(this, camera, viewProjection);\n    };\n    /**\n     * Clears the surface state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._iDeactivate = function (pass) {\n        pass._iDeactivate();\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    GL_RenderableBase.prototype._updateElements = function () {\n        this._elements = this._pGetElements();\n        this._elementsDirty = false;\n    };\n    GL_RenderableBase.prototype._updateSurface = function () {\n        var surface = this._pGetSurface() || DefaultMaterialManager_1.default.getDefaultMaterial(this.renderable);\n        var surfaceGL = this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n        if (this._surfaceGL != surfaceGL) {\n            if (this._surfaceGL) {\n                this._surfaceGL.usages--;\n                //dispose current surfaceGL object\n                if (!this._surfaceGL.usages)\n                    this._surfaceGL.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surfaceGL.surface));\n            }\n            this._surfaceGL = surfaceGL;\n            this._surfaceGL.usages++;\n        }\n        //create a cache of image & sampler objects for the renderable\n        var numImages = surfaceGL.numImages;\n        this.images.length = numImages;\n        this.samplers.length = numImages;\n        this.uvMatrix = this.renderable.style ? this.renderable.style.uvMatrix : surface.style ? surface.style.uvMatrix : null;\n        var numTextures = surface.getNumTextures();\n        var texture;\n        var numImages;\n        var image;\n        var sampler;\n        var index;\n        for (var i = 0; i < numTextures; i++) {\n            texture = surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            for (var j = 0; j < numImages; j++) {\n                index = surfaceGL.getImageIndex(texture, j);\n                image = this.renderable.style ? this.renderable.style.getImageAt(texture, j) : null;\n                this.images[index] = image ? this._stage.getAbstraction(image) : null;\n                sampler = this.renderable.style ? this.renderable.style.getSamplerAt(texture, j) : null;\n                this.samplers[index] = sampler ? this._stage.getAbstraction(sampler) : null;\n            }\n        }\n        this._surfaceDirty = false;\n    };\n    return GL_RenderableBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_RenderableBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/RenderableEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined}],\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar ContextGLProgramType_1 = require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nvar GL_RenderableBase_1 = require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nvar GL_SkyboxRenderable = (function (_super) {\n    __extends(GL_SkyboxRenderable, _super);\n    /**\n     * //TODO\n     *\n     * @param pool\n     * @param skybox\n     */\n    function GL_SkyboxRenderable(skybox, renderer) {\n        _super.call(this, skybox, renderer);\n        this._skybox = skybox;\n        this._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n    }\n    /**\n     * //TODO\n     *\n     * @returns {away.base.TriangleElements}\n     * @private\n     */\n    GL_SkyboxRenderable.prototype._pGetElements = function () {\n        var geometry = GL_SkyboxRenderable._geometry;\n        if (!geometry) {\n            geometry = GL_SkyboxRenderable._geometry = new TriangleElements_1.default(new AttributesBuffer_1.default(11, 4));\n            geometry.autoDeriveNormals = false;\n            geometry.autoDeriveTangents = false;\n            geometry.setIndices(Array(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n            geometry.setPositions(Array(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n        }\n        return geometry;\n    };\n    GL_SkyboxRenderable.prototype._pGetSurface = function () {\n        return this._skybox;\n    };\n    GL_SkyboxRenderable._iIncludeDependencies = function (shader) {\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxRenderable._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"mul vt0, va0, vc5\\n\" +\n            \"add vt0, vt0, vc4\\n\" +\n            \"m44 op, vt0, vc0\\n\";\n    };\n    GL_SkyboxRenderable._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxRenderable.prototype._setRenderState = function (pass, camera, viewProjection) {\n        _super.prototype._setRenderState.call(this, pass, camera, viewProjection);\n        var context = this._stage.context;\n        var pos = camera.scenePosition;\n        this._vertexArray[0] = pos.x;\n        this._vertexArray[1] = pos.y;\n        this._vertexArray[2] = pos.z;\n        this._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far / Math.sqrt(3);\n        context.setProgramConstantsFromMatrix(ContextGLProgramType_1.default.VERTEX, 0, viewProjection, true);\n        context.setProgramConstantsFromArray(ContextGLProgramType_1.default.VERTEX, 4, this._vertexArray, 2);\n    };\n    GL_SkyboxRenderable.vertexAttributesOffset = 1;\n    return GL_SkyboxRenderable;\n}(GL_RenderableBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxRenderable;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined,\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-stagegl/lib/base/ContextGLProgramType\":undefined}],\"awayjs-renderergl/lib/renderables\":[function(require,module,exports){\n\"use strict\";\nvar GL_BillboardRenderable_1 = require(\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\");\nexports.GL_BillboardRenderable = GL_BillboardRenderable_1.default;\nvar GL_GraphicRenderable_1 = require(\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\");\nexports.GL_GraphicRenderable = GL_GraphicRenderable_1.default;\nvar GL_LineSegmentRenderable_1 = require(\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\");\nexports.GL_LineSegmentRenderable = GL_LineSegmentRenderable_1.default;\nvar GL_RenderableBase_1 = require(\"awayjs-renderergl/lib/renderables/GL_RenderableBase\");\nexports.GL_RenderableBase = GL_RenderableBase_1.default;\nvar GL_SkyboxRenderable_1 = require(\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\");\nexports.GL_SkyboxRenderable = GL_SkyboxRenderable_1.default;\n\n},{\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\":\"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\",\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\":\"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\",\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\":\"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\",\"awayjs-renderergl/lib/renderables/GL_RenderableBase\":\"awayjs-renderergl/lib/renderables/GL_RenderableBase\",\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\":\"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\"}],\"awayjs-renderergl/lib/shaders/LightingShader\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar LightSources_1 = require(\"awayjs-display/lib/materials/LightSources\");\nvar ContextGLProfile_1 = require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nvar ShaderBase_1 = require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nvar LightingCompiler_1 = require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar LightingShader = (function (_super) {\n    __extends(LightingShader, _super);\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function LightingShader(elementsClass, lightingPass, stage) {\n        _super.call(this, elementsClass, lightingPass, stage);\n        this._includeCasters = true;\n        this._lightingPass = lightingPass;\n    }\n    LightingShader.prototype._iIncludeDependencies = function () {\n        this.numPointLights = this._lightingPass.numPointLights;\n        this.numDirectionalLights = this._lightingPass.numDirectionalLights;\n        this.numLightProbes = this._lightingPass.numLightProbes;\n        var numAllLights = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n        var numLightProbes = this._lightingPass.numLightProbes;\n        var diffuseLightSources = this._lightingPass._iUsesDiffuse(this) ? this._lightingPass.diffuseLightSources : 0x00;\n        var specularLightSources = this._lightingPass._iUsesSpecular(this) ? this._lightingPass.specularLightSources : 0x00;\n        var combinedLightSources = diffuseLightSources | specularLightSources;\n        this.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile_1.default.BASELINE_CONSTRAINED;\n        this.usesCommonData = this.usesLightFallOff;\n        this.numLights = numAllLights + numLightProbes;\n        this.usesLights = numAllLights > 0 && (combinedLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources_1.default.LIGHTS) != 0;\n        this.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources_1.default.PROBES) != 0;\n        this.usesShadows = this._lightingPass._iUsesShadows(this);\n        //IMPORTANT this must occur after shader lighting initialisation above\n        _super.prototype._iIncludeDependencies.call(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param materialPassVO\n     * @returns {away.materials.LightingCompiler}\n     */\n    LightingShader.prototype.createCompiler = function (elementsClass, pass) {\n        return new LightingCompiler_1.default(elementsClass, pass, this);\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    LightingShader.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        if (this._lightingPass.lightPicker)\n            this._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n        if (this.usesLights)\n            this.updateLights();\n        if (this.usesProbes)\n            this.updateProbes();\n    };\n    /**\n     * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateLights = function () {\n        var dirLight;\n        var pointLight;\n        var i = 0;\n        var k = 0;\n        var len;\n        var dirPos;\n        var total = 0;\n        var numLightTypes = this.usesShadows ? 2 : 1;\n        var l;\n        var offset;\n        this.ambientR = this.ambientG = this.ambientB = 0;\n        l = this.lightVertexConstantIndex;\n        k = this.lightFragmentConstantIndex;\n        var cast = 0;\n        var dirLights = this._lightingPass.lightPicker.directionalLights;\n        offset = this._lightingPass.directionalLightsOffset;\n        len = this._lightingPass.lightPicker.directionalLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                dirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n            len = dirLights.length;\n            if (len > this.numDirectionalLights)\n                len = this.numDirectionalLights;\n            for (i = 0; i < len; ++i) {\n                dirLight = dirLights[offset + i];\n                dirPos = dirLight.sceneDirection;\n                this.ambientR += dirLight._iAmbientR;\n                this.ambientG += dirLight._iAmbientG;\n                this.ambientB += dirLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    var x = -dirPos.x;\n                    var y = -dirPos.y;\n                    var z = -dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = -dirPos.x;\n                    this.fragmentConstantData[k++] = -dirPos.y;\n                    this.fragmentConstantData[k++] = -dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = dirLight._iDiffuseR;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseG;\n                this.fragmentConstantData[k++] = dirLight._iDiffuseB;\n                this.fragmentConstantData[k++] = 1;\n                this.fragmentConstantData[k++] = dirLight._iSpecularR;\n                this.fragmentConstantData[k++] = dirLight._iSpecularG;\n                this.fragmentConstantData[k++] = dirLight._iSpecularB;\n                this.fragmentConstantData[k++] = 1;\n                if (++total == this.numDirectionalLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numDirectionalLights > total) {\n            i = k + (this.numDirectionalLights - total) * 12;\n            while (k < i)\n                this.fragmentConstantData[k++] = 0;\n        }\n        total = 0;\n        var pointLights = this._lightingPass.lightPicker.pointLights;\n        offset = this._lightingPass.pointLightsOffset;\n        len = this._lightingPass.lightPicker.pointLights.length;\n        if (offset > len) {\n            cast = 1;\n            offset -= len;\n        }\n        else {\n            cast = 0;\n        }\n        for (; cast < numLightTypes; ++cast) {\n            if (cast)\n                pointLights = this._lightingPass.lightPicker.castingPointLights;\n            len = pointLights.length;\n            for (i = 0; i < len; ++i) {\n                pointLight = pointLights[offset + i];\n                dirPos = pointLight.scenePosition;\n                this.ambientR += pointLight._iAmbientR;\n                this.ambientG += pointLight._iAmbientG;\n                this.ambientB += pointLight._iAmbientB;\n                if (this.usesTangentSpace) {\n                    x = dirPos.x;\n                    y = dirPos.y;\n                    z = dirPos.z;\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n                    this.vertexConstantData[l++] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n                    this.vertexConstantData[l++] = 1;\n                }\n                else if (!this.usesGlobalPosFragment) {\n                    this.vertexConstantData[l++] = dirPos.x;\n                    this.vertexConstantData[l++] = dirPos.y;\n                    this.vertexConstantData[l++] = dirPos.z;\n                    this.vertexConstantData[l++] = 1;\n                }\n                else {\n                    this.fragmentConstantData[k++] = dirPos.x;\n                    this.fragmentConstantData[k++] = dirPos.y;\n                    this.fragmentConstantData[k++] = dirPos.z;\n                    this.fragmentConstantData[k++] = 1;\n                }\n                this.fragmentConstantData[k++] = pointLight._iDiffuseR;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseG;\n                this.fragmentConstantData[k++] = pointLight._iDiffuseB;\n                var radius = pointLight._pRadius;\n                this.fragmentConstantData[k++] = radius * radius;\n                this.fragmentConstantData[k++] = pointLight._iSpecularR;\n                this.fragmentConstantData[k++] = pointLight._iSpecularG;\n                this.fragmentConstantData[k++] = pointLight._iSpecularB;\n                this.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n                if (++total == this.numPointLights) {\n                    // break loop\n                    i = len;\n                    cast = numLightTypes;\n                }\n            }\n        }\n        // more directional supported than currently picked, need to clamp all to 0\n        if (this.numPointLights > total) {\n            i = k + (total - this.numPointLights) * 12;\n            for (; k < i; ++k)\n                this.fragmentConstantData[k] = 0;\n        }\n    };\n    /**\n     * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n     */\n    LightingShader.prototype.updateProbes = function () {\n        var probe;\n        var lightProbes = this._lightingPass.lightPicker.lightProbes;\n        var weights = this._lightingPass.lightPicker.lightProbeWeights;\n        var len = lightProbes.length - this._lightingPass.lightProbesOffset;\n        var addDiff = this.usesProbesForDiffuse;\n        var addSpec = this.usesProbesForSpecular;\n        if (!(addDiff || addSpec))\n            return;\n        if (len > this.numLightProbes)\n            len = this.numLightProbes;\n        for (var i = 0; i < len; ++i) {\n            probe = lightProbes[this._lightingPass.lightProbesOffset + i];\n            if (addDiff)\n                this._stage.getAbstraction(probe.diffuseMap).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n            if (addSpec)\n                this._stage.getAbstraction(probe.specularMap).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n        }\n        for (i = 0; i < len; ++i)\n            this.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n    };\n    return LightingShader;\n}(ShaderBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingShader;\n\n},{\"awayjs-display/lib/materials/LightSources\":undefined,\"awayjs-renderergl/lib/shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\",\"awayjs-stagegl/lib/base/ContextGLProfile\":undefined}],\"awayjs-renderergl/lib/shaders/RegisterPool\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nvar RegisterPool = (function () {\n    /**\n     * Creates a new RegisterPool object.\n     * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n     * @param regCount The amount of available registers of this type.\n     * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n     */\n    function RegisterPool(regName, regCount, persistent) {\n        if (persistent === void 0) { persistent = true; }\n        this._regName = regName;\n        this._regCount = regCount;\n        this._persistent = persistent;\n        this.initRegisters(regName, regCount);\n    }\n    /**\n     * Retrieve an entire vector register that's still available.\n     */\n    RegisterPool.prototype.requestFreeVectorReg = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (!this.isRegisterUsed(i)) {\n                if (this._persistent)\n                    this._usedVectorCount[i]++;\n                return this._vectorRegisters[i];\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Retrieve a single vector component that's still available.\n     */\n    RegisterPool.prototype.requestFreeRegComponent = function () {\n        for (var i = 0; i < this._regCount; ++i) {\n            if (this._usedVectorCount[i] > 0)\n                continue;\n            for (var j = 0; j < 4; ++j) {\n                if (this._usedSingleCount[j][i] == 0) {\n                    if (this._persistent)\n                        this._usedSingleCount[j][i]++;\n                    return this._registerComponents[j][i];\n                }\n            }\n        }\n        throw new Error(\"Register overflow!\");\n    };\n    /**\n     * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    RegisterPool.prototype.addUsage = function (register, usageCount) {\n        if (register._component > -1)\n            this._usedSingleCount[register._component][register.index] += usageCount;\n        else\n            this._usedVectorCount[register.index] += usageCount;\n    };\n    /**\n     * Removes a usage from a register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    RegisterPool.prototype.removeUsage = function (register) {\n        if (register._component > -1) {\n            if (--this._usedSingleCount[register._component][register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n        else {\n            if (--this._usedVectorCount[register.index] < 0)\n                throw new Error(\"More usages removed than exist!\");\n        }\n    };\n    /**\n     * Disposes any resources used by the current RegisterPool object.\n     */\n    RegisterPool.prototype.dispose = function () {\n        this._vectorRegisters = null;\n        this._registerComponents = null;\n        this._usedSingleCount = null;\n        this._usedVectorCount = null;\n    };\n    /**\n     * Indicates whether or not any registers are in use.\n     */\n    RegisterPool.prototype.hasRegisteredRegs = function () {\n        for (var i = 0; i < this._regCount; ++i)\n            if (this.isRegisterUsed(i))\n                return true;\n        return false;\n    };\n    /**\n     * Initializes all registers.\n     */\n    RegisterPool.prototype.initRegisters = function (regName, regCount) {\n        var hash = RegisterPool._initPool(regName, regCount);\n        this._vectorRegisters = RegisterPool._regPool[hash];\n        this._registerComponents = RegisterPool._regCompsPool[hash];\n        this._usedVectorCount = this._initArray(Array(regCount), 0);\n        this._usedSingleCount = new Array(4);\n        this._usedSingleCount[0] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[1] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[2] = this._initArray(new Array(regCount), 0);\n        this._usedSingleCount[3] = this._initArray(new Array(regCount), 0);\n    };\n    RegisterPool._initPool = function (regName, regCount) {\n        var hash = regName + regCount;\n        if (RegisterPool._regPool[hash] != undefined)\n            return hash;\n        var vectorRegisters = new Array(regCount);\n        RegisterPool._regPool[hash] = vectorRegisters;\n        var registerComponents = [\n            [],\n            [],\n            [],\n            []\n        ];\n        RegisterPool._regCompsPool[hash] = registerComponents;\n        for (var i = 0; i < regCount; ++i) {\n            vectorRegisters[i] = new ShaderRegisterElement_1.default(regName, i);\n            for (var j = 0; j < 4; ++j)\n                registerComponents[j][i] = new ShaderRegisterElement_1.default(regName, i, j);\n        }\n        return hash;\n    };\n    /**\n     * Check if the temp register is either used for single or vector use\n     */\n    RegisterPool.prototype.isRegisterUsed = function (index) {\n        if (this._usedVectorCount[index] > 0)\n            return true;\n        for (var i = 0; i < 4; ++i)\n            if (this._usedSingleCount[i][index] > 0)\n                return true;\n        return false;\n    };\n    RegisterPool.prototype._initArray = function (a, val) {\n        var l = a.length;\n        for (var c = 0; c < l; c++)\n            a[c] = val;\n        return a;\n    };\n    RegisterPool._regPool = new Object();\n    RegisterPool._regCompsPool = new Object();\n    return RegisterPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RegisterPool;\n\n},{\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderBase\":[function(require,module,exports){\n\"use strict\";\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar ContextGLBlendFactor_1 = require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar ContextGLTriangleFace_1 = require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nvar ElementsPool_1 = require(\"awayjs-renderergl/lib/elements/ElementsPool\");\nvar CompilerBase_1 = require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nvar ShaderBase = (function () {\n    /**\n     * Creates a new MethodCompilerVO object.\n     */\n    function ShaderBase(elementsClass, pass, stage) {\n        this._abstractionPool = new Object();\n        this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n        this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n        this._invalidShader = true;\n        this._invalidProgram = true;\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        this.usesBlending = false;\n        this.useImageRect = false;\n        this.usesCurves = false;\n        /**\n         * The depth compare mode used to render the renderables using this material.\n         *\n         * @see away.stagegl.ContextGLCompareMode\n         */\n        this.depthCompareMode = ContextGLCompareMode_1.default.LESS_EQUAL;\n        /**\n         * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n         */\n        this.writeDepth = true;\n        this._defaultCulling = ContextGLTriangleFace_1.default.BACK;\n        this._pInverseSceneMatrix = new Float32Array(16);\n        //set ambient values to default\n        this.ambientR = 0xFF;\n        this.ambientG = 0xFF;\n        this.ambientB = 0xFF;\n        /**\n         * Indicates whether there are any dependencies on the world-space position vector.\n         */\n        this.usesGlobalPosFragment = false;\n        /**\n         * Indicates whether there are any dependencies on the local position vector.\n         */\n        this.usesPositionFragment = false;\n        /**\n         *\n         */\n        this.imageIndices = new Array();\n        this._elementsClass = elementsClass;\n        this._pass = pass;\n        this._stage = stage;\n        this.profile = this._stage.profile;\n        this._elementsPool = new ElementsPool_1.default(this, elementsClass);\n    }\n    Object.defineProperty(ShaderBase.prototype, \"programData\", {\n        get: function () {\n            if (this._invalidProgram)\n                this._updateProgram();\n            return this._programData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderBase.prototype.getAbstraction = function (texture) {\n        return (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new ShaderBase._abstractionClassPool[texture.assetType](texture, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    ShaderBase.prototype.clearAbstraction = function (texture) {\n        this._abstractionPool[texture.id] = null;\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    ShaderBase.registerAbstraction = function (gl_assetClass, assetClass) {\n        ShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n    };\n    ShaderBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._pass.getImageIndex(texture, index);\n    };\n    ShaderBase.prototype._iIncludeDependencies = function () {\n        this._pass._iIncludeDependencies(this);\n    };\n    /**\n     * Factory method to create a concrete compiler object for this object\n     *\n     * @param elementsClass\n     * @param pass\n     * @param stage\n     * @returns {CompilerBase}\n     */\n    ShaderBase.prototype.createCompiler = function (elementsClass, pass) {\n        return new CompilerBase_1.default(elementsClass, pass, this);\n    };\n    /**\n     * Clears dependency counts for all registers. Called when recompiling a pass.\n     */\n    ShaderBase.prototype.reset = function () {\n        this.projectionDependencies = 0;\n        this.normalDependencies = 0;\n        this.colorDependencies = 0;\n        this.viewDirDependencies = 0;\n        this.uvDependencies = 0;\n        this.secondaryUVDependencies = 0;\n        this.globalPosDependencies = 0;\n        this.tangentDependencies = 0;\n        this.usesCommonData = false;\n        this.usesGlobalPosFragment = false;\n        this.usesPositionFragment = false;\n        this.usesFragmentAnimation = false;\n        this.usesTangentSpace = false;\n        this.outputsNormals = false;\n        this.outputsTangentNormals = false;\n    };\n    ShaderBase.prototype.pInitRegisterIndices = function () {\n        this.commonsDataIndex = -1;\n        this.cameraPositionIndex = -1;\n        this.curvesIndex = -1;\n        this.uvIndex = -1;\n        this.uvMatrixIndex = -1;\n        this.colorTransformIndex = -1;\n        this.secondaryUVIndex = -1;\n        this.normalIndex = -1;\n        this.colorBufferIndex = -1;\n        this.tangentIndex = -1;\n        this.sceneMatrixIndex = -1;\n        this.sceneNormalMatrixIndex = -1;\n        this.jointIndexIndex = -1;\n        this.jointWeightIndex = -1;\n        this.imageIndices.length = 0;\n    };\n    /**\n     * Initializes the unchanging constant data for this shader object.\n     */\n    ShaderBase.prototype.initConstantData = function (registerCache, animatableAttributes, animationTargetRegisters, uvSource, uvTarget) {\n        //Updates the amount of used register indices.\n        this.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n        this.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n        this.numUsedStreams = registerCache.numUsedStreams;\n        this.numUsedTextures = registerCache.numUsedTextures;\n        this.numUsedVaryings = registerCache.numUsedVaryings;\n        this.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n        this.animatableAttributes = animatableAttributes;\n        this.animationTargetRegisters = animationTargetRegisters;\n        this.uvSource = uvSource;\n        this.uvTarget = uvTarget;\n        this.vertexConstantData = new Float32Array(this.numUsedVertexConstants * 4);\n        this.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants * 4);\n        //Initializes commonly required constant values.\n        if (this.commonsDataIndex >= 0) {\n            this.fragmentConstantData[this.commonsDataIndex] = .5;\n            this.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n            this.fragmentConstantData[this.commonsDataIndex + 2] = 1 / 255;\n            this.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n        }\n        //Initializes the default UV transformation matrix.\n        if (this.uvMatrixIndex >= 0) {\n            this.vertexConstantData[this.uvMatrixIndex] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n            this.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n            this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n        }\n        //Initializes the default colorTransform.\n        if (this.colorTransformIndex >= 0) {\n            this.fragmentConstantData[this.colorTransformIndex] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n            this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n            this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n        }\n        if (this.cameraPositionIndex >= 0)\n            this.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n    };\n    /**\n     * The blend mode to use when drawing this renderable. The following blend modes are supported:\n     * <ul>\n     * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n     * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n     * <li>BlendMode.MULTIPLY</li>\n     * <li>BlendMode.ADD</li>\n     * <li>BlendMode.ALPHA</li>\n     * </ul>\n     */\n    ShaderBase.prototype.setBlendMode = function (value) {\n        switch (value) {\n            case BlendMode_1.default.NORMAL:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ONE;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ZERO;\n                this.usesBlending = false;\n                break;\n            case BlendMode_1.default.LAYER:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.MULTIPLY:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_COLOR;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ADD:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.ONE;\n                this.usesBlending = true;\n                break;\n            case BlendMode_1.default.ALPHA:\n                this._blendFactorSource = ContextGLBlendFactor_1.default.ZERO;\n                this._blendFactorDest = ContextGLBlendFactor_1.default.SOURCE_ALPHA;\n                this.usesBlending = true;\n                break;\n            default:\n                throw new ArgumentError_1.default(\"Unsupported blend mode!\");\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iActivate = function (camera) {\n        if (this.usesAnimation)\n            this._pass.animationSet.activate(this, this._stage);\n        this._stage.context.setCulling(this.useBothSides ? ContextGLTriangleFace_1.default.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n        if (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            var pos = camera.scenePosition;\n            this.vertexConstantData[this.cameraPositionIndex] = pos.x;\n            this.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n            this.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n        }\n        this._stage.context.setDepthTest((this.writeDepth && !this.usesBlending), this.depthCompareMode);\n        if (this.usesBlending)\n            this._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n    };\n    /**\n     * @inheritDoc\n     */\n    ShaderBase.prototype._iDeactivate = function () {\n        if (this.usesAnimation)\n            this._pass.animationSet.deactivate(this, this._stage);\n        //For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n        this._stage.context.setDepthTest(true, ContextGLCompareMode_1.default.LESS_EQUAL);\n    };\n    /**\n     *\n     *\n     * @param renderable\n     * @param stage\n     * @param camera\n     */\n    ShaderBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        if (renderable.renderable.animator)\n            renderable.renderable.animator.setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n        if (this.usesUVTransform) {\n            var uvMatrix = renderable.uvMatrix;\n            if (uvMatrix) {\n                this.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n            }\n            else {\n                this.vertexConstantData[this.uvMatrixIndex] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n                this.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n                this.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n            }\n        }\n        if (this.usesColorTransform) {\n            var colorTransform = renderable.sourceEntity._iAssignedColorTransform();\n            if (colorTransform) {\n                this.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset / 255;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset / 255;\n            }\n            else {\n                this.fragmentConstantData[this.colorTransformIndex] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n                this.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n                this.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n            }\n        }\n        if (this.sceneNormalMatrixIndex >= 0)\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n        if (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n            renderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n            var pos = camera.scenePosition;\n            var x = pos.x;\n            var y = pos.y;\n            var z = pos.z;\n            this.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0] * x + this._pInverseSceneMatrix[4] * y + this._pInverseSceneMatrix[8] * z + this._pInverseSceneMatrix[12];\n            this.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1] * x + this._pInverseSceneMatrix[5] * y + this._pInverseSceneMatrix[9] * z + this._pInverseSceneMatrix[13];\n            this.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2] * x + this._pInverseSceneMatrix[6] * y + this._pInverseSceneMatrix[10] * z + this._pInverseSceneMatrix[14];\n        }\n    };\n    ShaderBase.prototype.invalidateProgram = function () {\n        this._invalidProgram = true;\n    };\n    ShaderBase.prototype.invalidateShader = function () {\n        this._invalidShader = true;\n        this._invalidProgram = true;\n    };\n    ShaderBase.prototype.dispose = function () {\n        this._programData.dispose();\n        this._programData = null;\n    };\n    ShaderBase.prototype._updateProgram = function () {\n        this._invalidProgram = false;\n        var compiler;\n        if (this._invalidShader) {\n            this._invalidShader = false;\n            compiler = this.createCompiler(this._elementsClass, this._pass);\n            compiler.compile();\n        }\n        this._calcAnimationCode(compiler.shadedTarget);\n        var programData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n        //check program data hasn't changed, keep count of program usages\n        if (this._programData != programData) {\n            if (this._programData)\n                this._programData.dispose();\n            this._programData = programData;\n            programData.usages++;\n        }\n    };\n    ShaderBase.prototype._calcAnimationCode = function (shadedTarget) {\n        //reset code\n        this._animationVertexCode = \"\";\n        this._animationFragmentCode = \"\";\n        //check to see if GPU animation is used\n        if (this.usesAnimation) {\n            var animationSet = this._pass.animationSet;\n            this._animationVertexCode += animationSet.getAGALVertexCode(this);\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += animationSet.getAGALUVCode(this);\n            if (this.usesFragmentAnimation)\n                this._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n            animationSet.doneAGALCode(this);\n        }\n        else {\n            // simply write attributes to targets, do not animate them\n            // projection will pick up on targets[0] to do the projection\n            var len = this.animatableAttributes.length;\n            for (var i = 0; i < len; ++i)\n                this._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n            if (this.uvDependencies > 0 && !this.usesUVTransform)\n                this._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n        }\n    };\n    ShaderBase._abstractionClassPool = new Object();\n    return ShaderBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderBase;\n\n},{\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-renderergl/lib/elements/ElementsPool\":\"awayjs-renderergl/lib/elements/ElementsPool\",\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":undefined,\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined,\"awayjs-stagegl/lib/base/ContextGLTriangleFace\":undefined}],\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\":[function(require,module,exports){\n\"use strict\";\nvar RegisterPool_1 = require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nvar ShaderRegisterCache = (function () {\n    /**\n     * Create a new ShaderRegisterCache object.\n     *\n     * @param profile The compatibility profile used by the renderer.\n     */\n    function ShaderRegisterCache(profile) {\n        this._numUsedVertexConstants = 0;\n        this._numUsedFragmentConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._profile = profile;\n    }\n    /**\n     * Resets all registers.\n     */\n    ShaderRegisterCache.prototype.reset = function () {\n        this._fragmentTempCache = new RegisterPool_1.default(\"ft\", 8, false);\n        this._vertexTempCache = new RegisterPool_1.default(\"vt\", 8, false);\n        this._varyingCache = new RegisterPool_1.default(\"v\", 8);\n        this._textureCache = new RegisterPool_1.default(\"fs\", 8);\n        this._vertexAttributesCache = new RegisterPool_1.default(\"va\", 8);\n        this._fragmentConstantsCache = new RegisterPool_1.default(\"fc\", 28);\n        this._vertexConstantsCache = new RegisterPool_1.default(\"vc\", 128);\n        this._fragmentOutputRegister = new ShaderRegisterElement_1.default(\"oc\", -1);\n        this._vertexOutputRegister = new ShaderRegisterElement_1.default(\"op\", -1);\n        this._numUsedVertexConstants = 0;\n        this._numUsedStreams = 0;\n        this._numUsedTextures = 0;\n        this._numUsedVaryings = 0;\n        this._numUsedFragmentConstants = 0;\n        var i;\n        for (i = 0; i < this._vertexAttributesOffset; ++i)\n            this.getFreeVertexAttribute();\n        for (i = 0; i < this._vertexConstantOffset; ++i)\n            this.getFreeVertexConstant();\n        for (i = 0; i < this._varyingsOffset; ++i)\n            this.getFreeVarying();\n        for (i = 0; i < this._fragmentConstantOffset; ++i)\n            this.getFreeFragmentConstant();\n    };\n    /**\n     * Disposes all resources used.\n     */\n    ShaderRegisterCache.prototype.dispose = function () {\n        this._fragmentTempCache.dispose();\n        this._vertexTempCache.dispose();\n        this._varyingCache.dispose();\n        this._fragmentConstantsCache.dispose();\n        this._vertexAttributesCache.dispose();\n        this._fragmentTempCache = null;\n        this._vertexTempCache = null;\n        this._varyingCache = null;\n        this._fragmentConstantsCache = null;\n        this._vertexAttributesCache = null;\n        this._fragmentOutputRegister = null;\n        this._vertexOutputRegister = null;\n    };\n    /**\n     * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addFragmentTempUsages = function (register, usageCount) {\n        this._fragmentTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeFragmentTempUsage = function (register) {\n        this._fragmentTempCache.removeUsage(register);\n    };\n    /**\n     * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n     * until removeUsage has been called usageCount times again.\n     * @param register The register to mark as used.\n     * @param usageCount The amount of usages to add.\n     */\n    ShaderRegisterCache.prototype.addVertexTempUsages = function (register, usageCount) {\n        this._vertexTempCache.addUsage(register, usageCount);\n    };\n    /**\n     * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n     * @param register The register for which to remove a usage.\n     */\n    ShaderRegisterCache.prototype.removeVertexTempUsage = function (register) {\n        this._vertexTempCache.removeUsage(register);\n    };\n    /**\n     * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n     * has been called usageCount times again.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentVectorTemp = function () {\n        return this._fragmentTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a fragment temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentSingleTemp = function () {\n        return this._fragmentTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available varying register\n     */\n    ShaderRegisterCache.prototype.getFreeVarying = function () {\n        ++this._numUsedVaryings;\n        return this._varyingCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available fragment constant register\n     */\n    ShaderRegisterCache.prototype.getFreeFragmentConstant = function () {\n        ++this._numUsedFragmentConstants;\n        return this._fragmentConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available vertex constant register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexConstant = function () {\n        ++this._numUsedVertexConstants;\n        return this._vertexConstantsCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an entire vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexVectorTemp = function () {\n        return this._vertexTempCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve a single component from a vertex temporary register that's still available.\n     */\n    ShaderRegisterCache.prototype.getFreeVertexSingleTemp = function () {\n        return this._vertexTempCache.requestFreeRegComponent();\n    };\n    /**\n     * Retrieve an available vertex attribute register\n     */\n    ShaderRegisterCache.prototype.getFreeVertexAttribute = function () {\n        ++this._numUsedStreams;\n        return this._vertexAttributesCache.requestFreeVectorReg();\n    };\n    /**\n     * Retrieve an available texture register\n     */\n    ShaderRegisterCache.prototype.getFreeTextureReg = function () {\n        ++this._numUsedTextures;\n        return this._textureCache.requestFreeVectorReg();\n    };\n    Object.defineProperty(ShaderRegisterCache.prototype, \"vertexConstantOffset\", {\n        /**\n         * Indicates the start index from which to retrieve vertex constants.\n         */\n        get: function () {\n            return this._vertexConstantOffset;\n        },\n        set: function (vertexConstantOffset) {\n            this._vertexConstantOffset = vertexConstantOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"vertexAttributesOffset\", {\n        /**\n         * Indicates the start index from which to retrieve vertex attributes.\n         */\n        get: function () {\n            return this._vertexAttributesOffset;\n        },\n        set: function (value) {\n            this._vertexAttributesOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"varyingsOffset\", {\n        /**\n         * Indicates the start index from which to retrieve varying registers.\n         */\n        get: function () {\n            return this._varyingsOffset;\n        },\n        set: function (value) {\n            this._varyingsOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"fragmentConstantOffset\", {\n        /**\n         * Indicates the start index from which to retrieve fragment constants.\n         */\n        get: function () {\n            return this._fragmentConstantOffset;\n        },\n        set: function (value) {\n            this._fragmentConstantOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"fragmentOutputRegister\", {\n        /**\n         * The fragment output register.\n         */\n        get: function () {\n            return this._fragmentOutputRegister;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVertexConstants\", {\n        /**\n         * The amount of used vertex constant registers.\n         */\n        get: function () {\n            return this._numUsedVertexConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedFragmentConstants\", {\n        /**\n         * The amount of used fragment constant registers.\n         */\n        get: function () {\n            return this._numUsedFragmentConstants;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedStreams\", {\n        /**\n         * The amount of used vertex streams.\n         */\n        get: function () {\n            return this._numUsedStreams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedTextures\", {\n        /**\n         * The amount of used texture slots.\n         */\n        get: function () {\n            return this._numUsedTextures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterCache.prototype, \"numUsedVaryings\", {\n        /**\n         * The amount of used varying registers.\n         */\n        get: function () {\n            return this._numUsedVaryings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ShaderRegisterCache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterCache;\n\n},{\"awayjs-renderergl/lib/shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\"}],\"awayjs-renderergl/lib/shaders/ShaderRegisterData\":[function(require,module,exports){\n\"use strict\";\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nvar ShaderRegisterData = (function () {\n    function ShaderRegisterData() {\n        this.textures = Array();\n    }\n    return ShaderRegisterData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterData;\n\n},{}],\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":[function(require,module,exports){\n\"use strict\";\n/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nvar ShaderRegisterElement = (function () {\n    /**\n     * Creates a new ShaderRegisterElement object.\n     *\n     * @param regName The name of the register.\n     * @param index The index of the register.\n     * @param component The register's component, if not the entire register is represented.\n     */\n    function ShaderRegisterElement(regName, index, component) {\n        if (component === void 0) { component = -1; }\n        this._component = component;\n        this._regName = regName;\n        this._index = index;\n        this._toStr = this._regName;\n        if (this._index >= 0)\n            this._toStr += this._index;\n        if (component > -1)\n            this._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n    }\n    /**\n     * Converts the register or the components AGAL string representation.\n     */\n    ShaderRegisterElement.prototype.toString = function () {\n        return this._toStr;\n    };\n    Object.defineProperty(ShaderRegisterElement.prototype, \"regName\", {\n        /**\n         * The register's name.\n         */\n        get: function () {\n            return this._regName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShaderRegisterElement.prototype, \"index\", {\n        /**\n         * The register's index.\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderRegisterElement.COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n    return ShaderRegisterElement;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ShaderRegisterElement;\n\n},{}],\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":[function(require,module,exports){\n\"use strict\";\nvar ShaderRegisterCache_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nvar ShaderRegisterData_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar CompilerBase = (function () {\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function CompilerBase(elementsClass, pass, shader) {\n        this._pVertexCode = ''; // Changed to emtpy string- AwayTS\n        this._pFragmentCode = ''; // Changed to emtpy string - AwayTS\n        this._pPostAnimationFragmentCode = ''; // Changed to emtpy string - AwayTS\n        //The attributes that need to be animated by animators.\n        this._pAnimatableAttributes = new Array();\n        //The target registers for animated properties, written to by the animators.\n        this._pAnimationTargetRegisters = new Array();\n        this._pElementsClass = elementsClass;\n        this._pRenderPass = pass;\n        this._pShader = shader;\n        this._pSharedRegisters = new ShaderRegisterData_1.default();\n        this._pRegisterCache = new ShaderRegisterCache_1.default(shader.profile);\n        this._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n        this._pRegisterCache.reset();\n    }\n    /**\n     * Compiles the code after all setup on the compiler has finished.\n     */\n    CompilerBase.prototype.compile = function () {\n        this._pShader.reset();\n        this._pShader._iIncludeDependencies();\n        this.pInitRegisterIndices();\n        this.pCompileDependencies();\n        //compile custom vertex & fragment codes\n        this._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        if (this._pShader.usesColorTransform)\n            this.compileColorTransformCode();\n        else\n            this._pShader.colorTransformIndex = -1;\n        //assign the final output color to the output register\n        this._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n        this._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n        //initialise the required shader constants\n        this._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n        this._pRenderPass._iInitConstantData(this._pShader);\n    };\n    /**\n     * Calculate the transformed colours\n     */\n    CompilerBase.prototype.compileColorTransformCode = function () {\n        // rm, gm, bm, am - multiplier\n        // ro, go, bo, ao - offset\n        var ct1 = this._pRegisterCache.getFreeFragmentConstant();\n        var ct2 = this._pRegisterCache.getFreeFragmentConstant();\n        this._pShader.colorTransformIndex = ct1.index * 4;\n        this._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n        this._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n    };\n    /**\n     * Compile the code for the methods.\n     */\n    CompilerBase.prototype.pCompileDependencies = function () {\n        this._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n        //compile the world-space position if required\n        if (this._pShader.globalPosDependencies > 0)\n            this.compileGlobalPositionCode();\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n        if (this._pShader.usesCurves)\n            this.compileCurvesCode();\n        //Calculate the (possibly animated) UV coordinates.\n        if (this._pShader.uvDependencies > 0)\n            this.compileUVCode();\n        if (this._pShader.secondaryUVDependencies > 0)\n            this.compileSecondaryUVCode();\n        if (this._pShader.normalDependencies > 0)\n            this.compileNormalCode();\n        if (this._pShader.viewDirDependencies > 0)\n            this.compileViewDirCode();\n        //collect code from material\n        this._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        //collect code from pass\n        this._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n    };\n    CompilerBase.prototype.compileGlobalPositionCode = function () {\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n        var sceneMatrixReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pRegisterCache.getFreeVertexConstant();\n        this._pShader.sceneMatrixIndex = sceneMatrixReg.index * 4;\n        this._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n        if (this._pShader.usesGlobalPosFragment) {\n            this._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n        }\n    };\n    CompilerBase.prototype.compilePositionCode = function () {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    };\n    CompilerBase.prototype.compileCurvesCode = function () {\n        this._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n        this._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n        var temp = this._pRegisterCache.getFreeFragmentSingleTemp();\n        this._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n            \"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n            \"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n            \"kil \" + temp + \"\\n\";\n    };\n    /**\n     * Calculate the (possibly animated) UV coordinates.\n     */\n    CompilerBase.prototype.compileUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.uvIndex = uvAttributeReg.index;\n        var varying = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n        if (this._pShader.usesUVTransform) {\n            // a, b, 0, tx\n            // c, d, 0, ty\n            var uvTransform1 = this._pRegisterCache.getFreeVertexConstant();\n            var uvTransform2 = this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.uvMatrixIndex = uvTransform1.index * 4;\n            this._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n                \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n                \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n        }\n        else {\n            this._pShader.uvMatrixIndex = -1;\n            this._uvTarget = varying.toString();\n            this._uvSource = uvAttributeReg.toString();\n        }\n    };\n    /**\n     * Provide the secondary UV coordinates.\n     */\n    CompilerBase.prototype.compileSecondaryUVCode = function () {\n        var uvAttributeReg = this._pRegisterCache.getFreeVertexAttribute();\n        this._pShader.secondaryUVIndex = uvAttributeReg.index;\n        this._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n    };\n    /**\n     * Calculate the view direction.\n     */\n    CompilerBase.prototype.compileViewDirCode = function () {\n        var cameraPositionReg = this._pRegisterCache.getFreeVertexConstant();\n        this._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n        this._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n        this._pShader.cameraPositionIndex = cameraPositionReg.index * 4;\n        if (this._pShader.usesTangentSpace) {\n            var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                \"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n        }\n        else {\n            this._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n        }\n        //TODO is this required in all cases? (re: distancemappass)\n        this._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n            \"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n    };\n    /**\n     * Calculate the normal.\n     */\n    CompilerBase.prototype.compileNormalCode = function () {\n        this._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n        this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n        //simple normal aquisition if no tangent space is being used\n        if (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n            this._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            return;\n        }\n        var normalMatrix;\n        if (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n            normalMatrix = new Array(3);\n            normalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n            normalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n            this._pRegisterCache.getFreeVertexConstant();\n            this._pShader.sceneNormalMatrixIndex = normalMatrix[0].index * 4;\n            this._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n        }\n        if (this._pShader.outputsNormals) {\n            if (this._pShader.usesTangentSpace) {\n                // normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n                this._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n            }\n            else {\n                //Compiles the vertex shader code for tangent-space normal maps.\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n                    \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n                    \"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n                    \"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n                    \"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n                this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n                //Compiles the fragment shader code for tangent-space normal maps.\n                var t;\n                var b;\n                var n;\n                t = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(t, 1);\n                b = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(b, 1);\n                n = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addFragmentTempUsages(n, 1);\n                this._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n                    \"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n                    \"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n                    \"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n                //compile custom fragment code for normal calcs\n                this._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n                    \"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n                this._pRegisterCache.removeFragmentTempUsage(b);\n                this._pRegisterCache.removeFragmentTempUsage(t);\n                this._pRegisterCache.removeFragmentTempUsage(n);\n            }\n        }\n        else {\n            // no output, world space is enough\n            this._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n            this._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n                \"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n            if (this._pShader.tangentDependencies > 0) {\n                this._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n                    \"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n            }\n        }\n        if (!this._pShader.usesTangentSpace)\n            this._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    CompilerBase.prototype.pInitRegisterIndices = function () {\n        this._pShader.pInitRegisterIndices();\n        this._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp();\n        this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n        this._pAnimatableAttributes.push(\"va0\");\n        this._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n        this._pVertexCode = \"\";\n        this._pFragmentCode = \"\";\n        this._pPostAnimationFragmentCode = \"\";\n        //create commonly shared constant registers\n        if (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n            this._pShader.commonsDataIndex = this._pSharedRegisters.commons.index * 4;\n        }\n        //Creates the registers to contain the tangent data.\n        //Needs to be created FIRST and in this order (for when using tangent space)\n        if (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n            this._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n            this._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n            if (this._pShader.usesTangentSpace) {\n                this._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n            }\n            this._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n            this._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n        }\n        if (this._pShader.normalDependencies > 0) {\n            this._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n            this._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n            this._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n            this._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n            this._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n        }\n        if (this._pShader.colorDependencies > 0) {\n            this._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n            this._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n            this._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n            this._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n        }\n    };\n    /**\n     * Disposes all resources used by the compiler.\n     */\n    CompilerBase.prototype.dispose = function () {\n        this._pRegisterCache.dispose();\n        this._pRegisterCache = null;\n        this._pSharedRegisters = null;\n    };\n    Object.defineProperty(CompilerBase.prototype, \"vertexCode\", {\n        /**\n         * The generated vertex code.\n         */\n        get: function () {\n            return this._pVertexCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"fragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"postAnimationFragmentCode\", {\n        /**\n         * The generated fragment code.\n         */\n        get: function () {\n            return this._pPostAnimationFragmentCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompilerBase.prototype, \"shadedTarget\", {\n        /**\n         * The register name containing the final shaded colour.\n         */\n        get: function () {\n            return this._pSharedRegisters.shadedTarget.toString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompilerBase;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CompilerBase;\n\n},{\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"awayjs-renderergl/lib/shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\"}],\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar CompilerBase_1 = require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nvar LightingCompiler = (function (_super) {\n    __extends(LightingCompiler, _super);\n    /**\n     * Creates a new CompilerBase object.\n     * @param profile The compatibility profile of the renderer.\n     */\n    function LightingCompiler(elementsClass, lightingPass, shaderLightingObject) {\n        _super.call(this, elementsClass, lightingPass, shaderLightingObject);\n        this._shaderLightingObject = shaderLightingObject;\n        this._lightingPass = lightingPass;\n    }\n    /**\n     * Compile the code for the methods.\n     */\n    LightingCompiler.prototype.pCompileDependencies = function () {\n        _super.prototype.pCompileDependencies.call(this);\n        //compile the lighting code\n        if (this._shaderLightingObject.usesShadows)\n            this.pCompileShadowCode();\n        if (this._shaderLightingObject.usesLights) {\n            this.initLightRegisters();\n            this.compileLightCode();\n        }\n        if (this._shaderLightingObject.usesProbes)\n            this.compileLightProbeCode();\n        this._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n        this._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n    };\n    /**\n     * Provides the code to provide shadow mapping.\n     */\n    LightingCompiler.prototype.pCompileShadowCode = function () {\n        if (this._shaderLightingObject.normalDependencies > 0) {\n            this._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n        }\n        else {\n            this._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n        }\n    };\n    /**\n     * Initializes constant registers to contain light data.\n     */\n    LightingCompiler.prototype.initLightRegisters = function () {\n        // init these first so we're sure they're in sequence\n        var i, len;\n        if (this._dirLightVertexConstants) {\n            len = this._dirLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index * 4;\n            }\n        }\n        if (this._pointLightVertexConstants) {\n            len = this._pointLightVertexConstants.length;\n            for (i = 0; i < len; ++i) {\n                this._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n                if (this._shaderLightingObject.lightVertexConstantIndex == -1)\n                    this._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index * 4;\n            }\n        }\n        len = this._dirLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index * 4;\n        }\n        len = this._pointLightFragmentConstants.length;\n        for (i = 0; i < len; ++i) {\n            this._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index * 4;\n        }\n    };\n    /**\n     * Compiles the shading code for directional and point lights.\n     */\n    LightingCompiler.prototype.compileLightCode = function () {\n        var diffuseColorReg;\n        var specularColorReg;\n        var lightPosReg;\n        var lightDirReg;\n        var vertexRegIndex = 0;\n        var fragmentRegIndex = 0;\n        var addSpec = this._shaderLightingObject.usesLightsForSpecular;\n        var addDiff = this._shaderLightingObject.usesLightsForDiffuse;\n        //compile the shading code for directional lights.\n        for (var i = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n                var lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n                lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n                this._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            else {\n                lightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            }\n            diffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (this._shaderLightingObject.usesTangentSpace)\n                this._pRegisterCache.removeVertexTempUsage(lightDirReg);\n        }\n        vertexRegIndex = 0;\n        fragmentRegIndex = 0;\n        //compile the shading code for point lights\n        for (var i = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n            if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n                lightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n            else\n                lightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            diffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            specularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n            lightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n            this._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n            var lightVarying;\n            if (this._shaderLightingObject.usesTangentSpace) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                var temp = this._pRegisterCache.getFreeVertexVectorTemp();\n                this._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n                    \"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n                    \"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n            }\n            else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n                lightVarying = this._pRegisterCache.getFreeVarying();\n                this._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n            }\n            else {\n                lightVarying = lightDirReg;\n                this._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n            }\n            if (this._shaderLightingObject.usesLightFallOff) {\n                // calculate attenuation\n                this._pFragmentCode +=\n                    \"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" +\n                        \"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" +\n                        \"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" +\n                        \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n            }\n            else {\n                this._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n                    \"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n            }\n            if (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n                this._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index * 4;\n            if (addDiff)\n                this._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n            if (addSpec)\n                this._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n            this._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n        }\n    };\n    /**\n     * Compiles shading code for light probes.\n     */\n    LightingCompiler.prototype.compileLightProbeCode = function () {\n        var weightReg;\n        var weightComponents = [\".x\", \".y\", \".z\", \".w\"];\n        var weightRegisters = new Array();\n        var i;\n        var texReg;\n        var addSpec = this._shaderLightingObject.usesProbesForSpecular;\n        var addDiff = this._shaderLightingObject.usesProbesForDiffuse;\n        if (addDiff)\n            this._shaderLightingObject.lightProbeDiffuseIndices = new Array();\n        if (addSpec)\n            this._shaderLightingObject.lightProbeSpecularIndices = new Array();\n        for (i = 0; i < this._pNumProbeRegisters; ++i) {\n            weightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n            if (i == 0)\n                this._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index * 4;\n        }\n        for (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n            weightReg = weightRegisters[Math.floor(i / 4)].toString() + weightComponents[i % 4];\n            if (addDiff) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n            if (addSpec) {\n                texReg = this._pRegisterCache.getFreeTextureReg();\n                this._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n                this._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n            }\n        }\n    };\n    /**\n     * Reset all the indices to \"unused\".\n     */\n    LightingCompiler.prototype.pInitRegisterIndices = function () {\n        _super.prototype.pInitRegisterIndices.call(this);\n        this._shaderLightingObject.lightVertexConstantIndex = -1;\n        this._shaderLightingObject.lightFragmentConstantIndex = -1;\n        this._shaderLightingObject.probeWeightsIndex = -1;\n        this._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes / 4);\n        //init light data\n        if (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n            this._pointLightVertexConstants = new Array(this._shaderLightingObject.numPointLights);\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 2);\n        }\n        else {\n            this._pointLightFragmentConstants = new Array(this._shaderLightingObject.numPointLights * 3);\n        }\n        if (this._shaderLightingObject.usesTangentSpace) {\n            this._dirLightVertexConstants = new Array(this._shaderLightingObject.numDirectionalLights);\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 2);\n        }\n        else {\n            this._dirLightFragmentConstants = new Array(this._shaderLightingObject.numDirectionalLights * 3);\n        }\n    };\n    return LightingCompiler;\n}(CompilerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = LightingCompiler;\n\n},{\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\"}],\"awayjs-renderergl/lib/shaders\":[function(require,module,exports){\n\"use strict\";\nvar CompilerBase_1 = require(\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\");\nexports.CompilerBase = CompilerBase_1.default;\nvar LightingCompiler_1 = require(\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\");\nexports.LightingCompiler = LightingCompiler_1.default;\nvar LightingShader_1 = require(\"awayjs-renderergl/lib/shaders/LightingShader\");\nexports.LightingShader = LightingShader_1.default;\nvar RegisterPool_1 = require(\"awayjs-renderergl/lib/shaders/RegisterPool\");\nexports.RegisterPool = RegisterPool_1.default;\nvar ShaderBase_1 = require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nexports.ShaderBase = ShaderBase_1.default;\nvar ShaderRegisterCache_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\");\nexports.ShaderRegisterCache = ShaderRegisterCache_1.default;\nvar ShaderRegisterData_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterData\");\nexports.ShaderRegisterData = ShaderRegisterData_1.default;\nvar ShaderRegisterElement_1 = require(\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\");\nexports.ShaderRegisterElement = ShaderRegisterElement_1.default;\n\n},{\"awayjs-renderergl/lib/shaders/LightingShader\":\"awayjs-renderergl/lib/shaders/LightingShader\",\"awayjs-renderergl/lib/shaders/RegisterPool\":\"awayjs-renderergl/lib/shaders/RegisterPool\",\"awayjs-renderergl/lib/shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\":\"awayjs-renderergl/lib/shaders/ShaderRegisterCache\",\"awayjs-renderergl/lib/shaders/ShaderRegisterData\":\"awayjs-renderergl/lib/shaders/ShaderRegisterData\",\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\":\"awayjs-renderergl/lib/shaders/ShaderRegisterElement\",\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\":\"awayjs-renderergl/lib/shaders/compilers/CompilerBase\",\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\":\"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\"}],\"awayjs-renderergl/lib/sort/IEntitySorter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableMergeSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nvar RenderableMergeSort = (function () {\n    function RenderableMergeSort() {\n    }\n    RenderableMergeSort.prototype.sortBlendedRenderables = function (head) {\n        var headB;\n        var fast;\n        var slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortBlendedRenderables(head);\n        headB = this.sortBlendedRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB) {\n            if (head.zIndex < headB.zIndex) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result)\n                result = l;\n            else\n                curr.next = l;\n            curr = l;\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    RenderableMergeSort.prototype.sortOpaqueRenderables = function (head) {\n        var headB;\n        var fast, slow;\n        if (!head || !head.next) {\n            return head;\n        }\n        // split in two sublists\n        slow = head;\n        fast = head.next;\n        while (fast) {\n            fast = fast.next;\n            if (fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        headB = slow.next;\n        slow.next = null;\n        // recurse\n        head = this.sortOpaqueRenderables(head);\n        headB = this.sortOpaqueRenderables(headB);\n        // merge sublists while respecting order\n        var result;\n        var curr;\n        var l;\n        var cmp = 0;\n        if (!head)\n            return headB;\n        if (!headB)\n            return head;\n        while (head && headB && head != null && headB != null) {\n            // first sort per render order id (reduces program3D switches),\n            // then on render object id (reduces setting props),\n            // then on zIndex (reduces overdraw)\n            var aid = head.renderOrderId;\n            var bid = headB.renderOrderId;\n            if (aid == bid) {\n                var ma = head.surfaceID;\n                var mb = headB.surfaceID;\n                if (ma == mb) {\n                    if (head.zIndex < headB.zIndex)\n                        cmp = 1;\n                    else\n                        cmp = -1;\n                }\n                else if (ma > mb) {\n                    cmp = 1;\n                }\n                else {\n                    cmp = -1;\n                }\n            }\n            else if (aid > bid) {\n                cmp = 1;\n            }\n            else {\n                cmp = -1;\n            }\n            if (cmp < 0) {\n                l = head;\n                head = head.next;\n            }\n            else {\n                l = headB;\n                headB = headB.next;\n            }\n            if (!result) {\n                result = l;\n                curr = l;\n            }\n            else {\n                curr.next = l;\n                curr = l;\n            }\n        }\n        if (head)\n            curr.next = head;\n        else if (headB)\n            curr.next = headB;\n        return result;\n    };\n    return RenderableMergeSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableMergeSort;\n\n},{}],\"awayjs-renderergl/lib/sort/RenderableNullSort\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.sort.NullSort\n */\nvar RenderableNullSort = (function () {\n    function RenderableNullSort() {\n    }\n    RenderableNullSort.prototype.sortBlendedRenderables = function (head) {\n        return head;\n    };\n    RenderableNullSort.prototype.sortOpaqueRenderables = function (head) {\n        return head;\n    };\n    return RenderableNullSort;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RenderableNullSort;\n\n},{}],\"awayjs-renderergl/lib/sort\":[function(require,module,exports){\n\"use strict\";\nvar RenderableMergeSort_1 = require(\"awayjs-renderergl/lib/sort/RenderableMergeSort\");\nexports.RenderableMergeSort = RenderableMergeSort_1.default;\nvar RenderableNullSort_1 = require(\"awayjs-renderergl/lib/sort/RenderableNullSort\");\nexports.RenderableNullSort = RenderableNullSort_1.default;\n\n},{\"awayjs-renderergl/lib/sort/RenderableMergeSort\":\"awayjs-renderergl/lib/sort/RenderableMergeSort\",\"awayjs-renderergl/lib/sort/RenderableNullSort\":\"awayjs-renderergl/lib/sort/RenderableNullSort\"}],\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar BasicMaterialPass_1 = require(\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\");\nvar GL_SurfaceBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_BasicMaterialSurface = (function (_super) {\n    __extends(GL_BasicMaterialSurface, _super);\n    function GL_BasicMaterialSurface(material, elementsClass, renderPool) {\n        _super.call(this, material, elementsClass, renderPool);\n        this._material = material;\n        this._pAddPass(this._pass = new BasicMaterialPass_1.default(this, material, elementsClass, this._stage));\n    }\n    GL_BasicMaterialSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._material = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_BasicMaterialSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._material.blendMode != BlendMode_1.default.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n        this._pass.preserveAlpha = this._material.preserveAlpha; //this._pRequiresBlending;\n        this._pass.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._material.blendMode);\n        //this._pass.forceSeparateMVP = false;\n    };\n    return GL_BasicMaterialSurface;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_BasicMaterialSurface;\n\n},{\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\"}],\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_DepthSurface = (function (_super) {\n    __extends(GL_DepthSurface, _super);\n    /**\n     *\n     * @param pool\n     * @param surface\n     * @param elementsClass\n     * @param stage\n     */\n    function GL_DepthSurface(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    GL_DepthSurface.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    GL_DepthSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n    };\n    GL_DepthSurface.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index] = 1.0;\n        data[index + 1] = 255.0;\n        data[index + 2] = 65025.0;\n        data[index + 3] = 16581375.0;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code = \"\";\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        code += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        //codeF += \"mov ft1.w, fc1.w\t\\n\" +\n        //    \"mov ft0.w, fc0.x\t\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        registerCache.removeFragmentTempUsage(temp1);\n        registerCache.removeFragmentTempUsage(temp2);\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_DepthSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            this._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return GL_DepthSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_DepthSurface;\n\n},{\"awayjs-renderergl/lib/shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SurfacePassBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nvar DistanceRender = (function (_super) {\n    __extends(DistanceRender, _super);\n    /**\n     * Creates a new DistanceRender object.\n     *\n     * @param material The material to which this pass belongs.\n     */\n    function DistanceRender(surface, elementsClass, renderPool) {\n        _super.call(this, surface, elementsClass, renderPool);\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._pAddPass(this);\n    }\n    DistanceRender.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    /**\n     * Initializes the unchanging constant data for this material.\n     */\n    DistanceRender.prototype._iInitConstantData = function (shader) {\n        _super.prototype._iInitConstantData.call(this, shader);\n        var index = this._fragmentConstantsIndex;\n        var data = shader.fragmentConstantData;\n        data[index + 4] = 1.0 / 255.0;\n        data[index + 5] = 1.0 / 255.0;\n        data[index + 6] = 1.0 / 255.0;\n        data[index + 7] = 0.0;\n    };\n    DistanceRender.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.projectionDependencies++;\n        shader.viewDirDependencies++;\n        if (shader.alphaThreshold > 0)\n            shader.uvDependencies++;\n        if (shader.viewDirDependencies > 0)\n            shader.globalPosDependencies++;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        var code;\n        var targetReg = sharedRegisters.shadedTarget;\n        var dataReg1 = registerCache.getFreeFragmentConstant();\n        var dataReg2 = registerCache.getFreeFragmentConstant();\n        this._fragmentConstantsIndex = dataReg1.index * 4;\n        var temp1 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp1, 1);\n        var temp2 = registerCache.getFreeFragmentVectorTemp();\n        registerCache.addFragmentTempUsages(temp2, 1);\n        // squared distance to view\n        code = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n            \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n            \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n            \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n        if (this._textureVO && shader.alphaThreshold > 0) {\n            var albedo = registerCache.getFreeFragmentVectorTemp();\n            code += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n            var cutOffReg = registerCache.getFreeFragmentConstant();\n            code += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n                \"kil \" + albedo + \".w\\n\";\n        }\n        code += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n        return code;\n    };\n    /**\n     * @inheritDoc\n     */\n    DistanceRender.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        var f = camera.projection.far;\n        f = 1 / (2 * f * f);\n        // sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n        var index = this._fragmentConstantsIndex;\n        var data = this._shader.fragmentConstantData;\n        data[index] = 1.0 * f;\n        data[index + 1] = 255.0 * f;\n        data[index + 2] = 65025.0 * f;\n        data[index + 3] = 16581375.0 * f;\n        if (this._textureVO && this._shader.alphaThreshold > 0) {\n            this._textureVO.activate(this);\n            data[index + 8] = this._shader.alphaThreshold;\n        }\n    };\n    return DistanceRender;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = DistanceRender;\n\n},{\"awayjs-renderergl/lib/shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\"}],\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ContextGLCompareMode_1 = require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nvar GL_SurfacePassBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nvar ShaderBase_1 = require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar GL_SkyboxSurface = (function (_super) {\n    __extends(GL_SkyboxSurface, _super);\n    function GL_SkyboxSurface(skybox, elementsClass, renderPool) {\n        _super.call(this, skybox, elementsClass, renderPool);\n        this._skybox = skybox;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this._texture = this._shader.getAbstraction(this._skybox.texture);\n        this._pAddPass(this);\n    }\n    GL_SkyboxSurface.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._skybox.texture));\n        this._texture = null;\n        this._skybox = null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._pUpdateRender = function () {\n        _super.prototype._pUpdateRender.call(this);\n        this._pRequiresBlending = (this._surface.blendMode != BlendMode_1.default.NORMAL);\n        this.shader.setBlendMode((this._surface.blendMode == BlendMode_1.default.NORMAL && this._pRequiresBlending) ? BlendMode_1.default.LAYER : this._surface.blendMode);\n    };\n    GL_SkyboxSurface.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        shader.usesPositionFragment = true;\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n    };\n    GL_SkyboxSurface.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        this._texture._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    GL_SkyboxSurface.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        this._stage.context.setDepthTest(false, ContextGLCompareMode_1.default.LESS);\n        this._texture.activate(this);\n    };\n    return GL_SkyboxSurface;\n}(GL_SurfacePassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SkyboxSurface;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-renderergl/lib/shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"awayjs-stagegl/lib/base/ContextGLCompareMode\":undefined}],\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar SurfaceEvent_1 = require(\"awayjs-display/lib/events/SurfaceEvent\");\nvar MaterialBase_1 = require(\"awayjs-display/lib/materials/MaterialBase\");\nvar DefaultMaterialManager_1 = require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nvar PassEvent_1 = require(\"awayjs-renderergl/lib/events/PassEvent\");\n/**\n *\n * @class away.pool.Passes\n */\nvar GL_SurfaceBase = (function (_super) {\n    __extends(GL_SurfaceBase, _super);\n    function GL_SurfaceBase(surface, elementsClass, renderPool) {\n        var _this = this;\n        _super.call(this, surface, renderPool);\n        this.usages = 0;\n        this._forceSeparateMVP = false;\n        this._invalidAnimation = true;\n        this._invalidRender = true;\n        this._invalidImages = true;\n        this._passes = new Array();\n        this._imageIndices = new Object();\n        this._pRequiresBlending = false;\n        this.images = new Array();\n        this.samplers = new Array();\n        this._onInvalidateAnimationDelegate = function (event) { return _this.onInvalidateAnimation(event); };\n        this._onInvalidatePassesDelegate = function (event) { return _this.onInvalidatePasses(event); };\n        this.surfaceID = surface.id;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = renderPool.stage;\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n        this._surface.addEventListener(SurfaceEvent_1.default.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n        this._onPassInvalidateDelegate = function (event) { return _this.onPassInvalidate(event); };\n    }\n    Object.defineProperty(GL_SurfaceBase.prototype, \"requiresBlending\", {\n        /**\n         * Indicates whether or not the renderable requires alpha blending during rendering.\n         */\n        get: function () {\n            return this._pRequiresBlending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"renderOrderId\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._renderOrderId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"passes\", {\n        get: function () {\n            if (this._invalidAnimation)\n                this._updateAnimation();\n            return this._passes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"surface\", {\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfaceBase.prototype, \"numImages\", {\n        get: function () {\n            if (this._invalidImages)\n                this._updateImages();\n            return this._numImages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GL_SurfaceBase.prototype._iIncludeDependencies = function (shader) {\n        this._elementsClass._iIncludeDependencies(shader);\n        shader.alphaThreshold = this._surface.alphaThreshold;\n        shader.useImageRect = this._surface.imageRect;\n        shader.usesCurves = this._surface.curves;\n        if (this._surface instanceof MaterialBase_1.default) {\n            var material = this._surface;\n            shader.useAlphaPremultiplied = material.alphaPremultiplied;\n            shader.useBothSides = material.bothSides;\n            shader.usesUVTransform = material.animateUVs;\n            shader.usesColorTransform = material.useColorTransform;\n        }\n    };\n    GL_SurfaceBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (this._invalidImages)\n            this._updateImages();\n        return this._imageIndices[texture.id][index];\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n            this._passes[i].dispose();\n        }\n        this._passes = null;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        this._invalidRender = true;\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidatePasses = function (event) {\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++)\n            this._passes[i].invalidate();\n        this._invalidAnimation = true;\n        this._invalidImages = true;\n    };\n    /**\n     *\n     */\n    GL_SurfaceBase.prototype.onInvalidateAnimation = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     *\n     * @param surface\n     */\n    GL_SurfaceBase.prototype._updateAnimation = function () {\n        if (this._invalidRender)\n            this._pUpdateRender();\n        this._invalidAnimation = false;\n        var enabledGPUAnimation = this._getEnabledGPUAnimation();\n        var renderOrderId = 0;\n        var mult = 1;\n        var shader;\n        var len = this._passes.length;\n        for (var i = 0; i < len; i++) {\n            shader = this._passes[i].shader;\n            if (shader.usesAnimation != enabledGPUAnimation) {\n                shader.usesAnimation = enabledGPUAnimation;\n                shader.invalidateProgram();\n            }\n            renderOrderId += shader.programData.id * mult;\n            mult *= 1000;\n        }\n        this._renderOrderId = renderOrderId;\n    };\n    GL_SurfaceBase.prototype._updateImages = function () {\n        this._invalidImages = false;\n        var numTextures = this._surface.getNumTextures();\n        var texture;\n        var numImages;\n        var images;\n        var image;\n        var sampler;\n        var index = 0;\n        for (var i = 0; i < numTextures; i++) {\n            texture = this._surface.getTextureAt(i);\n            numImages = texture.getNumImages();\n            images = this._imageIndices[texture.id] = new Array();\n            for (var j = 0; j < numImages; j++) {\n                image = texture.getImageAt(j) || (this._surface.style ? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultImage2D();\n                this.images[index] = this._stage.getAbstraction(image);\n                sampler = texture.getSamplerAt(j) || (this._surface.style ? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager_1.default.getDefaultSampler();\n                this.samplers[index] = this._stage.getAbstraction(sampler);\n                images[j] = index++;\n            }\n        }\n        this._numImages = index;\n    };\n    /**\n     * Performs any processing that needs to occur before any of its passes are used.\n     *\n     * @private\n     */\n    GL_SurfaceBase.prototype._pUpdateRender = function () {\n        this._invalidRender = false;\n        //overrride to update shader object properties\n    };\n    /**\n     * Removes a pass from the surface.\n     * @param pass The pass to be removed.\n     */\n    GL_SurfaceBase.prototype._pRemovePass = function (pass) {\n        pass.removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.splice(this._passes.indexOf(pass), 1);\n    };\n    /**\n     * Removes all passes from the surface\n     */\n    GL_SurfaceBase.prototype._pClearPasses = function () {\n        var len = this._passes.length;\n        for (var i = 0; i < len; ++i)\n            this._passes[i].removeEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n        this._passes.length = 0;\n    };\n    /**\n     * Adds a pass to the surface\n     * @param pass\n     */\n    GL_SurfaceBase.prototype._pAddPass = function (pass) {\n        this._passes.push(pass);\n        pass.addEventListener(PassEvent_1.default.INVALIDATE, this._onPassInvalidateDelegate);\n    };\n    /**\n     * Listener for when a pass's shader code changes. It recalculates the render order id.\n     */\n    GL_SurfaceBase.prototype.onPassInvalidate = function (event) {\n        this._invalidAnimation = true;\n    };\n    /**\n     * test if animation will be able to run on gpu BEFORE compiling materials\n     * test if the shader objects supports animating the animation set in the vertex shader\n     * if any object using this material fails to support accelerated animations for any of the shader objects,\n     * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n     */\n    GL_SurfaceBase.prototype._getEnabledGPUAnimation = function () {\n        if (this._surface.animationSet) {\n            this._surface.animationSet.resetGPUCompatibility();\n            var owners = this._surface.iOwners;\n            var numOwners = owners.length;\n            var len = this._passes.length;\n            for (var i = 0; i < len; i++)\n                for (var j = 0; j < numOwners; j++)\n                    if (owners[j].animator)\n                        owners[j].animator.testGPUCompatibility(this._passes[i].shader);\n            return !this._surface.animationSet.usesCPU;\n        }\n        return false;\n    };\n    return GL_SurfaceBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfaceBase;\n\n},{\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-display/lib/events/SurfaceEvent\":undefined,\"awayjs-display/lib/managers/DefaultMaterialManager\":undefined,\"awayjs-display/lib/materials/MaterialBase\":undefined,\"awayjs-renderergl/lib/events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\"}],\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PassEvent_1 = require(\"awayjs-renderergl/lib/events/PassEvent\");\nvar GL_SurfaceBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar GL_SurfacePassBase = (function (_super) {\n    __extends(GL_SurfacePassBase, _super);\n    function GL_SurfacePassBase() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GL_SurfacePassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    GL_SurfacePassBase.prototype.invalidate = function () {\n        this._shader.invalidateShader();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    GL_SurfacePassBase.prototype.dispose = function () {\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    GL_SurfacePassBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        this._shader._iRender(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    GL_SurfacePassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    GL_SurfacePassBase.prototype._iInitConstantData = function (shader) {\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    GL_SurfacePassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return GL_SurfacePassBase;\n}(GL_SurfaceBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SurfacePassBase;\n\n},{\"awayjs-renderergl/lib/events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\",\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\"}],\"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/SurfacePool\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.pool.SurfacePool\n */\nvar SurfacePool = (function () {\n    /**\n     * //TODO\n     *\n     * @param surfaceClassGL\n     */\n    function SurfacePool(elementsClass, stage, surfaceClassGL) {\n        if (surfaceClassGL === void 0) { surfaceClassGL = null; }\n        this._abstractionPool = new Object();\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n        this._surfaceClassGL = surfaceClassGL;\n    }\n    Object.defineProperty(SurfacePool.prototype, \"stage\", {\n        get: function () {\n            return this._stage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     * @returns IElements\n     */\n    SurfacePool.prototype.getAbstraction = function (surface) {\n        return (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param elementsOwner\n     */\n    SurfacePool.prototype.clearAbstraction = function (surface) {\n        delete this._abstractionPool[surface.id];\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    SurfacePool.registerAbstraction = function (surfaceClassGL, assetClass) {\n        SurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n    };\n    SurfacePool._abstractionClassPool = new Object();\n    return SurfacePool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SurfacePool;\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar ShaderBase_1 = require(\"awayjs-renderergl/lib/shaders/ShaderBase\");\nvar PassBase_1 = require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterialPass = (function (_super) {\n    __extends(BasicMaterialPass, _super);\n    function BasicMaterialPass(render, surface, elementsClass, stage) {\n        _super.call(this, render, surface, elementsClass, stage);\n        this._diffuseR = 1;\n        this._diffuseG = 1;\n        this._diffuseB = 1;\n        this._diffuseA = 1;\n        this._shader = new ShaderBase_1.default(elementsClass, this, this._stage);\n        this.invalidate();\n    }\n    BasicMaterialPass.prototype._iIncludeDependencies = function (shader) {\n        _super.prototype._iIncludeDependencies.call(this, shader);\n        if (this._textureVO != null)\n            shader.uvDependencies++;\n    };\n    BasicMaterialPass.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._textureVO = this._surface.getTextureAt(0) ? this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n    };\n    BasicMaterialPass.prototype.dispose = function () {\n        if (this._textureVO) {\n            this._textureVO.onClear(new AssetEvent_1.default(AssetEvent_1.default.CLEAR, this._surface.getTextureAt(0)));\n            this._textureVO = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iGetFragmentCode = function (shader, regCache, sharedReg) {\n        var code = \"\";\n        var alphaReg;\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n        var targetReg = sharedReg.shadedTarget;\n        if (this._textureVO != null) {\n            code += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n            if (shader.alphaThreshold > 0) {\n                var cutOffReg = regCache.getFreeFragmentConstant();\n                this._fragmentConstantsIndex = cutOffReg.index * 4;\n                code += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n            }\n        }\n        else if (shader.colorBufferIndex != -1) {\n            code += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n        }\n        else {\n            var diffuseInputReg = regCache.getFreeFragmentConstant();\n            this._fragmentConstantsIndex = diffuseInputReg.index * 4;\n            code += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n        }\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n        return code;\n    };\n    BasicMaterialPass.prototype._iRender = function (renderable, camera, viewProjection) {\n        _super.prototype._iRender.call(this, renderable, camera, viewProjection);\n        if (this._textureVO != null)\n            this._textureVO._setRenderState(renderable);\n    };\n    /**\n     * @inheritDoc\n     */\n    BasicMaterialPass.prototype._iActivate = function (camera) {\n        _super.prototype._iActivate.call(this, camera);\n        if (this._textureVO != null) {\n            this._textureVO.activate(this._render);\n            if (this._shader.alphaThreshold > 0)\n                this._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n        }\n        else if (this._shader.colorBufferIndex == -1) {\n            var index = this._fragmentConstantsIndex;\n            var data = this._shader.fragmentConstantData;\n            data[index] = this._diffuseR;\n            data[index + 1] = this._diffuseG;\n            data[index + 2] = this._diffuseB;\n            data[index + 3] = this._diffuseA;\n        }\n    };\n    return BasicMaterialPass;\n}(PassBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BasicMaterialPass;\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-renderergl/lib/shaders/ShaderBase\":\"awayjs-renderergl/lib/shaders/ShaderBase\",\"awayjs-renderergl/lib/surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\"}],\"awayjs-renderergl/lib/surfaces/passes/ILightingPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/IPass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-renderergl/lib/surfaces/passes/PassBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar PassEvent_1 = require(\"awayjs-renderergl/lib/events/PassEvent\");\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nvar PassBase = (function (_super) {\n    __extends(PassBase, _super);\n    /**\n     * Creates a new PassBase object.\n     */\n    function PassBase(render, surface, elementsClass, stage) {\n        _super.call(this);\n        this._preserveAlpha = true;\n        this._forceSeparateMVP = false;\n        this._render = render;\n        this._surface = surface;\n        this._elementsClass = elementsClass;\n        this._stage = stage;\n    }\n    Object.defineProperty(PassBase.prototype, \"shader\", {\n        get: function () {\n            return this._shader;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"animationSet\", {\n        get: function () {\n            return this._surface.animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PassBase.prototype, \"forceSeparateMVP\", {\n        /**\n         * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n         * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n         * projection code.\n         */\n        get: function () {\n            return this._forceSeparateMVP;\n        },\n        set: function (value) {\n            if (this._forceSeparateMVP == value)\n                return;\n            this._forceSeparateMVP = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PassBase.prototype.getImageIndex = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return this._render.getImageIndex(texture, index);\n    };\n    /**\n     * Marks the shader program as invalid, so it will be recompiled before the next render.\n     */\n    PassBase.prototype.invalidate = function () {\n        this._shader.invalidateShader();\n        this.dispatchEvent(new PassEvent_1.default(PassEvent_1.default.INVALIDATE, this));\n    };\n    /**\n     * Cleans up any resources used by the current object.\n     * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n     */\n    PassBase.prototype.dispose = function () {\n        this._render = null;\n        this._surface = null;\n        this._elementsClass = null;\n        this._stage = null;\n        if (this._shader) {\n            this._shader.dispose();\n            this._shader = null;\n        }\n    };\n    /**\n     * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n     * @param pass The pass used to render the renderable.\n     * @param renderable The IRenderable object to draw.\n     * @param stage The Stage object used for rendering.\n     * @param entityCollector The EntityCollector object that contains the visible scene data.\n     * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n     * camera.viewProjection as it includes the scaling factors when rendering to textures.\n     *\n     * @internal\n     */\n    PassBase.prototype._iRender = function (renderable, camera, viewProjection) {\n        this._shader._iRender(renderable, camera, viewProjection);\n    };\n    /**\n     * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n     * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n     * @param stage The Stage object which is currently used for rendering.\n     * @param camera The camera from which the scene is viewed.\n     * @private\n     */\n    PassBase.prototype._iActivate = function (camera) {\n        this._shader._iActivate(camera);\n    };\n    /**\n     * Clears the render state for the pass. This needs to be called before activating another pass.\n     * @param stage The Stage used for rendering\n     *\n     * @private\n     */\n    PassBase.prototype._iDeactivate = function () {\n        this._shader._iDeactivate();\n    };\n    PassBase.prototype._iIncludeDependencies = function (shader) {\n        this._render._iIncludeDependencies(shader);\n        if (this._forceSeparateMVP)\n            shader.globalPosDependencies++;\n    };\n    PassBase.prototype._iInitConstantData = function (shader) {\n    };\n    PassBase.prototype._iGetPreLightingVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetPreLightingFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalVertexCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    PassBase.prototype._iGetNormalFragmentCode = function (shader, registerCache, sharedRegisters) {\n        return \"\";\n    };\n    return PassBase;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PassBase;\n\n},{\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-renderergl/lib/events/PassEvent\":\"awayjs-renderergl/lib/events/PassEvent\"}],\"awayjs-renderergl/lib/surfaces\":[function(require,module,exports){\n\"use strict\";\nvar BasicMaterialPass_1 = require(\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\");\nexports.BasicMaterialPass = BasicMaterialPass_1.default;\nvar PassBase_1 = require(\"awayjs-renderergl/lib/surfaces/passes/PassBase\");\nexports.PassBase = PassBase_1.default;\nvar GL_BasicMaterialSurface_1 = require(\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\");\nexports.GL_BasicMaterialSurface = GL_BasicMaterialSurface_1.default;\nvar GL_DepthSurface_1 = require(\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\");\nexports.GL_DepthSurface = GL_DepthSurface_1.default;\nvar GL_DistanceSurface_1 = require(\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\");\nexports.GL_DistanceSurface = GL_DistanceSurface_1.default;\nvar GL_SkyboxSurface_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\");\nexports.GL_SkyboxSurface = GL_SkyboxSurface_1.default;\nvar GL_SurfaceBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\");\nexports.GL_SurfaceBase = GL_SurfaceBase_1.default;\nvar GL_SurfacePassBase_1 = require(\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\");\nexports.GL_SurfacePassBase = GL_SurfacePassBase_1.default;\nvar SurfacePool_1 = require(\"awayjs-renderergl/lib/surfaces/SurfacePool\");\nexports.SurfacePool = SurfacePool_1.default;\n\n},{\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\":\"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\",\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\":\"awayjs-renderergl/lib/surfaces/GL_DepthSurface\",\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\":\"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\",\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\":\"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\",\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\",\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\":\"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\",\"awayjs-renderergl/lib/surfaces/SurfacePool\":\"awayjs-renderergl/lib/surfaces/SurfacePool\",\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\":\"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\",\"awayjs-renderergl/lib/surfaces/passes/PassBase\":\"awayjs-renderergl/lib/surfaces/passes/PassBase\"}],\"awayjs-renderergl/lib/textures/GL_Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MappingMode_1 = require(\"awayjs-display/lib/textures/MappingMode\");\nvar GL_TextureBase_1 = require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nvar GL_Single2DTexture = (function (_super) {\n    __extends(GL_Single2DTexture, _super);\n    function GL_Single2DTexture(single2DTexture, shader) {\n        _super.call(this, single2DTexture, shader);\n        this._single2DTexture = single2DTexture;\n    }\n    GL_Single2DTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._single2DTexture = null;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The uv coordinate vector with which to sample the texture map.\n     * @returns {string}\n     * @private\n     */\n    GL_Single2DTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var code = \"\";\n        var wrap = \"wrap\";\n        var format = \"\"; //this.getFormatString(this._single2DTexture.image2D);\n        var filter = \"linear,miplinear\";\n        var temp;\n        //modify depending on mapping mode\n        if (this._single2DTexture.mappingMode == MappingMode_1.default.RADIAL_GRADIENT) {\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n            code += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n            code += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n            code += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n            inputReg = temp;\n        }\n        //handles texture atlasing\n        if (this._shader.useImageRect) {\n            var samplerReg = regCache.getFreeFragmentConstant();\n            this._samplerIndex = samplerReg.index * 4;\n            temp = regCache.getFreeFragmentVectorTemp();\n            code += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n            code += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n            inputReg = temp;\n        }\n        this._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        code += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n        return code;\n    };\n    GL_Single2DTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        sampler.activate(this._textureIndex);\n        var image = render.images[this._imageIndex];\n        image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    GL_Single2DTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        var image = renderable.images[this._imageIndex];\n        if (image)\n            image.activate(this._textureIndex, sampler._sampler.mipmap);\n        if (this._shader.useImageRect && sampler) {\n            var index = this._samplerIndex;\n            var data = this._shader.fragmentConstantData;\n            if (!sampler._sampler.imageRect) {\n                data[index] = 1;\n                data[index + 1] = 1;\n                data[index + 2] = 0;\n                data[index + 3] = 0;\n            }\n            else {\n                data[index] = sampler._sampler.imageRect.width;\n                data[index + 1] = sampler._sampler.imageRect.height;\n                data[index + 2] = sampler._sampler.imageRect.x;\n                data[index + 3] = sampler._sampler.imageRect.y;\n            }\n        }\n    };\n    return GL_Single2DTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Single2DTexture;\n\n},{\"awayjs-display/lib/textures/MappingMode\":undefined,\"awayjs-renderergl/lib/textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_TextureBase_1 = require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\n/**\n *\n * @class away.pool.TextureDataBase\n */\nvar GL_SingleCubeTexture = (function (_super) {\n    __extends(GL_SingleCubeTexture, _super);\n    function GL_SingleCubeTexture(singleCubeTexture, shader) {\n        _super.call(this, singleCubeTexture, shader);\n        this._singleCubeTexture = singleCubeTexture;\n    }\n    GL_SingleCubeTexture.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._singleCubeTexture = null;\n    };\n    GL_SingleCubeTexture.prototype._iIncludeDependencies = function (includeInput) {\n        if (includeInput === void 0) { includeInput = true; }\n        if (includeInput)\n            this._shader.usesPositionFragment = true;\n    };\n    /**\n     *\n     * @param shader\n     * @param regCache\n     * @param targetReg The register in which to store the sampled colour.\n     * @param uvReg The direction vector with which to sample the cube map.\n     * @returns {string}\n     * @private\n     */\n    GL_SingleCubeTexture.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        var format = \"\"; //this.getFormatString(this._singleCubeTexture.imageCube);\n        var filter = \"linear,miplinear\";\n        this._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n        var textureReg = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n        this._textureIndex = textureReg.index;\n        return \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n    };\n    GL_SingleCubeTexture.prototype.activate = function (render) {\n        var sampler = render.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (render.images[this._imageIndex])\n            render.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    GL_SingleCubeTexture.prototype._setRenderState = function (renderable) {\n        var sampler = renderable.samplers[this._imageIndex];\n        if (sampler)\n            sampler.activate(this._textureIndex);\n        if (renderable.images[this._imageIndex] && sampler)\n            renderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n    };\n    return GL_SingleCubeTexture;\n}(GL_TextureBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SingleCubeTexture;\n\n},{\"awayjs-renderergl/lib/textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/textures/GL_TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar ContextGLTextureFormat_1 = require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nvar GL_TextureBase = (function (_super) {\n    __extends(GL_TextureBase, _super);\n    function GL_TextureBase(texture, shader) {\n        _super.call(this, texture, shader);\n        this._texture = texture;\n        this._shader = shader;\n        this._stage = shader._stage;\n    }\n    /**\n     *\n     */\n    GL_TextureBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._texture = null;\n        this._shader = null;\n        this._stage = null;\n    };\n    GL_TextureBase.prototype._iGetFragmentCode = function (targetReg, regCache, sharedReg, inputReg) {\n        if (inputReg === void 0) { inputReg = null; }\n        throw new AbstractMethodError_1.default();\n    };\n    GL_TextureBase.prototype._setRenderState = function (renderable) {\n        //overidden for state logic\n    };\n    GL_TextureBase.prototype.activate = function (render) {\n        //overridden for activation logic\n    };\n    GL_TextureBase.prototype.getTextureReg = function (imageIndex, regCache, sharedReg) {\n        var index = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n        if (index == -1) {\n            var textureReg = regCache.getFreeTextureReg();\n            sharedReg.textures.push(textureReg);\n            this._shader.imageIndices.push(imageIndex);\n            return textureReg;\n        }\n        return sharedReg.textures[index];\n    };\n    GL_TextureBase.prototype.getFormatString = function (image) {\n        switch (image.format) {\n            case ContextGLTextureFormat_1.default.COMPRESSED:\n                return \"dxt1,\";\n            case ContextGLTextureFormat_1.default.COMPRESSED_ALPHA:\n                return \"dxt5,\";\n            default:\n                return \"\";\n        }\n    };\n    return GL_TextureBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_TextureBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined,\"awayjs-stagegl/lib/base/ContextGLTextureFormat\":undefined}],\"awayjs-renderergl/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar GL_Single2DTexture_1 = require(\"awayjs-renderergl/lib/textures/GL_Single2DTexture\");\nexports.GL_Single2DTexture = GL_Single2DTexture_1.default;\nvar GL_SingleCubeTexture_1 = require(\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\");\nexports.GL_SingleCubeTexture = GL_SingleCubeTexture_1.default;\nvar GL_TextureBase_1 = require(\"awayjs-renderergl/lib/textures/GL_TextureBase\");\nexports.GL_TextureBase = GL_TextureBase_1.default;\n\n},{\"awayjs-renderergl/lib/textures/GL_Single2DTexture\":\"awayjs-renderergl/lib/textures/GL_Single2DTexture\",\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\":\"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\",\"awayjs-renderergl/lib/textures/GL_TextureBase\":\"awayjs-renderergl/lib/textures/GL_TextureBase\"}],\"awayjs-renderergl/lib/tools/commands/Merge\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\nvar Sprite_1 = require(\"awayjs-display/lib/display/Sprite\");\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nvar Merge = (function () {\n    /**\n     * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n     * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n     * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n     * If true, only receiver geometry and resulting sprite are kept in  memory.\n     * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n     */\n    function Merge(keepMaterial, disposeSources, objectSpace) {\n        if (keepMaterial === void 0) { keepMaterial = false; }\n        if (disposeSources === void 0) { disposeSources = false; }\n        if (objectSpace === void 0) { objectSpace = false; }\n        this._keepMaterial = keepMaterial;\n        this._disposeSources = disposeSources;\n        this._objectSpace = objectSpace;\n    }\n    Object.defineProperty(Merge.prototype, \"disposeSources\", {\n        get: function () {\n            return this._disposeSources;\n        },\n        /**\n         * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._disposeSources = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"keepMaterial\", {\n        get: function () {\n            return this._keepMaterial;\n        },\n        /**\n         * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n         */\n        set: function (b) {\n            this._keepMaterial = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Merge.prototype, \"objectSpace\", {\n        get: function () {\n            return this._objectSpace;\n        },\n        /**\n         * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n         */\n        set: function (b) {\n            this._objectSpace = b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n     *\n     * @param    receiver           The Sprite to receive the merged contents of the container.\n     * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n     *\n     * @return The merged Sprite instance.\n     */\n    Merge.prototype.applyToContainer = function (receiver, objectContainer) {\n        this.reset();\n        //collect container sprites\n        this.parseContainer(receiver, objectContainer);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of the sprites.\n     * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n     */\n    Merge.prototype.applyToSpritees = function (receiver, sprites) {\n        this.reset();\n        if (!sprites.length)\n            return;\n        //collect sprites in vector\n        for (var i = 0; i < sprites.length; i++)\n            if (sprites[i] != receiver)\n                this.collect(sprites[i], this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    /**\n     *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n     *\n     * @param    receiver    The Sprite to receive the merged contents of both sprites.\n     * @param    sprite        The Sprite to be merged with the receiver sprite\n     */\n    Merge.prototype.apply = function (receiver, sprite) {\n        this.reset();\n        //collect sprite\n        this.collect(sprite, this._disposeSources);\n        //collect receiver\n        this.collect(receiver, false);\n        //merge to receiver\n        this.merge(receiver, this._disposeSources);\n    };\n    Merge.prototype.reset = function () {\n        this._toDispose = new Array();\n        this._graphicVOs = new Array();\n    };\n    Merge.prototype.merge = function (destSprite, dispose) {\n        var i;\n        //var oldGraphics:Graphics;\n        var destGraphics;\n        var useSubMaterials;\n        //oldGraphics = destSprite.graphics.clone();\n        destGraphics = destSprite.graphics;\n        // Only apply materials directly to sub-sprites if necessary,\n        // i.e. if there is more than one material available.\n        useSubMaterials = (this._graphicVOs.length > 1);\n        for (i = 0; i < this._graphicVOs.length; i++) {\n            var elements = new TriangleElements_1.default(new AttributesBuffer_1.default());\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            var data = this._graphicVOs[i];\n            elements.setIndices(data.indices);\n            elements.setPositions(data.vertices);\n            elements.setNormals(data.normals);\n            elements.setTangents(data.tangents);\n            elements.setUVs(data.uvs);\n            destGraphics.addGraphic(elements);\n            if (this._keepMaterial && useSubMaterials)\n                destSprite.graphics[i].material = data.material;\n        }\n        if (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n            destSprite.material = this._graphicVOs[0].material;\n        if (dispose) {\n            var len = this._toDispose.length;\n            for (var i; i < len; i++)\n                this._toDispose[i].dispose();\n            ;\n        }\n        this._toDispose = null;\n    };\n    Merge.prototype.collect = function (sprite, dispose) {\n        var subIdx;\n        var calc;\n        for (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n            var i;\n            var len;\n            var iIdx /*uint*/, vIdx /*uint*/, nIdx /*uint*/, tIdx /*uint*/, uIdx;\n            var indexOffset;\n            var elements;\n            var vo;\n            var vertices;\n            var normals;\n            var tangents;\n            var ind, pd, nd, td, ud;\n            elements = sprite.graphics.getGraphicAt(subIdx).elements;\n            pd = elements.positions.get(elements.numVertices);\n            nd = elements.normals.get(elements.numVertices);\n            td = elements.tangents.get(elements.numVertices);\n            ud = elements.uvs.get(elements.numVertices);\n            // Get (or create) a VO for this material\n            vo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n            // Vertices and normals are copied to temporary vectors, to be transformed\n            // before concatenated onto those of the data. This is unnecessary if no\n            // transformation will be performed, i.e. for object space merging.\n            vertices = (this._objectSpace) ? vo.vertices : new Array();\n            normals = (this._objectSpace) ? vo.normals : new Array();\n            tangents = (this._objectSpace) ? vo.tangents : new Array();\n            // Copy over vertex attributes\n            vIdx = vertices.length;\n            nIdx = normals.length;\n            tIdx = tangents.length;\n            uIdx = vo.uvs.length;\n            len = elements.numVertices;\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                // Position\n                vertices[vIdx++] = pd[calc];\n                vertices[vIdx++] = pd[calc + 1];\n                vertices[vIdx++] = pd[calc + 2];\n                // Normal\n                normals[nIdx++] = nd[calc];\n                normals[nIdx++] = nd[calc + 1];\n                normals[nIdx++] = nd[calc + 2];\n                // Tangent\n                tangents[tIdx++] = td[calc];\n                tangents[tIdx++] = td[calc + 1];\n                tangents[tIdx++] = td[calc + 2];\n                // UV\n                vo.uvs[uIdx++] = ud[i * 2];\n                vo.uvs[uIdx++] = ud[i * 2 + 1];\n            }\n            // Copy over triangle indices\n            indexOffset = (!this._objectSpace) ? vo.vertices.length / 3 : 0;\n            iIdx = vo.indices.length;\n            len = elements.numElements;\n            ind = elements.indices.get(len);\n            for (i = 0; i < len; i++) {\n                calc = i * 3;\n                vo.indices[iIdx++] = ind[calc] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n                vo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n            }\n            if (!this._objectSpace) {\n                sprite.sceneTransform.transformVectors(vertices, vertices);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n                Matrix3DUtils_1.default.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n                // Copy vertex data from temporary (transformed) vectors\n                vIdx = vo.vertices.length;\n                nIdx = vo.normals.length;\n                tIdx = vo.tangents.length;\n                len = vertices.length;\n                for (i = 0; i < len; i++) {\n                    vo.vertices[vIdx++] = vertices[i];\n                    vo.normals[nIdx++] = normals[i];\n                    vo.tangents[tIdx++] = tangents[i];\n                }\n            }\n        }\n        if (dispose)\n            this._toDispose.push(sprite);\n    };\n    Merge.prototype.getGraphicData = function (material) {\n        var data;\n        if (this._keepMaterial) {\n            var i;\n            var len;\n            len = this._graphicVOs.length;\n            for (i = 0; i < len; i++) {\n                if (this._graphicVOs[i].material == material) {\n                    data = this._graphicVOs[i];\n                    break;\n                }\n            }\n        }\n        else if (this._graphicVOs.length) {\n            // If materials are not to be kept, all data can be\n            // put into a single VO, so return that one.\n            data = this._graphicVOs[0];\n        }\n        // No data (for this material) found, create new.\n        if (!data) {\n            data = new GraphicVO();\n            data.vertices = new Array();\n            data.normals = new Array();\n            data.tangents = new Array();\n            data.uvs = new Array();\n            data.indices = new Array();\n            data.material = material;\n            this._graphicVOs.push(data);\n        }\n        return data;\n    };\n    Merge.prototype.parseContainer = function (receiver, object) {\n        var child;\n        var i;\n        if (object instanceof Sprite_1.default && object != receiver)\n            this.collect(object, this._disposeSources);\n        for (i = 0; i < object.numChildren; ++i) {\n            child = object.getChildAt(i);\n            this.parseContainer(receiver, child);\n        }\n    };\n    return Merge;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Merge;\nvar GraphicVO = (function () {\n    function GraphicVO() {\n    }\n    return GraphicVO;\n}());\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-display/lib/display/Sprite\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\":[function(require,module,exports){\n\"use strict\";\n/**\n * ...\n */\nvar ParticleGraphicsTransform = (function () {\n    function ParticleGraphicsTransform() {\n    }\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"vertexTransform\", {\n        get: function () {\n            return this._defaultVertexTransform;\n        },\n        set: function (value) {\n            this._defaultVertexTransform = value;\n            this._defaultInvVertexTransform = value.clone();\n            this._defaultInvVertexTransform.invert();\n            this._defaultInvVertexTransform.transpose();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"UVTransform\", {\n        get: function () {\n            return this._defaultUVTransform;\n        },\n        set: function (value) {\n            this._defaultUVTransform = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ParticleGraphicsTransform.prototype, \"invVertexTransform\", {\n        get: function () {\n            return this._defaultInvVertexTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ParticleGraphicsTransform;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsTransform;\n\n},{}],\"awayjs-renderergl/lib/tools\":[function(require,module,exports){\n\"use strict\";\nvar Merge_1 = require(\"awayjs-renderergl/lib/tools/commands/Merge\");\nexports.Merge = Merge_1.default;\nvar ParticleGraphicsTransform_1 = require(\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\");\nexports.ParticleGraphicsTransform = ParticleGraphicsTransform_1.default;\n\n},{\"awayjs-renderergl/lib/tools/commands/Merge\":\"awayjs-renderergl/lib/tools/commands/Merge\",\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\":\"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\"}],\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ParticleData_1 = require(\"awayjs-display/lib/animators/data/ParticleData\");\nvar TriangleElements_1 = require(\"awayjs-display/lib/graphics/TriangleElements\");\n/**\n * ...\n */\nvar ParticleGraphicsHelper = (function () {\n    function ParticleGraphicsHelper() {\n    }\n    ParticleGraphicsHelper.generateGraphics = function (output, graphicsArray, transforms) {\n        if (transforms === void 0) { transforms = null; }\n        var indicesVector = new Array();\n        var positionsVector = new Array();\n        var normalsVector = new Array();\n        var tangentsVector = new Array();\n        var uvsVector = new Array();\n        var vertexCounters = new Array();\n        var particles = new Array();\n        var elementsArray = new Array();\n        var numParticles = graphicsArray.length;\n        var sourceGraphics;\n        var sourceElements;\n        var numGraphics;\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var uvs;\n        var vertexCounter;\n        var elements;\n        var i;\n        var j;\n        var sub2SubMap = new Array();\n        var tempVertex = new Vector3D_1.default;\n        var tempNormal = new Vector3D_1.default;\n        var tempTangents = new Vector3D_1.default;\n        var tempUV = new Point_1.default;\n        for (i = 0; i < numParticles; i++) {\n            sourceGraphics = graphicsArray[i];\n            numGraphics = sourceGraphics.count;\n            for (var srcIndex = 0; srcIndex < numGraphics; srcIndex++) {\n                //create a different particle subgeometry group for each source subgeometry in a particle.\n                if (sub2SubMap.length <= srcIndex) {\n                    sub2SubMap.push(elementsArray.length);\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                sourceElements = sourceGraphics.getGraphicAt(srcIndex).elements;\n                //add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n                if (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n                    //update submap and add new subgeom vectors\n                    sub2SubMap[srcIndex] = elementsArray.length;\n                    indicesVector.push(new Array() /*uint*/);\n                    positionsVector.push(new Array());\n                    normalsVector.push(new Array());\n                    tangentsVector.push(new Array());\n                    uvsVector.push(new Array());\n                    elementsArray.push(new TriangleElements_1.default(new AttributesBuffer_1.default()));\n                    vertexCounters.push(0);\n                }\n                j = sub2SubMap[srcIndex];\n                //select the correct vector\n                indices = indicesVector[j];\n                positions = positionsVector[j];\n                normals = normalsVector[j];\n                tangents = tangentsVector[j];\n                uvs = uvsVector[j];\n                vertexCounter = vertexCounters[j];\n                elements = elementsArray[j];\n                var particleData = new ParticleData_1.default();\n                particleData.numVertices = sourceElements.numVertices;\n                particleData.startVertexIndex = vertexCounter;\n                particleData.particleIndex = i;\n                particleData.elements = elements;\n                particles.push(particleData);\n                vertexCounters[j] += sourceElements.numVertices;\n                var k;\n                var tempLen;\n                var compact = sourceElements;\n                var product;\n                var sourcePositions;\n                var sourceNormals;\n                var sourceTangents;\n                var sourceUVs;\n                if (compact) {\n                    tempLen = compact.numVertices;\n                    sourcePositions = compact.positions.get(tempLen);\n                    sourceNormals = compact.normals.get(tempLen);\n                    sourceTangents = compact.tangents.get(tempLen);\n                    sourceUVs = compact.uvs.get(tempLen);\n                    if (transforms) {\n                        var particleGraphicsTransform = transforms[i];\n                        var vertexTransform = particleGraphicsTransform.vertexTransform;\n                        var invVertexTransform = particleGraphicsTransform.invVertexTransform;\n                        var UVTransform = particleGraphicsTransform.UVTransform;\n                        for (k = 0; k < tempLen; k++) {\n                            /*\n                             * 0 - 2: vertex position X, Y, Z\n                             * 3 - 5: normal X, Y, Z\n                             * 6 - 8: tangent X, Y, Z\n                             * 9 - 10: U V\n                             * 11 - 12: Secondary U V*/\n                            product = k * 3;\n                            tempVertex.x = sourcePositions[product];\n                            tempVertex.y = sourcePositions[product + 1];\n                            tempVertex.z = sourcePositions[product + 2];\n                            tempNormal.x = sourceNormals[product];\n                            tempNormal.y = sourceNormals[product + 1];\n                            tempNormal.z = sourceNormals[product + 2];\n                            tempTangents.x = sourceTangents[product];\n                            tempTangents.y = sourceTangents[product + 1];\n                            tempTangents.z = sourceTangents[product + 2];\n                            tempUV.x = sourceUVs[k * 2];\n                            tempUV.y = sourceUVs[k * 2 + 1];\n                            if (vertexTransform) {\n                                tempVertex = vertexTransform.transformVector(tempVertex);\n                                tempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n                                tempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n                            }\n                            if (UVTransform)\n                                tempUV = UVTransform.transformPoint(tempUV);\n                            //this is faster than that only push one data\n                            positions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n                            normals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n                            tangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n                            uvs.push(tempUV.x, tempUV.y);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < tempLen; k++) {\n                            product = k * 3;\n                            //this is faster than that only push one data\n                            positions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n                            normals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n                            tangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n                            uvs.push(sourceUVs[k * 2], sourceUVs[k * 2 + 1]);\n                        }\n                    }\n                }\n                else {\n                }\n                tempLen = sourceElements.numElements;\n                var sourceIndices = sourceElements.indices.get(tempLen);\n                for (k = 0; k < tempLen; k++) {\n                    product = k * 3;\n                    indices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n                }\n            }\n        }\n        output.particles = particles;\n        output.numParticles = numParticles;\n        numParticles = elementsArray.length;\n        for (i = 0; i < numParticles; i++) {\n            elements = elementsArray[i];\n            elements.autoDeriveNormals = false;\n            elements.autoDeriveTangents = false;\n            elements.setIndices(indicesVector[i]);\n            elements.setPositions(positionsVector[i]);\n            elements.setNormals(normalsVector[i]);\n            elements.setTangents(tangentsVector[i]);\n            elements.setUVs(uvsVector[i]);\n            output.addGraphic(elements);\n        }\n    };\n    ParticleGraphicsHelper.MAX_VERTEX = 65535;\n    return ParticleGraphicsHelper;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleGraphicsHelper;\n\n},{\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-display/lib/animators/data/ParticleData\":undefined,\"awayjs-display/lib/graphics/TriangleElements\":undefined}],\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\n/**\n *\n */\nvar PerspectiveMatrix3D = (function (_super) {\n    __extends(PerspectiveMatrix3D, _super);\n    function PerspectiveMatrix3D(v) {\n        if (v === void 0) { v = null; }\n        _super.call(this, v);\n    }\n    PerspectiveMatrix3D.prototype.perspectiveFieldOfViewLH = function (fieldOfViewY, aspectRatio, zNear, zFar) {\n        var yScale = 1 / Math.tan(fieldOfViewY / 2);\n        var xScale = yScale / aspectRatio;\n        this.rawData[0] = xScale;\n        this.rawData[1] = 0.0;\n        this.rawData[2] = 0.0;\n        this.rawData[3] = 0.0;\n        this.rawData[4] = 0.0;\n        this.rawData[5] = yScale;\n        this.rawData[6] = 0.0;\n        this.rawData[7] = 0.0;\n        this.rawData[8] = 0.0;\n        this.rawData[9] = 0.0;\n        this.rawData[10] = zFar / (zFar - zNear);\n        this.rawData[11] = 1.0;\n        this.rawData[12] = 0.0;\n        this.rawData[13] = 0.0;\n        this.rawData[14] = (zNear * zFar) / (zNear - zFar);\n        this.rawData[15] = 0.0;\n    };\n    return PerspectiveMatrix3D;\n}(Matrix3D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = PerspectiveMatrix3D;\n\n},{\"awayjs-core/lib/geom/Matrix3D\":undefined}],\"awayjs-renderergl/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar ParticleGraphicsHelper_1 = require(\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\");\nexports.ParticleGraphicsHelper = ParticleGraphicsHelper_1.default;\nvar PerspectiveMatrix3D_1 = require(\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\");\nexports.PerspectiveMatrix3D = PerspectiveMatrix3D_1.default;\n\n},{\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\":\"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\",\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\":\"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\"}]},{},[1])\n\n",
    "import * as animators\t\t\t\tfrom \"awayjs-renderergl/lib/animators\";\nimport * as elements\t\t\t\tfrom \"awayjs-renderergl/lib/elements\";\nimport * as errors\t\t\t\t\tfrom \"awayjs-renderergl/lib/errors\";\nimport * as events\t\t\t\t\tfrom \"awayjs-renderergl/lib/events\";\nimport * as filters\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters\";\nimport * as managers\t\t\t\tfrom \"awayjs-renderergl/lib/managers\";\nimport * as renderables\t\t\t\tfrom \"awayjs-renderergl/lib/renderables\";\nimport * as shaders\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders\";\nimport * as sort\t\t\t\t\tfrom \"awayjs-renderergl/lib/sort\";\nimport * as surfaces\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces\";\nimport * as textures\t\t\t\tfrom \"awayjs-renderergl/lib/textures\";\nimport * as tools\t\t\t\t\tfrom \"awayjs-renderergl/lib/tools\";\nimport * as utils\t\t\t\t\tfrom \"awayjs-renderergl/lib/utils\";\nimport DefaultRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/DefaultRenderer\";\nimport DepthRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/Filter3DRenderer\";\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\n\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_BasicMaterialSurface, BasicMaterial);\nsurfaces.SurfacePool.registerAbstraction(surfaces.GL_SkyboxSurface, Skybox);\n\nelements.ElementsPool.registerAbstraction(elements.GL_LineElements, LineElements);\nelements.ElementsPool.registerAbstraction(elements.GL_TriangleElements, TriangleElements);\n\nshaders.ShaderBase.registerAbstraction(textures.GL_Single2DTexture, Single2DTexture);\nshaders.ShaderBase.registerAbstraction(textures.GL_SingleCubeTexture, SingleCubeTexture);\n\nRendererBase.registerAbstraction(renderables.GL_BillboardRenderable, Billboard);\nRendererBase.registerAbstraction(renderables.GL_LineSegmentRenderable, LineSegment);\nRendererBase.registerAbstraction(renderables.GL_GraphicRenderable, Graphic);\nRendererBase.registerAbstraction(renderables.GL_SkyboxRenderable, Skybox);\n\nexport {\n\tanimators,\n\telements,\n\terrors,\n\tevents,\n\tfilters,\n\tmanagers,\n\trenderables,\n\tshaders,\n\tsort,\n\tsurfaces,\n\ttextures,\n\ttools,\n\tutils,\n\tDefaultRenderer,\n\tDepthRenderer,\n\tDistanceRenderer,\n\tFilter3DRenderer,\n\tRendererBase\n}",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport LightBase\t\t\t\t\tfrom \"awayjs-display/lib/display/LightBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport ShadowMapperBase\t\t\t\tfrom \"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLClearMask\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLClearMask\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport DepthRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/DepthRenderer\";\nimport DistanceRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/DistanceRenderer\";\nimport Filter3DRenderer\t\t\t\tfrom \"awayjs-renderergl/lib/Filter3DRenderer\";\nimport Filter3DBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/Filter3DBase\";\nimport GL_SkyboxElements\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_SkyboxElements\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"awayjs-renderergl/lib/managers/RTTBufferManager\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase\n{\n\tpublic _pRequireDepthRender:boolean;\n\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyBoxSurfacePool:SurfacePool;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:BitmapImage2D;\n\n\tprivate _antiAlias:number = 0;\n\tprivate _skybox:Skybox;\n\tprivate _directionalLights:Array<DirectionalLight> = new Array<DirectionalLight>();\n\tprivate _pointLights:Array<PointLight> = new Array<PointLight>();\n\tprivate _lightProbes:Array<LightProbe> = new Array<LightProbe>();\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(stage:Stage = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper(stage, null, forceSoftware, profile, mode);\n\n\t\tif (stage)\n\t\t\tthis.shareContext = true;\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(this._pStage);\n\t\tthis._pDistanceRenderer = new DistanceRenderer(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\n\t\tthis._skyBoxSurfacePool = new SurfacePool(GL_SkyboxElements, this._pStage);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = super.enterNode(node);\n\n\t\tif (enter && node.debugVisible)\n\t\t\tthis.applyEntity(node.bounds.boundsPrimitive);\n\n\t\treturn enter;\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tsuper.render(camera, scene);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this.shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(camera, scene);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(camera, scene);\n\n\t\t//reset lights\n\t\tthis._directionalLights.length = 0;\n\t\tthis._pointLights.length = 0;\n\t\tthis._lightProbes.length = 0;\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\tthis._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\tthis._pFilter3DRenderer.render(this._pStage, camera, this._pDepthRender);\n\t\t} else {\n\n\t\t\tif (this.shareContext)\n\t\t\t\tthis._iRender(camera, scene, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(camera, scene);\n\t\t}\n\n\t\tif (!this.shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(camera);\n\n\t\tsuper.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(camera:Camera)\n\t{\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = this._directionalLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tlight = this._directionalLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = this._pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = this._pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.shadowsEnabled && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(camera, light.scene, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tif (this._skybox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(camera);\n\t\t}\n\n\t\tsuper.pDraw(camera);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t **/\n\tprivate drawSkybox(camera:Camera)\n\t{\n\t\tvar renderable:GL_RenderableBase = this.getAbstraction(this._skybox);\n\n\t\trenderable.renderSceneTransform = this._skybox.getRenderSceneTransform(this._cameraTransform);\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar pass:IPass = this._skyBoxSurfacePool.getAbstraction(renderable.surfaceGL.surface).passes[0];\n\n\t\tthis.activatePass(renderable, pass, camera);\n\t\trenderable._iRender(pass, camera, this._skyboxProjection);\n\t\tthis.deactivatePass(renderable, pass);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights.push(<DirectionalLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes.push(<LightProbe> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights.push(<PointLight> entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._skybox = <Skybox> entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this.shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pRttBufferManager.dispose();\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(camera:Camera, scene:Scene)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(camera, scene);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(camera:Camera, scene:Scene)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(camera, scene, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this.shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new BitmapImage2D(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport default DefaultRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport GL_DepthSurface\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_DepthSurface\";\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DepthSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DepthRenderer;",
    "import Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport GL_DistanceSurface\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\";\n\n/**\n * The DistanceRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DistanceRenderer\n */\nclass DistanceRenderer extends RendererBase\n{\n\t/**\n\t * Creates a new DistanceRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(stage:Stage = null)\n\t{\n\t\tsuper(stage, GL_DistanceSurface);\n\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport default DistanceRenderer;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLVertexBufferFormat\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport RTTEvent\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/RTTEvent\";\nimport RTTBufferManager\t\t\t\tfrom \"awayjs-renderergl/lib/managers/RTTBufferManager\";\nimport Filter3DBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/Filter3DBase\";\nimport Filter3DTaskBase\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:RTTEvent) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:RTTEvent) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:RTTEvent)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i)\n\t\t\tif (this._filters[i].requireDepthRender)\n\t\t\t\tthis._requireDepthRender = true;\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters)\n\t\t\treturn;\n\n\t\tif (this._filterSizesInvalid)\n\t\t\tthis.updateFilterSizes();\n\n\t\tif (this._filterTasksInvalid)\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._filters[i].update(stage, camera);\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setProgram(this._tasks[0].getProgram(stage));\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\tstage.setRenderTarget(task.target);\n\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\t(<GL_ImageBase> stage.getAbstraction(task.getMainInputTexture(stage))).activate(0, false);\n\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 8, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawIndices(ContextGLDrawMode.TRIANGLES, indexBuffer, 0, 6);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t\tthis._filters[i].rttManager = this._rttManager;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(RTTEvent.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport default Filter3DRenderer;",
    "import ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Plane3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport Point\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport INode\t\t\t\t\t\tfrom \"awayjs-display/lib/partition/INode\";\nimport DisplayObject\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Scene\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Scene\";\nimport RendererEvent\t\t\t\tfrom \"awayjs-display/lib/events/RendererEvent\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport StageEvent\t\t\t\t\tfrom \"awayjs-stagegl/lib/events/StageEvent\";\nimport StageManager\t\t\t\t\tfrom \"awayjs-stagegl/lib/managers/StageManager\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport ISurfaceClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport RTTBufferManager\t\t\t\tfrom \"awayjs-renderergl/lib/managers/RTTBufferManager\";\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/ElementsPool\";\nimport IEntitySorter\t\t\t\tfrom \"awayjs-renderergl/lib/sort/IEntitySorter\";\nimport RenderableMergeSort\t\t\tfrom \"awayjs-renderergl/lib/sort/RenderableMergeSort\";\n\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher implements IRenderer, IAbstractionPool\n{\n\tpublic static _iCollectionMark = 0;\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _objectPools:Object = new Object();\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _maskConfig:number;\n\tprivate _activeMasksDirty:boolean;\n\tprivate _activeMasksConfig:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _registeredMasks : Array<GL_RenderableBase> = new Array<GL_RenderableBase>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContext:IContextGL;\n\tpublic _pStage:Stage;\n\n\tprivate _cameraPosition:Vector3D;\n\tpublic _cameraTransform:Matrix3D;\n\tprivate _cameraForward:Vector3D = new Vector3D();\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapImage2D:BitmapImage2D;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:(event:StageEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:StageEvent) => void;\n\n\tpublic _pNumElements:number = 0;\n\n\tpublic _pOpaqueRenderableHead:GL_RenderableBase;\n\tpublic _pBlendedRenderableHead:GL_RenderableBase;\n\tpublic _disableColor:boolean = false;\n\tpublic _renderBlended:boolean = true;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tprivate _sourceEntity:IEntity;\n\tprivate _zIndex:number;\n\tprivate _renderSceneTransform:Matrix3D;\n\n\t\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic shareContext:boolean;\n\t\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\n\tpublic get renderBlended():boolean\n\t{\n\t\treturn this._renderBlended;\n\t}\n\n\tpublic set renderBlended(value:boolean)\n\t{\n\t\tthis._renderBlended = value;\n\t}\n\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._pNumElements;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(stage:Stage = null, surfaceClassGL:ISurfaceClassGL = null, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\t\tthis._onContextUpdateDelegate = (event:StageEvent) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\n\t\t//set stage\n\t\tthis._pStage = stage || StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.stage = value;\n\t\t */\n\t\tif (this._pStage.context)\n\t\t\tthis._pContext = <IContextGL> this._pStage.context;\n\n\t\tfor (var i in ElementsPool._abstractionClassPool)\n\t\t\tthis._objectPools[i] = new SurfacePool(ElementsPool._abstractionClassPool[i], this._pStage, surfaceClassGL);\n\t}\n\n\n\tpublic getAbstraction(renderable:IRenderable):GL_RenderableBase\n\t{\n\t\treturn this._abstractionPool[renderable.id] || (this._abstractionPool[renderable.id] = new (<GL_IAssetClass> RendererBase._abstractionClassPool[renderable.assetType])(renderable, this));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(renderable:IRenderable)\n\t{\n\t\tthis._abstractionPool[renderable.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsClass\n\t * @returns SurfacePool\n\t */\n\tpublic getSurfacePool(elements:ElementsBase):SurfacePool\n\t{\n\t\treturn this._objectPools[elements.assetType];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(renderableClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tRendererBase._abstractionClassPool[assetClass.assetType] = renderableClass;\n\t}\n\n\tpublic activatePass(renderableGL:GL_RenderableBase, pass:IPass, camera:Camera)\n\t{\n\t\t//clear unused vertex streams\n\t\tfor (var i = pass.shader.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = pass.shader.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis._pContext.setTextureAt(i, null);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = pass.shader.programData;\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this._pContext.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + programData.vertexString + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + programData.fragmentString + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis._pContext.setProgram(programData.program);\n\n\t\t//activate shader object through renderableGL\n\t\trenderableGL._iActivate(pass, camera);\n\t}\n\n\tpublic deactivatePass(renderableGL:GL_RenderableBase, pass:IPass)\n\t{\n\t\t//deactivate shader object\n\t\trenderableGL._iDeactivate(pass);\n\n\t\tthis._numUsedStreams = pass.shader.numUsedStreams;\n\t\tthis._numUsedTextures = pass.shader.numUsedTextures;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._pContext;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\t\tthis._pContext = null;\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(camera:Camera, scene:Scene)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(camera:Camera, scene:Scene, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumElements = 0;\n\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : camera.frustumPlanes;\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._cameraPosition = camera.scenePosition;\n\t\tthis._cameraTransform = camera.sceneTransform;\n\t\tthis._cameraForward = Matrix3DUtils.getForward(camera.sceneTransform, this._cameraForward);\n\n\t\tRendererBase._iCollectionMark++;\n\n\t\tscene.traversePartitions(this);\n\n\t\t//sort the resulting renderables\n\t\tif (this.renderableSorter) {\n\t\t\tthis._pOpaqueRenderableHead = <GL_RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\t\tthis._pBlendedRenderableHead = <GL_RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t\t}\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(camera, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(camera:Camera, scene:Scene, target:ImageBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:GL_RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\t//TODO cascades must have separate collectors, rather than separate draw commands\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\t//this.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(camera:Camera, target:ImageBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pStage.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this.shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis.pDraw(camera);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this.shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapImage2D) {\n\t\t\t\tthis._pContext.drawToBitmapImage2D(this._snapshotBitmapImage2D);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapImage2D)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapImage2D = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t */\n\tpublic pDraw(camera:Camera)\n\t{\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tthis.drawRenderables(camera, this._pOpaqueRenderableHead);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(camera, this._pBlendedRenderableHead);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t//private drawCascadeRenderables(renderableGL:GL_RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t//{\n\t//\tvar renderableGL2:GL_RenderableBase;\n\t//\tvar render:GL_SurfaceBase;\n\t//\tvar pass:IPass;\n\t//\n\t//\twhile (renderableGL) {\n\t//\t\trenderableGL2 = renderableGL;\n\t//\t\trender = renderableGL.render;\n\t//\t\tpass = render.passes[0] //assuming only one pass per material\n\t//\n\t//\t\tthis.activatePass(renderableGL, pass, camera);\n\t//\n\t//\t\tdo {\n\t//\t\t\t// if completely in front, it will fall in a different cascade\n\t//\t\t\t// do not use near and far planes\n\t//\t\t\tif (!cullPlanes || renderableGL2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t//\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t//\t\t\t} else {\n\t//\t\t\t\trenderableGL2.cascaded = true;\n\t//\t\t\t}\n\t//\n\t//\t\t\trenderableGL2 = renderableGL2.next;\n\t//\n\t//\t\t} while (renderableGL2 && renderableGL2.render == render && !renderableGL2.cascaded);\n\t//\n\t//\t\tthis.deactivatePass(renderableGL, pass);\n\t//\n\t//\t\trenderableGL = renderableGL2;\n\t//\t}\n\t//}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t */\n\tpublic drawRenderables(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar renderableGL2:GL_RenderableBase;\n\t\tvar surfaceGL:GL_SurfaceBase;\n\t\tvar passes:Array<IPass>;\n\t\tvar pass:IPass;\n\n\t\tthis._pContext.setStencilActions(\"frontAndBack\", \"always\", \"keep\", \"keep\", \"keep\");\n\n\t\tthis._registeredMasks.length = 0;\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\tif(gl) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\n\t\tthis._maskConfig = 0;\n\n\t\twhile (renderableGL) {\n\t\t\tsurfaceGL = renderableGL.surfaceGL;\n\t\t\tpasses = surfaceGL.passes;\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && surfaceGL._surface.alphaThreshold != 0) {\n\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL);\n\t\t\t} else {\n\t\t\t\tif (this._activeMasksDirty || this._checkMasksConfig(renderableGL.masksConfig)) {\n\t\t\t\t\tthis._activeMasksConfig = renderableGL.masksConfig;\n\t\t\t\t\tif (!this._activeMasksConfig.length) {\n\t\t\t\t\t\t// disable stencil\n\t\t\t\t\t\tif(gl) {\n\t\t\t\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t\t\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\t\t\t\t\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._renderMasks(camera, renderableGL.sourceEntity._iAssignedMasks());\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeMasksDirty = false;\n\t\t\t\t}\n\n\n\t\t\t\t//iterate through each shader object\n\t\t\t\tlen = passes.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\trenderableGL2 = renderableGL;\n\t\t\t\t\tpass = passes[i];\n\n\t\t\t\t\tthis.activatePass(renderableGL, pass, camera);\n\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (renderableGL2.maskId !== -1) {\n\t\t\t\t\t\t\tif (i == 0)\n\t\t\t\t\t\t\t\tthis._registerMask(renderableGL2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderableGL2._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderableGL2 = renderableGL2.next;\n\n\t\t\t\t\t} while (renderableGL2 && renderableGL2.surfaceGL == surfaceGL && !(this._activeMasksDirty = this._checkMasksConfig(renderableGL2.masksConfig)));\n\n\t\t\t\t\tthis.deactivatePass(renderableGL, pass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderableGL = renderableGL2;\n\t\t}\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:StageEvent)\n\t{\n\t\tthis._pContext = <IContextGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this.shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = node._iCollectionMark != RendererBase._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = RendererBase._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._sourceEntity = entity;\n\n\t\t// project onto camera's z-axis\n\t\tthis._zIndex = entity.zOffset + this._cameraPosition.subtract(entity.scenePosition).dotProduct(this._cameraForward);\n\n\t\t//save sceneTransform\n\t\tthis._renderSceneTransform = entity.getRenderSceneTransform(this._cameraTransform);\n\n\t\t//collect renderables\n\t\tentity._acceptTraverser(this);\n\t}\n\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar renderableGL:GL_RenderableBase = this.getAbstraction(renderable);\n\t\tvar surfaceGL:GL_SurfaceBase = renderableGL.surfaceGL;\n\n\t\t//set local vars for faster referencing\n\t\trenderableGL.surfaceID = surfaceGL.surfaceID;\n\t\trenderableGL.renderOrderId = surfaceGL.renderOrderId;\n\n\t\trenderableGL.cascaded = false;\n\n\t\trenderableGL.sourceEntity = this._sourceEntity;\n\t\trenderableGL.zIndex = this._zIndex;\n\t\trenderableGL.maskId = this._sourceEntity._iAssignedMaskId();\n\t\trenderableGL.masksConfig = this._sourceEntity._iMasksConfig();\n\n\t\t//store reference to scene transform\n\t\trenderableGL.renderSceneTransform = this._renderSceneTransform;\n\n\t\tif (surfaceGL.requiresBlending) {\n\t\t\trenderableGL.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderableGL;\n\t\t} else {\n\t\t\trenderableGL.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderableGL;\n\t\t}\n\n\t\tthis._pNumElements += renderableGL.elements.numElements;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\tprivate _registerMask(obj:GL_RenderableBase)\n\t{\n\t\t//console.log(\"registerMask\");\n\t\tthis._registeredMasks.push(obj);\n\t}\n\n\tpublic _renderMasks(camera:Camera, masks:DisplayObject[][])\n\t{\n\t\tvar gl = this._pContext[\"_gl\"];\n\t\t//var oldRenderTarget = this._stage.renderTarget;\n\n\t\t//this._stage.setRenderTarget(this._image);\n\t\t//this._stage.clear();\n\t\tthis._pContext.setColorMask(false, false, false, false);\n\t\t// TODO: Could we create masks within masks by providing a previous configID, and supply \"clear/keep\" on stencil fail\n\t\t//context.setStencilActions(\"frontAndBack\", \"always\", \"set\", \"set\", \"set\");\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tthis._maskConfig++;\n\t\tgl.stencilFunc(gl.ALWAYS, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.REPLACE, gl.REPLACE, gl.REPLACE);\n\n\t\tvar numLayers:number = masks.length;\n\t\tvar numRenderables:number = this._registeredMasks.length;\n\t\tvar renderableGL:GL_RenderableBase;\n\t\tvar children:Array<DisplayObject>;\n\t\tvar numChildren:number;\n\t\tvar mask:DisplayObject;\n\n\t\tfor (var i:number = 0; i < numLayers; ++i) {\n\t\t\tif (i != 0) {\n\t\t\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\t\t\tgl.stencilOp(gl.KEEP, gl.INCR, gl.INCR);\n\t\t\t\tthis._maskConfig++;\n\t\t\t}\n\n\t\t\tchildren = masks[i];\n\t\t\tnumChildren = children.length;\n\n\t\t\tfor (var j:number = 0; j < numChildren; ++j) {\n\t\t\t\tmask = children[j];\n\t\t\t\tfor (var k:number = 0; k < numRenderables; ++k) {\n\t\t\t\t\trenderableGL = this._registeredMasks[k];\n\t\t\t\t\t//console.log(\"testing for \" + mask[\"hierarchicalMaskID\"] + \", \" + mask.name);\n\t\t\t\t\tif (renderableGL.maskId == mask.id) {\n\t\t\t\t\t\t//console.log(\"Rendering hierarchicalMaskID \" + mask[\"hierarchicalMaskID\"]);\n\t\t\t\t\t\tthis._drawMask(camera, renderableGL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgl.stencilFunc(gl.EQUAL, this._maskConfig, 0xff);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n\t\tthis._pContext.setColorMask(true, true, true, true);\n\t\t//this._stage.setRenderTarget(oldRenderTarget);\n\t}\n\n\tprivate _drawMask(camera:Camera, renderableGL:GL_RenderableBase)\n\t{\n\t\tvar surfaceGL = renderableGL.surfaceGL;\n\t\tvar passes = surfaceGL.passes;\n\t\tvar len = passes.length;\n\t\tvar pass = passes[len-1];\n\n\t\tthis.activatePass(renderableGL, pass, camera);\n\t\t// only render last pass for now\n\t\trenderableGL._iRender(pass, camera, this._pRttViewProjectionMatrix);\n\t\tthis.deactivatePass(renderableGL, pass);\n\t}\n\n\tprivate _checkMasksConfig(masksConfig:Array<Array<number>>):boolean\n\t{\n\t\tif (this._activeMasksConfig.length != masksConfig.length)\n\t\t\treturn true;\n\n\t\tvar numLayers:number = masksConfig.length;\n\t\tvar numChildren:number;\n\t\tvar childConfig:Array<number>;\n\t\tvar activeNumChildren:number;\n\t\tvar activeChildConfig:Array<number>;\n\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\tchildConfig = masksConfig[i];\n\t\t\tnumChildren = childConfig.length;\n\t\t\tactiveChildConfig = this._activeMasksConfig[i];\n\t\t\tactiveNumChildren = activeChildConfig.length;\n\t\t\tif (activeNumChildren != numChildren)\n\t\t\t\treturn true;\n\n\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\tif (activeChildConfig[j] != childConfig[j])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default RendererBase;",
    "import IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetError\t\t\tfrom \"awayjs-renderergl/lib/errors/AnimationSetError\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationSet]\";\n\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationSetBase.assetType;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport default AnimationSetBase;",
    "import Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport AssetBase\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport RequestAnimationFrame\t\tfrom \"awayjs-core/lib/utils/RequestAnimationFrame\";\nimport getTimer\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport IAnimationSet\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport IAnimator\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimator\";\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport IAnimationState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IAnimationState\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport AnimatorEvent\t\t\t\tfrom \"awayjs-renderergl/lib/events/AnimatorEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends AssetBase implements IAnimator\n{\n\tpublic static assetType:string = \"[asset Animator]\";\n\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Sprite> = new Array<Sprite>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated sprite from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the sprite object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.push(sprite);\n\t}\n\n\t/**\n\t * Used by the sprite object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(sprite:Sprite)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(sprite), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].transform.translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimatorBase.assetType;\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_RenderableBase, sourceElements:ElementsBase):ElementsBase\n\t{\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default AnimatorBase;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleAnimationData\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\n\n\n/**\n * The animation data set used by particle-based animators, containing particle animation data.\n *\n * @see away.animators.ParticleAnimator\n */\nclass ParticleAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\t/** @private */\n\tpublic _iAnimationRegisterCache:AnimationRegisterCache;\n\n\t//all other nodes dependent on it\n\tprivate _timeNode:ParticleTimeNode;\n\n\t/**\n\t * Property used by particle nodes that require compilers at the end of the shader\n\t */\n\tpublic static POST_PRIORITY:number /*int*/ = 9;\n\n\t/**\n\t * Property used by particle nodes that require color compilers\n\t */\n\tpublic static COLOR_PRIORITY:number /*int*/ = 18;\n\n\tprivate _animationElements:Object = new Object();\n\tprivate _particleNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localDynamicNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _localStaticNodes:Array<ParticleNodeBase> = new Array<ParticleNodeBase>();\n\tprivate _totalLenOfOneVertex:number /*int*/ = 0;\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\t/**\n\t * Initialiser function for static particle properties. Needs to reference a with the following format\n\t *\n\t * <code>\n\t * initParticleFunc(prop:ParticleProperties)\n\t * {\n\t * \t\t//code for settings local properties\n\t * }\n\t * </code>\n\t *\n\t * Aside from setting any properties required in particle animation nodes using local static properties, the initParticleFunc function\n\t * is required to time node requirements as they may be needed. These properties on the ParticleProperties object can include\n\t * <code>startTime</code>, <code>duration</code> and <code>delay</code>. The use of these properties is determined by the setting\n\t * arguments passed in the constructor of the particle animation set. By default, only the <code>startTime</code> property is required.\n\t */\n\tpublic initParticleFunc:Function;\n\n\t/**\n\t * Initialiser function scope for static particle properties\n\t */\n\tpublic initParticleScope:Object;\n\n\t/**\n\t *\n\t */\n\tpublic shareAnimationGraphics:boolean = true;\n\n\t/**\n\t * Creates a new <code>ParticleAnimationSet</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the animation set uses the <code>duration</code> data in its static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesLooping     Defines whether the animation set uses a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in its static properties function. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesDelay       Defines whether the animation set uses the <code>delay</code> data in its static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper();\n\n\t\t//automatically add a particle time node to the set\n\t\tthis.addAnimation(this._timeNode = new ParticleTimeNode(usesDuration, usesLooping, usesDelay));\n\t}\n\n\t/**\n\t * Returns a vector of the particle animation nodes contained within the set.\n\t */\n\tpublic get particleNodes():Array<ParticleNodeBase>\n\t{\n\t\treturn this._particleNodes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tvar i:number /*int*/;\n\t\tvar n:ParticleNodeBase = <ParticleNodeBase> node;\n\t\tn._iProcessAnimationSetting(this);\n\t\tif (n.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tn._iDataOffset = this._totalLenOfOneVertex;\n\t\t\tthis._totalLenOfOneVertex += n.dataLength;\n\t\t\tthis._localStaticNodes.push(n);\n\t\t} else if (n.mode == ParticlePropertiesMode.LOCAL_DYNAMIC)\n\t\t\tthis._localDynamicNodes.push(n);\n\n\t\tfor (i = this._particleNodes.length - 1; i >= 0; i--) {\n\t\t\tif (this._particleNodes[i].priority <= n.priority)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._particleNodes.splice(i + 1, 0, n);\n\n\t\tsuper.addAnimation(node);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tthis._iAnimationRegisterCache = pass.animationRegisterCache;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tvar offset:number /*int*/ = this._iAnimationRegisterCache.vertexAttributesOffset;\n//\t\t\tvar used:number /*int*/ = this._iAnimationRegisterCache.numUsedStreams;\n//\t\t\tfor (var i:number /*int*/ = offset; i < used; i++)\n//\t\t\t\tcontext.setVertexBufferAt(i, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\t//grab animationRegisterCache from the materialpassbase or create a new one if the first time\n\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache;\n\n\t\tif (this._iAnimationRegisterCache == null)\n\t\t\tthis._iAnimationRegisterCache = shader.animationRegisterCache = new AnimationRegisterCache(shader.profile);\n\n\t\t//reset animationRegisterCache\n\t\tthis._iAnimationRegisterCache.vertexConstantOffset = shader.numUsedVertexConstants;\n\t\tthis._iAnimationRegisterCache.vertexAttributesOffset = shader.numUsedStreams;\n\t\tthis._iAnimationRegisterCache.varyingsOffset = shader.numUsedVaryings;\n\t\tthis._iAnimationRegisterCache.fragmentConstantOffset = shader.numUsedFragmentConstants;\n\t\tthis._iAnimationRegisterCache.hasUVNode = this.hasUVNode;\n\t\tthis._iAnimationRegisterCache.needVelocity = this.needVelocity;\n\t\tthis._iAnimationRegisterCache.hasBillboard = this.hasBillboard;\n\t\tthis._iAnimationRegisterCache.sourceRegisters = shader.animatableAttributes;\n\t\tthis._iAnimationRegisterCache.targetRegisters = shader.animationTargetRegisters;\n\t\tthis._iAnimationRegisterCache.needFragmentAnimation = shader.usesFragmentAnimation;\n\t\tthis._iAnimationRegisterCache.needUVAnimation = !shader.usesUVTransform;\n\t\tthis._iAnimationRegisterCache.hasColorAddNode = this.hasColorAddNode;\n\t\tthis._iAnimationRegisterCache.hasColorMulNode = this.hasColorMulNode;\n\t\tthis._iAnimationRegisterCache.reset();\n\n\t\tvar code:string = \"\";\n\n\t\tcode += this._iAnimationRegisterCache.getInitCode();\n\n\t\tvar node:ParticleNodeBase;\n\t\tvar i:number /*int*/;\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority < ParticleAnimationSet.POST_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.getCombinationCode();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.POST_PRIORITY && node.priority < ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\n\t\tcode += this._iAnimationRegisterCache.initColorRegisters();\n\n\t\tfor (i = 0; i < this._particleNodes.length; i++) {\n\t\t\tnode = this._particleNodes[i];\n\t\t\tif (node.priority >= ParticleAnimationSet.COLOR_PRIORITY)\n\t\t\t\tcode += node.getAGALVertexCode(shader, this._iAnimationRegisterCache);\n\t\t}\n\t\tcode += this._iAnimationRegisterCache.getColorPassCode();\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasUVNode) {\n\t\t\tthis._iAnimationRegisterCache.setUVSourceAndTarget(shader.uvSource, shader.uvTarget);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvTarget + \".xy,\" + this._iAnimationRegisterCache.uvAttribute.toString() + \"\\n\";\n\t\t\tvar node:ParticleNodeBase;\n\t\t\tfor (var i:number /*uint*/ = 0; i < this._particleNodes.length; i++)\n\t\t\t\tnode = this._particleNodes[i];\n\t\t\t\tcode += node.getAGALUVCode(shader, this._iAnimationRegisterCache);\n\t\t\tcode += \"mov \" + this._iAnimationRegisterCache.uvVar.toString() + \",\" + this._iAnimationRegisterCache.uvTarget + \".xy\\n\";\n\t\t} else\n\t\t\tcode += \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn this._iAnimationRegisterCache.getColorCombinationCode(shadedTarget);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\t\tthis._iAnimationRegisterCache.setDataLength();\n\n\t\t//set vertexZeroConst,vertexOneConst,vertexTwoConst\n\t\tthis._iAnimationRegisterCache.setVertexConst(this._iAnimationRegisterCache.vertexZeroConst.index, 0, 1, 2, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic cancelGPUCompatibility()\n\t{\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animationElements)\n\t\t\t(<AnimationElements> this._animationElements[key]).dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAnimationElements(graphic:Graphic)\n\t{\n\t\tvar animationElements:AnimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\n\t\tif (animationElements)\n\t\t\treturn animationElements;\n\n\t\tthis._iGenerateAnimationElements(graphic.parent);\n\n\t\treturn (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t}\n\n\n\t/** @private */\n\tpublic _iGenerateAnimationElements(graphics:Graphics)\n\t{\n\t\tif (this.initParticleFunc == null)\n\t\t\tthrow(new Error(\"no initParticleFunc set\"));\n\n\t\tvar i:number /*int*/, j:number /*int*/, k:number /*int*/;\n\t\tvar animationElements:AnimationElements;\n\t\tvar newAnimationElements:boolean = false;\n\t\tvar elements:ElementsBase;\n\t\tvar graphic:Graphic;\n\t\tvar localNode:ParticleNodeBase;\n\n\t\tfor (i = 0; i < graphics.count; i++) {\n\t\t\tgraphic = graphics.getGraphicAt(i);\n\t\t\telements = graphic.elements;\n\t\t\tif (this.shareAnimationGraphics) {\n\t\t\t\tanimationElements = this._animationElements[elements.id];\n\n\t\t\t\tif (animationElements)\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tanimationElements = new AnimationElements();\n\n\t\t\tif (this.shareAnimationGraphics)\n\t\t\t\tthis._animationElements[elements.id] = animationElements;\n\t\t\telse\n\t\t\t\tthis._animationElements[graphic.id] = animationElements;\n\n\t\t\tnewAnimationElements = true;\n\n\t\t\t//create the vertexData vector that will be used for local node data\n\t\t\tanimationElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\t\t}\n\n\t\tif (!newAnimationElements)\n\t\t\treturn;\n\n\t\tvar particles:Array<ParticleData> = graphics.particles;\n\t\tvar particlesLength:number /*uint*/ = particles.length;\n\t\tvar numParticles:number /*uint*/ = graphics.numParticles;\n\t\tvar particleProperties:ParticleProperties = new ParticleProperties();\n\t\tvar particle:ParticleData;\n\n\t\tvar oneDataLen:number /*int*/;\n\t\tvar oneDataOffset:number /*int*/;\n\t\tvar counterForVertex:number /*int*/;\n\t\tvar counterForOneData:number /*int*/;\n\t\tvar oneData:Array<number>;\n\t\tvar numVertices:number /*uint*/;\n\t\tvar vertexData:Array<number>;\n\t\tvar vertexLength:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\n\t\t//default values for particle param\n\t\tparticleProperties.total = numParticles;\n\t\tparticleProperties.startTime = 0;\n\t\tparticleProperties.duration = 1000;\n\t\tparticleProperties.delay = 0.1;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\twhile (i < numParticles) {\n\t\t\tparticleProperties.index = i;\n\n\t\t\t//call the init on the particle parameters\n\t\t\tthis.initParticleFunc.call(this.initParticleScope, particleProperties);\n\n\t\t\t//create the next set of node properties for the particle\n\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++)\n\t\t\t\tthis._localStaticNodes[k]._iGeneratePropertyOfOneParticle(particleProperties);\n\n\t\t\t//loop through all particle data for the curent particle\n\t\t\twhile (j < particlesLength && (particle = particles[j]).particleIndex == i) {\n\t\t\t\t//find the target animationElements\n\t\t\t\tfor (k = 0; k < graphics.count; k++) {\n\t\t\t\t\tgraphic = graphics.getGraphicAt(k);\n\t\t\t\t\tif (graphic.elements == particle.elements) {\n\t\t\t\t\t\tanimationElements = (this.shareAnimationGraphics)? this._animationElements[graphic.elements.id] : this._animationElements[graphic.id];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumVertices = particle.numVertices;\n\t\t\t\tvertexData = animationElements.vertexData;\n\t\t\t\tvertexLength = numVertices*this._totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationElements.numProcessedVertices*this._totalLenOfOneVertex;\n\n\t\t\t\t//loop through each static local node in the animation set\n\t\t\t\tfor (k = 0; k < this._localStaticNodes.length; k++) {\n\t\t\t\t\tlocalNode = this._localStaticNodes[k];\n\t\t\t\t\toneData = localNode.oneData;\n\t\t\t\t\toneDataLen = localNode.dataLength;\n\t\t\t\t\toneDataOffset = startingOffset + localNode._iDataOffset;\n\n\t\t\t\t\t//loop through each vertex set in the vertex data\n\t\t\t\t\tfor (counterForVertex = 0; counterForVertex < vertexLength; counterForVertex += this._totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = oneDataOffset + counterForVertex;\n\n\t\t\t\t\t\t//add the data for the local node to the vertex data\n\t\t\t\t\t\tfor (counterForOneData = 0; counterForOneData < oneDataLen; counterForOneData++)\n\t\t\t\t\t\t\tvertexData[vertexOffset + counterForOneData] = oneData[counterForOneData];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//store particle properties if they need to be retreived for dynamic local nodes\n\t\t\t\tif (this._localDynamicNodes.length)\n\t\t\t\t\tanimationElements.animationParticles.push(new ParticleAnimationData(i, particleProperties.startTime, particleProperties.duration, particleProperties.delay, particle));\n\n\t\t\t\tanimationElements.numProcessedVertices += numVertices;\n\n\t\t\t\t//next index\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\t//next particle\n\t\t\ti++;\n\t\t}\n\t}\n}\n\nexport default ParticleAnimationSet;",
    "import ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning paricle-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n *\n * Requires that the containing geometry of the parent sprite is particle geometry\n *\n * @see away.base.ParticleGraphics\n */\nclass ParticleAnimator extends AnimatorBase\n{\n\n\tprivate _particleAnimationSet:ParticleAnimationSet;\n\tprivate _animationParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _animatorParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _timeParticleStates:Array<ParticleStateBase> = new Array<ParticleStateBase>();\n\tprivate _totalLenOfOneVertex:number /*uint*/ = 0;\n\tprivate _animatorSubGeometries:Object = new Object();\n\n\t/**\n\t * Creates a new <code>ParticleAnimator</code> object.\n\t *\n\t * @param particleAnimationSet The animation data set containing the particle animations used by the animator.\n\t */\n\tconstructor(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tsuper(particleAnimationSet);\n\t\tthis._particleAnimationSet = particleAnimationSet;\n\n\t\tvar state:ParticleStateBase;\n\t\tvar node:ParticleNodeBase;\n\n\t\tfor (var i:number = 0; i < this._particleAnimationSet.particleNodes.length; i++) {\n\t\t\tnode = this._particleAnimationSet.particleNodes[i];\n\t\t\tstate = <ParticleStateBase> this.getAnimationState(node);\n\t\t\tif (node.mode == ParticlePropertiesMode.LOCAL_DYNAMIC) {\n\t\t\t\tthis._animatorParticleStates.push(state);\n\t\t\t\tnode._iDataOffset = this._totalLenOfOneVertex;\n\t\t\t\tthis._totalLenOfOneVertex += node.dataLength;\n\t\t\t} else {\n\t\t\t\tthis._animationParticleStates.push(state);\n\t\t\t}\n\t\t\tif (state.needUpdateTime)\n\t\t\t\tthis._timeParticleStates.push(state);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new ParticleAnimator(this._particleAnimationSet);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tvar animationRegisterCache:AnimationRegisterCache = this._particleAnimationSet._iAnimationRegisterCache;\n\n\t\tvar graphic:Graphic = (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar state:ParticleStateBase;\n\t\tvar i:number;\n\n\t\tif (!graphic)\n\t\t\tthrow(new Error(\"Must be graphic\"));\n\n\t\t//process animation sub geometries\n\t\tvar animationElements:AnimationElements = this._particleAnimationSet.getAnimationElements(graphic);\n\n\t\tfor (i = 0; i < this._animationParticleStates.length; i++)\n\t\t\tthis._animationParticleStates[i].setRenderState(stage, renderable, animationElements, animationRegisterCache, camera);\n\n\t\t//process animator subgeometries\n\t\tvar animatorElements:AnimationElements = this.getAnimatorElements(graphic);\n\n\t\tfor (i = 0; i < this._animatorParticleStates.length; i++)\n\t\t\tthis._animatorParticleStates[i].setRenderState(stage, renderable, animatorElements, animationRegisterCache, camera);\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, animationRegisterCache.vertexConstantOffset, animationRegisterCache.vertexConstantData, animationRegisterCache.numVertexConstant);\n\n\t\tif (animationRegisterCache.numFragmentConstant > 0)\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, animationRegisterCache.fragmentConstantOffset, animationRegisterCache.fragmentConstantData, animationRegisterCache.numFragmentConstant);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic start()\n\t{\n\t\tsuper.start();\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].update(this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic resetTime(offset:number /*int*/ = 0)\n\t{\n\t\tfor (var i:number = 0; i < this._timeParticleStates.length; i++)\n\t\t\tthis._timeParticleStates[i].offset(this._pAbsoluteTime + offset);\n\t\tthis.update(this.time);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var key in this._animatorSubGeometries)\n\t\t\t(<AnimationElements> this._animatorSubGeometries[key]).dispose();\n\t}\n\n\tprivate getAnimatorElements(graphic:Graphic):AnimationElements\n\t{\n\t\tif (!this._animatorParticleStates.length)\n\t\t\treturn;\n\n\t\tvar elements:ElementsBase = graphic.elements;\n\t\tvar animatorElements:AnimationElements = this._animatorSubGeometries[elements.id] = new AnimationElements();\n\n\t\t//create the vertexData vector that will be used for local state data\n\t\tanimatorElements.createVertexData(elements.numVertices, this._totalLenOfOneVertex);\n\n\t\t//pass the particles data to the animator elements\n\t\tanimatorElements.animationParticles = this._particleAnimationSet.getAnimationElements(graphic).animationParticles;\n\t}\n}\n\nexport default ParticleAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\n\n/**\n * The animation data set used by skeleton-based animators, containing skeleton animation data.\n *\n * @see away.animators.SkeletonAnimator\n */\nclass SkeletonAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _jointsPerVertex:number /*uint*/;\n\n\t/**\n\t * Returns the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the\n\t * maximum allowed value is 4.\n\t */\n\tpublic get jointsPerVertex():number /*uint*/\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimationSet</code> object.\n\t *\n\t * @param jointsPerVertex Sets the amount of skeleton joints that can be linked to a single vertex via skinned weight values. For GPU-base animation, the maximum allowed value is 4. Defaults to 4.\n\t */\n\tconstructor(jointsPerVertex:number /*uint*/ = 4)\n\t{\n\t\tsuper();\n\n\t\tthis._jointsPerVertex = jointsPerVertex;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\n\t\tvar indexOffset0:number /*uint*/ = shader.numUsedVertexConstants;\n\t\tvar indexOffset1:number /*uint*/ = indexOffset0 + 1;\n\t\tvar indexOffset2:number /*uint*/ = indexOffset0 + 2;\n\t\tvar indexStream:string = \"va\" + shader.numUsedStreams;\n\t\tvar weightStream:string = \"va\" + (shader.numUsedStreams + 1);\n\t\tvar indices:Array<string> = [ indexStream + \".x\", indexStream + \".y\", indexStream + \".z\", indexStream + \".w\" ];\n\t\tvar weights:Array<string> = [ weightStream + \".x\", weightStream + \".y\", weightStream + \".z\", weightStream + \".w\" ];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar dot:string = \"dp4\";\n\t\tvar code:string = \"\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\n\t\t\tvar src:string = shader.animatableAttributes[i];\n\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._jointsPerVertex; ++j) {\n\t\t\t\tcode += dot + \" \" + temp1 + \".x, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset0 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".y, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset1 + \"]\\n\" +\n\t\t\t\t\tdot + \" \" + temp1 + \".z, \" + src + \", vc[\" + indices[j] + \"+\" + indexOffset2 + \"]\\n\" +\n\t\t\t\t\t\"mov \" + temp1 + \".w, \" + src + \".w\\n\" +\n\t\t\t\t\t\"mul \" + temp1 + \", \" + temp1 + \", \" + weights[j] + \"\\n\"; // apply weight\n\n\t\t\t\t// add or mov to target. Need to write to a temp reg first, because an output can be a target\n\t\t\t\tif (j == 0)\n\t\t\t\t\tcode += \"mov \" + temp2 + \", \" + temp1 + \"\\n\"; else\n\t\t\t\t\tcode += \"add \" + temp2 + \", \" + temp2 + \", \" + temp1 + \"\\n\";\n\t\t\t}\n\t\t\t// switch to dp3 once positions have been transformed, from now on, it should only be vectors instead of points\n\t\t\tdot = \"dp3\";\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[i] + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar streamOffset:number /*uint*/ = pass.numUsedStreams;\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(streamOffset, null);\n//\t\t\tcontext.setVertexBufferAt(streamOffset + 1, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n}\n\nexport default SkeletonAnimationSet;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimationSet\";\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nimport SkeletonJoint\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonJoint\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport ISkeletonAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\";\nimport AnimationStateEvent\t\t\t\tfrom \"awayjs-renderergl/lib/events/AnimationStateEvent\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\";\n\n/**\n * Provides an interface for assigning skeleton-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass SkeletonAnimator extends AnimatorBase\n{\n\tprivate _globalMatrices:Float32Array;\n\tprivate _globalPose:SkeletonPose = new SkeletonPose();\n\tprivate _globalPropertiesDirty:boolean;\n\tprivate _numJoints:number /*uint*/;\n\tprivate _morphedElements:Object = new Object();\n\tprivate _morphedElementsDirty:Object = new Object();\n\tprivate _condensedMatrices:Float32Array;\n\n\tprivate _skeleton:Skeleton;\n\tprivate _forceCPU:boolean;\n\tprivate _useCondensedIndices:boolean;\n\tprivate _jointsPerVertex:number /*uint*/;\n\tprivate _activeSkeletonState:ISkeletonAnimationState;\n\tprivate _onTransitionCompleteDelegate:(event:AnimationStateEvent) => void;\n\n\tprivate _onIndicesUpdateDelegate:(event:ElementsEvent) => void;\n\tprivate _onVerticesUpdateDelegate:(event:ElementsEvent) => void;\n\n\t/**\n\t * returns the calculated global matrices of the current skeleton pose.\n\t *\n\t * @see #globalPose\n\t */\n\tpublic get globalMatrices():Float32Array\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalMatrices;\n\t}\n\n\t/**\n\t * returns the current skeleton pose output from the animator.\n\t *\n\t * @see away.animators.data.SkeletonPose\n\t */\n\tpublic get globalPose():SkeletonPose\n\t{\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\treturn this._globalPose;\n\t}\n\n\t/**\n\t * Returns the skeleton object in use by the animator - this defines the number and heirarchy of joints used by the\n\t * skinned geoemtry to which skeleon animator is applied.\n\t */\n\tpublic get skeleton():Skeleton\n\t{\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Indicates whether the skeleton animator is disabled by default for GPU rendering, something that allows the animator to perform calculation on the GPU.\n\t * Defaults to false.\n\t */\n\tpublic get forceCPU():boolean\n\t{\n\t\treturn this._forceCPU;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonAnimator</code> object.\n\t *\n\t * @param skeletonAnimationSet The animation data set containing the skeleton animations used by the animator.\n\t * @param skeleton The skeleton object used for calculating the resulting global matrices for transforming skinned sprite data.\n\t * @param forceCPU Optional value that only allows the animator to perform calculation on the CPU. Defaults to false.\n\t */\n\tconstructor(animationSet:SkeletonAnimationSet, skeleton:Skeleton, forceCPU:boolean = false)\n\t{\n\t\tsuper(animationSet);\n\n\t\tthis._skeleton = skeleton;\n\t\tthis._forceCPU = forceCPU;\n\t\tthis._jointsPerVertex = animationSet.jointsPerVertex;\n\n\t\tthis._numJoints = this._skeleton.numJoints;\n\t\tthis._globalMatrices = new Float32Array(this._numJoints*12);\n\n\t\tvar j:number /*int*/ = 0;\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t\tthis._globalMatrices[j++] = 1;\n\t\t\tthis._globalMatrices[j++] = 0;\n\t\t}\n\n\t\tthis._onTransitionCompleteDelegate = (event:AnimationStateEvent) => this.onTransitionComplete(event);\n\t\tthis._onIndicesUpdateDelegate = (event:ElementsEvent) => this.onIndicesUpdate(event);\n\t\tthis._onVerticesUpdateDelegate = (event:ElementsEvent) => this.onVerticesUpdate(event);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\t/* The cast to SkeletonAnimationSet should never fail, as _animationSet can only be set\n\t\t through the constructor, which will only accept a SkeletonAnimationSet. */\n\t\treturn new SkeletonAnimator(<SkeletonAnimationSet> this._pAnimationSet, this._skeleton, this._forceCPU);\n\t}\n\n\t/**\n\t * Plays an animation state registered with the given name in the animation data set.\n\t *\n\t * @param name The data set name of the animation state to be played.\n\t * @param transition An optional transition object that determines how the animator will transition from the currently active animation state.\n\t * @param offset An option offset time (in milliseconds) that resets the state's internal clock to the absolute time of the animator plus the offset value. Required for non-looping animation states.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tif (transition && this._pActiveNode) {\n\t\t\t//setup the transition\n\t\t\tthis._pActiveNode = transition.getAnimationNode(this, this._pActiveNode, this._pAnimationSet.getAnimation(name), this._pAbsoluteTime);\n\t\t\tthis._pActiveNode.addEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t} else\n\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// do on request of globalProperties\n\t\tif (this._globalPropertiesDirty)\n\t\t\tthis.updateGlobalProperties();\n\n\t\tvar elements:TriangleElements = <TriangleElements> (<GL_GraphicRenderable> renderable).graphic.elements;\n\n\t\telements.useCondensedIndices = this._useCondensedIndices;\n\n\t\tif (this._useCondensedIndices) {\n\t\t\t// using a condensed data set\n\t\t\tthis.updateCondensedMatrices(elements.condensedIndexLookUp);\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._condensedMatrices, this._condensedMatrices.length/4);\n\t\t} else {\n\t\t\tif (this._pAnimationSet.usesCPU) {\n\t\t\t\tif (this._morphedElementsDirty[elements.id])\n\t\t\t\t\tthis.morphElements(<GL_GraphicRenderable> renderable, elements);\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._globalMatrices, this._numJoints*3);\n\t\t}\n\n\t\tshader.jointIndexIndex = vertexStreamOffset++;\n\t\tshader.jointWeightIndex = vertexStreamOffset++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t\tif (!this._useCondensedIndices && (this._forceCPU || this._jointsPerVertex > 4 || shader.numUsedVertexConstants + this._numJoints*3 > 128))\n\t\t\tthis._pAnimationSet.cancelGPUCompatibility();\n\t}\n\n\t/**\n\t * Applies the calculated time delta to the active animation state node or state transition object.\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\t//invalidate pose matrices\n\t\tthis._globalPropertiesDirty = true;\n\n\t\t//trigger geometry invalidation if using CPU animation\n\t\tif (this._pAnimationSet.usesCPU)\n\t\t\tfor (var key in this._morphedElementsDirty)\n\t\t\t\tthis._morphedElementsDirty[key] = true;\n\t}\n\n\tprivate updateCondensedMatrices(condensedIndexLookUp:Array<number>)\n\t{\n\t\tvar j:number = 0, k:number = 0;\n\t\tvar len:number = condensedIndexLookUp.length;\n\t\tvar srcIndex:number /*uint*/;\n\n\t\tthis._condensedMatrices = new Float32Array(len*12);\n\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsrcIndex = condensedIndexLookUp[i]*12; //12 required for the three 4-component vectors that store the matrix\n\t\t\tk = 12;\n\t\t\t// copy into condensed\n\t\t\twhile (k--)\n\t\t\t\tthis._condensedMatrices[j++] = this._globalMatrices[srcIndex++];\n\t\t}\n\t}\n\n\tprivate updateGlobalProperties()\n\t{\n\t\tthis._globalPropertiesDirty = false;\n\n\t\t//get global pose\n\t\tthis.localToGlobalPose(this._activeSkeletonState.getSkeletonPose(this._skeleton), this._globalPose, this._skeleton);\n\n\t\t// convert pose to matrix\n\t\tvar mtxOffset:number /*uint*/ = 0;\n\t\tvar globalPoses:Array<JointPose> = this._globalPose.jointPoses;\n\t\tvar raw:Float32Array;\n\t\tvar ox:number, oy:number, oz:number, ow:number;\n\t\tvar xy2:number, xz2:number, xw2:number;\n\t\tvar yz2:number, yw2:number, zw2:number;\n\t\tvar n11:number, n12:number, n13:number;\n\t\tvar n21:number, n22:number, n23:number;\n\t\tvar n31:number, n32:number, n33:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\t\tvar joints:Array<SkeletonJoint> = this._skeleton.joints;\n\t\tvar pose:JointPose;\n\t\tvar quat:Quaternion;\n\t\tvar vec:Vector3D;\n\t\tvar t:number;\n\n\t\tfor (var i:number /*uint*/ = 0; i < this._numJoints; ++i) {\n\t\t\tpose = globalPoses[i];\n\t\t\tquat = pose.orientation;\n\t\t\tvec = pose.translation;\n\t\t\tox = quat.x;\n\t\t\toy = quat.y;\n\t\t\toz = quat.z;\n\t\t\tow = quat.w;\n\n\t\t\txy2 = (t = 2.0*ox)*oy;\n\t\t\txz2 = t*oz;\n\t\t\txw2 = t*ow;\n\t\t\tyz2 = (t = 2.0*oy)*oz;\n\t\t\tyw2 = t*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\n\t\t\tyz2 = 2.0*oy*oz;\n\t\t\tyw2 = 2.0*oy*ow;\n\t\t\tzw2 = 2.0*oz*ow;\n\t\t\tox *= ox;\n\t\t\toy *= oy;\n\t\t\toz *= oz;\n\t\t\tow *= ow;\n\n\t\t\tn11 = (t = ox - oy) - oz + ow;\n\t\t\tn12 = xy2 - zw2;\n\t\t\tn13 = xz2 + yw2;\n\t\t\tn21 = xy2 + zw2;\n\t\t\tn22 = -t - oz + ow;\n\t\t\tn23 = yz2 - xw2;\n\t\t\tn31 = xz2 - yw2;\n\t\t\tn32 = yz2 + xw2;\n\t\t\tn33 = -ox - oy + oz + ow;\n\n\t\t\t// prepend inverse bind pose\n\t\t\traw = joints[i].inverseBindPose;\n\t\t\tm11 = raw[0];\n\t\t\tm12 = raw[4];\n\t\t\tm13 = raw[8];\n\t\t\tm14 = raw[12];\n\t\t\tm21 = raw[1];\n\t\t\tm22 = raw[5];\n\t\t\tm23 = raw[9];\n\t\t\tm24 = raw[13];\n\t\t\tm31 = raw[2];\n\t\t\tm32 = raw[6];\n\t\t\tm33 = raw[10];\n\t\t\tm34 = raw[14];\n\n\t\t\tthis._globalMatrices[mtxOffset] = n11*m11 + n12*m21 + n13*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 1] = n11*m12 + n12*m22 + n13*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 2] = n11*m13 + n12*m23 + n13*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 3] = n11*m14 + n12*m24 + n13*m34 + vec.x;\n\t\t\tthis._globalMatrices[mtxOffset + 4] = n21*m11 + n22*m21 + n23*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 5] = n21*m12 + n22*m22 + n23*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 6] = n21*m13 + n22*m23 + n23*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 7] = n21*m14 + n22*m24 + n23*m34 + vec.y;\n\t\t\tthis._globalMatrices[mtxOffset + 8] = n31*m11 + n32*m21 + n33*m31;\n\t\t\tthis._globalMatrices[mtxOffset + 9] = n31*m12 + n32*m22 + n33*m32;\n\t\t\tthis._globalMatrices[mtxOffset + 10] = n31*m13 + n32*m23 + n33*m33;\n\t\t\tthis._globalMatrices[mtxOffset + 11] = n31*m14 + n32*m24 + n33*m34 + vec.z;\n\n\t\t\tmtxOffset = mtxOffset + 12;\n\t\t}\n\t}\n\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = true;\n\n\t\t//early out for GPU animations\n\t\tif (!this._pAnimationSet.usesCPU)\n\t\t\treturn sourceElements;\n\n\t\tvar targetElements:TriangleElements;\n\n\t\tif (!(targetElements = this._morphedElements[sourceElements.id])) {\n\t\t\t//not yet stored\n\t\t\ttargetElements = this._morphedElements[sourceElements.id] = sourceElements.clone();\n\t\t\t//turn off auto calculations on the morphed geometry\n\t\t\ttargetElements.autoDeriveNormals = false;\n\t\t\ttargetElements.autoDeriveTangents = false;\n\t\t\t//add event listeners for any changes in UV values on the source geometry\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onIndicesUpdateDelegate);\n\t\t\tsourceElements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onVerticesUpdateDelegate);\n\t\t}\n\n\t\treturn targetElements;\n\t}\n\n\t/**\n\t * If the animation can't be performed on GPU, transform vertices manually\n\t * @param subGeom The subgeometry containing the weights and joint index data per vertex.\n\t * @param pass The material pass for which we need to transform the vertices\n\t */\n\tpublic morphElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements)\n\t{\n\t\tthis._morphedElementsDirty[sourceElements.id] = false;\n\n\t\tvar numVertices:number = sourceElements.numVertices;\n\t\tvar sourcePositions:ArrayBufferView = sourceElements.positions.get(numVertices);\n\t\tvar sourceNormals:Float32Array = sourceElements.normals.get(numVertices);\n\t\tvar sourceTangents:Float32Array = sourceElements.tangents.get(numVertices);\n\n\t\tvar posDim:number = sourceElements.positions.dimensions;\n\n\t\tvar jointIndices:Float32Array = <Float32Array> sourceElements.jointIndices.get(numVertices);\n\t\tvar jointWeights:Float32Array = <Float32Array> sourceElements.jointWeights.get(numVertices);\n\n\t\tvar targetElements:TriangleElements = this._morphedElements[sourceElements.id];\n\n\t\tvar targetPositions:ArrayBufferView = targetElements.positions.get(numVertices);\n\t\tvar targetNormals:Float32Array = targetElements.normals.get(numVertices);\n\t\tvar targetTangents:Float32Array = targetElements.tangents.get(numVertices);\n\n\t\tvar index:number /*uint*/ = 0;\n\t\tvar i0:number /*uint*/ = 0;\n\t\tvar i1:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/;\n\t\tvar vx:number, vy:number, vz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar tx:number, ty:number, tz:number;\n\t\tvar weight:number;\n\t\tvar vertX:number, vertY:number, vertZ:number;\n\t\tvar normX:number, normY:number, normZ:number;\n\t\tvar tangX:number, tangY:number, tangZ:number;\n\t\tvar m11:number, m12:number, m13:number, m14:number;\n\t\tvar m21:number, m22:number, m23:number, m24:number;\n\t\tvar m31:number, m32:number, m33:number, m34:number;\n\n\t\twhile (index < numVertices) {\n\t\t\ti0 = index*posDim;\n\t\t\tvertX = sourcePositions[i0];\n\t\t\tvertY = sourcePositions[i0 + 1];\n\t\t\tvertZ = (posDim == 3)? sourcePositions[i0 + 2] : 0;\n\t\t\ti1 = index*3;\n\t\t\tnormX = sourceNormals[i1];\n\t\t\tnormY = sourceNormals[i1 + 1];\n\t\t\tnormZ = sourceNormals[i1 + 2];\n\t\t\ttangX = sourceTangents[i1];\n\t\t\ttangY = sourceTangents[i1 + 1];\n\t\t\ttangZ = sourceTangents[i1 + 2];\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\t\t\tvz = 0;\n\t\t\tnx = 0;\n\t\t\tny = 0;\n\t\t\tnz = 0;\n\t\t\ttx = 0;\n\t\t\tty = 0;\n\t\t\ttz = 0;\n\t\t\tk = 0;\n\t\t\twhile (k < this._jointsPerVertex) {\n\t\t\t\tweight = jointWeights[j];\n\t\t\t\tif (weight > 0) {\n\t\t\t\t\t// implicit /3*12 (/3 because indices are multiplied by 3 for gpu matrix access, *12 because it's the matrix size)\n\t\t\t\t\tvar mtxOffset:number /*uint*/ = jointIndices[j++] << 2;\n\t\t\t\t\tm11 = this._globalMatrices[mtxOffset];\n\t\t\t\t\tm12 = this._globalMatrices[mtxOffset + 1];\n\t\t\t\t\tm13 = this._globalMatrices[mtxOffset + 2];\n\t\t\t\t\tm14 = this._globalMatrices[mtxOffset + 3];\n\t\t\t\t\tm21 = this._globalMatrices[mtxOffset + 4];\n\t\t\t\t\tm22 = this._globalMatrices[mtxOffset + 5];\n\t\t\t\t\tm23 = this._globalMatrices[mtxOffset + 6];\n\t\t\t\t\tm24 = this._globalMatrices[mtxOffset + 7];\n\t\t\t\t\tm31 = this._globalMatrices[mtxOffset + 8];\n\t\t\t\t\tm32 = this._globalMatrices[mtxOffset + 9];\n\t\t\t\t\tm33 = this._globalMatrices[mtxOffset + 10];\n\t\t\t\t\tm34 = this._globalMatrices[mtxOffset + 11];\n\t\t\t\t\tvx += weight*(m11*vertX + m12*vertY + m13*vertZ + m14);\n\t\t\t\t\tvy += weight*(m21*vertX + m22*vertY + m23*vertZ + m24);\n\t\t\t\t\tvz += weight*(m31*vertX + m32*vertY + m33*vertZ + m34);\n\t\t\t\t\tnx += weight*(m11*normX + m12*normY + m13*normZ);\n\t\t\t\t\tny += weight*(m21*normX + m22*normY + m23*normZ);\n\t\t\t\t\tnz += weight*(m31*normX + m32*normY + m33*normZ);\n\t\t\t\t\ttx += weight*(m11*tangX + m12*tangY + m13*tangZ);\n\t\t\t\t\tty += weight*(m21*tangX + m22*tangY + m23*tangZ);\n\t\t\t\t\ttz += weight*(m31*tangX + m32*tangY + m33*tangZ);\n\t\t\t\t\t++k;\n\t\t\t\t} else {\n\t\t\t\t\tj += (this._jointsPerVertex - k);\n\t\t\t\t\tk = this._jointsPerVertex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetPositions[i0] = vx;\n\t\t\ttargetPositions[i0 + 1] = vy;\n\t\t\tif (posDim == 3) targetPositions[i0 + 2] = vz;\n\t\t\ttargetNormals[i1] = nx;\n\t\t\ttargetNormals[i1 + 1] = ny;\n\t\t\ttargetNormals[i1 + 2] = nz;\n\t\t\ttargetTangents[i1] = tx;\n\t\t\ttargetTangents[i1 + 1] = ty;\n\t\t\ttargetTangents[i1 + 2] = tz;\n\n\t\t\tindex++;\n\t\t}\n\n\t\ttargetElements.setPositions(targetPositions);\n\t\ttargetElements.setNormals(targetNormals);\n\t\ttargetElements.setTangents(targetTangents);\n\t}\n\n\t/**\n\t * Converts a local hierarchical skeleton pose to a global pose\n\t * @param targetPose The SkeletonPose object that will contain the global pose.\n\t * @param skeleton The skeleton containing the joints, and as such, the hierarchical data to transform to global poses.\n\t */\n\tprivate localToGlobalPose(sourcePose:SkeletonPose, targetPose:SkeletonPose, skeleton:Skeleton)\n\t{\n\t\tvar globalPoses:Array<JointPose> = targetPose.jointPoses;\n\t\tvar globalJointPose:JointPose;\n\t\tvar joints:Array<SkeletonJoint> = skeleton.joints;\n\t\tvar len:number /*uint*/ = sourcePose.numJointPoses;\n\t\tvar jointPoses:Array<JointPose> = sourcePose.jointPoses;\n\t\tvar parentIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tvar parentPose:JointPose;\n\t\tvar pose:JointPose;\n\t\tvar or:Quaternion;\n\t\tvar tr:Vector3D;\n\t\tvar t:Vector3D;\n\t\tvar q:Quaternion;\n\n\t\tvar x1:number, y1:number, z1:number, w1:number;\n\t\tvar x2:number, y2:number, z2:number, w2:number;\n\t\tvar x3:number, y3:number, z3:number;\n\n\t\t// :s\n\t\tif (globalPoses.length != len)\n\t\t\tglobalPoses.length = len;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tglobalJointPose = globalPoses[i];\n\n\t\t\tif (globalJointPose == null)\n\t\t\t\tglobalJointPose = globalPoses[i] = new JointPose();\n\n\t\t\tjoint = joints[i];\n\t\t\tparentIndex = joint.parentIndex;\n\t\t\tpose = jointPoses[i];\n\n\t\t\tq = globalJointPose.orientation;\n\t\t\tt = globalJointPose.translation;\n\n\t\t\tif (parentIndex < 0) {\n\t\t\t\ttr = pose.translation;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tq.x = or.x;\n\t\t\t\tq.y = or.y;\n\t\t\t\tq.z = or.z;\n\t\t\t\tq.w = or.w;\n\t\t\t\tt.x = tr.x;\n\t\t\t\tt.y = tr.y;\n\t\t\t\tt.z = tr.z;\n\t\t\t} else {\n\t\t\t\t// append parent pose\n\t\t\t\tparentPose = globalPoses[parentIndex];\n\n\t\t\t\t// rotate point\n\t\t\t\tor = parentPose.orientation;\n\t\t\t\ttr = pose.translation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\t\t\t\tx3 = tr.x;\n\t\t\t\ty3 = tr.y;\n\t\t\t\tz3 = tr.z;\n\n\t\t\t\tw1 = -x2*x3 - y2*y3 - z2*z3;\n\t\t\t\tx1 = w2*x3 + y2*z3 - z2*y3;\n\t\t\t\ty1 = w2*y3 - x2*z3 + z2*x3;\n\t\t\t\tz1 = w2*z3 + x2*y3 - y2*x3;\n\n\t\t\t\t// append parent translation\n\t\t\t\ttr = parentPose.translation;\n\t\t\t\tt.x = -w1*x2 + x1*w2 - y1*z2 + z1*y2 + tr.x;\n\t\t\t\tt.y = -w1*y2 + x1*z2 + y1*w2 - z1*x2 + tr.y;\n\t\t\t\tt.z = -w1*z2 - x1*y2 + y1*x2 + z1*w2 + tr.z;\n\n\t\t\t\t// append parent orientation\n\t\t\t\tx1 = or.x;\n\t\t\t\ty1 = or.y;\n\t\t\t\tz1 = or.z;\n\t\t\t\tw1 = or.w;\n\t\t\t\tor = pose.orientation;\n\t\t\t\tx2 = or.x;\n\t\t\t\ty2 = or.y;\n\t\t\t\tz2 = or.z;\n\t\t\t\tw2 = or.w;\n\n\t\t\t\tq.w = w1*w2 - x1*x2 - y1*y2 - z1*z2;\n\t\t\t\tq.x = w1*x2 + x1*w2 + y1*z2 - z1*y2;\n\t\t\t\tq.y = w1*y2 - x1*z2 + y1*w2 + z1*x2;\n\t\t\t\tq.z = w1*z2 + x1*y2 - y1*x2 + z1*w2;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTransitionComplete(event:AnimationStateEvent)\n\t{\n\t\tif (event.type == AnimationStateEvent.TRANSITION_COMPLETE) {\n\t\t\tevent.animationNode.removeEventListener(AnimationStateEvent.TRANSITION_COMPLETE, this._onTransitionCompleteDelegate);\n\t\t\t//if this is the current active state transition, revert control to the active node\n\t\t\tif (this._pActiveState == event.animationState) {\n\t\t\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t\t\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\t\t\t\tthis._activeSkeletonState = <ISkeletonAnimationState> this._pActiveState;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onIndicesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\n\t\t(<TriangleElements> this._morphedElements[elements.id]).setIndices(elements.indices);\n\t}\n\n\tprivate onVerticesUpdate(event:ElementsEvent)\n\t{\n\t\tvar elements:TriangleElements = <TriangleElements> event.target;\n\t\tvar morphGraphics:TriangleElements = <TriangleElements> this._morphedElements[elements.id];\n\n\t\tswitch(event.attributesView) {\n\t\t\tcase elements.uvs:\n\t\t\t\tmorphGraphics.setUVs(elements.uvs.get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t\tcase elements.getCustomAtributes(\"secondaryUVs\"):\n\t\t\t\tmorphGraphics.setCustomAttributes(\"secondaryUVs\", elements.getCustomAtributes(\"secondaryUVs\").get(elements.numVertices));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default SkeletonAnimator;",
    "import IAnimationSet\t\t\t\t\tfrom \"awayjs-display/lib/animators/IAnimationSet\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nimport VertexAnimationMode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/VertexAnimationMode\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\n\n/**\n * The animation data set used by vertex-based animators, containing vertex animation state data.\n *\n * @see VertexAnimator\n */\nclass VertexAnimationSet extends AnimationSetBase implements IAnimationSet\n{\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\n\t/**\n\t * Returns the number of poses made available at once to the GPU animation code.\n\t */\n\tpublic get numPoses():number /*uint*/\n\t{\n\t\treturn this._numPoses;\n\t}\n\n\t/**\n\t * Returns the active blend mode of the vertex animator object.\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._blendMode;\n\t}\n\n\t/**\n\t * Returns whether or not normal data is used in last set GPU pass of the vertex shader.\n\t */\n//\t\tpublic get useNormals():boolean\n//\t\t{\n//\t\t\treturn this._uploadNormals;\n//\t\t}\n\n\t/**\n\t * Creates a new <code>VertexAnimationSet</code> object.\n\t *\n\t * @param numPoses The number of poses made available at once to the GPU animation code.\n\t * @param blendMode Optional value for setting the animation mode of the vertex animator object.\n\t *\n\t * @see away3d.animators.data.VertexAnimationMode\n\t */\n\tconstructor(numPoses:number /*uint*/ = 2, blendMode:string = \"absolute\")\n\t{\n\t\tsuper();\n\t\tthis._numPoses = numPoses;\n\t\tthis._blendMode = blendMode;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase):string\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\treturn this.getAbsoluteAGALCode(shader);\n\t\telse\n\t\t\treturn this.getAdditiveAGALCode(shader);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tthis._uploadNormals = <boolean> this._useNormals[uID];\n//\t\t\tthis._uploadTangents = <boolean> this._useTangents[uID];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shader:ShaderBase, stage:Stage)\n\t{\n//\t\t\tvar uID:number = pass._iUniqueId;\n//\t\t\tvar index:number /*uint*/ = this._streamIndices[uID];\n//\t\t\tvar context:IContextGL = <IContextGL> stage.context;\n//\t\t\tcontext.setVertexBufferAt(index, null);\n//\t\t\tif (this._uploadNormals)\n//\t\t\t\tcontext.setVertexBufferAt(index + 1, null);\n//\t\t\tif (this._uploadTangents)\n//\t\t\t\tcontext.setVertexBufferAt(index + 2, null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, shadedTarget:string):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase):string\n\t{\n\t\treturn \"mov \" + shader.uvTarget + \",\" + shader.uvSource + \"\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for absolute blending.\n\t */\n\tprivate getAbsoluteAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar temp2:string = this._pFindTempReg(shader.animationTargetRegisters, temp1);\n\t\tvar regs:Array<string> = new Array<string>(\"x\", \"y\", \"z\", \"w\");\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar constantReg:string = \"vc\" + shader.numUsedVertexConstants;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tcode += \"mul \" + temp1 + \", \" + shader.animatableAttributes[i] + \", \" + constantReg + \".\" + regs[0] + \"\\n\";\n\n\t\t\tfor (var j:number /*uint*/ = 1; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp2 + \", va\" + streamIndex + \", \" + constantReg + \".\" + regs[j] + \"\\n\";\n\n\t\t\t\tif (j < this._numPoses - 1)\n\t\t\t\t\tcode += \"add \" + temp1 + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\t\t\t++streamIndex;\n\t\t\t}\n\n\t\t\tcode += \"add \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\t\t}\n\n\t\t// add code for bitangents if tangents are used\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animationTargetRegisters[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generates the vertex AGAL code for additive blending.\n\t */\n\tprivate getAdditiveAGALCode(shader:ShaderBase):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*uint*/ = shader.animatableAttributes.length;\n\t\tvar regs:Array<string> = [\"x\", \"y\", \"z\", \"w\"];\n\t\tvar temp1:string = this._pFindTempReg(shader.animationTargetRegisters);\n\t\tvar k:number /*uint*/;\n\n\t\tvar streamIndex:number /*uint*/ = shader.numUsedStreams;\n\n\t\tif (len > 2)\n\t\t\tlen = 2;\n\n\t\tcode += \"mov  \" + shader.animationTargetRegisters[0] + \", \" + shader.animatableAttributes[0] + \"\\n\";\n\t\tif (shader.normalDependencies > 0)\n\t\t\tcode += \"mov \" + shader.animationTargetRegisters[1] + \", \" + shader.animatableAttributes[1] + \"\\n\";\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; ++i) {\n\t\t\tfor (var j:number /*uint*/ = 0; j < this._numPoses; ++j) {\n\t\t\t\tcode += \"mul \" + temp1 + \", va\" + (streamIndex + k) + \", vc\" + shader.numUsedVertexConstants + \".\" + regs[j] + \"\\n\" +\n\t\t\t\t\t\"add \" + shader.animationTargetRegisters[i] + \", \" + shader.animationTargetRegisters[i] + \", \" + temp1 + \"\\n\";\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\n\t\tif (shader.tangentDependencies > 0 || shader.outputsNormals) {\n\t\t\tcode += \"dp3 \" + temp1 + \".x, \" + shader.animatableAttributes[2] + \", \" + shader.animationTargetRegisters[1] + \"\\n\" +\n\t\t\t\t\"mul \" + temp1 + \", \" + shader.animationTargetRegisters[1] + \", \" + temp1 + \".x\\n\" +\n\t\t\t\t\"sub \" + shader.animationTargetRegisters[2] + \", \" + shader.animatableAttributes[2] + \", \" + temp1 + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n}\n\nexport default VertexAnimationSet;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport ElementsBase\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Graphic\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport VertexAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimationSet\";\nimport VertexAnimationMode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/VertexAnimationMode\";\nimport IVertexAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IVertexAnimationState\";\nimport IAnimationTransition\t\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\";\nimport GL_GraphicRenderable\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport GL_ElementsBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_ElementsBase\";\n\n/**\n * Provides an interface for assigning vertex-based animation data sets to sprite-based entity objects\n * and controlling the various available states of animation through an interative playhead that can be\n * automatically updated or manually triggered.\n */\nclass VertexAnimator extends AnimatorBase\n{\n\tprivate _vertexAnimationSet:VertexAnimationSet;\n\tprivate _poses:Array<Graphics> = new Array<Graphics>();\n\tprivate _weights:Float32Array = new Float32Array([1, 0, 0, 0]);\n\tprivate _numPoses:number /*uint*/;\n\tprivate _blendMode:string;\n\tprivate _activeVertexState:IVertexAnimationState;\n\n\t/**\n\t * Creates a new <code>VertexAnimator</code> object.\n\t *\n\t * @param vertexAnimationSet The animation data set containing the vertex animations used by the animator.\n\t */\n\tconstructor(vertexAnimationSet:VertexAnimationSet)\n\t{\n\t\tsuper(vertexAnimationSet);\n\n\t\tthis._vertexAnimationSet = vertexAnimationSet;\n\t\tthis._numPoses = vertexAnimationSet.numPoses;\n\t\tthis._blendMode = vertexAnimationSet.blendMode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\treturn new VertexAnimator(this._vertexAnimationSet);\n\t}\n\n\t/**\n\t * Plays a sequence with a given name. If the sequence is not found, it may not be loaded yet, and it will retry every frame.\n\t * @param sequenceName The name of the clip to be played.\n\t */\n\tpublic play(name:string, transition:IAnimationTransition = null, offset:number = NaN)\n\t{\n\t\tif (this._pActiveAnimationName == name)\n\t\t\treturn;\n\n\t\tthis._pActiveAnimationName = name;\n\n\t\t//TODO: implement transitions in vertex animator\n\n\t\tif (!this._pAnimationSet.hasAnimation(name))\n\t\t\tthrow new Error(\"Animation root node \" + name + \" not found!\");\n\n\t\tthis._pActiveNode = this._pAnimationSet.getAnimation(name);\n\n\t\tthis._pActiveState = this.getAnimationState(this._pActiveNode);\n\n\t\tif (this.updatePosition) {\n\t\t\t//update straight away to reset position deltas\n\t\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\t\t\tthis._pActiveState.positionDelta;\n\t\t}\n\n\t\tthis._activeVertexState = <IVertexAnimationState> this._pActiveState;\n\n\t\tthis.start();\n\n\t\t//apply a time offset if specified\n\t\tif (!isNaN(offset))\n\t\t\tthis.reset(name, offset);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tsuper._pUpdateDeltaTime(dt);\n\n\t\tvar geometryFlag:boolean = false;\n\n\t\tif (this._poses[0] != this._activeVertexState.currentGraphics) {\n\t\t\tthis._poses[0] = this._activeVertexState.currentGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tif (this._poses[1] != this._activeVertexState.nextGraphics) {\n\t\t\tthis._poses[1] = this._activeVertexState.nextGraphics;\n\t\t\tgeometryFlag = true;\n\t\t}\n\n\t\tthis._weights[0] = 1 - (this._weights[1] = this._activeVertexState.blendWeight);\n\n\t\tif (geometryFlag) {\n\t\t\t//invalidate sprites\n\t\t\tvar sprite:Sprite;\n\t\t\tvar len:number = this._pOwners.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsprite = this._pOwners[i];\n\t\t\t\tsprite.graphics.invalidateElements();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(shader:ShaderBase, renderable:GL_RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\t// todo: add code for when running on cpu\n\t\t// this type of animation can only be SubSprite\n\t\tvar graphic:Graphic = <Graphic> (<GL_GraphicRenderable> renderable).graphic;\n\t\tvar elements:ElementsBase = graphic.elements;\n\n\t\t// if no poses defined, set temp data\n\t\tif (!this._poses.length) {\n\t\t\tthis.setNullPose(shader, elements, stage, vertexConstantOffset, vertexStreamOffset);\n\t\t\treturn;\n\t\t}\n\n\n\t\tvar i:number /*uint*/;\n\t\tvar len:number /*uint*/ = this._numPoses;\n\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE)\n\t\t\ti = 1;\n\t\telse\n\t\t\ti = 0;\n\n\t\tvar elementsGL:GL_ElementsBase;\n\n\t\tfor (; i < len; ++i) {\n\t\t\telements = this._poses[i].getGraphicAt(graphic._iIndex).elements || graphic.elements;\n\n\t\t\telementsGL = shader._elementsPool.getAbstraction(elements);\n\t\t\telementsGL._indexMappings = shader._elementsPool.getAbstraction(graphic.elements).getIndexMappings();\n\n\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setNullPose(shader:ShaderBase, elements:ElementsBase, stage:Stage, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, vertexConstantOffset, this._weights, 1);\n\n\t\tvar elementsGL:GL_ElementsBase = shader._elementsPool.getAbstraction(elements);\n\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE) {\n\t\t\tvar len:number /*uint*/ = this._numPoses;\n\t\t\tfor (var i:number /*uint*/ = 1; i < len; ++i) {\n\t\t\t\tif (elements.isAsset(TriangleElements)) {\n\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).positions);\n\n\t\t\t\t\tif (shader.normalDependencies > 0)\n\t\t\t\t\t\telementsGL.activateVertexBufferVO(vertexStreamOffset++, (<TriangleElements> elements).normals);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// todo: set temp data for additive?\n\t}\n\n\t/**\n\t * Verifies if the animation will be used on cpu. Needs to be true for all passes for a material to be able to use it on gpu.\n\t * Needs to be called if gpu code is potentially required.\n\t */\n\tpublic testGPUCompatibility(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic getRenderableElements(renderable:GL_GraphicRenderable, sourceElements:TriangleElements):TriangleElements\n\t{\n\t\tif (this._blendMode == VertexAnimationMode.ABSOLUTE && this._poses.length)\n\t\t\treturn <TriangleElements> this._poses[0].getGraphicAt(renderable.graphic._iIndex).elements || sourceElements;\n\n\t\t//nothing to do here\n\t\treturn sourceElements;\n\t}\n}\n\nexport default VertexAnimator;",
    "import Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IVertexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\n\nimport ParticleAnimationData\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleAnimationData\";\n\n/**\n * ...\n */\nclass AnimationElements\n{\n\tpublic static SUBGEOM_ID_COUNT:number = 0;\n\n\tpublic _pVertexData:Array<number>;\n\n\tpublic _pVertexBuffer:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\tpublic _pBufferContext:Array<IContextGL> = new Array<IContextGL>(8);\n\tpublic _pBufferDirty:Array<boolean> = new Array<boolean>(8);\n\n\tprivate _numVertices:number /*uint*/;\n\n\tprivate _totalLenOfOneVertex:number /*uint*/;\n\n\tpublic numProcessedVertices:number /*int*/ = 0;\n\n\tpublic previousTime:number = Number.NEGATIVE_INFINITY;\n\n\tpublic animationParticles:Array<ParticleAnimationData> = new Array<ParticleAnimationData>();\n\n\t/**\n\t * An id for this animation subgeometry, used to identify animation subgeometries when using animation sets.\n\t *\n\t * @private\n\t */\n\tpublic _iUniqueId:number;//Arcane\n\n\tconstructor()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\n\t\tthis._iUniqueId = AnimationElements.SUBGEOM_ID_COUNT++;\n\t}\n\n\tpublic createVertexData(numVertices:number /*uint*/, totalLenOfOneVertex:number /*uint*/)\n\t{\n\t\tthis._numVertices = numVertices;\n\t\tthis._totalLenOfOneVertex = totalLenOfOneVertex;\n\t\tthis._pVertexData = new Array<number>(numVertices*totalLenOfOneVertex);\n\t}\n\n\tpublic activateVertexBuffer(index:number /*int*/, bufferOffset:number /*int*/, stage:Stage, format:number)\n\t{\n\t\tvar contextIndex:number /*int*/ = stage.stageIndex;\n\t\tvar context:IContextGL = <IContextGL> stage.context;\n\n\t\tvar buffer:IVertexBuffer = this._pVertexBuffer[contextIndex];\n\t\tif (!buffer || this._pBufferContext[contextIndex] != context) {\n\t\t\tbuffer = this._pVertexBuffer[contextIndex] = context.createVertexBuffer(this._numVertices, this._totalLenOfOneVertex*4);\n\t\t\tthis._pBufferContext[contextIndex] = context;\n\t\t\tthis._pBufferDirty[contextIndex] = true;\n\t\t}\n\t\tif (this._pBufferDirty[contextIndex]) {\n\t\t\tbuffer.uploadFromArray(this._pVertexData, 0, this._numVertices);\n\t\t\tthis._pBufferDirty[contextIndex] = false;\n\t\t}\n\t\tcontext.setVertexBufferAt(index, buffer, bufferOffset*4, format);\n\t}\n\n\tpublic dispose()\n\t{\n\t\twhile (this._pVertexBuffer.length) {\n\t\t\tvar vertexBuffer:IVertexBuffer = this._pVertexBuffer.pop()\n\n\t\t\tif (vertexBuffer)\n\t\t\t\tvertexBuffer.dispose();\n\t\t}\n\t}\n\n\tpublic invalidateBuffer()\n\t{\n\t\tfor (var i:number /*int*/ = 0; i < 8; i++)\n\t\t\tthis._pBufferDirty[i] = true;\n\t}\n\n\tpublic get vertexData():Array<number>\n\t{\n\t\treturn this._pVertexData;\n\t}\n\n\tpublic get numVertices():number /*uint*/\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get totalLenOfOneVertex():number /*uint*/\n\t{\n\t\treturn this._totalLenOfOneVertex;\n\t}\n}\n\nexport default AnimationElements;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport AnimationNodeBase\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/../shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/animators/../shaders/ShaderRegisterElement\";\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData = new Float32Array(this._numVertexConstant*4);\n\t\tthis.fragmentConstantData = new Float32Array(this._numFragmentConstant*4);\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Float32Array = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport default AnimationRegisterCache;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nclass ColorSegmentPoint\n{\n\tprivate _color:ColorTransform;\n\tprivate _life:number;\n\n\tconstructor(life:number, color:ColorTransform)\n\t{\n\t\t//0<life<1\n\t\tif (life <= 0 || life >= 1)\n\t\t\tthrow(new Error(\"life exceeds range (0,1)\"));\n\t\tthis._life = life;\n\t\tthis._color = color;\n\t}\n\n\tpublic get color():ColorTransform\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic get life():number\n\t{\n\t\treturn this._life;\n\t}\n\n}\n\nexport default ColorSegmentPoint;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n/**\n * Contains transformation data for a skeleton joint, used for skeleton animation.\n *\n * @see away.animation.Skeleton\n * @see away.animation.SkeletonJoint\n *\n * todo: support (uniform) scale\n */\nclass JointPose\n{\n\t/**\n\t * The name of the joint to which the pose is associated\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The rotation of the pose stored as a quaternion\n\t */\n\tpublic orientation:Quaternion = new Quaternion();\n\n\t/**\n\t * The translation of the pose\n\t */\n\tpublic translation:Vector3D = new Vector3D();\n\n\tconstructor()\n\t{\n\n\t}\n\n\t/**\n\t * Converts the transformation to a Matrix3D representation.\n\t *\n\t * @param target An optional target matrix to store the transformation. If not provided, it will create a new instance.\n\t * @return The transformation matrix of the pose.\n\t */\n\tpublic toMatrix3D(target:Matrix3D = null):Matrix3D\n\t{\n\t\tif (target == null)\n\t\t\ttarget = new Matrix3D();\n\n\t\tthis.orientation.toMatrix3D(target);\n\t\ttarget.appendTranslation(this.translation.x, this.translation.y, this.translation.z);\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies the transformation data from a source pose object into the existing pose object.\n\t *\n\t * @param pose The source pose to copy from.\n\t */\n\tpublic copyFrom(pose:JointPose)\n\t{\n\t\tvar or:Quaternion = pose.orientation;\n\t\tvar tr:Vector3D = pose.translation;\n\t\tthis.orientation.x = or.x;\n\t\tthis.orientation.y = or.y;\n\t\tthis.orientation.z = or.z;\n\t\tthis.orientation.w = or.w;\n\t\tthis.translation.x = tr.x;\n\t\tthis.translation.y = tr.y;\n\t\tthis.translation.z = tr.z;\n\t}\n}\n\nexport default JointPose;",
    "import ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\n\n/**\n * ...\n */\nclass ParticleAnimationData\n{\n\tpublic index:number /*uint*/;\n\tpublic startTime:number;\n\tpublic totalTime:number;\n\tpublic duration:number;\n\tpublic delay:number;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\n\tconstructor(index:number /*uint*/, startTime:number, duration:number, delay:number, particle:ParticleData)\n\t{\n\t\tthis.index = index;\n\t\tthis.startTime = startTime;\n\t\tthis.totalTime = duration + delay;\n\t\tthis.duration = duration;\n\t\tthis.delay = delay;\n\t\tthis.startVertexIndex = particle.startVertexIndex;\n\t\tthis.numVertices = particle.numVertices;\n\t}\n}\n\nexport default ParticleAnimationData;",
    "/**\n * Options for setting the properties mode of a particle animation node.\n */\nclass ParticlePropertiesMode\n{\n\t/**\n\t * Mode that defines the particle node as acting on global properties (ie. the properties set in the node constructor or the corresponding animation state).\n\t */\n\tpublic static GLOBAL:number /*uint*/ = 0;\n\n\t/**\n\t * Mode that defines the particle node as acting on local static properties (ie. the properties of particles set in the initialising on the animation set).\n\t */\n\tpublic static LOCAL_STATIC:number /*uint*/ = 1;\n\n\t/**\n\t * Mode that defines the particle node as acting on local dynamic properties (ie. the properties of the particles set in the corresponding animation state).\n\t */\n\tpublic static LOCAL_DYNAMIC:number /*uint*/ = 2;\n}\n\nexport default ParticlePropertiesMode;",
    "/**\n * Dynamic class for holding the local properties of a particle, used for processing the static properties\n * of particles in the particle animation set before beginning upload to the GPU.\n */\nclass ParticleProperties\n{\n\t/**\n\t * The index of the current particle being set.\n\t */\n\tpublic index:number /*uint*/;\n\n\t/**\n\t * The total number of particles being processed by the particle animation set.\n\t */\n\tpublic total:number /*uint*/;\n\n\t/**\n\t * The start time of the particle.\n\t */\n\tpublic startTime:number;\n\n\t/**\n\t * The duration of the particle, an optional value used when the particle aniamtion set settings for <code>useDuration</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic duration:number;\n\n\t/**\n\t * The delay between cycles of the particle, an optional value used when the particle aniamtion set settings for <code>useLooping</code> and  <code>useDelay</code> are enabled in the constructor.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t */\n\tpublic delay:number;\n}\n\nexport default ParticleProperties;",
    "/**\n * A value obect representing a single joint in a skeleton object.\n *\n * @see away.animators.Skeleton\n */\nclass SkeletonJoint\n{\n\t/**\n\t * The index of the parent joint in the skeleton's joints vector.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic parentIndex:number /*int*/ = -1;\n\n\t/**\n\t * The name of the joint\n\t */\n\tpublic name:string; // intention is that this should be used only at load time, not in the main loop\n\n\t/**\n\t * The inverse bind pose matrix, as raw data, used to transform vertices to bind joint space in preparation for transformation using the joint matrix.\n\t */\n\tpublic inverseBindPose:Float32Array;\n\n\t/**\n\t * Creates a new <code>SkeletonJoint</code> object\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default SkeletonJoint;",
    "import IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\n\n\n/**\n * A collection of pose objects, determining the pose for an entire skeleton.\n * The <code>jointPoses</code> vector object corresponds to a skeleton's <code>joints</code> vector object, however, there is no\n * reference to a skeleton's instance, since several skeletons can be influenced by the same pose (eg: animation\n * clips are added to any animator with a valid skeleton)\n *\n * @see away.animators.Skeleton\n * @see away.animators.JointPose\n */\nclass SkeletonPose extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset SkeletonPose]\";\n\n\t/**\n\t * A flat list of pose objects that comprise the skeleton pose. The pose indices correspond to the target skeleton's joint indices.\n\t *\n\t * @see away.animators.Skeleton#joints\n\t */\n\tpublic jointPoses:Array<JointPose>;\n\n\t/**\n\t * The total number of joint poses in the skeleton pose.\n\t */\n\tpublic get numJointPoses():number /*uint*/\n\t{\n\t\treturn this.jointPoses.length;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonPose</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.jointPoses = new Array<JointPose>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SkeletonPose.assetType;\n\t}\n\n\t/**\n\t * Returns the joint pose object with the given joint name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object whose pose is to be found.\n\t * @return The pose object with the given joint name.\n\t */\n\tpublic jointPoseFromName(jointName:string):JointPose\n\t{\n\t\tvar jointPoseIndex:number /*int*/ = this.jointPoseIndexFromName(jointName);\n\t\tif (jointPoseIndex != -1)\n\t\t\treturn this.jointPoses[jointPoseIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the pose index, given the joint name. -1 is returned if the joint name is not found in the pose.\n\t *\n\t * @param The name of the joint object whose pose is to be found.\n\t * @return The index of the pose object in the jointPoses Array\n\t *\n\t * @see #jointPoses\n\t */\n\tpublic jointPoseIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access JointPoses,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointPoseIndex:number /*int*/;\n\t\tvar jointPose:JointPose;\n\t\tfor (var i:number /*uint*/; i < this.jointPoses.length; i++) {\n\t\t\tjointPose = this.jointPoses[i];\n\t\t\tif (jointPose.name == jointName)\n\t\t\t\treturn jointPoseIndex;\n\t\t\tjointPoseIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Creates a copy of the <code>SkeletonPose</code> object, with a dulpicate of its component joint poses.\n\t *\n\t * @return SkeletonPose\n\t */\n\tpublic clone():SkeletonPose\n\t{\n\t\tvar clone:SkeletonPose = new SkeletonPose();\n\t\tvar numJointPoses:number /*uint*/ = this.jointPoses.length;\n\t\tfor (var i:number /*uint*/ = 0; i < numJointPoses; i++) {\n\t\t\tvar cloneJointPose:JointPose = new JointPose();\n\t\t\tvar thisJointPose:JointPose = this.jointPoses[i];\n\t\t\tcloneJointPose.name = thisJointPose.name;\n\t\t\tcloneJointPose.copyFrom(thisJointPose);\n\t\t\tclone.jointPoses[i] = cloneJointPose;\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.jointPoses.length = 0;\n\t}\n}\n\nexport default SkeletonPose;",
    "import SkeletonJoint\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonJoint\";\n\nimport IAsset\t\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AssetBase\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * A Skeleton object is a hierarchical grouping of joint objects that can be used for skeletal animation.\n *\n * @see away.animators.SkeletonJoint\n */\nclass Skeleton extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Skeleton]\";\n\n\t/**\n\t * A flat list of joint objects that comprise the skeleton. Every joint except for the root has a parentIndex\n\t * property that is an index into this list.\n\t * A child joint should always have a higher index than its parent.\n\t */\n\tpublic joints:Array<SkeletonJoint>;\n\n\t/**\n\t * The total number of joints in the skeleton.\n\t */\n\tpublic get numJoints():number /*uint*/\n\t{\n\t\treturn this.joints.length;\n\t}\n\n\t/**\n\t * Creates a new <code>Skeleton</code> object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// in the long run, it might be a better idea to not store Joint objects, but keep all data in Vectors, that we can upload easily?\n\t\tthis.joints = new Array<SkeletonJoint>();\n\t}\n\n\t/**\n\t * Returns the joint object in the skeleton with the given name, otherwise returns a null object.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The joint object with the given name.\n\t *\n\t * @see #joints\n\t */\n\tpublic jointFromName(jointName:string):SkeletonJoint\n\t{\n\t\tvar jointIndex:number /*int*/ = this.jointIndexFromName(jointName);\n\t\tif (jointIndex != -1)\n\t\t\treturn this.joints[jointIndex]; else\n\t\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the joint index, given the joint name. -1 is returned if the joint name is not found.\n\t *\n\t * @param jointName The name of the joint object to be found.\n\t * @return The index of the joint object in the joints Array\n\t *\n\t * @see #joints\n\t */\n\tpublic jointIndexFromName(jointName:string):number /*int*/\n\t{\n\t\t// this is implemented as a linear search, rather than a possibly\n\t\t// more optimal method (Dictionary lookup, for example) because:\n\t\t// a) it is assumed that it will be called once for each joint\n\t\t// b) it is assumed that it will be called only during load, and not during main loop\n\t\t// c) maintaining a dictionary (for safety) would dictate an interface to access SkeletonJoints,\n\t\t//    rather than direct array access.  this would be sub-optimal.\n\t\tvar jointIndex:number /*int*/;\n\t\tvar joint:SkeletonJoint;\n\t\tfor (var i:number /*int*/; i < this.joints.length; i++) {\n\t\t\tjoint = this.joints[i];\n\t\t\tif (joint.name == jointName)\n\t\t\t\treturn jointIndex;\n\t\t\tjointIndex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.joints.length = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Skeleton.assetType;\n\t}\n}\n\nexport default Skeleton;",
    "/**\n * Options for setting the animation mode of a vertex animator object.\n *\n * @see away.animators.VertexAnimator\n */\nclass VertexAnimationMode\n{\n\t/**\n\t * Animation mode that adds all outputs from active vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ADDITIVE:string = \"additive\";\n\n\t/**\n\t * Animation mode that picks the output from a single vertex animation state to form the current vertex animation pose.\n\t */\n\tpublic static ABSOLUTE:string = \"absolute\";\n}\n\nexport default VertexAnimationMode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\n/**\n * Provides an abstract base class for nodes with time-based animation data in an animation blend tree.\n */\nclass AnimationClipNodeBase extends AnimationNodeBase\n{\n\tpublic _pLooping:boolean = true;\n\tpublic _pTotalDuration:number /*uint*/ = 0;\n\tpublic _pLastFrame:number /*uint*/;\n\n\tpublic _pStitchDirty:boolean = true;\n\tpublic _pStitchFinalFrame:boolean = false;\n\tpublic _pNumFrames:number /*uint*/ = 0;\n\n\tpublic _pDurations:Array<number> = new Array<number>();\n\t/*uint*/\n\tpublic _pTotalDelta:Vector3D = new Vector3D();\n\n\tpublic fixedFrameRate:boolean = true;\n\n\t/**\n\t * Determines whether the contents of the animation node have looping characteristics enabled.\n\t */\n\tpublic get looping():boolean\n\t{\n\t\treturn this._pLooping;\n\t}\n\n\tpublic set looping(value:boolean)\n\t{\n\t\tif (this._pLooping == value)\n\t\t\treturn;\n\n\t\tthis._pLooping = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * Defines if looping content blends the final frame of animation data with the first (true) or works on the\n\t * assumption that both first and last frames are identical (false). Defaults to false.\n\t */\n\tpublic get stitchFinalFrame():boolean\n\t{\n\t\treturn this._pStitchFinalFrame;\n\t}\n\n\tpublic set stitchFinalFrame(value:boolean)\n\t{\n\t\tif (this._pStitchFinalFrame == value)\n\t\t\treturn;\n\n\t\tthis._pStitchFinalFrame = value;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\tpublic get totalDuration():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDuration;\n\t}\n\n\tpublic get totalDelta():Vector3D\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pTotalDelta;\n\t}\n\n\tpublic get lastFrame():number /*uint*/\n\t{\n\t\tif (this._pStitchDirty)\n\t\t\tthis._pUpdateStitch();\n\n\t\treturn this._pLastFrame;\n\t}\n\n\t/**\n\t * Returns a vector of time values representing the duration (in milliseconds) of each animation frame in the clip.\n\t */\n\tpublic get durations():Array<number> /*uint*/\n\t{\n\t\treturn this._pDurations;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationClipNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Updates the node's final frame stitch state.\n\t *\n\t * @see #stitchFinalFrame\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tthis._pStitchDirty = false;\n\n\t\tthis._pLastFrame = (this._pStitchFinalFrame)? this._pNumFrames : this._pNumFrames - 1;\n\n\t\tthis._pTotalDuration = 0;\n\t\tthis._pTotalDelta.x = 0;\n\t\tthis._pTotalDelta.y = 0;\n\t\tthis._pTotalDelta.z = 0;\n\t}\n}\n\nexport default AnimationClipNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleAccelerationState\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to apply a constant acceleration vector to the motion of a particle.\n */\nclass ParticleAccelerationNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _acceleration:Vector3D;\n\n\t/**\n\t * Reference for acceleration node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of acceleration on the particle.\n\t */\n\tpublic static ACCELERATION_VECTOR3D:string = \"AccelerationVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleAccelerationNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] acceleration    Defines the default acceleration vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, acceleration:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleAcceleration\", mode, 3);\n\n\t\tthis._pStateClass = ParticleAccelerationState;\n\n\t\tthis._acceleration = acceleration || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pGetAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar accelerationValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleAccelerationState.ACCELERATION_INDEX, accelerationValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\n\t\tvar code:string = \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + accelerationValue + \"\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"mul \" + temp2 + \",\" + temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + temp2 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tcode += \"mul \" + temp + \",\" + temp + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + temp + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleAccelerationState\n\t{\n\t\treturn <ParticleAccelerationState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar tempAcceleration:Vector3D = param[ParticleAccelerationNode.ACCELERATION_VECTOR3D];\n\t\tif (!tempAcceleration)\n\t\t\tthrow new Error(\"there is no \" + ParticleAccelerationNode.ACCELERATION_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = tempAcceleration.x/2;\n\t\tthis._pOneData[1] = tempAcceleration.y/2;\n\t\tthis._pOneData[2] = tempAcceleration.z/2;\n\t}\n}\n\nexport default ParticleAccelerationNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleBezierCurveState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n/**\n * A particle animation node used to control the position of a particle over time along a bezier curve.\n */\nclass ParticleBezierCurveNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iControlPoint:Vector3D;\n\t/** @private */\n\tpublic _iEndPoint:Vector3D;\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the control point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_CONTROL_VECTOR3D:string = \"BezierControlVector3D\";\n\n\t/**\n\t * Reference for bezier curve node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the end point position (0, 1, 2) of the curve.\n\t */\n\tpublic static BEZIER_END_VECTOR3D:string = \"BezierEndVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleBezierCurveNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] controlPoint    Defines the default control point of the node, used when in global mode.\n\t * @param    [optional] endPoint        Defines the default end point of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, controlPoint:Vector3D = null, endPoint:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBezierCurve\", mode, 6);\n\n\t\tthis._pStateClass = ParticleBezierCurveState;\n\n\t\tthis._iControlPoint = controlPoint || new Vector3D();\n\t\tthis._iEndPoint = endPoint || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar controlValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_CONTROL_INDEX, controlValue.index);\n\n\t\tvar endValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBezierCurveState.BEZIER_END_INDEX, endValue.index);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar rev_time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar time_2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar time_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + rev_time + \",\" + animationRegisterCache.vertexOneConst + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\n\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexLife + \",\" + rev_time + \"\\n\";\n\t\tcode += \"mul \" + time_temp + \",\" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_temp + \",\" + controlValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + time_2 + \",\" + endValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"mul \" + time_2 + \",\" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sub \" + time_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"mul \" + time_temp + \",\" + animationRegisterCache.vertexTwoConst + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + controlValue + \",\" + time_temp + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + endValue + \",\" + time_2 + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBezierCurveState\n\t{\n\t\treturn <ParticleBezierCurveState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar bezierControl:Vector3D = param[ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D];\n\t\tif (!bezierControl)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_CONTROL_VECTOR3D + \" in param!\");\n\n\t\tvar bezierEnd:Vector3D = param[ParticleBezierCurveNode.BEZIER_END_VECTOR3D];\n\t\tif (!bezierEnd)\n\t\t\tthrow new Error(\"there is no \" + ParticleBezierCurveNode.BEZIER_END_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = bezierControl.x;\n\t\tthis._pOneData[1] = bezierControl.y;\n\t\tthis._pOneData[2] = bezierControl.z;\n\t\tthis._pOneData[3] = bezierEnd.x;\n\t\tthis._pOneData[4] = bezierEnd.y;\n\t\tthis._pOneData[5] = bezierEnd.z;\n\t}\n}\n\nexport default ParticleBezierCurveNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleBillboardState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleBillboardState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node that controls the rotation of a particle to always face the camera.\n */\nclass ParticleBillboardNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iBillboardAxis:Vector3D;\n\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor(billboardAxis:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleBillboard\", ParticlePropertiesMode.GLOBAL, 0, 4);\n\n\t\tthis._pStateClass = ParticleBillboardState;\n\n\t\tthis._iBillboardAxis = billboardAxis;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleBillboardState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\tvar code:string = \"m33 \" + temp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\t  \"mov \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\tvar shaderRegisterElement:ShaderRegisterElement;\n\t\tfor (var i:number /*uint*/ = 0; i < animationRegisterCache.rotationRegisters.length; i++) {\n\t\t\tshaderRegisterElement = animationRegisterCache.rotationRegisters[i];\n\t\t\tcode += \"m33 \" + temp + \".xyz,\" + shaderRegisterElement + \",\" + rotationMatrixRegister + \"\\n\" +\n\t\t\t\t\t\"mov \" + shaderRegisterElement + \".xyz,\" + shaderRegisterElement + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleBillboardState\n\t{\n\t\treturn <ParticleBillboardState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasBillboard = true;\n\t}\n}\n\nexport default ParticleBillboardNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleColorState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the color variation of a particle over time.\n */\nclass ParticleColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the start color transform applied to the particle.\n\t */\n\tpublic static COLOR_START_COLORTRANSFORM:string = \"ColorStartColorTransform\";\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the end color transform applied to the particle.\n\t */\n\tpublic static COLOR_END_COLORTRANSFORM:string = \"ColorEndColorTransform\";\n\n\t/**\n\t * Creates a new <code>ParticleColorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesMultiplier  Defines whether the node uses multiplier data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesOffset      Defines whether the node uses offset data in the shader for its color transformations. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] startColor      Defines the default start color transform of the node, when in global mode.\n\t * @param    [optional] endColor        Defines the default end color transform of the node, when in global mode.\n\t * @param    [optional] cycleDuration   Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, startColor:ColorTransform = null, endColor:ColorTransform = null, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleColor\", mode, (usesMultiplier && usesOffset)? 16 : 8, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iStartColor = startColor || new ColorTransform();\n\t\tthis._iEndColor = endColor || new ColorTransform();\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tif (this._iUsesCycle) {\n\t\t\t\tvar cycleConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.CYCLE_INDEX, cycleConst.index);\n\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\t\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + cycleConst + \".x\\n\";\n\n\t\t\t\tif (this._iUsesPhase)\n\t\t\t\t\tcode += \"add \" + sin + \",\" + sin + \",\" + cycleConst + \".y\\n\";\n\n\t\t\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar startMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tvar deltaMultiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_MULTIPLIER_INDEX, startMultiplierValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_MULTIPLIER_INDEX, deltaMultiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaMultiplierValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startMultiplierValue + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + temp + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar startOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tvar deltaOffsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleColorState.DELTA_OFFSET_INDEX, deltaOffsetValue.index);\n\n\t\t\t\tcode += \"mul \" + temp + \",\" + deltaOffsetValue + \",\" + (this._iUsesCycle? sin : animationRegisterCache.vertexLife) + \"\\n\";\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + startOffsetValue + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + temp + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleColorState\n\t{\n\t\treturn <ParticleColorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar startColor:ColorTransform = param[ParticleColorNode.COLOR_START_COLORTRANSFORM];\n\t\tif (!startColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_START_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar endColor:ColorTransform = param[ParticleColorNode.COLOR_END_COLORTRANSFORM];\n\t\tif (!endColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleColorNode.COLOR_END_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\tif (!this._iUsesCycle) {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.redMultiplier - startColor.redMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.greenMultiplier - startColor.greenMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.blueMultiplier - startColor.blueMultiplier;\n\t\t\t\tthis._pOneData[i++] = endColor.alphaMultiplier - startColor.alphaMultiplier;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = startColor.redOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.greenOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.blueOffset/255;\n\t\t\t\tthis._pOneData[i++] = startColor.alphaOffset/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.redOffset - startColor.redOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.greenOffset - startColor.greenOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.blueOffset - startColor.blueOffset)/255;\n\t\t\t\tthis._pOneData[i++] = (endColor.alphaOffset - startColor.alphaOffset)/255;\n\t\t\t}\n\t\t} else {\n\t\t\t//multiplier\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier + endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier + endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier + endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier + endColor.alphaMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.redMultiplier - endColor.redMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.greenMultiplier - endColor.greenMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.blueMultiplier - endColor.blueMultiplier)/2;\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaMultiplier - endColor.alphaMultiplier)/2;\n\t\t\t}\n\n\t\t\t//offset\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset + endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset + endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset + endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset + endColor.alphaOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.redOffset - endColor.redOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.greenOffset - endColor.greenOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.blueOffset - endColor.blueOffset)/(255*2);\n\t\t\t\tthis._pOneData[i++] = (startColor.alphaOffset - endColor.alphaOffset)/(255*2);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport default ParticleColorNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleFollowState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleFollowState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to create a follow behaviour on a particle system.\n */\nclass ParticleFollowNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesPosition:boolean;\n\n\t/** @private */\n\tpublic _iUsesRotation:boolean;\n\n\t/** @private */\n\tpublic _iSmooth:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleFollowNode</code>\n\t *\n\t * @param    [optional] usesPosition     Defines wehether the individual particle reacts to the position of the target.\n\t * @param    [optional] usesRotation     Defines wehether the individual particle reacts to the rotation of the target.\n\t * @param    [optional] smooth     Defines wehether the state calculate the interpolated value.\n\t */\n\tconstructor(usesPosition:boolean = true, usesRotation:boolean = true, smooth:boolean = false)\n\t{\n\t\tsuper(\"ParticleFollow\", ParticlePropertiesMode.LOCAL_DYNAMIC, (usesPosition && usesRotation)? 6 : 3, ParticleAnimationSet.POST_PRIORITY);\n\n\t\tthis._pStateClass = ParticleFollowState;\n\n\t\tthis._iUsesPosition = usesPosition;\n\t\tthis._iUsesRotation = usesRotation;\n\t\tthis._iSmooth = smooth;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//TODO: use Quaternion to implement this function\n\t\tvar code:string = \"\";\n\t\tif (this._iUsesRotation) {\n\t\t\tvar rotationAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_ROTATION_INDEX, rotationAttribute.index);\n\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar temp4:ShaderRegisterElement;\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(temp3, 1);\n\t\t\t\ttemp4 = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t}\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(temp3);\n\n\t\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\t\tvar i:number /*int*/;\n\n\t\t\t//x axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp3 + \".y,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"cos \" + temp3 + \".z,\" + rotationAttribute + \".x\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".z\\n\";\n\t\t\tcode += \"neg \" + temp2 + \".z,\" + temp3 + \".y\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//y axis\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"cos \" + temp1 + \".x,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"sin \" + temp1 + \".z,\" + rotationAttribute + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"neg \" + temp3 + \".x,\" + temp1 + \".z\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + temp1 + \".x\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard)\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\telse {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t\t//z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"sin \" + temp2 + \".x,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"cos \" + temp2 + \".y,\" + rotationAttribute + \".z\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp2 + \".y\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp2 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\n\t\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\t\tcode += \"m33 \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tcode += \"sub \" + temp4 + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp4 + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\t} else {\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._iUsesPosition) {\n\t\t\tvar positionAttribute:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleFollowState.FOLLOW_POSITION_INDEX, positionAttribute.index);\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + positionAttribute + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleFollowState\n\t{\n\t\treturn <ParticleFollowState> animator.getAnimationState(this);\n\t}\n}\n\nexport default ParticleFollowNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleInitialColorState\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleInitialColorNode extends ParticleNodeBase\n{\n\t//default values used when creating states\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iInitialColor:ColorTransform;\n\n\t/**\n\t * Reference for color node properties on a single particle (when in local property mode).\n\t * Expects a <code>ColorTransform</code> object representing the color transform applied to the particle.\n\t */\n\tpublic static COLOR_INITIAL_COLORTRANSFORM:string = \"ColorInitialColorTransform\";\n\n\tconstructor(mode:number /*uint*/, usesMultiplier:boolean = true, usesOffset:boolean = false, initialColor:ColorTransform = null)\n\t{\n\t\tsuper(\"ParticleInitialColor\", mode, (usesMultiplier && usesOffset)? 8 : 4, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleInitialColorState;\n\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iInitialColor = initialColor || new ColorTransform();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tvar multiplierValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.MULTIPLIER_INDEX, multiplierValue.index);\n\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + multiplierValue + \",\" + animationRegisterCache.colorMulTarget + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tvar offsetValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.LOCAL_STATIC)? animationRegisterCache.getFreeVertexAttribute() : animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleInitialColorState.OFFSET_INDEX, offsetValue.index);\n\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + offsetValue + \",\" + animationRegisterCache.colorAddTarget + \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar initialColor:ColorTransform = param[ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM];\n\t\tif (!initialColor)\n\t\t\tthrow(new Error(\"there is no \" + ParticleInitialColorNode.COLOR_INITIAL_COLORTRANSFORM + \" in param!\"));\n\n\t\tvar i:number /*uint*/ = 0;\n\n\t\t//multiplier\n\t\tif (this._iUsesMultiplier) {\n\t\t\tthis._pOneData[i++] = initialColor.redMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.greenMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.blueMultiplier;\n\t\t\tthis._pOneData[i++] = initialColor.alphaMultiplier;\n\t\t}\n\t\t//offset\n\t\tif (this._iUsesOffset) {\n\t\t\tthis._pOneData[i++] = initialColor.redOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.greenOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.blueOffset/255;\n\t\t\tthis._pOneData[i++] = initialColor.alphaOffset/255;\n\t\t}\n\n\t}\n\n}\n\nexport default ParticleInitialColorNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\n\n/**\n * Provides an abstract base class for particle animation nodes.\n */\nclass ParticleNodeBase extends AnimationNodeBase\n{\n\tprivate _priority:number /*int*/;\n\n\tpublic _pMode:number /*uint*/;\n\tpublic _pDataLength:number /*uint*/ = 3;\n\tpublic _pOneData:Array<number>;\n\n\tpublic _iDataOffset:number /*uint*/;\n\n\t//modes alias\n\tprivate static GLOBAL:string = 'Global';\n\tprivate static LOCAL_STATIC:string = 'LocalStatic';\n\tprivate static LOCAL_DYNAMIC:string = 'LocalDynamic';\n\n\t//modes list\n\tprivate static MODES:Object =\n\t{\n\t\t0:ParticleNodeBase.GLOBAL,\n\t\t1:ParticleNodeBase.LOCAL_STATIC,\n\t\t2:ParticleNodeBase.LOCAL_DYNAMIC\n\t};\n\n\t/**\n\t * Returns the property mode of the particle animation node. Typically set in the node constructor\n\t *\n\t * @see away.animators.ParticlePropertiesMode\n\t */\n\tpublic get mode():number /*uint*/\n\t{\n\t\treturn this._pMode;\n\t}\n\n\t/**\n\t * Returns the priority of the particle animation node, used to order the agal generated in a particle animation set. Set automatically on instantiation.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get priority():number /*int*/\n\t{\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Returns the length of the data used by the node when in <code>LOCAL_STATIC</code> mode. Used to generate the local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #getAGALVertexCode\n\t */\n\tpublic get dataLength():number /*int*/\n\t{\n\t\treturn this._pDataLength;\n\t}\n\n\t/**\n\t * Returns the generated data vector of the node after one particle pass during the generation of all local static data of the particle animation set.\n\t *\n\t * @see away.animators.ParticleAnimationSet\n\t * @see #generatePropertyOfOneParticle\n\t */\n\tpublic get oneData():Array<number>\n\t{\n\t\treturn this._pOneData;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleNodeBase</code> object.\n\t *\n\t * @param               name            Defines the generic name of the particle animation node.\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param               dataLength      Defines the length of the data used by the node when in <code>LOCAL_STATIC</code> mode.\n\t * @param    [optional] priority        the priority of the particle animation node, used to order the agal generated in a particle animation set. Defaults to 1.\n\t */\n\tconstructor(name:string, mode:number /*uint*/, dataLength:number /*uint*/, priority:number /*int*/ = 1)\n\t{\n\t\tsuper();\n\n\t\tname = name + ParticleNodeBase.MODES[mode];\n\n\t\tthis.name = name;\n\t\tthis._pMode = mode;\n\t\tthis._priority = priority;\n\t\tthis._pDataLength = dataLength;\n\n\t\tthis._pOneData = new Array<number>(this._pDataLength);\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the vertex shader.\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader.\n\t */\n\tpublic getAGALFragmentCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the AGAL code of the particle animation node for use in the fragment shader when UV coordinates are required.\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when assigning the set of static properties originally defined by the initParticleFunc of the set.\n\t *\n\t * @see away.animators.ParticleAnimationSet#initParticleFunc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\n\t}\n\n\t/**\n\t * Called internally by the particle animation set when determining the requirements of the particle animation node AGAL.\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\n\t}\n}\n\nexport default ParticleNodeBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleOrbitState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleOrbitState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time around a circular orbit.\n */\nclass ParticleOrbitNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesEulers:boolean;\n\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iRadius:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\t/** @private */\n\tpublic _iEulers:Vector3D;\n\n\t/**\n\t * Reference for orbit node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the radius (x), cycle speed (y) and cycle phase (z) of the motion on the particle.\n\t */\n\tpublic static ORBIT_VECTOR3D:string = \"OrbitVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOrbitNode</code> object.\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesEulers      Defines whether the node uses the <code>eulers</code> property in the shader to calculate a rotation on the orbit. Defaults to true.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of the orbit independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the cycle rotation of the particle. Defaults to false.\n\t * @param    [optional] radius          Defines the radius of the orbit when in global mode. Defaults to 100.\n\t * @param    [optional] cycleDuration   Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t * @param    [optional] eulers          Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, usesEulers:boolean = true, usesCycle:boolean = false, usesPhase:boolean = false, radius:number = 100, cycleDuration:number = 1, cyclePhase:number = 0, eulers:Vector3D = null)\n\t{\n\t\tvar len:number /*int*/ = 3;\n\t\tif (usesPhase)\n\t\t\tlen++;\n\t\tsuper(\"ParticleOrbit\", mode, len);\n\n\t\tthis._pStateClass = ParticleOrbitState;\n\n\t\tthis._iUsesEulers = usesEulers;\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iRadius = radius;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iEulers = eulers || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar orbitRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.ORBIT_INDEX, orbitRegister.index);\n\n\t\tvar eulersMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOrbitState.EULERS_INDEX, eulersMatrixRegister.index);\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp1.regName, temp1.index);\n\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 1);\n\t\tvar degree:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index, 2);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\n\t\tvar code:string = \"\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexTime + \",\" + orbitRegister + \".y\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + degree + \",\" + degree + \",\" + orbitRegister + \".w\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + degree + \",\" + animationRegisterCache.vertexLife + \",\" + orbitRegister + \".y\\n\";\n\n\t\tcode += \"cos \" + cos + \",\" + degree + \"\\n\";\n\t\tcode += \"sin \" + sin + \",\" + degree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".x,\" + cos + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mul \" + distance + \".y,\" + sin + \",\" + orbitRegister + \".x\\n\";\n\t\tcode += \"mov \" + distance + \".wz\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tif (this._iUsesEulers)\n\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"neg \" + distance + \".x,\" + sin + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".y,\" + cos + \"\\n\";\n\t\t\tcode += \"mov \" + distance + \".zw,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tif (this._iUsesEulers)\n\t\t\t\tcode += \"m44 \" + distance + \",\" + distance + \",\" + eulersMatrixRegister + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \",\" + distance + \",\" + orbitRegister + \".z\\n\";\n\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + orbitRegister + \".y\\n\";\n\t\t\tif (!this._iUsesCycle)\n\t\t\t\tcode += \"div \" + distance + \",\" + distance + \",\" + animationRegisterCache.vertexLife + \"\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOrbitState\n\t{\n\t\treturn <ParticleOrbitState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//Vector3D.x is radius, Vector3D.y is cycle duration, Vector3D.z is phase\n\t\tvar orbit:Vector3D = param[ParticleOrbitNode.ORBIT_VECTOR3D];\n\t\tif (!orbit)\n\t\t\tthrow new Error(\"there is no \" + ParticleOrbitNode.ORBIT_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = orbit.x;\n\t\tif (this._iUsesCycle && orbit.y <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\tthis._pOneData[1] = Math.PI*2/(!this._iUsesCycle? 1 : orbit.y);\n\t\tthis._pOneData[2] = orbit.x*Math.PI*2;\n\t\tif (this._iUsesPhase)\n\t\t\tthis._pOneData[3] = orbit.z*Math.PI/180;\n\t}\n}\n\nexport default ParticleOrbitNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleOscillatorState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the position of a particle over time using simple harmonic motion.\n */\nclass ParticleOscillatorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iOscillator:Vector3D;\n\n\t/**\n\t * Reference for ocsillator node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the axis (x,y,z) and cycle speed (w) of the motion on the particle.\n\t */\n\tpublic static OSCILLATOR_VECTOR3D:string = \"OscillatorVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleOscillatorNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] oscillator      Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, oscillator:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleOscillator\", mode, 4);\n\n\t\tthis._pStateClass = ParticleOscillatorState;\n\n\t\tthis._iOscillator = oscillator || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar oscillatorRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleOscillatorState.OSCILLATOR_INDEX, oscillatorRegister.index);\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar dgree:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar distance:ShaderRegisterElement = new ShaderRegisterElement(temp2.regName, temp2.index);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + dgree + \",\" + animationRegisterCache.vertexTime + \",\" + oscillatorRegister + \".w\\n\";\n\t\tcode += \"sin \" + sin + \",\" + dgree + \"\\n\";\n\t\tcode += \"mul \" + distance + \".xyz,\" + sin + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity) {\n\t\t\tcode += \"cos \" + cos + \",\" + dgree + \"\\n\";\n\t\t\tcode += \"mul \" + distance + \".xyz,\" + cos + \",\" + oscillatorRegister + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + distance + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleOscillatorState\n\t{\n\t\treturn <ParticleOscillatorState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3D.x,Vector3D.y,Vector3D.z) is oscillator axis, Vector3D.w is oscillator cycle duration\n\t\tvar drift:Vector3D = param[ParticleOscillatorNode.OSCILLATOR_VECTOR3D];\n\t\tif (!drift)\n\t\t\tthrow(new Error(\"there is no \" + ParticleOscillatorNode.OSCILLATOR_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = drift.x;\n\t\tthis._pOneData[1] = drift.y;\n\t\tthis._pOneData[2] = drift.z;\n\t\tif (drift.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\tthis._pOneData[3] = Math.PI*2/drift.w;\n\t}\n}\n\nexport default ParticleOscillatorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticlePositionState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticlePositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting position of a particle.\n */\nclass ParticlePositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for position node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing position of the particle.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"PositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticlePositionNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] position        Defines the default position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticlePosition\", mode, 3);\n\n\t\tthis._pStateClass = ParticlePositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticlePositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\treturn \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticlePositionState\n\t{\n\t\treturn <ParticlePositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticlePositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticlePositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticlePositionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToHeadingState\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to match its heading vector.\n */\nclass ParticleRotateToHeadingNode extends ParticleNodeBase\n{\n\t/**\n\t * Creates a new <code>ParticleBillboardNode</code>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(\"ParticleRotateToHeading\", ParticlePropertiesMode.GLOBAL, 0, 3);\n\n\t\tthis._pStateClass = ParticleRotateToHeadingState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToHeadingState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the velocity\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\t\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(R.regName, R.index, 3);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\t\t\tvar cos2:ShaderRegisterElement = new ShaderRegisterElement(nrmVel.regName, nrmVel.index, 3);\n\t\t\tvar tempSingle:ShaderRegisterElement = sin;\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t//use R as temp to judge if nrm is (0,0,0).\n\t\t\t//if nrm is (0,0,0) ,change it to (0,0,1).\n\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\n\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t\t//use cos as R_rev.w\n\n\t\t\t//nrmVel and xAxis are used as temp register\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\t\t//use cos as R.w\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t//code += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" +R_rev + \".w\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"mov \" + xAxis + \".x,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mov \" + xAxis + \".yz,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + cos2 + \",\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + xAxis + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + R + \".x,\" + nrmVel + \".xyz,\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + R + \".x,\" + animationRegisterCache.vertexZeroConst + \",\" + R + \".x\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".z,\" + R + \".x,\" + nrmVel + \".z\\n\";\n\t\t\t\tcode += \"add \" + tempSingle + \",\" + cos2 + \",\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"sub \" + tempSingle + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos2 + \"\\n\";\n\t\t\t\tcode += \"div \" + tempSingle + \",\" + tempSingle + \",\" + animationRegisterCache.vertexTwoConst + \"\\n\";\n\t\t\t\tcode += \"sqt \" + sin + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + R + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\t\tcode += \"crs \" + R + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\t\tcode += \"add \" + R + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + R + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToHeadingState\n\t{\n\t\treturn <ParticleRotateToHeadingState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.needVelocity = true;\n\t}\n}\n\nexport default ParticleRotateToHeadingNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleRotateToPositionState\tfrom \"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the rotation of a particle to face to a position\n */\nclass ParticleRotateToPositionNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iPosition:Vector3D;\n\n\t/**\n\t * Reference for the position the particle will rotate to face for a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the position that the particle must face.\n\t */\n\tpublic static POSITION_VECTOR3D:string = \"RotateToPositionVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotateToPositionNode</code>\n\t */\n\tconstructor(mode:number /*uint*/, position:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotateToPosition\", mode, 3, 3);\n\n\t\tthis._pStateClass = ParticleRotateToPositionState;\n\n\t\tthis._iPosition = position || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar positionAttribute:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.POSITION_INDEX, positionAttribute.index);\n\n\t\tvar code:string = \"\";\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tvar i:number /*int*/;\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tvar temp1:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp1, 1);\n\t\t\tvar temp2:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp2, 1);\n\t\t\tvar temp3:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\tvar rotationMatrixRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotateToPositionState.MATRIX_INDEX, rotationMatrixRegister.index);\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.getFreeVertexConstant();\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp1);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp2);\n\n\t\t\t//process the position\n\t\t\tcode += \"sub \" + temp1 + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"m33 \" + temp1 + \".xyz,\" + temp1 + \".xyz,\" + rotationMatrixRegister + \"\\n\";\n\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".xy,\" + temp1 + \".xy\\n\";\n\t\t\tcode += \"nrm \" + temp3 + \".xyz,\" + temp3 + \".xyz\\n\";\n\n\t\t\t//temp3.x=cos,temp3.y=sin\n\t\t\t//only process z axis\n\t\t\tcode += \"mov \" + temp2 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".x,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp2 + \".y,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"mov \" + temp1 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp1 + \".x,\" + temp3 + \".x\\n\";\n\t\t\tcode += \"neg \" + temp1 + \".y,\" + temp3 + \".y\\n\";\n\t\t\tcode += \"mov \" + temp3 + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mov \" + temp3 + \".z,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"m33 \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp1 + \"\\n\";\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tcode += \"m33 \" + animationRegisterCache.rotationRegisters[i] + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \",\" + temp1 + \"\\n\";\n\t\t} else {\n\t\t\tvar nrmDirection:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(nrmDirection, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\t\tvar o_temp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\t\tvar tempSingle:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\t\tvar R:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(R, 1);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(nrmDirection);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\t\t\tanimationRegisterCache.removeVertexTempUsage(R);\n\n\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".y\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\n\t\t\t//judgu if nrmDirection=(0,1,0);\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\n\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\n\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\n\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\n\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.scaleAndRotateTarget + \".x\\n\";\n\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".z\\n\";\n\n\t\t\tcode += \"sub \" + animationRegisterCache.scaleAndRotateTarget + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t//just repeat the calculate above\n\t\t\t\t//because of the limited registers, no need to optimise\n\t\t\t\tcode += \"sub \" + nrmDirection + \".xyz,\" + positionAttribute + \".xyz,\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"mov \" + sin + \",\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mul \" + cos + \",\" + sin + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"sub \" + cos + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sqt \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".y\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".y,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t\tcode += \"abs \" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"sge \" + R + \".z,\" + R + \".y,\" + animationRegisterCache.vertexOneConst + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + R + \".y,\" + nrmDirection + \".y\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"dp3 \" + sin + \",\" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sge \" + tempSingle + \",\" + animationRegisterCache.vertexZeroConst + \",\" + sin + \"\\n\";\n\t\t\t\tcode += \"mov \" + nrmDirection + \".y,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\tcode += \"nrm \" + nrmDirection + \".xyz,\" + nrmDirection + \".xyz\\n\";\n\t\t\t\tcode += \"sub \" + sin + \",\" + animationRegisterCache.vertexOneConst + \",\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"mul \" + sin + \",\" + sin + \",\" + nrmDirection + \".x\\n\";\n\t\t\t\tcode += \"mov \" + cos + \",\" + nrmDirection + \".z\\n\";\n\t\t\t\tcode += \"neg \" + cos + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"sub \" + o_temp + \",\" + animationRegisterCache.vertexOneConst + \",\" + cos + \"\\n\";\n\t\t\t\tcode += \"mul \" + o_temp + \",\" + R + \".x,\" + tempSingle + \"\\n\";\n\t\t\t\tcode += \"add \" + cos + \",\" + cos + \",\" + o_temp + \"\\n\";\n\t\t\t\tcode += \"mul \" + R + \".x,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".y,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"mul \" + R + \".z,\" + sin + \",\" + animationRegisterCache.rotationRegisters[i] + \".x\\n\";\n\t\t\t\tcode += \"mul \" + R + \".w,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \".z\\n\";\n\t\t\t\tcode += \"sub \" + animationRegisterCache.rotationRegisters[i] + \".x,\" + R + \".x,\" + R + \".y\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \".z,\" + R + \".z,\" + R + \".w\\n\";\n\t\t\t}\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotateToPositionState\n\t{\n\t\treturn <ParticleRotateToPositionState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar offset:Vector3D = param[ParticleRotateToPositionNode.POSITION_VECTOR3D];\n\t\tif (!offset)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotateToPositionNode.POSITION_VECTOR3D + \" in param!\"));\n\n\t\tthis._pOneData[0] = offset.x;\n\t\tthis._pOneData[1] = offset.y;\n\t\tthis._pOneData[2] = offset.z;\n\t}\n}\n\nexport default ParticleRotateToPositionNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleRotationalVelocityState\tfrom \"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting rotational velocity of a particle.\n */\nclass ParticleRotationalVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iRotationalVelocity:Vector3D;\n\n\t/**\n\t * Reference for rotational velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the rotational velocity around an axis of the particle.\n\t */\n\tpublic static ROTATIONALVELOCITY_VECTOR3D:string = \"RotationalVelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleRotationalVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t */\n\tconstructor(mode:number /*uint*/, rotationalVelocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleRotationalVelocity\", mode, 4);\n\n\t\tthis._pStateClass = ParticleRotationalVelocityState;\n\n\t\tthis._iRotationalVelocity = rotationalVelocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar rotationRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX, rotationRegister.index);\n\n\t\tvar nrmVel:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(nrmVel, 1);\n\n\t\tvar xAxis:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(xAxis, 1);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tanimationRegisterCache.addVertexTempUsages(temp, 1);\n\t\tvar Rtemp:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index);\n\t\tvar R_rev:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tR_rev = new ShaderRegisterElement(R_rev.regName, R_rev.index);\n\n\t\tvar cos:ShaderRegisterElement = new ShaderRegisterElement(Rtemp.regName, Rtemp.index, 3);\n\t\tvar sin:ShaderRegisterElement = new ShaderRegisterElement(R_rev.regName, R_rev.index, 3);\n\n\t\tanimationRegisterCache.removeVertexTempUsage(nrmVel);\n\t\tanimationRegisterCache.removeVertexTempUsage(xAxis);\n\t\tanimationRegisterCache.removeVertexTempUsage(temp);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\n\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\n\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\n\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\n\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//nrmVel and xAxis are used as temp register\n\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz\\n\";\n\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\n\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\n\t\t//use cos as R_rev.w\n\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\n\t\tcode += \"add \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\n\t\tvar len:number /*int*/ = animationRegisterCache.rotationRegisters.length;\n\t\tfor (var i:number /*int*/ = 0; i < len; i++) {\n\t\t\tcode += \"mov \" + nrmVel + \".xyz,\" + rotationRegister + \".xyz\\n\";\n\t\t\tcode += \"mov \" + nrmVel + \".w,\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\tcode += \"mul \" + cos + \",\" + animationRegisterCache.vertexTime + \",\" + rotationRegister + \".w\\n\";\n\t\t\tcode += \"sin \" + sin + \",\" + cos + \"\\n\";\n\t\t\tcode += \"cos \" + cos + \",\" + cos + \"\\n\";\n\t\t\tcode += \"mul \" + Rtemp + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"mul \" + R_rev + \".xyz,\" + sin + \",\" + nrmVel + \".xyz\\n\";\n\t\t\tcode += \"neg \" + R_rev + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"crs \" + nrmVel + \".xyz,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + cos + \",\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"add \" + nrmVel + \".xyz,\" + nrmVel + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"dp3 \" + xAxis + \".w,\" + Rtemp + \".xyz,\" + animationRegisterCache.rotationRegisters[i] + \"\\n\";\n\t\t\tcode += \"neg \" + nrmVel + \".w,\" + xAxis + \".w\\n\";\n\t\t\tcode += \"crs \" + Rtemp + \".xyz,\" + nrmVel + \".xyz,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyzw,\" + nrmVel + \".xyzw,\" + cos + \"\\n\";\n\t\t\tcode += \"add \" + Rtemp + \".xyz,\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t\tcode += \"mul \" + xAxis + \".xyz,\" + nrmVel + \".w,\" + R_rev + \".xyz\\n\";\n\t\t\tcode += \"add \" + animationRegisterCache.rotationRegisters[i] + \",\" + Rtemp + \".xyz,\" + xAxis + \".xyz\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleRotationalVelocityState\n\t{\n\t\treturn <ParticleRotationalVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\t//(Vector3d.x,Vector3d.y,Vector3d.z) is rotation axis,Vector3d.w is cycle duration\n\t\tvar rotate:Vector3D = param[ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D];\n\t\tif (!rotate)\n\t\t\tthrow(new Error(\"there is no \" + ParticleRotationalVelocityNode.ROTATIONALVELOCITY_VECTOR3D + \" in param!\"));\n\n\t\tif (rotate.length <= 0)\n\t\t\trotate.z = 1; //set the default direction\n\t\telse\n\t\t\trotate.normalize();\n\n\t\tthis._pOneData[0] = rotate.x;\n\t\tthis._pOneData[1] = rotate.y;\n\t\tthis._pOneData[2] = rotate.z;\n\t\tif (rotate.w <= 0)\n\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t// it's used as angle/2 in agal\n\t\tthis._pOneData[3] = Math.PI/rotate.w;\n\t}\n}\n\nexport default ParticleRotationalVelocityNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleScaleState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleScaleState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the scale variation of a particle over time.\n */\nclass ParticleScaleNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iMinScale:number;\n\t/** @private */\n\tpublic _iMaxScale:number;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for scale node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the min scale (x), max scale(y), optional cycle speed (z) and phase offset (w) applied to the particle.\n\t */\n\tpublic static SCALE_VECTOR3D:string = \"ScaleVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleScaleNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] usesCycle       Defines whether the node uses the <code>cycleDuration</code> property in the shader to calculate the period of animation independent of particle duration. Defaults to false.\n\t * @param    [optional] usesPhase       Defines whether the node uses the <code>cyclePhase</code> property in the shader to calculate a starting offset to the animation cycle. Defaults to false.\n\t * @param    [optional] minScale        Defines the default min scale transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] maxScale        Defines the default max color transform of the node, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, minScale:number = 1, maxScale:number = 1, cycleDuration:number = 1, cyclePhase:number = 0)\n\t{\n\t\tsuper(\"ParticleScale\", mode, (usesCycle && usesPhase)? 4 : ((usesCycle || usesPhase)? 3 : 2), 3);\n\n\t\tthis._pStateClass = ParticleScaleState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iMinScale = minScale;\n\t\tthis._iMaxScale = maxScale;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iCyclePhase = cyclePhase;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tvar scaleRegister:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleScaleState.SCALE_INDEX, scaleRegister.index);\n\n\t\tif (this._iUsesCycle) {\n\t\t\tcode += \"mul \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + scaleRegister + \".z\\n\";\n\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + temp + \",\" + temp + \",\" + scaleRegister + \".w\\n\";\n\n\t\t\tcode += \"sin \" + temp + \",\" + temp + \"\\n\";\n\t\t}\n\n\t\tcode += \"mul \" + temp + \",\" + scaleRegister + \".y,\" + ((this._iUsesCycle)? temp : animationRegisterCache.vertexLife) + \"\\n\";\n\t\tcode += \"add \" + temp + \",\" + scaleRegister + \".x,\" + temp + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleScaleState\n\t{\n\t\treturn <ParticleScaleState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar scale:Vector3D = param[ParticleScaleNode.SCALE_VECTOR3D];\n\t\tif (!scale)\n\t\t\tthrow(new Error(\"there is no \" + ParticleScaleNode.SCALE_VECTOR3D + \" in param!\"));\n\n\t\tif (this._iUsesCycle) {\n\t\t\tthis._pOneData[0] = (scale.x + scale.y)/2;\n\t\t\tthis._pOneData[1] = Math.abs(scale.x - scale.y)/2;\n\t\t\tif (scale.z <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._pOneData[2] = Math.PI*2/scale.z;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[3] = scale.w*Math.PI/180;\n\t\t} else {\n\t\t\tthis._pOneData[0] = scale.x;\n\t\t\tthis._pOneData[1] = scale.y - scale.x;\n\t\t}\n\t}\n}\n\nexport default ParticleScaleNode;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ColorSegmentPoint\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleSegmentedColorState\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n *\n */\nclass ParticleSegmentedColorNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesMultiplier:boolean;\n\t/** @private */\n\tpublic _iUsesOffset:boolean;\n\t/** @private */\n\tpublic _iStartColor:ColorTransform;\n\t/** @private */\n\tpublic _iEndColor:ColorTransform;\n\t/** @private */\n\tpublic _iNumSegmentPoint:number /*int*/;\n\t/** @private */\n\tpublic _iSegmentPoints:Array<ColorSegmentPoint>;\n\n\tconstructor(usesMultiplier:boolean, usesOffset:boolean, numSegmentPoint:number /*int*/, startColor:ColorTransform, endColor:ColorTransform, segmentPoints:Array<ColorSegmentPoint>)\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleSegmentedColor\", ParticlePropertiesMode.GLOBAL, 0, ParticleAnimationSet.COLOR_PRIORITY);\n\n\t\tthis._pStateClass = ParticleSegmentedColorState;\n\n\t\tif (numSegmentPoint > 4)\n\t\t\tthrow(new Error(\"the numSegmentPoint must be less or equal 4\"));\n\t\tthis._iUsesMultiplier = usesMultiplier;\n\t\tthis._iUsesOffset = usesOffset;\n\t\tthis._iNumSegmentPoint = numSegmentPoint;\n\t\tthis._iStartColor = startColor;\n\t\tthis._iEndColor = endColor;\n\t\tthis._iSegmentPoints = segmentPoints;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tif (this._iUsesMultiplier)\n\t\t\tparticleAnimationSet.hasColorMulNode = true;\n\t\tif (this._iUsesOffset)\n\t\t\tparticleAnimationSet.hasColorAddNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar accMultiplierColor:ShaderRegisterElement;\n\t\t\t//var accOffsetColor:ShaderRegisterElement;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\taccMultiplierColor = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tanimationRegisterCache.addVertexTempUsages(accMultiplierColor, 1);\n\t\t\t}\n\n\t\t\tvar tempColor:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tanimationRegisterCache.addVertexTempUsages(tempColor, 1);\n\n\t\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\t\tvar accTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\t\tvar tempTime:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tanimationRegisterCache.removeVertexTempUsage(accMultiplierColor);\n\n\t\t\tanimationRegisterCache.removeVertexTempUsage(tempColor);\n\n\t\t\t//for saving all the life values (at most 4)\n\t\t\tvar lifeTimeRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.TIME_DATA_INDEX, lifeTimeRegister.index);\n\n\t\t\tvar i:number /*int*/;\n\n\t\t\tvar startMulValue:ShaderRegisterElement;\n\t\t\tvar deltaMulValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tstartMulValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_MULTIPLIER_INDEX, startMulValue.index);\n\t\t\t\tdeltaMulValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaMulValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tvar startOffsetValue:ShaderRegisterElement;\n\t\t\tvar deltaOffsetValues:Array<ShaderRegisterElement>;\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tstartOffsetValue = animationRegisterCache.getFreeVertexConstant();\n\t\t\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSegmentedColorState.START_OFFSET_INDEX, startOffsetValue.index);\n\t\t\t\tdeltaOffsetValues = new Array<ShaderRegisterElement>();\n\t\t\t\tfor (i = 0; i < this._iNumSegmentPoint + 1; i++)\n\t\t\t\t\tdeltaOffsetValues.push(animationRegisterCache.getFreeVertexConstant());\n\t\t\t}\n\n\t\t\tif (this._iUsesMultiplier)\n\t\t\t\tcode += \"mov \" + accMultiplierColor + \",\" + startMulValue + \"\\n\";\n\t\t\tif (this._iUsesOffset)\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + startOffsetValue + \"\\n\";\n\n\t\t\tfor (i = 0; i < this._iNumSegmentPoint; i++) {\n\t\t\t\tswitch (i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t\t\t\tcode += \"min \" + tempTime + \",\" + tempTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t\tif (this._iUsesOffset) {\n\t\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[i] + \"\\n\";\n\t\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//for the last segment:\n\t\t\tif (this._iNumSegmentPoint == 0)\n\t\t\t\ttempTime = animationRegisterCache.vertexLife;\n\t\t\telse {\n\t\t\t\tswitch (this._iNumSegmentPoint) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + animationRegisterCache.vertexLife + \",\" + lifeTimeRegister + \".x\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".y\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".z\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcode += \"sub \" + accTime + \",\" + accTime + \",\" + lifeTimeRegister + \".w\\n\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcode += \"max \" + tempTime + \",\" + accTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesMultiplier) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaMulValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + accMultiplierColor + \",\" + accMultiplierColor + \",\" + tempColor + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.colorMulTarget + \",\" + animationRegisterCache.colorMulTarget + \",\" + accMultiplierColor + \"\\n\";\n\t\t\t}\n\t\t\tif (this._iUsesOffset) {\n\t\t\t\tcode += \"mul \" + tempColor + \",\" + tempTime + \",\" + deltaOffsetValues[this._iNumSegmentPoint] + \"\\n\";\n\t\t\t\tcode += \"add \" + animationRegisterCache.colorAddTarget + \",\" + animationRegisterCache.colorAddTarget + \",\" + tempColor + \"\\n\";\n\t\t\t}\n\n\t\t}\n\t\treturn code;\n\t}\n\n}\n\nexport default ParticleSegmentedColorNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleSpriteSheetState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used when a spritesheet texture is required to animate the particle.\n * NB: to enable use of this node, the <code>repeat</code> property on the material has to be set to true.\n */\nclass ParticleSpriteSheetNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesCycle:boolean;\n\n\t/** @private */\n\tpublic _iUsesPhase:boolean;\n\n\t/** @private */\n\tpublic _iTotalFrames:number /*int*/;\n\t/** @private */\n\tpublic _iNumColumns:number /*int*/;\n\t/** @private */\n\tpublic _iNumRows:number /*int*/;\n\t/** @private */\n\tpublic _iCycleDuration:number;\n\t/** @private */\n\tpublic _iCyclePhase:number;\n\n\t/**\n\t * Reference for spritesheet node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> representing the cycleDuration (x), optional phaseTime (y).\n\t */\n\tpublic static UV_VECTOR3D:string = \"UVVector3D\";\n\n\t/**\n\t * Defines the number of columns in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numColumns():number\n\t{\n\t\treturn this._iNumColumns;\n\t}\n\n\t/**\n\t * Defines the number of rows in the spritesheet, when in global mode. Defaults to 1. Read only.\n\t */\n\tpublic get numRows():number\n\t{\n\t\treturn this._iNumRows;\n\t}\n\n\t/**\n\t * Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows. Read only.\n\t */\n\tpublic get totalFrames():number\n\t{\n\t\treturn this._iTotalFrames;\n\t}\n\n\t/**\n\t * Creates a new <code>ParticleSpriteSheetNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] numColumns      Defines the number of columns in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] numRows         Defines the number of rows in the spritesheet, when in global mode. Defaults to 1.\n\t * @param    [optional] cycleDuration   Defines the default cycle duration in seconds, when in global mode. Defaults to 1.\n\t * @param    [optional] cyclePhase      Defines the default cycle phase, when in global mode. Defaults to 0.\n\t * @param    [optional] totalFrames     Defines the total number of frames used by the spritesheet, when in global mode. Defaults to the number defined by numColumns and numRows.\n\t * @param    [optional] looping         Defines whether the spritesheet animation is set to loop indefinitely. Defaults to true.\n\t */\n\tconstructor(mode:number /*uint*/, usesCycle:boolean, usesPhase:boolean, numColumns:number /*int*/ = 1, numRows:number /*uint*/ = 1, cycleDuration:number = 1, cyclePhase:number = 0, totalFrames:number /*uint*/ = Number.MAX_VALUE)\n\t{\n\t\tsuper(\"ParticleSpriteSheet\", mode, usesCycle? (usesPhase? 3 : 2) : 1, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleSpriteSheetState;\n\n\t\tthis._iUsesCycle = usesCycle;\n\t\tthis._iUsesPhase = usesPhase;\n\n\t\tthis._iNumColumns = numColumns;\n\t\tthis._iNumRows = numRows;\n\t\tthis._iCyclePhase = cyclePhase;\n\t\tthis._iCycleDuration = cycleDuration;\n\t\tthis._iTotalFrames = Math.min(totalFrames, numColumns*numRows);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\t//get 2 vc\n\t\tvar uvParamConst1:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tvar uvParamConst2:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_0, uvParamConst1.index);\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleSpriteSheetState.UV_INDEX_1, uvParamConst2.index);\n\n\t\tvar uTotal:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 0);\n\t\tvar uStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 1);\n\t\tvar vStep:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst1.regName, uvParamConst1.index, 2);\n\n\t\tvar uSpeed:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 0);\n\t\tvar cycle:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 1);\n\t\tvar phaseTime:ShaderRegisterElement = new ShaderRegisterElement(uvParamConst2.regName, uvParamConst2.index, 2);\n\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar time:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 0);\n\t\tvar vOffset:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 1);\n\t\ttemp = new ShaderRegisterElement(temp.regName, temp.index, 2);\n\t\tvar temp2:ShaderRegisterElement = new ShaderRegisterElement(temp.regName, temp.index, 3);\n\n\t\tvar u:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 0);\n\t\tvar v:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, 1);\n\n\t\tvar code:string = \"\";\n\t\t//scale uv\n\t\tcode += \"mul \" + u + \",\" + u + \",\" + uStep + \"\\n\";\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"mul \" + v + \",\" + v + \",\" + vStep + \"\\n\";\n\n\t\tif (this._iUsesCycle) {\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tcode += \"add \" + time + \",\" + animationRegisterCache.vertexTime + \",\" + phaseTime + \"\\n\";\n\t\t\telse\n\t\t\t\tcode += \"mov \" + time + \",\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\tcode += \"div \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"frc \" + time + \",\" + time + \"\\n\";\n\t\t\tcode += \"mul \" + time + \",\" + time + \",\" + cycle + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \",\" + time + \",\" + uSpeed + \"\\n\";\n\t\t} else\n\t\t\tcode += \"mul \" + temp.toString() + \",\" + animationRegisterCache.vertexLife + \",\" + uTotal + \"\\n\";\n\n\t\tif (this._iNumRows > 1) {\n\t\t\tcode += \"frc \" + temp2 + \",\" + temp + \"\\n\";\n\t\t\tcode += \"sub \" + vOffset + \",\" + temp + \",\" + temp2 + \"\\n\";\n\t\t\tcode += \"mul \" + vOffset + \",\" + vOffset + \",\" + vStep + \"\\n\";\n\t\t\tcode += \"add \" + v + \",\" + v + \",\" + vOffset + \"\\n\";\n\t\t}\n\n\t\tcode += \"div \" + temp2 + \",\" + temp + \",\" + uStep + \"\\n\";\n\t\tcode += \"frc \" + temp + \",\" + temp2 + \"\\n\";\n\t\tcode += \"sub \" + temp2 + \",\" + temp2 + \",\" + temp + \"\\n\";\n\t\tcode += \"mul \" + temp + \",\" + temp2 + \",\" + uStep + \"\\n\";\n\n\t\tif (this._iNumRows > 1)\n\t\t\tcode += \"frc \" + temp + \",\" + temp + \"\\n\";\n\t\tcode += \"add \" + u + \",\" + u + \",\" + temp + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleSpriteSheetState\n\t{\n\t\treturn <ParticleSpriteSheetState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tif (this._iUsesCycle) {\n\t\t\tvar uvCycle:Vector3D = param[ParticleSpriteSheetNode.UV_VECTOR3D];\n\t\t\tif (!uvCycle)\n\t\t\t\tthrow(new Error(\"there is no \" + ParticleSpriteSheetNode.UV_VECTOR3D + \" in param!\"));\n\t\t\tif (uvCycle.x <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tvar uTotal:number = this._iTotalFrames/this._iNumColumns;\n\t\t\tthis._pOneData[0] = uTotal/uvCycle.x;\n\t\t\tthis._pOneData[1] = uvCycle.x;\n\t\t\tif (this._iUsesPhase)\n\t\t\t\tthis._pOneData[2] = uvCycle.y;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleTimeState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleTimeState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used as the base node for timekeeping inside a particle. Automatically added to a particle animation set on instatiation.\n */\nclass ParticleTimeNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUsesDuration:boolean;\n\t/** @private */\n\tpublic _iUsesDelay:boolean;\n\t/** @private */\n\tpublic _iUsesLooping:boolean;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param    [optional] usesDuration    Defines whether the node uses the <code>duration</code> data in the static properties to determine how long a particle is visible for. Defaults to false.\n\t * @param    [optional] usesDelay       Defines whether the node uses the <code>delay</code> data in the static properties to determine how long a particle is hidden for. Defaults to false. Requires <code>usesDuration</code> to be true.\n\t * @param    [optional] usesLooping     Defines whether the node creates a looping timeframe for each particle determined by the <code>startTime</code>, <code>duration</code> and <code>delay</code> data in the static properties function. Defaults to false. Requires <code>usesLooping</code> to be true.\n\t */\n\tconstructor(usesDuration:boolean = false, usesLooping:boolean = false, usesDelay:boolean = false)\n\t{\n\t\tsuper(\"ParticleTime\", ParticlePropertiesMode.LOCAL_STATIC, 4, 0);\n\t\t\n\t\tthis._pStateClass = ParticleTimeState;\n\n\t\tthis._iUsesDuration = usesDuration;\n\t\tthis._iUsesLooping = usesLooping;\n\t\tthis._iUsesDelay = usesDelay;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar timeStreamRegister:ShaderRegisterElement = animationRegisterCache.getFreeVertexAttribute(); //timeStreamRegister.x is start，timeStreamRegister.y is during time\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_STREAM_INDEX, timeStreamRegister.index);\n\t\tvar timeConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleTimeState.TIME_CONSTANT_INDEX, timeConst.index);\n\n\t\tvar code:string = \"\";\n\t\tcode += \"sub \" + animationRegisterCache.vertexTime + \",\" + timeConst + \",\" + timeStreamRegister + \".x\\n\";\n\t\t//if time=0,set the position to zero.\n\t\tvar temp:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\tcode += \"sge \" + temp + \",\" + animationRegisterCache.vertexTime + \",\" + animationRegisterCache.vertexZeroConst + \"\\n\";\n\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + temp + \"\\n\";\n\t\tif (this._iUsesDuration) {\n\t\t\tif (this._iUsesLooping) {\n\t\t\t\tvar div:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tif (this._iUsesDelay) {\n\t\t\t\t\tcode += \"div \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".z\\n\";\n\t\t\t\t\tcode += \"slt \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + div + \"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tcode += \"mul \" + div + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\t\t\t\tcode += \"frc \" + div + \",\" + div + \"\\n\";\n\t\t\t\t\tcode += \"mul \" + animationRegisterCache.vertexTime + \",\" + div + \",\" + timeStreamRegister + \".y\\n\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar sge:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\t\t\t\tcode += \"sge \" + sge + \",\" + timeStreamRegister + \".y,\" + animationRegisterCache.vertexTime + \"\\n\";\n\t\t\t\tcode += \"mul \" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + animationRegisterCache.scaleAndRotateTarget + \".xyz,\" + sge + \"\\n\";\n\t\t\t}\n\t\t}\n\t\tcode += \"mul \" + animationRegisterCache.vertexLife + \",\" + animationRegisterCache.vertexTime + \",\" + timeStreamRegister + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleTimeState\n\t{\n\t\treturn <ParticleTimeState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tthis._pOneData[0] = param.startTime;\n\t\tthis._pOneData[1] = param.duration;\n\t\tthis._pOneData[2] = param.delay + param.duration;\n\t\tthis._pOneData[3] = 1/param.duration;\n\n\t}\n}\n\nexport default ParticleTimeNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleAnimationSet\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleUVState\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleUVState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to control the UV offset and scale of a particle over time.\n */\nclass ParticleUVNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iUvData:Vector3D;\n\n\t/**\n\t *\n\t */\n\tpublic static U_AXIS:string = \"x\";\n\n\t/**\n\t *\n\t */\n\tpublic static V_AXIS:string = \"y\";\n\n\tprivate _cycle:number;\n\tprivate _scale:number;\n\tprivate _axis:string;\n\n\t/**\n\t * Creates a new <code>ParticleTimeNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] cycle           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] scale           Defines whether the time track is in loop mode. Defaults to false.\n\t * @param    [optional] axis            Defines whether the time track is in loop mode. Defaults to false.\n\t */\n\tconstructor(mode:number /*uint*/, cycle:number = 1, scale:number = 1, axis:string = \"x\")\n\t{\n\t\t//because of the stage3d register limitation, it only support the global mode\n\t\tsuper(\"ParticleUV\", ParticlePropertiesMode.GLOBAL, 4, ParticleAnimationSet.POST_PRIORITY + 1);\n\n\t\tthis._pStateClass = ParticleUVState;\n\n\t\tthis._cycle = cycle;\n\t\tthis._scale = scale;\n\t\tthis._axis = axis;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cycle():number\n\t{\n\t\treturn this._cycle;\n\t}\n\n\tpublic set cycle(value:number)\n\t{\n\t\tthis._cycle = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scale():number\n\t{\n\t\treturn this._scale;\n\t}\n\n\tpublic set scale(value:number)\n\t{\n\t\tthis._scale = value;\n\n\t\tthis.updateUVData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get axis():string\n\t{\n\t\treturn this._axis;\n\t}\n\n\tpublic set axis(value:string)\n\t{\n\t\tthis._axis = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar uvConst:ShaderRegisterElement = animationRegisterCache.getFreeVertexConstant();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleUVState.UV_INDEX, uvConst.index);\n\n\t\tvar axisIndex:number = this._axis == \"x\"? 0 : (this._axis == \"y\"? 1 : 2);\n\n\t\tvar target:ShaderRegisterElement = new ShaderRegisterElement(animationRegisterCache.uvTarget.regName, animationRegisterCache.uvTarget.index, axisIndex);\n\n\t\tvar sin:ShaderRegisterElement = animationRegisterCache.getFreeVertexSingleTemp();\n\n\t\tif (this._scale != 1)\n\t\t\tcode += \"mul \" + target + \",\" + target + \",\" + uvConst + \".y\\n\";\n\n\t\tcode += \"mul \" + sin + \",\" + animationRegisterCache.vertexTime + \",\" + uvConst + \".x\\n\";\n\t\tcode += \"sin \" + sin + \",\" + sin + \"\\n\";\n\t\tcode += \"add \" + target + \",\" + target + \",\" + sin + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleUVState\n\t{\n\t\treturn <ParticleUVState> animator.getAnimationState(this);\n\t}\n\n\tprivate updateUVData()\n\t{\n\t\tthis._iUvData = new Vector3D(Math.PI*2/this._cycle, this._scale, 0, 0);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iProcessAnimationSetting(particleAnimationSet:ParticleAnimationSet)\n\t{\n\t\tparticleAnimationSet.hasUVNode = true;\n\t}\n}\n\nexport default ParticleUVNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport ParticleProperties\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleVelocityState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleVelocityState\";\nimport ShaderBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterElement\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * A particle animation node used to set the starting velocity of a particle.\n */\nclass ParticleVelocityNode extends ParticleNodeBase\n{\n\t/** @private */\n\tpublic _iVelocity:Vector3D;\n\n\t/**\n\t * Reference for velocity node properties on a single particle (when in local property mode).\n\t * Expects a <code>Vector3D</code> object representing the direction of movement on the particle.\n\t */\n\tpublic static VELOCITY_VECTOR3D:string = \"VelocityVector3D\";\n\n\t/**\n\t * Creates a new <code>ParticleVelocityNode</code>\n\t *\n\t * @param               mode            Defines whether the mode of operation acts on local properties of a particle or global properties of the node.\n\t * @param    [optional] velocity        Defines the default velocity vector of the node, used when in global mode.\n\t */\n\tconstructor(mode:number /*uint*/, velocity:Vector3D = null)\n\t{\n\t\tsuper(\"ParticleVelocity\", mode, 3);\n\n\t\tthis._pStateClass = ParticleVelocityState;\n\n\t\tthis._iVelocity = velocity || new Vector3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shader:ShaderBase, animationRegisterCache:AnimationRegisterCache):string\n\t{\n\t\tvar velocityValue:ShaderRegisterElement = (this._pMode == ParticlePropertiesMode.GLOBAL)? animationRegisterCache.getFreeVertexConstant() : animationRegisterCache.getFreeVertexAttribute();\n\t\tanimationRegisterCache.setRegisterIndex(this, ParticleVelocityState.VELOCITY_INDEX, velocityValue.index);\n\n\t\tvar distance:ShaderRegisterElement = animationRegisterCache.getFreeVertexVectorTemp();\n\t\tvar code:string = \"\";\n\t\tcode += \"mul \" + distance + \",\" + animationRegisterCache.vertexTime + \",\" + velocityValue + \"\\n\";\n\t\tcode += \"add \" + animationRegisterCache.positionTarget + \".xyz,\" + distance + \",\" + animationRegisterCache.positionTarget + \".xyz\\n\";\n\n\t\tif (animationRegisterCache.needVelocity)\n\t\t\tcode += \"add \" + animationRegisterCache.velocityTarget + \".xyz,\" + velocityValue + \".xyz,\" + animationRegisterCache.velocityTarget + \".xyz\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):ParticleVelocityState\n\t{\n\t\treturn <ParticleVelocityState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGeneratePropertyOfOneParticle(param:ParticleProperties)\n\t{\n\t\tvar _tempVelocity:Vector3D = param[ParticleVelocityNode.VELOCITY_VECTOR3D];\n\t\tif (!_tempVelocity)\n\t\t\tthrow new Error(\"there is no \" + ParticleVelocityNode.VELOCITY_VECTOR3D + \" in param!\");\n\n\t\tthis._pOneData[0] = _tempVelocity.x;\n\t\tthis._pOneData[1] = _tempVelocity.y;\n\t\tthis._pOneData[2] = _tempVelocity.z;\n\t}\n}\n\nexport default ParticleVelocityNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonBinaryLERPNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines input node A to use for the blended output.\n\t */\n\tpublic inputA:AnimationNodeBase;\n\n\t/**\n\t * Defines input node B to use for the blended output.\n\t */\n\tpublic inputB:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonBinaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonBinaryLERPState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonBinaryLERPState\n\t{\n\t\treturn <SkeletonBinaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonBinaryLERPNode;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport AnimationClipNodeBase\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\";\nimport SkeletonClipState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonClipState\";\n\n/**\n * A skeleton animation node containing time-based animation data as individual skeleton poses.\n */\nclass SkeletonClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<SkeletonPose> = new Array<SkeletonPose>();\n\n\t/**\n\t * Determines whether to use SLERP equations (true) or LERP equations (false) in the calculation\n\t * of the output skeleton pose. Defaults to false.\n\t */\n\tpublic highQuality:boolean = false;\n\n\t/**\n\t * Returns a vector of skeleton poses representing the pose of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<SkeletonPose>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonClipState;\n\t}\n\n\t/**\n\t * Adds a skeleton pose frame to the internal timeline of the animation node.\n\t *\n\t * @param skeletonPose The skeleton pose object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t */\n\tpublic addFrame(skeletonPose:SkeletonPose, duration:number /*number /*uint*/)\n\t{\n\t\tthis._frames.push(skeletonPose);\n\t\tthis._pDurations.push(duration);\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonClipState\n\t{\n\t\treturn <SkeletonClipState> animator.getAnimationState(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._frames[i].jointPoses[0].translation;\n\t\t\tp2 = this._frames[i + 1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pStitchFinalFrame || !this._pLooping) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonClipNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonDifferenceState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\";\n\n/**\n * A skeleton animation node that uses a difference input pose with a base input pose to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDifferenceNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines a base input node to use for the blended output.\n\t */\n\tpublic baseInput:AnimationNodeBase;\n\n\t/**\n\t * Defines a difference input node to use for the blended output.\n\t */\n\tpublic differenceInput:AnimationNodeBase;\n\n\t/**\n\t * Creates a new <code>SkeletonAdditiveNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDifferenceState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDifferenceState\n\t{\n\t\treturn <SkeletonDifferenceState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonDifferenceNode",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonDirectionalState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\";\n\n/**\n * A skeleton animation node that uses four directional input poses with an input direction to blend a linearly interpolated output of a skeleton pose.\n */\nclass SkeletonDirectionalNode extends AnimationNodeBase\n{\n\t/**\n\t * Defines the forward configured input node to use for the blended output.\n\t */\n\tpublic forward:AnimationNodeBase;\n\n\t/**\n\t * Defines the backwards configured input node to use for the blended output.\n\t */\n\tpublic backward:AnimationNodeBase;\n\n\t/**\n\t * Defines the left configured input node to use for the blended output.\n\t */\n\tpublic left:AnimationNodeBase;\n\n\t/**\n\t * Defines the right configured input node to use for the blended output.\n\t */\n\tpublic right:AnimationNodeBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonDirectionalState;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonDirectionalState\n\t{\n\t\treturn <SkeletonDirectionalState> animator.getAnimationState(this);\n\t}\n\n}\n\nexport default SkeletonDirectionalNode;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonNaryLERPState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\";\n\n/**\n * A skeleton animation node that uses an n-dimensional array of animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass SkeletonNaryLERPNode extends AnimationNodeBase\n{\n\tpublic _iInputs:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\n\tprivate _numInputs:number /*uint*/;\n\n\tpublic get numInputs():number /*uint*/\n\t{\n\t\treturn this._numInputs;\n\t}\n\n\t/**\n\t * Creates a new <code>SkeletonNaryLERPNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = SkeletonNaryLERPState;\n\t}\n\n\t/**\n\t * Returns an integer representing the input index of the given skeleton animation node.\n\t *\n\t * @param input The skeleton animation node for with the input index is requested.\n\t */\n\tpublic getInputIndex(input:AnimationNodeBase):number /*int*/\n\t{\n\t\treturn this._iInputs.indexOf(input);\n\t}\n\n\t/**\n\t * Returns the skeleton animation node object that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node is requested.\n\t */\n\tpublic getInputAt(index:number /*uint*/):AnimationNodeBase\n\t{\n\t\treturn this._iInputs[index];\n\t}\n\n\t/**\n\t * Adds a new skeleton animation node input to the animation node.\n\t */\n\tpublic addInput(input:AnimationNodeBase)\n\t{\n\t\tthis._iInputs[this._numInputs++] = input;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAnimationState(animator:AnimatorBase):SkeletonNaryLERPState\n\t{\n\t\treturn <SkeletonNaryLERPState> animator.getAnimationState(this);\n\t}\n}\n\nexport default SkeletonNaryLERPNode",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimationClipNodeBase\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\";\nimport VertexClipState\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/VertexClipState\";\n\n/**\n * A vertex animation node containing time-based animation data as individual geometry obejcts.\n */\nclass VertexClipNode extends AnimationClipNodeBase\n{\n\tprivate _frames:Array<Graphics> = new Array<Graphics>();\n\tprivate _translations:Array<Vector3D> = new Array<Vector3D>();\n\n\t/**\n\t * Returns a vector of geometry frames representing the vertex values of each animation frame in the clip.\n\t */\n\tpublic get frames():Array<Graphics>\n\t{\n\t\treturn this._frames;\n\t}\n\n\t/**\n\t * Creates a new <code>VertexClipNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = VertexClipState;\n\t}\n\n\t/**\n\t * Adds a geometry object to the internal timeline of the animation node.\n\t *\n\t * @param geometry The geometry object to add to the timeline of the node.\n\t * @param duration The specified duration of the frame in milliseconds.\n\t * @param translation The absolute translation of the frame, used in root delta calculations for sprite movement.\n\t */\n\tpublic addFrame(geometry:Graphics, duration:number /*uint*/, translation:Vector3D = null)\n\t{\n\t\tthis._frames.push(geometry);\n\t\tthis._pDurations.push(duration);\n\t\tthis._translations.push(translation || new Vector3D());\n\n\t\tthis._pNumFrames = this._pDurations.length;\n\n\t\tthis._pStitchDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateStitch()\n\t{\n\t\tsuper._pUpdateStitch();\n\n\t\tvar i:number /*uint*/ = this._pNumFrames - 1;\n\t\tvar p1:Vector3D, p2:Vector3D, delta:Vector3D;\n\t\twhile (i--) {\n\t\t\tthis._pTotalDuration += this._pDurations[i];\n\t\t\tp1 = this._translations[i];\n\t\t\tp2 = this._translations[i + 1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\n\t\tif (this._pNumFrames > 1 && (this._pStitchFinalFrame || !this._pLooping)) {\n\t\t\tthis._pTotalDuration += this._pDurations[this._pNumFrames - 1];\n\t\t\tp1 = this._translations[0];\n\t\t\tp2 = this._translations[1];\n\t\t\tdelta = p2.subtract(p1);\n\t\t\tthis._pTotalDelta.x += delta.x;\n\t\t\tthis._pTotalDelta.y += delta.y;\n\t\t\tthis._pTotalDelta.z += delta.z;\n\t\t}\n\t}\n}\n\nexport default VertexClipNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationClipNodeBase\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nimport AnimationStateEvent\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass AnimationClipState extends AnimationStateBase\n{\n\tprivate _animationClipNode:AnimationClipNodeBase;\n\tprivate _animationStatePlaybackComplete:AnimationStateEvent;\n\tpublic _pBlendWeight:number;\n\tpublic _pCurrentFrame:number /*uint*/;\n\tpublic _pNextFrame:number /*uint*/;\n\n\tpublic _pOldFrame:number /*uint*/;\n\tpublic _pTimeDir:number /*int*/;\n\tpublic _pFramesDirty:boolean = true;\n\n\t/**\n\t * Returns a fractional value between 0 and 1 representing the blending ratio of the current playhead position\n\t * between the current frame (0) and next frame (1) of the animation.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pBlendWeight;\n\t}\n\n\t/**\n\t * Returns the current frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pCurrentFrame;\n\t}\n\n\t/**\n\t * Returns the next frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextFrame():number /*uint*/\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._pNextFrame;\n\t}\n\n\tconstructor(animator:AnimatorBase, animationClipNode:AnimationClipNodeBase)\n\t{\n\t\tsuper(animator, animationClipNode);\n\n\t\tthis._animationClipNode = animationClipNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tif (!this._animationClipNode.looping) {\n\t\t\tif (time > this._pStartTime + this._animationClipNode.totalDuration)\n\t\t\t\ttime = this._pStartTime + this._animationClipNode.totalDuration; else if (time < this._pStartTime)\n\t\t\t\ttime = this._pStartTime;\n\t\t}\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tvar time:number /*int*/ = value*this._animationClipNode.totalDuration + this._pStartTime;\n\n\t\tif (this._pTime == time - this._pStartTime)\n\t\t\treturn;\n\n\t\tthis._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._pFramesDirty = true;\n\n\t\tthis._pTimeDir = (time - this._pStartTime > this._pTime)? 1 : -1;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Updates the nodes internal playhead to determine the current and next animation frame, and the blendWeight between the two.\n\t *\n\t * @see #currentFrame\n\t * @see #nextFrame\n\t * @see #blendWeight\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tthis._pFramesDirty = false;\n\n\t\tvar looping:boolean = this._animationClipNode.looping;\n\t\tvar totalDuration:number /*uint*/ = this._animationClipNode.totalDuration;\n\t\tvar lastFrame:number /*uint*/ = this._animationClipNode.lastFrame;\n\t\tvar time:number /*int*/ = this._pTime;\n\n\t\t//trace(\"time\", time, totalDuration)\n\t\tif (looping && (time >= totalDuration || time < 0)) {\n\t\t\ttime %= totalDuration;\n\t\t\tif (time < 0)\n\t\t\t\ttime += totalDuration;\n\t\t}\n\n\t\tif (!looping && time >= totalDuration) {\n\t\t\tthis.notifyPlaybackComplete();\n\t\t\tthis._pCurrentFrame = lastFrame;\n\t\t\tthis._pNextFrame = lastFrame;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (!looping && time <= 0) {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\t\t\tthis._pBlendWeight = 0;\n\t\t} else if (this._animationClipNode.fixedFrameRate) {\n\t\t\tvar t:number = time/totalDuration*lastFrame;\n\t\t\tthis._pCurrentFrame = Math.floor(t);\n\t\t\tthis._pBlendWeight = t - this._pCurrentFrame;\n\t\t\tthis._pNextFrame = this._pCurrentFrame + 1;\n\t\t} else {\n\t\t\tthis._pCurrentFrame = 0;\n\t\t\tthis._pNextFrame = 0;\n\n\t\t\tvar dur:number /*uint*/ = 0, frameTime:number /*uint*/;\n\t\t\tvar durations:Array<number> /*uint*/ = this._animationClipNode.durations;\n\n\t\t\tdo {\n\t\t\t\tframeTime = dur;\n\t\t\t\tdur += durations[this._pNextFrame];\n\t\t\t\tthis._pCurrentFrame = this._pNextFrame++;\n\t\t\t} while (time > dur);\n\n\t\t\tif (this._pCurrentFrame == lastFrame) {\n\t\t\t\tthis._pCurrentFrame = 0;\n\t\t\t\tthis._pNextFrame = 1;\n\t\t\t}\n\n\t\t\tthis._pBlendWeight = (time - frameTime)/durations[this._pCurrentFrame];\n\t\t}\n\t}\n\n\tprivate notifyPlaybackComplete()\n\t{\n\t\tif (this._animationStatePlaybackComplete == null)\n\t\t\tthis._animationStatePlaybackComplete = new AnimationStateEvent(AnimationStateEvent.PLAYBACK_COMPLETE, this._pAnimator, this, this._animationClipNode);\n\n\t\tthis._animationClipNode.dispatchEvent(this._animationStatePlaybackComplete);\n\t}\n}\n\nexport default AnimationClipState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IAnimationState\";\n\n/**\n *\n */\nclass AnimationStateBase implements IAnimationState\n{\n\tpublic _pAnimationNode:AnimationNodeBase;\n\tpublic _pRootDelta:Vector3D = new Vector3D();\n\tpublic _pPositionDeltaDirty:boolean = true;\n\n\tpublic _pTime:number;\n\tpublic _pStartTime:number = 0;\n\tpublic _pAnimator:AnimatorBase;\n\n\t/**\n\t * Returns a 3d vector representing the translation delta of the animating entity for the current timestep of animation\n\t */\n\tpublic get positionDelta():Vector3D\n\t{\n\t\tif (this._pPositionDeltaDirty) {\n\n\t\t\tthis._pUpdatePositionDelta();\n\t\t}\n\n\t\treturn this._pRootDelta;\n\n\t}\n\n\tconstructor(animator:AnimatorBase, animationNode:AnimationNodeBase)\n\t{\n\t\tthis._pAnimator = animator;\n\t\tthis._pAnimationNode = animationNode;\n\t}\n\n\t/**\n\t * Resets the start time of the node to a  new value.\n\t *\n\t * @param startTime The absolute start time (in milliseconds) of the node's starting time.\n\t */\n\tpublic offset(startTime:number)\n\t{\n\t\tthis._pStartTime = startTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the configuration of the node to its current state.\n\t *\n\t * @param time The absolute time (in milliseconds) of the animator's play head position.\n\t *\n\t * @see AnimatorBase#update()\n\t */\n\tpublic update(time:number)\n\t{\n\t\tif (this._pTime == time - this._pStartTime) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pUpdateTime(time);\n\n\t}\n\n\t/**\n\t * Sets the animation phase of the node.\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\n\t}\n\n\t/**\n\t * Updates the node's internal playhead position.\n\t *\n\t * @param time The local time (in milliseconds) of the node's playhead position.\n\t */\n\tpublic _pUpdateTime(time:number)\n\t{\n\t\tthis._pTime = time - this._pStartTime;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\t/**\n\t * Updates the node's root delta position\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t}\n}\n\nexport default AnimationStateBase;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleAccelerationNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleAccelerationState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ACCELERATION_INDEX:number /*int*/ = 0;\n\n\tprivate _particleAccelerationNode:ParticleAccelerationNode;\n\tprivate _acceleration:Vector3D;\n\tprivate _halfAcceleration:Vector3D;\n\t\n\t/**\n\t * Defines the acceleration vector of the state, used when in global mode.\n\t */\n\tpublic get acceleration():Vector3D\n\t{\n\t\treturn this._acceleration;\n\t}\n\t\n\tpublic set acceleration(value:Vector3D)\n\t{\n\t\tthis._acceleration.x = value.x;\n\t\tthis._acceleration.y = value.y;\n\t\tthis._acceleration.z = value.z;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\tconstructor(animator:ParticleAnimator, particleAccelerationNode:ParticleAccelerationNode)\n\t{\n\t\tsuper(animator, particleAccelerationNode);\n\n\t\tthis._particleAccelerationNode = particleAccelerationNode;\n\t\tthis._acceleration = this._particleAccelerationNode._acceleration;\n\n\t\tthis.updateAccelerationData();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleAccelerationState.ACCELERATION_INDEX);\n\t\t\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleAccelerationNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._halfAcceleration.x, this._halfAcceleration.y, this._halfAcceleration.z);\n\t}\n\t\n\tprivate updateAccelerationData()\n\t{\n\t\tif (this._particleAccelerationNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tthis._halfAcceleration = new Vector3D(this._acceleration.x/2, this._acceleration.y/2, this._acceleration.z/2);\n\t}\n}\n\nexport default ParticleAccelerationState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleBezierCurveNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n/**\n * ...\n */\nclass ParticleBezierCurveState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static BEZIER_CONTROL_INDEX:number /*int*/ = 0;\n\n\t/** @private */\n\tpublic static BEZIER_END_INDEX:number /*int*/ = 1;\n\n\tprivate _particleBezierCurveNode:ParticleBezierCurveNode;\n\tprivate _controlPoint:Vector3D;\n\tprivate _endPoint:Vector3D;\n\n\t/**\n\t * Defines the default control point of the node, used when in global mode.\n\t */\n\tpublic get controlPoint():Vector3D\n\t{\n\t\treturn this._controlPoint;\n\t}\n\n\tpublic set controlPoint(value:Vector3D)\n\t{\n\t\tthis._controlPoint = value;\n\t}\n\n\t/**\n\t * Defines the default end point of the node, used when in global mode.\n\t */\n\tpublic get endPoint():Vector3D\n\t{\n\t\treturn this._endPoint;\n\t}\n\n\tpublic set endPoint(value:Vector3D)\n\t{\n\t\tthis._endPoint = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleBezierCurveNode:ParticleBezierCurveNode)\n\t{\n\t\tsuper(animator, particleBezierCurveNode);\n\n\t\tthis._particleBezierCurveNode = particleBezierCurveNode;\n\t\tthis._controlPoint = this._particleBezierCurveNode._iControlPoint;\n\t\tthis._endPoint = this._particleBezierCurveNode._iEndPoint;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar controlIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_CONTROL_INDEX);\n\t\tvar endIndex:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBezierCurveState.BEZIER_END_INDEX);\n\n\t\tif (this._particleBezierCurveNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tanimationElements.activateVertexBuffer(controlIndex, this._particleBezierCurveNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(endIndex, this._particleBezierCurveNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else {\n\t\t\tanimationRegisterCache.setVertexConst(controlIndex, this._controlPoint.x, this._controlPoint.y, this._controlPoint.z);\n\t\t\tanimationRegisterCache.setVertexConst(endIndex, this._endPoint.x, this._endPoint.y, this._endPoint.z);\n\t\t}\n\t}\n}\n\nexport default ParticleBezierCurveState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport Orientation3D\t\t\t\t\tfrom \"awayjs-core/lib/geom/Orientation3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleBillboardNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleBillboardState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D;\n\n\tprivate _billboardAxis:Vector3D;\n\n\t/**\n\t *\n\t */\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleBillboardNode)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._billboardAxis = particleNode._iBillboardAxis;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar comps:Array<Vector3D>;\n\t\tif (this._billboardAxis) {\n\t\t\tvar pos:Vector3D = renderable.sourceEntity.sceneTransform.position;\n\t\t\tvar look:Vector3D = camera.sceneTransform.position.subtract(pos);\n\t\t\tvar right:Vector3D = look.crossProduct(this._billboardAxis);\n\t\t\tright.normalize();\n\t\t\tlook = this.billboardAxis.crossProduct(right);\n\t\t\tlook.normalize();\n\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\t\t\tthis._matrix.copyColumnFrom(0, right);\n\t\t\tthis._matrix.copyColumnFrom(1, this.billboardAxis);\n\t\t\tthis._matrix.copyColumnFrom(2, look);\n\t\t\tthis._matrix.copyColumnFrom(3, pos);\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t} else {\n\t\t\t//create a quick inverse projection matrix\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\n\t\t\t//decompose using axis angle rotations\n\t\t\tcomps = this._matrix.decompose(Orientation3D.AXIS_ANGLE);\n\n\t\t\t//recreate the matrix with just the rotation data\n\t\t\tthis._matrix.identity();\n\t\t\tthis._matrix.appendRotation(-comps[1].w*MathConsts.RADIANS_TO_DEGREES, comps[1]);\n\t\t}\n\n\t\t//set a new matrix transform constant\n\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleBillboardState.MATRIX_INDEX), this._matrix);\n\t}\n\n\t/**\n\t * Defines the billboard axis.\n\t */\n\tpublic get billboardAxis():Vector3D\n\t{\n\t\treturn this.billboardAxis;\n\t}\n\n\tpublic set billboardAxis(value:Vector3D)\n\t{\n\t\tthis.billboardAxis = value? value.clone() : null;\n\t\tif (this.billboardAxis)\n\t\t\tthis.billboardAxis.normalize();\n\t}\n\n}\n\nexport default ParticleBillboardState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleColorNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticleColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static DELTA_MULTIPLIER_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 2;\n\n\t/** @private */\n\tpublic static DELTA_OFFSET_INDEX:number /*uint*/ = 3;\n\n\t/** @private */\n\tpublic static CYCLE_INDEX:number /*uint*/ = 4;\n\n\tprivate _particleColorNode:ParticleColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _cycleData:Vector3D;\n\tprivate _startMultiplierData:Vector3D;\n\tprivate _deltaMultiplierData:Vector3D;\n\tprivate _startOffsetData:Vector3D;\n\tprivate _deltaOffsetData:Vector3D;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleColorNode:ParticleColorNode)\n\t{\n\t\tsuper(animator, particleColorNode);\n\n\t\tthis._particleColorNode = particleColorNode;\n\t\tthis._usesMultiplier = this._particleColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = this._particleColorNode._iUsesOffset;\n\t\tthis._usesCycle = this._particleColorNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleColorNode._iUsesPhase;\n\t\tthis._startColor = this._particleColorNode._iStartColor;\n\t\tthis._endColor = this._particleColorNode._iEndColor;\n\t\tthis._cycleDuration = this._particleColorNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleColorNode._iCyclePhase;\n\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tvar dataOffset:number /*uint*/ = this._particleColorNode._iDataOffset;\n\t\t\tif (this._usesCycle)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.CYCLE_INDEX), this._cycleData.x, this._cycleData.y, this._cycleData.z, this._cycleData.w);\n\n\t\t\tif (this._usesMultiplier) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_MULTIPLIER_INDEX), this._startMultiplierData.x, this._startMultiplierData.y, this._startMultiplierData.z, this._startMultiplierData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_MULTIPLIER_INDEX), this._deltaMultiplierData.x, this._deltaMultiplierData.y, this._deltaMultiplierData.z, this._deltaMultiplierData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._usesOffset) {\n\t\t\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t} else {\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.START_OFFSET_INDEX), this._startOffsetData.x, this._startOffsetData.y, this._startOffsetData.z, this._startOffsetData.w);\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleColorState.DELTA_OFFSET_INDEX), this._deltaOffsetData.x, this._deltaOffsetData.y, this._deltaOffsetData.z, this._deltaOffsetData.w);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._cycleData = new Vector3D(Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180, 0, 0);\n\t\t}\n\t\tif (this._particleColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D((this._startColor.redMultiplier + this._endColor.redMultiplier)/2, (this._startColor.greenMultiplier + this._endColor.greenMultiplier)/2, (this._startColor.blueMultiplier + this._endColor.blueMultiplier)/2, (this._startColor.alphaMultiplier + this._endColor.alphaMultiplier)/2);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier)/2, (this._endColor.greenMultiplier - this._startColor.greenMultiplier)/2, (this._endColor.blueMultiplier - this._startColor.blueMultiplier)/2, (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier)/2);\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D((this._startColor.redOffset + this._endColor.redOffset)/(255*2), (this._startColor.greenOffset + this._endColor.greenOffset)/(255*2), (this._startColor.blueOffset + this._endColor.blueOffset)/(255*2), (this._startColor.alphaOffset + this._endColor.alphaOffset)/(255*2));\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/(255*2), (this._endColor.greenOffset - this._startColor.greenOffset)/(255*2), (this._endColor.blueOffset - this._startColor.blueOffset)/(255*2), (this._endColor.alphaOffset - this._startColor.alphaOffset)/(255*2));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tthis._startMultiplierData = new Vector3D(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\t\t\tthis._deltaMultiplierData = new Vector3D((this._endColor.redMultiplier - this._startColor.redMultiplier), (this._endColor.greenMultiplier - this._startColor.greenMultiplier), (this._endColor.blueMultiplier - this._startColor.blueMultiplier), (this._endColor.alphaMultiplier - this._startColor.alphaMultiplier));\n\t\t\t\t}\n\n\t\t\t\tif (this._usesOffset) {\n\t\t\t\t\tthis._startOffsetData = new Vector3D(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\t\t\tthis._deltaOffsetData = new Vector3D((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset )/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ParticleColorState;",
    "import MathConsts\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport DisplayObject\t\t\t\t\tfrom \"awayjs-display/lib/display/DisplayObject\";\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleAnimationData\";\nimport ParticleFollowNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleFollowState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static FOLLOW_POSITION_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static FOLLOW_ROTATION_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleFollowNode:ParticleFollowNode;\n\tprivate _followTarget:DisplayObject;\n\n\tprivate _targetPos:Vector3D = new Vector3D();\n\tprivate _targetEuler:Vector3D = new Vector3D();\n\tprivate _prePos:Vector3D;\n\tprivate _preEuler:Vector3D;\n\tprivate _smooth:boolean;\n\n\t//temporary vector3D for calculation\n\tprivate _temp:Vector3D = new Vector3D();\n\n\tconstructor(animator:ParticleAnimator, particleFollowNode:ParticleFollowNode)\n\t{\n\t\tsuper(animator, particleFollowNode, true);\n\n\t\tthis._particleFollowNode = particleFollowNode;\n\t\tthis._smooth = particleFollowNode._iSmooth;\n\t}\n\n\tpublic get followTarget():DisplayObject\n\t{\n\t\treturn this._followTarget;\n\t}\n\n\tpublic set followTarget(value:DisplayObject)\n\t{\n\t\tthis._followTarget = value;\n\t}\n\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tthis._smooth = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._followTarget) {\n\t\t\tif (this._particleFollowNode._iUsesPosition) {\n\t\t\t\tthis._targetPos.x = this._followTarget.transform.position.x/renderable.sourceEntity.scaleX;\n\t\t\t\tthis._targetPos.y = this._followTarget.transform.position.y/renderable.sourceEntity.scaleY;\n\t\t\t\tthis._targetPos.z = this._followTarget.transform.position.z/renderable.sourceEntity.scaleZ;\n\t\t\t}\n\t\t\tif (this._particleFollowNode._iUsesRotation) {\n\t\t\t\tthis._targetEuler.x = this._followTarget.rotationX;\n\t\t\t\tthis._targetEuler.y = this._followTarget.rotationY;\n\t\t\t\tthis._targetEuler.z = this._followTarget.rotationZ;\n\t\t\t\tthis._targetEuler.scaleBy(MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t}\n\t\t//initialization\n\t\tif (!this._prePos)\n\t\t\tthis._prePos = this._targetPos.clone();\n\t\tif (!this._preEuler)\n\t\t\tthis._preEuler = this._targetEuler.clone();\n\n\t\tvar currentTime:number = this._pTime/1000;\n\t\tvar previousTime:number = animationElements.previousTime;\n\t\tvar deltaTime:number = currentTime - previousTime;\n\n\t\tvar needProcess:boolean = previousTime != currentTime;\n\n\t\tif (this._particleFollowNode._iUsesPosition && this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPositionAndRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset + 3, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesPosition) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.processPosition(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_POSITION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else if (this._particleFollowNode._iUsesRotation) {\n\t\t\tif (needProcess)\n\t\t\t\tthis.precessRotation(currentTime, deltaTime, animationElements);\n\n\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleFollowState.FOLLOW_ROTATION_INDEX), this._particleFollowNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t}\n\n\t\tthis._prePos.copyFrom(this._targetPos);\n\t\tthis._targetEuler.copyFrom(this._targetEuler);\n\t\tanimationElements.previousTime = currentTime;\n\t}\n\n\tprivate processPosition(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar posVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedPos = this._targetPos;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate precessRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedRotation:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\n\t\tif (this._smooth) {\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else\n\t\t\tinterpolatedRotation = this._targetEuler;\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedRotation.x || vertexData[inc + 1] != interpolatedRotation.y || vertexData[inc + 2] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\n\t}\n\n\tprivate processPositionAndRotation(currentTime:number, deltaTime:number, animationElements:AnimationElements)\n\t{\n\t\tvar data:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\n\t\tvar changed:boolean = false;\n\t\tvar len:number /*uint*/ = data.length;\n\n\t\tvar interpolatedPos:Vector3D;\n\t\tvar interpolatedRotation:Vector3D;\n\n\t\tvar posVelocity:Vector3D;\n\t\tvar rotationVelocity:Vector3D;\n\t\tif (this._smooth) {\n\t\t\tposVelocity = this._prePos.subtract(this._targetPos);\n\t\t\tposVelocity.scaleBy(1/deltaTime);\n\t\t\trotationVelocity = this._preEuler.subtract(this._targetEuler);\n\t\t\trotationVelocity.scaleBy(1/deltaTime);\n\t\t} else {\n\t\t\tinterpolatedPos = this._targetPos;\n\t\t\tinterpolatedRotation = this._targetEuler;\n\t\t}\n\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++) {\n\t\t\tvar k:number = (currentTime - data[i].startTime)/data[i].totalTime;\n\t\t\tvar t:number = (k - Math.floor(k))*data[i].totalTime;\n\t\t\tif (t - deltaTime <= 0) {\n\t\t\t\tvar inc:number /*int*/ = data[i].startVertexIndex*animationElements.totalLenOfOneVertex + this._particleFollowNode._iDataOffset;\n\t\t\t\tif (this._smooth) {\n\t\t\t\t\tthis._temp.copyFrom(posVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedPos = this._targetPos.add(this._temp);\n\n\t\t\t\t\tthis._temp.copyFrom(rotationVelocity);\n\t\t\t\t\tthis._temp.scaleBy(t);\n\t\t\t\t\tinterpolatedRotation = this._targetEuler.add(this._temp);\n\t\t\t\t}\n\n\t\t\t\tif (vertexData[inc] != interpolatedPos.x || vertexData[inc + 1] != interpolatedPos.y || vertexData[inc + 2] != interpolatedPos.z || vertexData[inc + 3] != interpolatedRotation.x || vertexData[inc + 4] != interpolatedRotation.y || vertexData[inc + 5] != interpolatedRotation.z) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tfor (var j:number /*uint*/ = 0; j < data[i].numVertices; j++) {\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedPos.z;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.x;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.y;\n\t\t\t\t\t\tvertexData[inc++] = interpolatedRotation.z;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (changed)\n\t\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleFollowState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleInitialColorNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n*\n*/\nclass ParticleInitialColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MULTIPLIER_INDEX:number /*uint*/ = 0;\n\t/** @private */\n\tpublic static OFFSET_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleInitialColorNode:ParticleInitialColorNode;\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _initialColor:ColorTransform;\n\tprivate _multiplierData:Vector3D;\n\tprivate _offsetData:Vector3D;\n\n\tconstructor(animator:ParticleAnimator, particleInitialColorNode:ParticleInitialColorNode)\n\t{\n\t\tsuper(animator, particleInitialColorNode);\n\n\t\tthis._particleInitialColorNode = particleInitialColorNode;\n\t\tthis._usesMultiplier = particleInitialColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleInitialColorNode._iUsesOffset;\n\t\tthis._initialColor = particleInitialColorNode._iInitialColor;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the initial color transform of the state, when in global mode.\n\t */\n\tpublic get initialColor():ColorTransform\n\t{\n\t\treturn this._initialColor;\n\t}\n\n\tpublic set initialColor(value:ColorTransform)\n\t{\n\t\tthis._initialColor = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\t// TODO: not used\n\t\trenderable = renderable;\n\t\tcamera = camera;\n\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\tvar dataOffset:number /*uint*/ = this._particleInitialColorNode._iDataOffset;\n\t\t\t\tif (this._usesMultiplier) {\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\t\tdataOffset += 4;\n\t\t\t\t}\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), dataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t} else {\n\t\t\t\tif (this._usesMultiplier)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.MULTIPLIER_INDEX), this._multiplierData.x, this._multiplierData.y, this._multiplierData.z, this._multiplierData.w);\n\t\t\t\tif (this._usesOffset)\n\t\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleInitialColorState.OFFSET_INDEX), this._offsetData.x, this._offsetData.y, this._offsetData.z, this._offsetData.w);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tif (this._particleInitialColorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tthis._multiplierData = new Vector3D(this._initialColor.redMultiplier, this._initialColor.greenMultiplier, this._initialColor.blueMultiplier, this._initialColor.alphaMultiplier);\n\t\t\tif (this._usesOffset)\n\t\t\t\tthis._offsetData = new Vector3D(this._initialColor.redOffset/255, this._initialColor.greenOffset/255, this._initialColor.blueOffset/255, this._initialColor.alphaOffset/255);\n\t\t}\n\t}\n\n}\n\nexport default ParticleInitialColorState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleOrbitNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleOrbitState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ORBIT_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static EULERS_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleOrbitNode:ParticleOrbitNode;\n\tprivate _usesEulers:boolean;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _radius:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _eulers:Vector3D;\n\tprivate _orbitData:Vector3D;\n\tprivate _eulersMatrix:Matrix3D;\n\n\t/**\n\t * Defines the radius of the orbit when in global mode. Defaults to 100.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the duration of the orbit in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the phase of the orbit in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateOrbitData();\n\t}\n\n\t/**\n\t * Defines the euler rotation in degrees, applied to the orientation of the orbit when in global mode.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._eulers = value;\n\n\t\tthis.updateOrbitData();\n\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOrbitNode:ParticleOrbitNode)\n\t{\n\t\tsuper(animator, particleOrbitNode);\n\n\t\tthis._particleOrbitNode = particleOrbitNode;\n\t\tthis._usesEulers = this._particleOrbitNode._iUsesEulers;\n\t\tthis._usesCycle = this._particleOrbitNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleOrbitNode._iUsesPhase;\n\t\tthis._eulers = this._particleOrbitNode._iEulers;\n\t\tthis._radius = this._particleOrbitNode._iRadius;\n\t\tthis._cycleDuration = this._particleOrbitNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleOrbitNode._iCyclePhase;\n\t\tthis.updateOrbitData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.ORBIT_INDEX);\n\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesPhase)\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\telse\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleOrbitNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._orbitData.x, this._orbitData.y, this._orbitData.z, this._orbitData.w);\n\n\t\tif (this._usesEulers)\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOrbitState.EULERS_INDEX), this._eulersMatrix);\n\t}\n\n\tprivate updateOrbitData()\n\t{\n\t\tif (this._usesEulers) {\n\t\t\tthis._eulersMatrix = new Matrix3D();\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.x, Vector3D.X_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.y, Vector3D.Y_AXIS);\n\t\t\tthis._eulersMatrix.appendRotation(this._eulers.z, Vector3D.Z_AXIS);\n\t\t}\n\t\tif (this._particleOrbitNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._orbitData = new Vector3D(this._radius, 0, this._radius*Math.PI*2, this._cyclePhase*Math.PI/180);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._orbitData.y = Math.PI*2/this._cycleDuration;\n\t\t\t} else\n\t\t\t\tthis._orbitData.y = Math.PI*2;\n\t\t}\n\t}\n}\n\nexport default ParticleOrbitState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleOscillatorNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleOscillatorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static OSCILLATOR_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleOscillatorNode:ParticleOscillatorNode;\n\tprivate _oscillator:Vector3D;\n\tprivate _oscillatorData:Vector3D;\n\n\t/**\n\t * Defines the default oscillator axis (x, y, z) and cycleDuration (w) of the state, used when in global mode.\n\t */\n\tpublic get oscillator():Vector3D\n\t{\n\t\treturn this._oscillator;\n\t}\n\n\tpublic set oscillator(value:Vector3D)\n\t{\n\t\tthis._oscillator = value;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleOscillatorNode:ParticleOscillatorNode)\n\t{\n\t\tsuper(animator, particleOscillatorNode);\n\n\t\tthis._particleOscillatorNode = particleOscillatorNode;\n\t\tthis._oscillator = this._particleOscillatorNode._iOscillator;\n\n\t\tthis.updateOscillatorData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleOscillatorState.OSCILLATOR_INDEX);\n\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.LOCAL_STATIC)\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleOscillatorNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\telse\n\t\t\tanimationRegisterCache.setVertexConst(index, this._oscillatorData.x, this._oscillatorData.y, this._oscillatorData.z, this._oscillatorData.w);\n\t}\n\n\tprivate updateOscillatorData()\n\t{\n\t\tif (this._particleOscillatorNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._oscillator.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\n\t\t\tif (this._oscillatorData == null)\n\t\t\t\tthis._oscillatorData = new Vector3D();\n\n\t\t\tthis._oscillatorData.x = this._oscillator.x;\n\t\t\tthis._oscillatorData.y = this._oscillator.y;\n\t\t\tthis._oscillatorData.z = this._oscillator.z;\n\t\t\tthis._oscillatorData.w = Math.PI*2/this._oscillator.w;\n\t\t}\n\t}\n}\n\nexport default ParticleOscillatorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticlePositionNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n * @author ...\n */\nclass ParticlePositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*uint*/ = 0;\n\n\tprivate _particlePositionNode:ParticlePositionNode;\n\tprivate _position:Vector3D;\n\n\t/**\n\t * Defines the position of the particle when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getPositions():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setPositions(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particlePositionNode:ParticlePositionNode)\n\t{\n\t\tsuper(animator, particlePositionNode);\n\n\t\tthis._particlePositionNode = particlePositionNode;\n\t\tthis._position = this._particlePositionNode._iPosition;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticlePositionState.POSITION_INDEX);\n\n\t\tif (this._particlePositionNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._position.x, this._position.y, this._position.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particlePositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticlePositionState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToHeadingState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase)\n\t{\n\t\tsuper(animator, particleNode);\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToHeadingState.MATRIX_INDEX), this._matrix);\n\t\t}\n\t}\n\n}\n\nexport default ParticleRotateToHeadingState;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleRotateToPositionNode\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotateToPositionState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static MATRIX_INDEX:number /*int*/ = 0;\n\t/** @private */\n\tpublic static POSITION_INDEX:number /*int*/ = 1;\n\n\tprivate _particleRotateToPositionNode:ParticleRotateToPositionNode;\n\tprivate _position:Vector3D;\n\tprivate _matrix:Matrix3D = new Matrix3D();\n\tprivate _offset:Vector3D;\n\n\t/**\n\t * Defines the position of the point the particle will rotate to face when in global mode. Defaults to 0,0,0.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._position;\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._position = value;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotateToPositionNode:ParticleRotateToPositionNode)\n\t{\n\t\tsuper(animator, particleRotateToPositionNode);\n\n\t\tthis._particleRotateToPositionNode = particleRotateToPositionNode;\n\t\tthis._position = this._particleRotateToPositionNode._iPosition;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.POSITION_INDEX);\n\n\t\tif (animationRegisterCache.hasBillboard) {\n\t\t\tthis._matrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\t\tthis._matrix.append(camera.inverseSceneTransform);\n\t\t\tanimationRegisterCache.setVertexConstFromMatrix(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotateToPositionState.MATRIX_INDEX), this._matrix);\n\t\t}\n\n\t\tif (this._particleRotateToPositionNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tthis._offset = renderable.sourceEntity.inverseSceneTransform.transformVector(this._position);\n\t\t\tanimationRegisterCache.setVertexConst(index, this._offset.x, this._offset.y, this._offset.z);\n\t\t} else\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotateToPositionNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\n\t}\n\n}\n\nexport default ParticleRotateToPositionState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleRotationalVelocityNode\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleRotationalVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static ROTATIONALVELOCITY_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleRotationalVelocityNode:ParticleRotationalVelocityNode;\n\tprivate _rotationalVelocityData:Vector3D;\n\tprivate _rotationalVelocity:Vector3D;\n\n\t/**\n\t * Defines the default rotationalVelocity of the state, used when in global mode.\n\t */\n\tpublic get rotationalVelocity():Vector3D\n\t{\n\t\treturn this._rotationalVelocity;\n\t}\n\n\tpublic set rotationalVelocity(value:Vector3D)\n\t{\n\t\tthis._rotationalVelocity = value;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRotationalVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setRotationalVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleRotationNode:ParticleRotationalVelocityNode)\n\t{\n\t\tsuper(animator, particleRotationNode);\n\n\t\tthis._particleRotationalVelocityNode = particleRotationNode;\n\t\tthis._rotationalVelocity = this._particleRotationalVelocityNode._iRotationalVelocity;\n\n\t\tthis.updateRotationalVelocityData();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleRotationalVelocityState.ROTATIONALVELOCITY_INDEX);\n\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._rotationalVelocityData.x, this._rotationalVelocityData.y, this._rotationalVelocityData.z, this._rotationalVelocityData.w);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleRotationalVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t}\n\n\tprivate updateRotationalVelocityData()\n\t{\n\t\tif (this._particleRotationalVelocityNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._rotationalVelocity.w <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must greater than zero\"));\n\t\t\tvar rotation:Vector3D = this._rotationalVelocity.clone();\n\n\t\t\tif (rotation.length <= 0)\n\t\t\t\trotation.z = 1; //set the default direction\n\t\t\telse\n\t\t\t\trotation.normalize();\n\t\t\t// w is used as angle/2 in agal\n\t\t\tthis._rotationalVelocityData = new Vector3D(rotation.x, rotation.y, rotation.z, Math.PI/rotation.w);\n\t\t}\n\t}\n}\n\nexport default ParticleRotationalVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleScaleNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleScaleState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static SCALE_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleScaleNode:ParticleScaleNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _minScale:number;\n\tprivate _maxScale:number;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _scaleData:Vector3D;\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get minScale():number\n\t{\n\t\treturn this._minScale;\n\t}\n\n\tpublic set minScale(value:number)\n\t{\n\t\tthis._minScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the end scale of the state, when in global mode. Defaults to 1.\n\t */\n\tpublic get maxScale():number\n\t{\n\t\treturn this._maxScale;\n\t}\n\n\tpublic set maxScale(value:number)\n\t{\n\t\tthis._maxScale = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the duration of the animation in seconds, used as a period independent of particle duration when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\t/**\n\t * Defines the phase of the cycle in degrees, used as the starting offset of the cycle when in global mode. Defaults to 0.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleScaleNode:ParticleScaleNode)\n\t{\n\t\tsuper(animator, particleScaleNode);\n\n\t\tthis._particleScaleNode = particleScaleNode;\n\t\tthis._usesCycle = this._particleScaleNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleScaleNode._iUsesPhase;\n\t\tthis._minScale = this._particleScaleNode._iMinScale;\n\t\tthis._maxScale = this._particleScaleNode._iMaxScale;\n\t\tthis._cycleDuration = this._particleScaleNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleScaleNode._iCyclePhase;\n\n\t\tthis.updateScaleData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleScaleState.SCALE_INDEX);\n\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._usesPhase)\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\t\t\t\telse\n\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t} else\n\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleScaleNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t} else\n\t\t\tanimationRegisterCache.setVertexConst(index, this._scaleData.x, this._scaleData.y, this._scaleData.z, this._scaleData.w);\n\t}\n\n\tprivate updateScaleData()\n\t{\n\t\tif (this._particleScaleNode.mode == ParticlePropertiesMode.GLOBAL) {\n\t\t\tif (this._usesCycle) {\n\t\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\t\tthis._scaleData = new Vector3D((this._minScale + this._maxScale)/2, Math.abs(this._minScale - this._maxScale)/2, Math.PI*2/this._cycleDuration, this._cyclePhase*Math.PI/180);\n\t\t\t} else\n\t\t\t\tthis._scaleData = new Vector3D(this._minScale, this._maxScale - this._minScale, 0, 0);\n\t\t}\n\t}\n}\n\nexport default ParticleScaleState;",
    "import ColorTransform\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ColorSegmentPoint\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleSegmentedColorNode\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n *\n */\nclass ParticleSegmentedColorState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static START_MULTIPLIER_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static START_OFFSET_INDEX:number /*uint*/ = 1;\n\n\t/** @private */\n\tpublic static TIME_DATA_INDEX:number /*uint*/ = 2;\n\n\tprivate _usesMultiplier:boolean;\n\tprivate _usesOffset:boolean;\n\tprivate _startColor:ColorTransform;\n\tprivate _endColor:ColorTransform;\n\tprivate _segmentPoints:Array<ColorSegmentPoint>;\n\tprivate _numSegmentPoint:number /*int*/;\n\n\tprivate _timeLifeData:Array<number>;\n\tprivate _multiplierData:Array<number>;\n\tprivate _offsetData:Array<number>;\n\n\t/**\n\t * Defines the start color transform of the state, when in global mode.\n\t */\n\tpublic get startColor():ColorTransform\n\t{\n\t\treturn this._startColor;\n\t}\n\n\tpublic set startColor(value:ColorTransform)\n\t{\n\t\tthis._startColor = value;\n\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the end color transform of the state, when in global mode.\n\t */\n\tpublic get endColor():ColorTransform\n\t{\n\t\treturn this._endColor;\n\t}\n\n\tpublic set endColor(value:ColorTransform)\n\t{\n\t\tthis._endColor = value;\n\t\tthis.updateColorData();\n\t}\n\n\t/**\n\t * Defines the number of segments.\n\t */\n\tpublic get numSegmentPoint():number /*int*/\n\t{\n\t\treturn this._numSegmentPoint;\n\t}\n\n\t/**\n\t * Defines the key points of color\n\t */\n\tpublic get segmentPoints():Array<ColorSegmentPoint>\n\t{\n\t\treturn this._segmentPoints;\n\t}\n\n\tpublic set segmentPoints(value:Array<ColorSegmentPoint>)\n\t{\n\t\tthis._segmentPoints = value;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic get usesMultiplier():boolean\n\t{\n\t\treturn this._usesMultiplier;\n\t}\n\n\tpublic get usesOffset():boolean\n\t{\n\t\treturn this._usesOffset;\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSegmentedColorNode:ParticleSegmentedColorNode)\n\t{\n\t\tsuper(animator, particleSegmentedColorNode);\n\n\t\tthis._usesMultiplier = particleSegmentedColorNode._iUsesMultiplier;\n\t\tthis._usesOffset = particleSegmentedColorNode._iUsesOffset;\n\t\tthis._startColor = particleSegmentedColorNode._iStartColor;\n\t\tthis._endColor = particleSegmentedColorNode._iEndColor;\n\t\tthis._segmentPoints = particleSegmentedColorNode._iSegmentPoints;\n\t\tthis._numSegmentPoint = particleSegmentedColorNode._iNumSegmentPoint;\n\t\tthis.updateColorData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needFragmentAnimation) {\n\t\t\tif (this._numSegmentPoint > 0)\n\t\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.TIME_DATA_INDEX), this._timeLifeData[0], this._timeLifeData[1], this._timeLifeData[2], this._timeLifeData[3]);\n\t\t\tif (this._usesMultiplier)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_MULTIPLIER_INDEX), this._multiplierData);\n\t\t\tif (this._usesOffset)\n\t\t\t\tanimationRegisterCache.setVertexConstFromArray(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSegmentedColorState.START_OFFSET_INDEX), this._offsetData);\n\t\t}\n\t}\n\n\tprivate updateColorData()\n\t{\n\t\tthis._timeLifeData = new Array<number>();\n\t\tthis._multiplierData = new Array<number>();\n\t\tthis._offsetData = new Array<number>();\n\t\tvar i:number /*int*/;\n\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\tif (i == 0)\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life);\n\t\t\telse\n\t\t\t\tthis._timeLifeData.push(this._segmentPoints[i].life - this._segmentPoints[i - 1].life);\n\t\t}\n\t\tif (this._numSegmentPoint == 0)\n\t\t\tthis._timeLifeData.push(1);\n\t\telse\n\t\t\tthis._timeLifeData.push(1 - this._segmentPoints[i - 1].life);\n\n\t\tif (this._usesMultiplier) {\n\t\t\tthis._multiplierData.push(this._startColor.redMultiplier, this._startColor.greenMultiplier, this._startColor.blueMultiplier, this._startColor.alphaMultiplier);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._startColor.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._startColor.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._startColor.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._startColor.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._multiplierData.push((this._segmentPoints[i].color.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._segmentPoints[i].color.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._multiplierData.push(this._endColor.redMultiplier - this._startColor.redMultiplier, this._endColor.greenMultiplier - this._startColor.greenMultiplier, this._endColor.blueMultiplier - this._startColor.blueMultiplier, this._endColor.alphaMultiplier - this._startColor.alphaMultiplier);\n\t\t\telse\n\t\t\t\tthis._multiplierData.push((this._endColor.redMultiplier - this._segmentPoints[i - 1].color.redMultiplier)/this._timeLifeData[i], (this._endColor.greenMultiplier - this._segmentPoints[i - 1].color.greenMultiplier)/this._timeLifeData[i], (this._endColor.blueMultiplier - this._segmentPoints[i - 1].color.blueMultiplier)/this._timeLifeData[i], (this._endColor.alphaMultiplier - this._segmentPoints[i - 1].color.alphaMultiplier)/this._timeLifeData[i]);\n\t\t}\n\n\t\tif (this._usesOffset) {\n\t\t\tthis._offsetData.push(this._startColor.redOffset/255, this._startColor.greenOffset/255, this._startColor.blueOffset/255, this._startColor.alphaOffset/255);\n\t\t\tfor (i = 0; i < this._numSegmentPoint; i++) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._startColor.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._startColor.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._startColor.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._startColor.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t\telse\n\t\t\t\t\tthis._offsetData.push((this._segmentPoints[i].color.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._segmentPoints[i].color.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t\t}\n\t\t\tif (this._numSegmentPoint == 0)\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._startColor.redOffset)/255, (this._endColor.greenOffset - this._startColor.greenOffset)/255, (this._endColor.blueOffset - this._startColor.blueOffset)/255, (this._endColor.alphaOffset - this._startColor.alphaOffset)/255);\n\t\t\telse\n\t\t\t\tthis._offsetData.push((this._endColor.redOffset - this._segmentPoints[i - 1].color.redOffset)/this._timeLifeData[i]/255, (this._endColor.greenOffset - this._segmentPoints[i - 1].color.greenOffset)/this._timeLifeData[i]/255, (this._endColor.blueOffset - this._segmentPoints[i - 1].color.blueOffset)/this._timeLifeData[i]/255, (this._endColor.alphaOffset - this._segmentPoints[i - 1].color.alphaOffset)/this._timeLifeData[i]/255);\n\t\t}\n\t\t//cut off the data\n\t\tthis._timeLifeData.length = 4;\n\t}\n}\n\nexport default ParticleSegmentedColorState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleSpriteSheetNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleSpriteSheetState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX_0:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static UV_INDEX_1:number /*uint*/ = 1;\n\n\tprivate _particleSpriteSheetNode:ParticleSpriteSheetNode;\n\tprivate _usesCycle:boolean;\n\tprivate _usesPhase:boolean;\n\tprivate _totalFrames:number /*int*/;\n\tprivate _numColumns:number /*int*/;\n\tprivate _numRows:number /*int*/;\n\tprivate _cycleDuration:number;\n\tprivate _cyclePhase:number;\n\tprivate _spriteSheetData:Array<number>;\n\n\t/**\n\t * Defines the cycle phase, when in global mode. Defaults to zero.\n\t */\n\tpublic get cyclePhase():number\n\t{\n\t\treturn this._cyclePhase;\n\t}\n\n\tpublic set cyclePhase(value:number)\n\t{\n\t\tthis._cyclePhase = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\t/**\n\t * Defines the cycle duration in seconds, when in global mode. Defaults to 1.\n\t */\n\tpublic get cycleDuration():number\n\t{\n\t\treturn this._cycleDuration;\n\t}\n\n\tpublic set cycleDuration(value:number)\n\t{\n\t\tthis._cycleDuration = value;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleSpriteSheetNode:ParticleSpriteSheetNode)\n\t{\n\t\tsuper(animator, particleSpriteSheetNode);\n\n\t\tthis._particleSpriteSheetNode = particleSpriteSheetNode;\n\n\t\tthis._usesCycle = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._usesPhase = this._particleSpriteSheetNode._iUsesCycle;\n\t\tthis._totalFrames = this._particleSpriteSheetNode._iTotalFrames;\n\t\tthis._numColumns = this._particleSpriteSheetNode._iNumColumns;\n\t\tthis._numRows = this._particleSpriteSheetNode._iNumRows;\n\t\tthis._cycleDuration = this._particleSpriteSheetNode._iCycleDuration;\n\t\tthis._cyclePhase = this._particleSpriteSheetNode._iCyclePhase;\n\n\t\tthis.updateSpriteSheetData();\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_0), this._spriteSheetData[0], this._spriteSheetData[1], this._spriteSheetData[2], this._spriteSheetData[3]);\n\t\t\tif (this._usesCycle) {\n\t\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleSpriteSheetState.UV_INDEX_1);\n\t\t\t\tif (this._particleSpriteSheetNode.mode == ParticlePropertiesMode.LOCAL_STATIC) {\n\t\t\t\t\tif (this._usesPhase)\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t\t\t\t\telse\n\t\t\t\t\t\tanimationElements.activateVertexBuffer(index, this._particleSpriteSheetNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\t} else\n\t\t\t\t\tanimationRegisterCache.setVertexConst(index, this._spriteSheetData[4], this._spriteSheetData[5]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateSpriteSheetData()\n\t{\n\t\tthis._spriteSheetData = new Array<number>(8);\n\n\t\tvar uTotal:number = this._totalFrames/this._numColumns;\n\n\t\tthis._spriteSheetData[0] = uTotal;\n\t\tthis._spriteSheetData[1] = 1/this._numColumns;\n\t\tthis._spriteSheetData[2] = 1/this._numRows;\n\n\t\tif (this._usesCycle) {\n\t\t\tif (this._cycleDuration <= 0)\n\t\t\t\tthrow(new Error(\"the cycle duration must be greater than zero\"));\n\t\t\tthis._spriteSheetData[4] = uTotal/this._cycleDuration;\n\t\t\tthis._spriteSheetData[5] = this._cycleDuration;\n\t\t\tif (this._usesPhase)\n\t\t\t\tthis._spriteSheetData[6] = this._cyclePhase;\n\t\t}\n\t}\n}\n\nexport default ParticleSpriteSheetState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleAnimationData\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleAnimationData\";\nimport ParticleNodeBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nimport AnimationStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleStateBase extends AnimationStateBase\n{\n\tprivate _particleNode:ParticleNodeBase;\n\n\tpublic _pDynamicProperties:Array<Vector3D> = new Array<Vector3D>();\n\tpublic _pDynamicPropertiesDirty:Object = new Object();\n\n\tpublic _pNeedUpdateTime:boolean;\n\n\tconstructor(animator:ParticleAnimator, particleNode:ParticleNodeBase, needUpdateTime:boolean = false)\n\t{\n\t\tsuper(animator, particleNode);\n\n\t\tthis._particleNode = particleNode;\n\t\tthis._pNeedUpdateTime = needUpdateTime;\n\t}\n\n\tpublic get needUpdateTime():boolean\n\t{\n\t\treturn this._pNeedUpdateTime;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\n\t}\n\n\tpublic _pUpdateDynamicProperties(animationElements:AnimationElements)\n\t{\n\t\tthis._pDynamicPropertiesDirty[animationElements._iUniqueId] = true;\n\n\t\tvar animationParticles:Array<ParticleAnimationData> = animationElements.animationParticles;\n\t\tvar vertexData:Array<number> = animationElements.vertexData;\n\t\tvar totalLenOfOneVertex:number /*uint*/ = animationElements.totalLenOfOneVertex;\n\t\tvar dataLength:number /*uint*/ = this._particleNode.dataLength;\n\t\tvar dataOffset:number /*uint*/ = this._particleNode._iDataOffset;\n\t\tvar vertexLength:number /*uint*/;\n\t\t//\t\t\tvar particleOffset:number /*uint*/;\n\t\tvar startingOffset:number /*uint*/;\n\t\tvar vertexOffset:number /*uint*/;\n\t\tvar data:Vector3D;\n\t\tvar animationParticle:ParticleAnimationData;\n\n\t\t//\t\t\tvar numParticles:number /*uint*/ = _positions.length/dataLength;\n\t\tvar numParticles:number /*uint*/ = this._pDynamicProperties.length;\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar j:number /*uint*/ = 0;\n\t\tvar k:number /*uint*/ = 0;\n\n\t\t//loop through all particles\n\t\twhile (i < numParticles) {\n\t\t\t//loop through each particle data for the current particle\n\t\t\twhile (j < numParticles && (animationParticle = animationParticles[j]).index == i) {\n\t\t\t\tdata = this._pDynamicProperties[i];\n\t\t\t\tvertexLength = animationParticle.numVertices*totalLenOfOneVertex;\n\t\t\t\tstartingOffset = animationParticle.startVertexIndex*totalLenOfOneVertex + dataOffset;\n\t\t\t\t//loop through each vertex in the particle data\n\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t//\t\t\t\t\t\tparticleOffset = i * dataLength;\n\t\t\t\t\t//loop through all vertex data for the current particle data\n\t\t\t\t\tfor (k = 0; k < vertexLength; k += totalLenOfOneVertex) {\n\t\t\t\t\t\tvertexOffset = startingOffset + k;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.x;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.y;\n\t\t\t\t\t\tvertexData[vertexOffset++] = data.z;\n\n\t\t\t\t\t\tif (dataLength == 4)\n\t\t\t\t\t\t\tvertexData[vertexOffset++] = data.w;\n\t\t\t\t\t}\n\t\t\t\t\t\t//loop through each value in the particle vertex\n\t\t\t\t\t\t//\t\t\t\t\t\tswitch(dataLength) {\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t//\t\t\t\t\t\t\t\tvertexData[vertexOffset++] = _positions[particleOffset++];\n\t\t\t\t\t\t//\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tanimationElements.invalidateBuffer();\n\t}\n\n}\n\nexport default ParticleStateBase;",
    "import Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleTimeNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleTimeState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static TIME_STREAM_INDEX:number /*uint*/ = 0;\n\n\t/** @private */\n\tpublic static TIME_CONSTANT_INDEX:number /*uint*/ = 1;\n\n\tprivate _particleTimeNode:ParticleTimeNode;\n\n\tconstructor(animator:ParticleAnimator, particleTimeNode:ParticleTimeNode)\n\t{\n\t\tsuper(animator, particleTimeNode, true);\n\n\t\tthis._particleTimeNode = particleTimeNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tanimationElements.activateVertexBuffer(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_STREAM_INDEX), this._particleTimeNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_4);\n\n\t\tvar particleTime:number = this._pTime/1000;\n\t\tanimationRegisterCache.setVertexConst(animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleTimeState.TIME_CONSTANT_INDEX), particleTime, particleTime, particleTime, particleTime);\n\t}\n\n}\n\nexport default ParticleTimeState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticleUVNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleUVState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static UV_INDEX:number /*uint*/ = 0;\n\n\tprivate _particleUVNode:ParticleUVNode;\n\n\tconstructor(animator:ParticleAnimator, particleUVNode:ParticleUVNode)\n\t{\n\t\tsuper(animator, particleUVNode);\n\n\t\tthis._particleUVNode = particleUVNode;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (animationRegisterCache.needUVAnimation) {\n\t\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleUVState.UV_INDEX);\n\t\t\tvar data:Vector3D = this._particleUVNode._iUvData;\n\t\t\tanimationRegisterCache.setVertexConst(index, data.x, data.y);\n\t\t}\n\t}\n\n}\n\nexport default ParticleUVState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLVertexBufferFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\";\n\nimport ParticleAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nimport AnimationRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport AnimationElements\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nimport ParticlePropertiesMode\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nimport ParticleVelocityNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\";\nimport ParticleStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nimport GL_RenderableBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../renderables/GL_RenderableBase\";\n\n/**\n * ...\n */\nclass ParticleVelocityState extends ParticleStateBase\n{\n\t/** @private */\n\tpublic static VELOCITY_INDEX:number /*int*/ = 0;\n\n\tprivate _particleVelocityNode:ParticleVelocityNode;\n\tprivate _velocity:Vector3D;\n\n\t/**\n\t * Defines the default velocity vector of the state, used when in global mode.\n\t */\n\tpublic get velocity():Vector3D\n\t{\n\t\treturn this._velocity;\n\t}\n\n\tpublic set velocity(value:Vector3D)\n\t{\n\t\tthis._velocity = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVelocities():Array<Vector3D>\n\t{\n\t\treturn this._pDynamicProperties;\n\t}\n\n\tpublic setVelocities(value:Array<Vector3D>)\n\t{\n\t\tthis._pDynamicProperties = value;\n\n\t\tthis._pDynamicPropertiesDirty = new Object();\n\t}\n\n\tconstructor(animator:ParticleAnimator, particleVelocityNode:ParticleVelocityNode)\n\t{\n\t\tsuper(animator, particleVelocityNode);\n\n\t\tthis._particleVelocityNode = particleVelocityNode;\n\t\tthis._velocity = this._particleVelocityNode._iVelocity;\n\t}\n\n\tpublic setRenderState(stage:Stage, renderable:GL_RenderableBase, animationElements:AnimationElements, animationRegisterCache:AnimationRegisterCache, camera:Camera)\n\t{\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.LOCAL_DYNAMIC && !this._pDynamicPropertiesDirty[animationElements._iUniqueId])\n\t\t\tthis._pUpdateDynamicProperties(animationElements);\n\n\t\tvar index:number /*int*/ = animationRegisterCache.getRegisterIndex(this._pAnimationNode, ParticleVelocityState.VELOCITY_INDEX);\n\n\t\tif (this._particleVelocityNode.mode == ParticlePropertiesMode.GLOBAL)\n\t\t\tanimationRegisterCache.setVertexConst(index, this._velocity.x, this._velocity.y, this._velocity.z);\n\t\telse\n\t\t\tanimationElements.activateVertexBuffer(index, this._particleVelocityNode._iDataOffset, stage, ContextGLVertexBufferFormat.FLOAT_3);\n\t}\n}\n\nexport default ParticleVelocityState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonBinaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate _skeletonAnimationNode:SkeletonBinaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between inputA (0) and inputB (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see inputA\n\t * @see inputB\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonBinaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._inputA = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputA);\n\t\tthis._inputB = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.inputB);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis._pRootDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis._pRootDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis._pRootDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n}\n\nexport default SkeletonBinaryLERPState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimator\";\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport SkeletonClipNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationClipState\";\nimport ISkeletonAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonClipState extends AnimationClipState implements ISkeletonAnimationState\n{\n\tprivate _rootPos:Vector3D = new Vector3D();\n\tprivate _frames:Array<SkeletonPose>;\n\tprivate _skeletonClipNode:SkeletonClipNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _currentPose:SkeletonPose;\n\tprivate _nextPose:SkeletonPose;\n\n\t/**\n\t * Returns the current skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get currentPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentPose;\n\t}\n\n\t/**\n\t * Returns the next skeleton pose frame of animation in the clip based on the internal playhead position.\n\t */\n\tpublic get nextPose():SkeletonPose\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextPose;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonClipNode:SkeletonClipNode)\n\t{\n\t\tsuper(animator, skeletonClipNode);\n\n\t\tthis._skeletonClipNode = skeletonClipNode;\n\t\tthis._frames = this._skeletonClipNode.frames;\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentPose = this._frames[this._pCurrentFrame];\n\n\t\tif (this._skeletonClipNode.looping && this._pNextFrame >= this._skeletonClipNode.lastFrame) {\n\t\t\tthis._nextPose = this._frames[0];\n\t\t\t(<SkeletonAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextPose = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the internal playhead position.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (!this._skeletonClipNode.totalDuration)\n\t\t\treturn;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar currentPose:Array<JointPose> = this._currentPose.jointPoses;\n\t\tvar nextPose:Array<JointPose> = this._nextPose.jointPoses;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar endPose:JointPose;\n\t\tvar tr:Vector3D;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tif ((numJoints != currentPose.length) || (numJoints != nextPose.length))\n\t\t\tthrow new Error(\"joint counts don't match!\");\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = currentPose[i];\n\t\t\tpose2 = nextPose[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tif (this._skeletonClipNode.highQuality)\n\t\t\t\tendPose.orientation.slerp(pose1.orientation, pose2.orientation, this._pBlendWeight); else\n\t\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._pBlendWeight);\n\n\t\t\tif (i > 0) {\n\t\t\t\ttr = endPose.translation;\n\t\t\t\ttr.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\t\ttr.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\t\ttr.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\tvar p1:Vector3D, p2:Vector3D, p3:Vector3D;\n\t\tvar totalDelta:Vector3D = this._skeletonClipNode.totalDelta;\n\n\t\t// jumping back, need to reset position\n\t\tif ((this._pTimeDir > 0 && this._pNextFrame < this._pOldFrame) || (this._pTimeDir < 0 && this._pNextFrame > this._pOldFrame)) {\n\t\t\tthis._rootPos.x -= totalDelta.x*this._pTimeDir;\n\t\t\tthis._rootPos.y -= totalDelta.y*this._pTimeDir;\n\t\t\tthis._rootPos.z -= totalDelta.z*this._pTimeDir;\n\t\t}\n\n\t\tvar dx:number = this._rootPos.x;\n\t\tvar dy:number = this._rootPos.y;\n\t\tvar dz:number = this._rootPos.z;\n\n\t\tif (this._skeletonClipNode.stitchFinalFrame && this._pNextFrame == this._skeletonClipNode.lastFrame) {\n\t\t\tp1 = this._frames[0].jointPoses[0].translation;\n\t\t\tp2 = this._frames[1].jointPoses[0].translation;\n\t\t\tp3 = this._currentPose.jointPoses[0].translation;\n\n\t\t\tthis._rootPos.x = p3.x + p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p3.y + p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p3.z + p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t} else {\n\t\t\tp1 = this._currentPose.jointPoses[0].translation;\n\t\t\tp2 = this._frames[this._pNextFrame].jointPoses[0].translation; //cover the instances where we wrap the pose but still want the final frame translation values\n\t\t\tthis._rootPos.x = p1.x + this._pBlendWeight*(p2.x - p1.x);\n\t\t\tthis._rootPos.y = p1.y + this._pBlendWeight*(p2.y - p1.y);\n\t\t\tthis._rootPos.z = p1.z + this._pBlendWeight*(p2.z - p1.z);\n\t\t}\n\n\t\tthis._pRootDelta.x = this._rootPos.x - dx;\n\t\tthis._pRootDelta.y = this._rootPos.y - dy;\n\t\tthis._pRootDelta.z = this._rootPos.z - dz;\n\n\t\tthis._pOldFrame = this._pNextFrame;\n\t}\n}\n\nexport default SkeletonClipState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport SkeletonDifferenceNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\";\nimport AnimationStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDifferenceState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _blendWeight:number = 0;\n\tprivate static _tempQuat:Quaternion = new Quaternion();\n\tprivate _skeletonAnimationNode:SkeletonDifferenceNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _baseInput:ISkeletonAnimationState;\n\tprivate _differenceInput:ISkeletonAnimationState;\n\n\t/**\n\t * Defines a fractional value between 0 and 1 representing the blending ratio between the base input (0) and difference input (1),\n\t * used to produce the skeleton pose output.\n\t *\n\t * @see #baseInput\n\t * @see #differenceInput\n\t */\n\tpublic get blendWeight():number\n\t{\n\t\treturn this._blendWeight;\n\t}\n\n\tpublic set blendWeight(value:number)\n\t{\n\t\tthis._blendWeight = value;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDifferenceNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._baseInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.baseInput);\n\t\tthis._differenceInput = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.differenceInput);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._baseInput.phase(value);\n\t\tthis._baseInput.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._baseInput.update(time);\n\t\tthis._differenceInput.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar deltA:Vector3D = this._baseInput.positionDelta;\n\t\tvar deltB:Vector3D = this._differenceInput.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*deltB.x;\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*deltB.y;\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*deltB.z;\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blendWeight value between base input and difference input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar basePoses:Array<JointPose> = this._baseInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar diffPoses:Array<JointPose> = this._differenceInput.getSkeletonPose(skeleton).jointPoses;\n\t\tvar base:JointPose, diff:JointPose;\n\t\tvar basePos:Vector3D, diffPos:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tbase = basePoses[i];\n\t\t\tdiff = diffPoses[i];\n\t\t\tbasePos = base.translation;\n\t\t\tdiffPos = diff.translation;\n\n\t\t\tSkeletonDifferenceState._tempQuat.multiply(diff.orientation, base.orientation);\n\t\t\tendPose.orientation.lerp(base.orientation, SkeletonDifferenceState._tempQuat, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = basePos.x + this._blendWeight*diffPos.x;\n\t\t\ttr.y = basePos.y + this._blendWeight*diffPos.y;\n\t\t\ttr.z = basePos.z + this._blendWeight*diffPos.z;\n\t\t}\n\t}\n}\n\nexport default SkeletonDifferenceState;",
    "import Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport SkeletonDirectionalNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\";\nimport AnimationStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonDirectionalState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonDirectionalNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _inputA:ISkeletonAnimationState;\n\tprivate _inputB:ISkeletonAnimationState;\n\tprivate _blendWeight:number = 0;\n\tprivate _direction:number = 0;\n\tprivate _blendDirty:boolean = true;\n\tprivate _forward:ISkeletonAnimationState;\n\tprivate _backward:ISkeletonAnimationState;\n\tprivate _left:ISkeletonAnimationState;\n\tprivate _right:ISkeletonAnimationState;\n\n\t/**\n\t * Defines the direction in degrees of the aniamtion between the forwards (0), right(90) backwards (180) and left(270) input nodes,\n\t * used to produce the skeleton pose output.\n\t */\n\tpublic set direction(value:number)\n\t{\n\t\tif (this._direction == value)\n\t\t\treturn;\n\n\t\tthis._direction = value;\n\n\t\tthis._blendDirty = true;\n\n\t\tthis._skeletonPoseDirty = true;\n\t\tthis._pPositionDeltaDirty = true;\n\t}\n\n\tpublic get direction():number\n\t{\n\t\treturn this._direction;\n\t}\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonDirectionalNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tthis._forward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.forward);\n\t\tthis._backward = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.backward);\n\t\tthis._left = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.left);\n\t\tthis._right = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode.right);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tthis._inputA.phase(value);\n\t\tthis._inputB.phase(value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._inputA.update(time);\n\t\tthis._inputB.update(time);\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar deltA:Vector3D = this._inputA.positionDelta;\n\t\tvar deltB:Vector3D = this._inputB.positionDelta;\n\n\t\tthis.positionDelta.x = deltA.x + this._blendWeight*(deltB.x - deltA.x);\n\t\tthis.positionDelta.y = deltA.y + this._blendWeight*(deltB.y - deltA.y);\n\t\tthis.positionDelta.z = deltA.z + this._blendWeight*(deltB.z - deltA.z);\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tif (this._blendDirty)\n\t\t\tthis.updateBlend();\n\n\t\tvar endPose:JointPose;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses1:Array<JointPose> = this._inputA.getSkeletonPose(skeleton).jointPoses;\n\t\tvar poses2:Array<JointPose> = this._inputB.getSkeletonPose(skeleton).jointPoses;\n\t\tvar pose1:JointPose, pose2:JointPose;\n\t\tvar p1:Vector3D, p2:Vector3D;\n\t\tvar tr:Vector3D;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var i:number /*uint*/ = 0; i < numJoints; ++i) {\n\t\t\tendPose = endPoses[i];\n\n\t\t\tif (endPose == null)\n\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\tpose1 = poses1[i];\n\t\t\tpose2 = poses2[i];\n\t\t\tp1 = pose1.translation;\n\t\t\tp2 = pose2.translation;\n\n\t\t\tendPose.orientation.lerp(pose1.orientation, pose2.orientation, this._blendWeight);\n\n\t\t\ttr = endPose.translation;\n\t\t\ttr.x = p1.x + this._blendWeight*(p2.x - p1.x);\n\t\t\ttr.y = p1.y + this._blendWeight*(p2.y - p1.y);\n\t\t\ttr.z = p1.z + this._blendWeight*(p2.z - p1.z);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the blend value for the animation output based on the direction value between forward, backwards, left and right input nodes.\n\t *\n\t * @private\n\t */\n\tprivate updateBlend()\n\t{\n\t\tthis._blendDirty = false;\n\n\t\tif (this._direction < 0 || this._direction > 360) {\n\t\t\tthis._direction %= 360;\n\t\t\tif (this._direction < 0)\n\t\t\t\tthis._direction += 360;\n\t\t}\n\n\t\tif (this._direction < 90) {\n\t\t\tthis._inputA = this._forward;\n\t\t\tthis._inputB = this._right;\n\t\t\tthis._blendWeight = this._direction/90;\n\t\t} else if (this._direction < 180) {\n\t\t\tthis._inputA = this._right;\n\t\t\tthis._inputB = this._backward;\n\t\t\tthis._blendWeight = (this._direction - 90)/90;\n\t\t} else if (this._direction < 270) {\n\t\t\tthis._inputA = this._backward;\n\t\t\tthis._inputB = this._left;\n\t\t\tthis._blendWeight = (this._direction - 180)/90;\n\t\t} else {\n\t\t\tthis._inputA = this._left;\n\t\t\tthis._inputB = this._forward;\n\t\t\tthis._blendWeight = (this._direction - 270)/90;\n\t\t}\n\t}\n}\n\nexport default SkeletonDirectionalState;",
    "import Quaternion\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Quaternion\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport JointPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nimport Skeleton\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nimport SkeletonPose\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nimport SkeletonNaryLERPNode\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\";\nimport AnimationStateBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nimport ISkeletonAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\n\n/**\n *\n */\nclass SkeletonNaryLERPState extends AnimationStateBase implements ISkeletonAnimationState\n{\n\tprivate _skeletonAnimationNode:SkeletonNaryLERPNode;\n\tprivate _skeletonPose:SkeletonPose = new SkeletonPose();\n\tprivate _skeletonPoseDirty:boolean = true;\n\tprivate _blendWeights:Array<number> = new Array<number>();\n\tprivate _inputs:Array<ISkeletonAnimationState> = new Array<ISkeletonAnimationState>();\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:SkeletonNaryLERPNode)\n\t{\n\t\tsuper(animator, skeletonAnimationNode);\n\n\t\tthis._skeletonAnimationNode = skeletonAnimationNode;\n\n\t\tvar i:number /*uint*/ = this._skeletonAnimationNode.numInputs;\n\n\t\twhile (i--)\n\t\t\tthis._inputs[i] = <ISkeletonAnimationState> animator.getAnimationState(this._skeletonAnimationNode._iInputs[i]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._skeletonPoseDirty = true;\n\n\t\tthis._pPositionDeltaDirty = true;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(value);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUdateTime(time:number /*int*/)\n\t{\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tif (this._blendWeights[j])\n\t\t\t\tthis._inputs[j].update(time);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n\n\t/**\n\t * Returns the current skeleton pose of the animation in the clip based on the internal playhead position.\n\t */\n\tpublic getSkeletonPose(skeleton:Skeleton):SkeletonPose\n\t{\n\t\tif (this._skeletonPoseDirty)\n\t\t\tthis.updateSkeletonPose(skeleton);\n\n\t\treturn this._skeletonPose;\n\t}\n\n\t/**\n\t * Returns the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index for which the skeleton animation node blend weight is requested.\n\t */\n\tpublic getBlendWeightAt(index:number /*uint*/):number\n\t{\n\t\treturn this._blendWeights[index];\n\t}\n\n\t/**\n\t * Sets the blend weight of the skeleton aniamtion node that resides at the given input index.\n\t *\n\t * @param index The input index on which the skeleton animation node blend weight is to be set.\n\t * @param blendWeight The blend weight value to use for the given skeleton animation node index.\n\t */\n\tpublic setBlendWeightAt(index:number /*uint*/, blendWeight:number)\n\t{\n\t\tthis._blendWeights[index] = blendWeight;\n\n\t\tthis._pPositionDeltaDirty = true;\n\t\tthis._skeletonPoseDirty = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\tthis._pPositionDeltaDirty = false;\n\n\t\tvar delta:Vector3D;\n\t\tvar weight:number;\n\n\t\tthis.positionDelta.x = 0;\n\t\tthis.positionDelta.y = 0;\n\t\tthis.positionDelta.z = 0;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (weight) {\n\t\t\t\tdelta = this._inputs[j].positionDelta;\n\t\t\t\tthis.positionDelta.x += weight*delta.x;\n\t\t\t\tthis.positionDelta.y += weight*delta.y;\n\t\t\t\tthis.positionDelta.z += weight*delta.z;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the output skeleton pose of the node based on the blend weight values given to the input nodes.\n\t *\n\t * @param skeleton The skeleton used by the animator requesting the ouput pose.\n\t */\n\tprivate updateSkeletonPose(skeleton:Skeleton)\n\t{\n\t\tthis._skeletonPoseDirty = false;\n\n\t\tvar weight:number;\n\t\tvar endPoses:Array<JointPose> = this._skeletonPose.jointPoses;\n\t\tvar poses:Array<JointPose>;\n\t\tvar endPose:JointPose, pose:JointPose;\n\t\tvar endTr:Vector3D, tr:Vector3D;\n\t\tvar endQuat:Quaternion, q:Quaternion;\n\t\tvar firstPose:Array<JointPose>;\n\t\tvar i:number /*uint*/;\n\t\tvar w0:number, x0:number, y0:number, z0:number;\n\t\tvar w1:number, x1:number, y1:number, z1:number;\n\t\tvar numJoints:number /*uint*/ = skeleton.numJoints;\n\n\t\t// :s\n\t\tif (endPoses.length != numJoints)\n\t\t\tendPoses.length = numJoints;\n\n\t\tfor (var j:number /*uint*/ = 0; j < this._skeletonAnimationNode.numInputs; ++j) {\n\t\t\tweight = this._blendWeights[j];\n\n\t\t\tif (!weight)\n\t\t\t\tcontinue;\n\n\t\t\tposes = this._inputs[j].getSkeletonPose(skeleton).jointPoses;\n\n\t\t\tif (!firstPose) {\n\t\t\t\tfirstPose = poses;\n\t\t\t\tfor (i = 0; i < numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\n\t\t\t\t\tif (endPose == null)\n\t\t\t\t\t\tendPose = endPoses[i] = new JointPose();\n\n\t\t\t\t\tpose = poses[i];\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tendQuat = endPose.orientation;\n\n\t\t\t\t\tendQuat.x = weight*q.x;\n\t\t\t\t\tendQuat.y = weight*q.y;\n\t\t\t\t\tendQuat.z = weight*q.z;\n\t\t\t\t\tendQuat.w = weight*q.w;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x = weight*tr.x;\n\t\t\t\t\tendTr.y = weight*tr.y;\n\t\t\t\t\tendTr.z = weight*tr.z;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < skeleton.numJoints; ++i) {\n\t\t\t\t\tendPose = endPoses[i];\n\t\t\t\t\tpose = poses[i];\n\n\t\t\t\t\tq = firstPose[i].orientation;\n\t\t\t\t\tx0 = q.x;\n\t\t\t\t\ty0 = q.y;\n\t\t\t\t\tz0 = q.z;\n\t\t\t\t\tw0 = q.w;\n\n\t\t\t\t\tq = pose.orientation;\n\t\t\t\t\ttr = pose.translation;\n\n\t\t\t\t\tx1 = q.x;\n\t\t\t\t\ty1 = q.y;\n\t\t\t\t\tz1 = q.z;\n\t\t\t\t\tw1 = q.w;\n\t\t\t\t\t// find shortest direction\n\t\t\t\t\tif (x0*x1 + y0*y1 + z0*z1 + w0*w1 < 0) {\n\t\t\t\t\t\tx1 = -x1;\n\t\t\t\t\t\ty1 = -y1;\n\t\t\t\t\t\tz1 = -z1;\n\t\t\t\t\t\tw1 = -w1;\n\t\t\t\t\t}\n\t\t\t\t\tendQuat = endPose.orientation;\n\t\t\t\t\tendQuat.x += weight*x1;\n\t\t\t\t\tendQuat.y += weight*y1;\n\t\t\t\t\tendQuat.z += weight*z1;\n\t\t\t\t\tendQuat.w += weight*w1;\n\n\t\t\t\t\tendTr = endPose.translation;\n\t\t\t\t\tendTr.x += weight*tr.x;\n\t\t\t\t\tendTr.y += weight*tr.y;\n\t\t\t\t\tendTr.z += weight*tr.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < skeleton.numJoints; ++i)\n\t\t\tendPoses[i].orientation.normalize();\n\t}\n}\n\nexport default SkeletonNaryLERPState;",
    "import Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport VertexAnimator\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimator\";\nimport VertexClipNode\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/VertexClipNode\";\nimport AnimationClipState\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationClipState\";\nimport IVertexAnimationState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IVertexAnimationState\";\n\n/**\n *\n */\nclass VertexClipState extends AnimationClipState implements IVertexAnimationState\n{\n\tprivate _frames:Array<Graphics>;\n\tprivate _vertexClipNode:VertexClipNode;\n\tprivate _currentGraphics:Graphics;\n\tprivate _nextGraphics:Graphics;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get currentGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._currentGraphics;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get nextGraphics():Graphics\n\t{\n\t\tif (this._pFramesDirty)\n\t\t\tthis._pUpdateFrames();\n\n\t\treturn this._nextGraphics;\n\t}\n\n\tconstructor(animator:AnimatorBase, vertexClipNode:VertexClipNode)\n\t{\n\t\tsuper(animator, vertexClipNode);\n\n\t\tthis._vertexClipNode = vertexClipNode;\n\t\tthis._frames = this._vertexClipNode.frames;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateFrames()\n\t{\n\t\tsuper._pUpdateFrames();\n\n\t\tthis._currentGraphics = this._frames[this._pCurrentFrame];\n\n\t\tif (this._vertexClipNode.looping && this._pNextFrame >= this._vertexClipNode.lastFrame) {\n\t\t\tthis._nextGraphics = this._frames[0];\n\t\t\t(<VertexAnimator> this._pAnimator).dispatchCycleEvent();\n\t\t} else\n\t\t\tthis._nextGraphics = this._frames[this._pNextFrame];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdatePositionDelta()\n\t{\n\t\t//TODO:implement positiondelta functionality for vertex animations\n\t}\n}\n\nexport default VertexClipState;",
    "import SkeletonBinaryLERPNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\";\nimport CrossfadeTransitionState\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\";\n\n/**\n * A skeleton animation node that uses two animation node inputs to blend a lineraly interpolated output of a skeleton pose.\n */\nclass CrossfadeTransitionNode extends SkeletonBinaryLERPNode\n{\n\tpublic blendSpeed:number;\n\n\tpublic startBlend:number /*int*/;\n\n\t/**\n\t * Creates a new <code>CrossfadeTransitionNode</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pStateClass = CrossfadeTransitionState;\n\t}\n}\n\nexport default CrossfadeTransitionNode;",
    "import AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport SkeletonBinaryLERPNode\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\";\nimport SkeletonBinaryLERPState\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\";\nimport CrossfadeTransitionNode\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\";\nimport AnimationStateEvent\t\t\t\tfrom \"awayjs-renderergl/lib/animators/../events/AnimationStateEvent\";\n\n/**\n *\n */\nclass CrossfadeTransitionState extends SkeletonBinaryLERPState\n{\n\tprivate _crossfadeTransitionNode:CrossfadeTransitionNode;\n\tprivate _animationStateTransitionComplete:AnimationStateEvent;\n\n\tconstructor(animator:AnimatorBase, skeletonAnimationNode:CrossfadeTransitionNode)\n\t{\n\t\tsuper(animator, <SkeletonBinaryLERPNode> skeletonAnimationNode);\n\n\t\tthis._crossfadeTransitionNode = skeletonAnimationNode;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateTime(time:number /*int*/)\n\t{\n\t\tthis.blendWeight = Math.abs(time - this._crossfadeTransitionNode.startBlend)/(1000*this._crossfadeTransitionNode.blendSpeed);\n\n\t\tif (this.blendWeight >= 1) {\n\t\t\tthis.blendWeight = 1;\n\n\t\t\tif (this._animationStateTransitionComplete == null)\n\t\t\t\tthis._animationStateTransitionComplete = new AnimationStateEvent(AnimationStateEvent.TRANSITION_COMPLETE, this._pAnimator, this, this._crossfadeTransitionNode);\n\n\t\t\tthis._crossfadeTransitionNode.dispatchEvent(this._animationStateTransitionComplete);\n\t\t}\n\n\t\tsuper._pUpdateTime(time);\n\t}\n}\n\nexport default CrossfadeTransitionState;",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport CrossfadeTransitionNode\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\";\nimport IAnimationTransition\t\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\";\n\n/**\n *\n */\nclass CrossfadeTransition implements IAnimationTransition\n{\n\tpublic blendSpeed:number = 0.5;\n\n\tconstructor(blendSpeed:number)\n\t{\n\t\tthis.blendSpeed = blendSpeed;\n\t}\n\n\tpublic getAnimationNode(animator:AnimatorBase, startNode:AnimationNodeBase, endNode:AnimationNodeBase, startBlend:number /*int*/):AnimationNodeBase\n\t{\n\t\tvar crossFadeTransitionNode:CrossfadeTransitionNode = new CrossfadeTransitionNode();\n\t\tcrossFadeTransitionNode.inputA = startNode;\n\t\tcrossFadeTransitionNode.inputB = endNode;\n\t\tcrossFadeTransitionNode.blendSpeed = this.blendSpeed;\n\t\tcrossFadeTransitionNode.startBlend = startBlend;\n\n\t\treturn <AnimationNodeBase> crossFadeTransitionNode;\n\t}\n}\n\nexport default CrossfadeTransition;",
    "export {default as AnimationElements}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationElements\";\nexport {default as AnimationRegisterCache}\t\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nexport {default as ColorSegmentPoint}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ColorSegmentPoint\";\nexport {default as JointPose}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/JointPose\";\nexport {default as ParticleAnimationData}\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleAnimationData\";\nexport {default as ParticleProperties}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticleProperties\";\nexport {default as ParticlePropertiesMode}\t\t\tfrom \"awayjs-renderergl/lib/animators/data/ParticlePropertiesMode\";\nexport {default as Skeleton}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/Skeleton\";\nexport {default as SkeletonJoint}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonJoint\";\nexport {default as SkeletonPose}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/SkeletonPose\";\nexport {default as VertexAnimationMode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/data/VertexAnimationMode\";\nexport {default as AnimationClipNodeBase}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/AnimationClipNodeBase\";\nexport {default as ParticleAccelerationNode}\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleAccelerationNode\";\nexport {default as ParticleBezierCurveNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleBezierCurveNode\";\nexport {default as ParticleBillboardNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleBillboardNode\";\nexport {default as ParticleColorNode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleColorNode\";\nexport {default as ParticleFollowNode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleFollowNode\";\nexport {default as ParticleInitialColorNode}\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleInitialColorNode\";\nexport {default as ParticleNodeBase}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleNodeBase\";\nexport {default as ParticleOrbitNode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleOrbitNode\";\nexport {default as ParticleOscillatorNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleOscillatorNode\";\nexport {default as ParticlePositionNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticlePositionNode\";\nexport {default as ParticleRotateToHeadingNode}\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleRotateToHeadingNode\";\nexport {default as ParticleRotateToPositionNode}\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleRotateToPositionNode\";\nexport {default as ParticleRotationalVelocityNode}\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleRotationalVelocityNode\";\nexport {default as ParticleScaleNode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleScaleNode\";\nexport {default as ParticleSegmentedColorNode}\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleSegmentedColorNode\";\nexport {default as ParticleSpriteSheetNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleSpriteSheetNode\";\nexport {default as ParticleTimeNode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleTimeNode\";\nexport {default as ParticleUVNode}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleUVNode\";\nexport {default as ParticleVelocityNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/ParticleVelocityNode\";\nexport {default as SkeletonBinaryLERPNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonBinaryLERPNode\";\nexport {default as SkeletonClipNode}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonClipNode\";\nexport {default as SkeletonDifferenceNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonDifferenceNode\";\nexport {default as SkeletonDirectionalNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonDirectionalNode\";\nexport {default as SkeletonNaryLERPNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/SkeletonNaryLERPNode\";\nexport {default as VertexClipNode}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/nodes/VertexClipNode\";\nexport {default as AnimationClipState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationClipState\";\nexport {default as AnimationStateBase}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/AnimationStateBase\";\nexport {default as IAnimationState}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IAnimationState\";\nexport {default as ISkeletonAnimationState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ISkeletonAnimationState\";\nexport {default as IVertexAnimationState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IVertexAnimationState\";\nexport {default as ParticleAccelerationState}\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleAccelerationState\";\nexport {default as ParticleBezierCurveState}\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleBezierCurveState\";\nexport {default as ParticleBillboardState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleBillboardState\";\nexport {default as ParticleColorState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleColorState\";\nexport {default as ParticleFollowState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleFollowState\";\nexport {default as ParticleInitialColorState}\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleInitialColorState\";\nexport {default as ParticleStateBase}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleStateBase\";\nexport {default as ParticleOrbitState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleOrbitState\";\nexport {default as ParticleOscillatorState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleOscillatorState\";\nexport {default as ParticlePositionState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticlePositionState\";\nexport {default as ParticleRotateToHeadingState}\tfrom \"awayjs-renderergl/lib/animators/states/ParticleRotateToHeadingState\";\nexport {default as ParticleRotateToPositionState}\tfrom \"awayjs-renderergl/lib/animators/states/ParticleRotateToPositionState\";\nexport {default as ParticleRotationalVelocityState}\tfrom \"awayjs-renderergl/lib/animators/states/ParticleRotationalVelocityState\";\nexport {default as ParticleScaleState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleScaleState\";\nexport {default as ParticleSegmentedColorState}\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleSegmentedColorState\";\nexport {default as ParticleSpriteSheetState}\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleSpriteSheetState\";\nexport {default as ParticleTimeState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleTimeState\";\nexport {default as ParticleUVState}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleUVState\";\nexport {default as ParticleVelocityState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/ParticleVelocityState\";\nexport {default as SkeletonBinaryLERPState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonBinaryLERPState\";\nexport {default as SkeletonClipState}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonClipState\";\nexport {default as SkeletonDifferenceState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonDifferenceState\";\nexport {default as SkeletonDirectionalState}\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonDirectionalState\";\nexport {default as SkeletonNaryLERPState}\t\t\tfrom \"awayjs-renderergl/lib/animators/states/SkeletonNaryLERPState\";\nexport {default as VertexClipState}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/VertexClipState\";\nexport {default as CrossfadeTransition}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/CrossfadeTransition\";\nexport {default as CrossfadeTransitionNode}\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionNode\";\nexport {default as CrossfadeTransitionState}\t\tfrom \"awayjs-renderergl/lib/animators/transitions/CrossfadeTransitionState\";\nexport {default as IAnimationTransition}\t\t\tfrom \"awayjs-renderergl/lib/animators/transitions/IAnimationTransition\";\nexport {default as AnimationSetBase}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nexport {default as AnimatorBase}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nexport {default as ParticleAnimationSet}\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimationSet\";\nexport {default as ParticleAnimator}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/ParticleAnimator\";\nexport {default as SkeletonAnimationSet}\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimationSet\";\nexport {default as SkeletonAnimator}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/SkeletonAnimator\";\nexport {default as VertexAnimationSet}\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimationSet\";\nexport {default as VertexAnimator}\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/VertexAnimator\";",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\n\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_ElementsBase\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_ElementsBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass ElementsPool implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _shader:ShaderBase;\n\tprivate _elementsClass:IElementsClassGL;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(shader:ShaderBase, elementsClass:IElementsClassGL)\n\t{\n\t\tthis._shader = shader;\n\t\tthis._elementsClass = elementsClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t * @returns IRenderable\n\t */\n\tpublic getAbstraction(elements:ElementsBase):GL_ElementsBase\n\t{\n\t\treturn (this._abstractionPool[elements.id] || (this._abstractionPool[elements.id] = new (this._elementsClass)(elements, this._shader, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderable\n\t */\n\tpublic clearAbstraction(elements:ElementsBase)\n\t{\n\t\tdelete this._abstractionPool[elements.id];\n\t}\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(elementsClass:IElementsClassGL, assetClass:IAssetClass)\n\t{\n\t\tElementsPool._abstractionClassPool[assetClass.assetType] = elementsClass;\n\t}\n}\n\nexport default ElementsPool;",
    "import Short3Attributes\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport AttributesView\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nimport IAbstractionPool \t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_AttributesBuffer\t\t\tfrom \"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport ElementsUtils\t\t\t\tfrom \"awayjs-display/lib/utils/ElementsUtils\";\n\nimport ElementsPool\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_ElementsBaseBase\n */\nclass GL_ElementsBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\tprivate _elements:ElementsBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\tprivate _onInvalidateIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearIndicesDelegate:(event:ElementsEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _onClearVerticesDelegate:(event:ElementsEvent) => void;\n\tprivate _overflow:GL_ElementsBase;\n\tprivate _indices:GL_AttributesBuffer;\n\tprivate _indicesUpdated:boolean;\n\tprivate _vertices:Object = new Object();\n\tprivate _verticesUpdated:Object = new Object();\n\n\tpublic _indexMappings:Array<number> = Array<number>();\n\t\n\tprivate _numIndices:number = 0;\n\n\tprivate _numVertices:number;\n\n\tpublic get elements()\n\t{\n\t\treturn this._elements;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tconstructor(elements:ElementsBase, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(elements, pool);\n\t\t\n\t\tthis._elements = elements;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\n\t\tthis._onInvalidateIndicesDelegate = (event:ElementsEvent) => this._onInvalidateIndices(event);\n\t\tthis._onClearIndicesDelegate = (event:ElementsEvent) => this._onClearIndices(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\tthis._onClearVerticesDelegate = (event:ElementsEvent) => this._onClearVertices(event);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.addEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexMappings():Array<number>\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indexMappings;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getIndexBufferGL():GL_AttributesBuffer\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\treturn this._indices;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic getVertexBufferGL(attributesView:AttributesView):GL_AttributesBuffer\n\t{\n\t\t//first check if indices need updating which may affect vertices\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tif (!this._verticesUpdated[bufferId])\n\t\t\tthis._updateVertices(attributesView);\n\n\t\treturn this._vertices[bufferId];\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic activateVertexBufferVO(index:number, attributesView:AttributesView, dimensions:number = 0, offset:number = 0)\n\t{\n\t\tthis.getVertexBufferGL(attributesView).activate(index, attributesView.size, dimensions || attributesView.dimensions, attributesView.offset + offset, attributesView.unsigned);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_INDICES, this._onClearIndicesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_INDICES, this._onInvalidateIndicesDelegate);\n\n\t\tthis._elements.removeEventListener(ElementsEvent.CLEAR_VERTICES, this._onClearVerticesDelegate);\n\t\tthis._elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._elements = null;\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.onClear(event);\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (!this._verticesUpdated)\n\t\t\tthis._updateIndices();\n\n\t\tthis._render(renderable, camera, viewProjection);\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow._iRender(renderable, camera, viewProjection);\n\t}\n\n\tpublic _render(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._indices)\n\t\t\tthis._drawElements(0, this._numIndices);\n\t\telse\n\t\t\tthis._drawArrays(0, this._numVertices);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tpublic _updateIndices(indexOffset:number = 0)\n\t{\n\t\tvar indices:Short3Attributes = this._elements.indices;\n\t\tif (indices) {\n\t\t\tthis._indices = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubIndices(indices, this._elements.numVertices, this._indexMappings, indexOffset));\n\t\t\tthis._numIndices = this._indices._attributesBuffer.count*indices.dimensions;\n\t\t} else {\n\t\t\tthis._indices = null;\n\t\t\tthis._numIndices = 0;\n\t\t\tthis._indexMappings  = Array<number>();\n\t\t}\n\n\t\tindexOffset += this._numIndices;\n\n\t\t//check if there is more to split\n\t\tif (indices && indexOffset < indices.count*this._elements.indices.dimensions) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowElements();\n\n\t\t\tthis._overflow._updateIndices(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.onClear(new AssetEvent(AssetEvent.CLEAR, this._elements));\n\t\t\tthis._overflow = null;\n\t\t}\n\n\t\tthis._indicesUpdated = true;\n\n\t\t//invalidate vertices if index mappings exist\n\t\tif (this._indexMappings.length)\n\t\t\tfor (var key in this._verticesUpdated)\n\t\t\t\tthis._verticesUpdated[key] = false;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param attributesView\n\t * @private\n\t */\n\tprivate _updateVertices(attributesView:AttributesView)\n\t{\n\t\tthis._numVertices = attributesView.count;\n\n\t\tvar bufferId:number = attributesView.buffer.id;\n\n\t\tthis._vertices[bufferId] = <GL_AttributesBuffer> this._stage.getAbstraction(ElementsUtils.getSubVertices(attributesView.buffer, this._indexMappings));\n\n\t\tthis._verticesUpdated[bufferId] = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indicesUpdated = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearIndices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tthis._indices.onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\tthis._indices = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tthis._verticesUpdated[bufferId] = false;\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tpublic _onClearVertices(event:ElementsEvent)\n\t{\n\t\tif (!event.attributesView)\n\t\t\treturn;\n\n\t\tvar bufferId:number = event.attributesView.buffer.id;\n\n\t\tif (this._vertices[bufferId]) {\n\t\t\tthis._vertices[bufferId].onClear(new AssetEvent(AssetEvent.CLEAR, event.attributesView));\n\t\t\tdelete this._vertices[bufferId];\n\t\t\tdelete this._verticesUpdated[bufferId];\n\t\t}\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_ElementsBase;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport GL_ElementsBase\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_ElementsBase\";\nimport ElementsPool\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_LineElements\n */\nclass GL_LineElements extends GL_ElementsBase\n{\n\tpublic static pONE_VECTOR:Float32Array = new Float32Array([1, 1, 1, 1]);\n\tpublic static pFRONT_VECTOR:Float32Array = new Float32Array([0, 0, -1, 0]);\n\n\tpublic static vertexAttributesOffset:number = 3;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tshader.colorDependencies++;\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t\t// test if behind camera near plane\n\t\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t\t// n = plane normal (0,0,-1)\n\t\t\t\t// D = Q1 - Q0\n\t\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\"  // transform Q0 to clip space\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _constants:Float32Array = new Float32Array([0, 0, 0, 0]);\n\tprivate _calcMatrix:Matrix3D = new Matrix3D();\n\tprivate _thickness:number = 1.25;\n\n\tprivate _lineElements:LineElements;\n\n\tconstructor(lineElements:LineElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(lineElements, shader, pool);\n\n\t\tthis._lineElements = lineElements;\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineElements = null;\n\t}\n\n\tpublic _render(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._shader.colorBufferIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.colorBufferIndex, this._lineElements.colors);\n\n\t\tvar context:IContextGL = this._stage.context;\n\n\t\tthis._constants[0] = this._thickness/((this._stage.scissorRect)? Math.min(this._stage.scissorRect.width, this._stage.scissorRect.height) : Math.min(this._stage.width, this._stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, GL_LineElements.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, GL_LineElements.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tthis.activateVertexBufferVO(0, this._lineElements.positions, 3);\n\t\tthis.activateVertexBufferVO(1, this._lineElements.positions, 3, 12);\n\t\tthis.activateVertexBufferVO(2, this._lineElements.thickness);\n\n\t\tsuper._render(renderable, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, 0, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_LineElements(this._lineElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_LineElements;",
    "import ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_TriangleElements\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_TriangleElements\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\n\n/**\n *\n * @class away.pool.GL_SkyboxElements\n */\nclass GL_SkyboxElements extends GL_TriangleElements\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SkyboxElements;",
    "import IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport ContextGLDrawMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLDrawMode\";\nimport ContextWebGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextWebGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\n\nimport ElementsPool\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/ElementsPool\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_ElementsBase\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_ElementsBase\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n\n/**\n *\n * @class away.pool.GL_TriangleElements\n */\nclass GL_TriangleElements extends GL_ElementsBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t}\n\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shader.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.animatedPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshader.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shader.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tprivate _triangleElements:TriangleElements;\n\n\tconstructor(triangleElements:TriangleElements, shader:ShaderBase, pool:IAbstractionPool)\n\t{\n\t\tsuper(triangleElements, shader, pool);\n\n\t\tthis._triangleElements = triangleElements;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._triangleElements = null;\n\t}\n\n\tpublic _render(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//set buffers\n\t\t//TODO: find a better way to update a concatenated buffer when autoderiving\n\t\tif (this._shader.normalIndex >= 0 && this._triangleElements.autoDeriveNormals)\n\t\t\tthis._triangleElements.normals;\n\n\t\tif (this._shader.tangentIndex >= 0 && this._triangleElements.autoDeriveTangents)\n\t\t\tthis._triangleElements.tangents;\n\n\t\tif (this._shader.curvesIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.curvesIndex, this._triangleElements.getCustomAtributes(\"curves\"));\n\n\t\tif (this._shader.uvIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.uvIndex, this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.secondaryUVIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.secondaryUVIndex, this._triangleElements.getCustomAtributes(\"secondaryUVs\") || this._triangleElements.uvs || this._triangleElements.positions);\n\n\t\tif (this._shader.normalIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.normalIndex, this._triangleElements.normals);\n\n\t\tif (this._shader.tangentIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.tangentIndex, this._triangleElements.tangents);\n\n\t\tif (this._shader.jointIndexIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointIndices);\n\n\t\tif (this._shader.jointWeightIndex >= 0)\n\t\t\tthis.activateVertexBufferVO(this._shader.jointIndexIndex, this._triangleElements.jointWeights);\n\n\t\tthis.activateVertexBufferVO(0, this._triangleElements.positions);\n\n\t\t//set constants\n\t\tif (this._shader.sceneMatrixIndex >= 0) {\n\t\t\trenderable.renderSceneTransform.copyRawDataTo(this._shader.vertexConstantData, this._shader.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.renderSceneTransform);\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(this._shader.vertexConstantData, this._shader.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, this._shader.vertexConstantData, this._shader.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._shader.fragmentConstantData, this._shader.numUsedFragmentConstants);\n\n\t\tsuper._render(renderable, camera, viewProjection);\n\t}\n\n\tpublic _drawElements(firstIndex:number, numIndices:number)\n\t{\n\t\tthis.getIndexBufferGL().draw(ContextGLDrawMode.TRIANGLES, firstIndex, numIndices);\n\t}\n\n\tpublic _drawArrays(firstVertex:number, numVertices:number)\n\t{\n\t\tthis._stage.context.drawVertices(ContextGLDrawMode.TRIANGLES, firstVertex, numVertices);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.GL_GraphicRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowElements():GL_ElementsBase\n\t{\n\t\treturn new GL_TriangleElements(this._triangleElements, this._shader, this._pool);\n\t}\n}\n\nexport default GL_TriangleElements;",
    "export {default as ElementsPool}\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/ElementsPool\";\nexport {default as GL_ElementsBase}\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_ElementsBase\";\nexport {default as GL_LineElements}\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_LineElements\";\nexport {default as GL_SkyboxElements}\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_SkyboxElements\";\nexport {default as GL_TriangleElements}\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_TriangleElements\";\nexport {default as IElementsClassGL}\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";",
    "import ErrorBase\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nclass AnimationSetError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport default AnimationSetError;",
    "export {default as AnimationSetError}\t\t\t\tfrom \"awayjs-renderergl/lib/errors/AnimationSetError\";",
    "import AnimationNodeBase\t\t\t\tfrom \"awayjs-display/lib/animators/nodes/AnimationNodeBase\";\n\nimport EventBase\t\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport IAnimationState\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/states/IAnimationState\";\n\n/**\n * Dispatched to notify changes in an animation state's state.\n */\nclass AnimationStateEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a non-looping clip node inside an animation state reaches the end of its timeline.\n\t */\n\tpublic static PLAYBACK_COMPLETE:string = \"playbackComplete\";\n\n\tpublic static TRANSITION_COMPLETE:string = \"transitionComplete\";\n\n\tprivate _animator:AnimatorBase;\n\tprivate _animationState:IAnimationState;\n\tprivate _animationNode:AnimationNodeBase;\n\n\t/**\n\t * Create a new <code>AnimatonStateEvent</code>\n\t *\n\t * @param type The event type.\n\t * @param animator The animation state object that is the subject of this event.\n\t * @param animationNode The animation node inside the animation state from which the event originated.\n\t */\n\tconstructor(type:string, animator:AnimatorBase, animationState:IAnimationState, animationNode:AnimationNodeBase)\n\t{\n\t\tsuper(type);\n\n\t\tthis._animator = animator;\n\t\tthis._animationState = animationState;\n\t\tthis._animationNode = animationNode;\n\t}\n\n\t/**\n\t * The animator object that is the subject of this event.\n\t */\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * The animation state object that is the subject of this event.\n\t */\n\tpublic get animationState():IAnimationState\n\t{\n\t\treturn this._animationState;\n\t}\n\n\t/**\n\t * The animation node inside the animation state from which the event originated.\n\t */\n\tpublic get animationNode():AnimationNodeBase\n\t{\n\t\treturn this._animationNode;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():AnimationStateEvent\n\t{\n\t\treturn new AnimationStateEvent(this.type, this._animator, this._animationState, this._animationNode);\n\t}\n}\n\nexport default AnimationStateEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends EventBase\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"animatorStart\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"animatorStop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"animatorCycleComplete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():AnimatorEvent\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport default AnimatorEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport IPass\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\n\nclass PassEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE:string = \"invalidatePass\";\n\n\tprivate _pass:IPass;\n\n\t/**\n\t *\n\t */\n\tpublic get pass():IPass\n\t{\n\t\treturn this._pass;\n\t}\n\n\tconstructor(type:string, pass:IPass)\n\t{\n\t\tsuper(type);\n\n\t\tthis._pass = pass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():PassEvent\n\t{\n\t\treturn new PassEvent(this.type, this._pass);\n\t}\n}\n\nexport default PassEvent;",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport RTTBufferManager\t\t\tfrom \"awayjs-renderergl/lib/managers/RTTBufferManager\";\n\nclass RTTEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static RESIZE:string = \"rttManagerResize\";\n\n\tprivate _rttManager:RTTBufferManager;\n\n\t/**\n\t *\n\t */\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tconstructor(type:string, rttManager:RTTBufferManager)\n\t{\n\t\tsuper(type);\n\n\t\tthis._rttManager = rttManager;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():RTTEvent\n\t{\n\t\treturn new RTTEvent(this.type, this._rttManager);\n\t}\n}\n\nexport default RTTEvent;",
    "import EventBase\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nclass ShadingMethodEvent extends EventBase\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport default ShadingMethodEvent;",
    "export {default as AnimationStateEvent}\t\t\t\tfrom \"awayjs-renderergl/lib/events/AnimationStateEvent\";\nexport {default as AnimatorEvent}\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/AnimatorEvent\";\nexport {default as PassEvent}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/PassEvent\";\nexport {default as RTTEvent}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/RTTEvent\";\nexport {default as ShadingMethodEvent}\t\t\t\tfrom \"awayjs-renderergl/lib/events/ShadingMethodEvent\";",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DHBlurTask\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\";\nimport Filter3DVBlurTask\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/Filter3DBase\";\n\nclass BlurFilter3D extends Filter3DBase\n{\n\tprivate _hBlurTask:Filter3DHBlurTask;\n\tprivate _vBlurTask:Filter3DVBlurTask;\n\t\n\t/**\n\t * Creates a new BlurFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blurX:number = 3, blurY:number = 3, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._hBlurTask = new Filter3DHBlurTask(blurX, stepSize);\n\t\tthis._vBlurTask = new Filter3DVBlurTask(blurY, stepSize);\n\n\t\tthis.addTask(this._hBlurTask);\n\t\tthis.addTask(this._vBlurTask);\n\t}\n\t\n\tpublic get blurX():number\n\t{\n\t\treturn this._hBlurTask.amount;\n\t}\n\t\n\tpublic set blurX(value:number)\n\t{\n\t\tthis._hBlurTask.amount = value;\n\t}\n\t\n\tpublic get blurY():number\n\t{\n\t\treturn this._vBlurTask.amount;\n\t}\n\t\n\tpublic set blurY(value:number)\n\t{\n\t\tthis._vBlurTask.amount = value;\n\t}\n\t\n\t/**\n\t * The distance between two blur samples. Set to -1 to autodetect with acceptable quality (default value).\n\t * Higher values provide better performance at the cost of reduces quality.\n\t */\n\tpublic get stepSize():number\n\t{\n\t\treturn this._hBlurTask.stepSize;\n\t}\n\t\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._hBlurTask.stepSize = value;\n\t\tthis._vBlurTask.stepSize = value;\n\t}\n\t\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._hBlurTask.target = this._vBlurTask.getMainInputTexture(stage);\n\t\tsuper.setRenderTargets(mainTarget, stage);\n\t}\n}\n\nexport default BlurFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DCompositeTask\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\";\nimport Filter3DBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/Filter3DBase\";\n\nclass CompositeFilter3D extends Filter3DBase\n{\n\tprivate _compositeTask:Filter3DCompositeTask;\n\t\n\t/**\n\t * Creates a new CompositeFilter3D object\n\t * @param blurX The amount of horizontal blur to apply\n\t * @param blurY The amount of vertical blur to apply\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._compositeTask = new Filter3DCompositeTask(blendMode, exposure);\n\n\t\tthis.addTask(this._compositeTask);\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._compositeTask.exposure;\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._compositeTask.exposure = value;\n\t}\n\n\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._compositeTask.overlayTexture;\n\t}\n\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._compositeTask.overlayTexture = value;\n\t}\n}\n\nexport default CompositeFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DFXAATask\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\";\nimport Filter3DBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/Filter3DBase\";\n\nclass FXAAFilter3D extends Filter3DBase\n{\n\tprivate _fxaaTask:Filter3DFXAATask;\n\t\n\t/**\n\t * Creates a new FXAAFilter3D object\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._fxaaTask = new Filter3DFXAATask(amount, stepSize);\n\n\t\tthis.addTask(this._fxaaTask);\n\t}\n\t\n\tpublic get amount():number\n\t{\n\t\treturn this._fxaaTask.amount;\n\t}\n\t\n\tpublic set amount(value:number)\n\t{\n\t\tthis._fxaaTask.amount = value;\n\t}\n\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._fxaaTask.stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tthis._fxaaTask.stepSize = value;\n\t}\n}\n\nexport default FXAAFilter3D;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\nimport RTTBufferManager from \"awayjs-renderergl/lib/managers/RTTBufferManager\";\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic addTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tthis._rttManager = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].rttManager = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:Image2D, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport default Filter3DBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\n\n\nclass Filter3DCompositeTask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\tprivate _overlayTexture:Image2D;\n\tprivate _overlayWidth:number;\n\tprivate _overlayHeight:number;\n\tprivate _blendMode:string;\n\t\n\tconstructor(blendMode:string, exposure:number = 1)\n\t{\n\t\tsuper();\n\t\tthis._data = new Float32Array([exposure, 0.5, 2.0, -1, 0.0, 0.0, 0.0, 0.0 ]);\n\t\tthis._blendMode = blendMode;\n\t}\n\t\n\tpublic get overlayTexture():Image2D\n\t{\n\t\treturn this._overlayTexture;\n\t}\n\t\n\tpublic set overlayTexture(value:Image2D)\n\t{\n\t\tthis._overlayTexture = value;\n\t\tthis._overlayWidth = this._overlayTexture.width;\n\t\tthis._overlayHeight = this._overlayTexture.height;\n\t}\n\t\n\tpublic get exposure():number\n\t{\n\t\treturn this._data[0];\n\t}\n\t\n\tpublic set exposure(value:number)\n\t{\n\t\tthis._data[0] = value;\n\t}\n\t\n\tpublic getFragmentCode():string\n\t{\n\n\t\tvar code:string;\n\t\tvar op:string;\n\t\tcode = \"tex ft0, v0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, v0, fc1.zw\\n\" +\n\t\t\t\"add ft1, ft1, fc1.xy\\n\" +\n\t\t\t\"tex ft1, ft1, fs1 <2d,linear,clamp>\\n\" +\n\t\t\t\"mul ft1, ft1, fc0.xxx\\n\" +\n\t\t\t\"add ft1, ft1, fc0.xxx\\n\";\n\t\tswitch (this._blendMode) {\n\t\t\tcase \"multiply\":\n\t\t\t\tcode += \"mul oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\tcode += \"add oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"subtract\":\n\t\t\t\tcode += \"sub oc, ft0, ft1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"overlay\":\n\t\t\t\tcode += \"sge ft2, ft0, fc0.yyy\\n\"; // t2 = (blend >= 0.5)? 1 : 0\n\t\t\t\tcode += \"sub ft0, ft2, ft0\\n\"; // base = (1 : 0 - base)\n\t\t\t\tcode += \"sub ft1, ft1, ft2\\n\"; // blend = (blend - 1 : 0)\n\t\t\t\tcode += \"mul ft1, ft1, ft0\\n\"; // blend = blend * base\n\t\t\t\tcode += \"sub ft3, ft2, fc0.yyy\\n\"; // t3 = (blend >= 0.5)? 0.5 : -0.5\n\t\t\t\tcode += \"div ft1, ft1, ft3\\n\"; // blend = blend / ( 0.5 : -0.5)\n\t\t\t\tcode += \"add oc, ft1, ft2\\n\";\n\t\t\t\tbreak;\n\t\t\tcase \"normal\":\n\t\t\t\t// for debugging purposes\n\t\t\t\tcode += \"mov oc, ft0\\n\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown blend mode\");\n\t\t}\n\t\treturn code;\n\t}\n\t\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tthis._data[4] = -0.5*(this._scaledTextureWidth - this._overlayWidth)/this._overlayWidth;\n\t\tthis._data[5] = -0.5*(this._scaledTextureHeight - this._overlayHeight)/this._overlayHeight;\n\n\t\tthis._data[6] = this._scaledTextureWidth/this._overlayWidth;\n\t\tthis._data[7] = this._scaledTextureHeight/this._overlayHeight;\n\n\t\tvar context:IContextGL = stage.context;\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 2);\n\t\t(<GL_ImageBase> stage.getAbstraction(this._overlayTexture)).activate(1, false);\n\t}\n\t\n\tpublic deactivate(stage:Stage)\n\t{\n\t\tstage.context.setTextureAt(1, null);\n\t}\n}\n\nexport default Filter3DCompositeTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DFXAATask extends Filter3DTaskBase\n{\n\tprivate _data:Float32Array;\n\t//TODO - remove blur variables and create setters/getters for FXAA\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number = 1, stepSize:number = -1)\n\t{\n\t\tsuper();\n\n\t\tthis._data =  new Float32Array(20);\n\t\t//luma\n\t\tthis._data.set([0.299, 0.587, 0.114, 0],0);//0.212, 0.716, 0.072\n\t\t//helpers\n\t\tthis._data.set([0.25, 0.5, 0.75, 1], 4);\n\t\t//settings (screen x, screen y, ...)\n\t\tthis._data.set([1/1024, 1/1024, -1, 1], 8);\n\t\t//deltas\n\t\tthis._data.set([1/128, 1/8, 8, 0], 12);\n\t\t//deltas\n\t\tthis._data.set([1.0/3.0 - 0.5, 2.0/3.0 - 0.5, 0.0/3.0 - 0.5, 3.0/3.0 - 0.5], 16);\n\n\n\t\tthis.amount = amount;\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar lum:string = \"fc0\";\t\t//\t0.299, 0.587, 0.114\n\t\tvar _0:string = \"fc0.w\";\n\n\t\tvar _025:string = \"fc1.x\";\n\t\tvar _05:string = \"fc1.y\";\n\t\tvar _075:string = \"fc1.z\";\n\t\tvar _1:string = \"fc1.w\";\n\n\t\tvar pix:string = \"fc2.xy\";\n\t\tvar dx:string = \"fc2.x\"; // 1/1024\n\t\tvar dy:string = \"fc2.y\"; // 1/1024\n\n\t\tvar mOne:string = \"fc2.z\"; // -1.0\n\t\tvar mul:string = \"fc2.w\"; // 1.0  -- one for now\n\n\t\tvar fxaaReduceMin :string = \"fc3.x\";\t//1/128\n\t\tvar fxaaReduceMul :string = \"fc3.y\";\t//1/8\n\t\tvar fxaaSpanMax :string = \"fc3.z\";\t\t//8\n\n\t\tvar delta1:string = \"fc4.x\";\t//1.0/3.0 - 0.5\n\t\tvar delta2:string = \"fc4.y\";\t//2.0/3.0 - 0.5\n\t\tvar delta3:string = \"fc4.z\";\t//0.0/3.0 - 0.5\n\t\tvar delta4:string = \"fc4.w\";\t//3.0/3.0 - 0.5\n\n\t\tvar uv_in:string = \"v0\";\n\n\t\tvar uv:string = \"ft0.xy\";\n\t\tvar uvx:string = \"ft0.x\";\n\t\tvar uvy:string = \"ft0.y\";\n\n\t\tvar TL:string = \"ft2.x\";\n\t\tvar TR:string = \"ft2.y\";\n\t\tvar BL:string = \"ft2.z\";\n\t\tvar BR:string = \"ft2.w\";\n\t\tvar M:string = \"ft3.x\";\n\n\t\tvar tempf1:string = \"ft3.y\";\n\t\tvar tempf2:string = \"ft3.z\";\n\t\tvar tempf3:string = \"ft3.w\";\n\n\t\tvar tex:string = \"ft1\";\n\n\t\tvar dir:string = \"ft4\";\n\t\tvar dirx:string = \"ft4.x\";\n\t\tvar diry:string = \"ft4.y\";\n\t\tvar dirxy:string = \"ft4.xy\";\n\n\t\tvar dirReduce:string = \"ft5.x\";\n\t\tvar inverseDirAdjustment:string = \"ft5.y\";\n\n\t\tvar result1:string = \"ft6\";\n\t\tvar result2:string = \"ft7\";\n\n\t\tvar lumaMin:string = \"ft5.x\";\n\t\tvar lumaMax:string = \"ft5.y\";\n\n\t\tvar sample:string = \"fs0\";\n\n\n\t\tvar temp:string = tex;\n\t\tvar tempxy:string = temp + \".xy\";\n\t\t\n\t\tvar code:Array<string> =  new Array<string>();\n\n\t\t//lumas\n\t\tcode.push(\"tex\", tex, uv_in, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", M, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TL, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uv, uv, pix, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\",  BR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"sub\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"add\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", TR, tex, lum, \"\\n\");\n\t\tcode.push(\"mov\", uv, uv_in, \"\\n\");\n\t\tcode.push(\"add\", uvy, uvy, dy, \"\\n\");\n\t\tcode.push(\"sub\", uvx, uvx, dx, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"dp3\", BL, tex, lum, \"\\n\");\n\n\t\t//dir\n\t\tcode.push(\"add\", tempf1, TL, TR, \"\\n\");\n\t\tcode.push(\"add\", tempf2, BL, BR, \"\\n\");\n\t\tcode.push(\"sub\", dirx, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"neg\", dirx, dirx, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, TL, BL, \"\\n\");\n\t\tcode.push(\"add\", tempf2, TR, BR, \"\\n\");\n\t\tcode.push(\"sub\", diry, tempf1, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, fxaaReduceMul, \"\\n\");\n\t\tcode.push(\"mul\", tempf1, tempf1, _025, \"\\n\");\n\t\tcode.push(\"max\", dirReduce, tempf1, fxaaReduceMin, \"\\n\");\n\n\t\tcode.push(\"abs\", tempf1, dirx, \"\\n\");\n\t\tcode.push(\"abs\", tempf2, diry, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"add\", tempf1, tempf1, dirReduce, \"\\n\");\n\t\tcode.push(\"rcp\", inverseDirAdjustment, tempf1, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, dirx, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", dirx, tempf1, dx, \"\\n\");\n\n\t\tcode.push(\"mul\", tempf1, diry, inverseDirAdjustment, \"\\n\");\n\t\tcode.push(\"mov\", tempf2, fxaaSpanMax, \"\\n\");\n\t\tcode.push(\"neg\", tempf2, tempf2, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", tempf1, fxaaSpanMax, tempf1, \"\\n\");\n\t\tcode.push(\"mul\", diry, tempf1, dy, \"\\n\");\n\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta1, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result1, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta2, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result1, result1, tex, \"\\n\");\n\t\tcode.push(\"mul\", result1, result1, _05, \"\\n\");\n\n\t\tcode.push(\"mul\", tempxy, dirxy, delta3, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", result2, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"mul\", tempxy, dirxy, delta4, \"\\n\");\n\t\tcode.push(\"add\", uv, uv_in, tempxy, \"\\n\");\n\t\tcode.push(\"tex\", tex, uv, sample, \"<2d wrap linear>\", \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, _025, \"\\n\");\n\t\tcode.push(\"mul\", tex, result1, _05, \"\\n\");\n\t\tcode.push(\"add\", result2, result2, tex, \"\\n\");\n\n\t\tcode.push(\"min\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"min\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"min\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"min\", lumaMin, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"max\", tempf1, BL, BR, \"\\n\");\n\t\tcode.push(\"max\", tempf2, TL, TR, \"\\n\");\n\t\tcode.push(\"max\", tempf1, tempf1, tempf2, \"\\n\");\n\t\tcode.push(\"max\", lumaMax, tempf1, M, \"\\n\");\n\n\t\tcode.push(\"dp3\", tempf1, lum, result2, \"\\n\");\n\n\t\tcode.push(\"slt\", tempf2, tempf1, lumaMin, \"\\n\");\n\t\tcode.push(\"sge\", tempf3, tempf1, lumaMax, \"\\n\");\n\t\tcode.push(\"mul\", tempf2, tempf2, tempf3, \"\\n\");\n\n\t\tcode.push(\"mul\", result1, result1, tempf2, \"\\n\");\n\t\tcode.push(\"sub\", tempf2, _1, tempf2, \"\\n\");\n\t\tcode.push(\"mul\", result2, result2, tempf2, \"\\n\");\n\n\t\tcode.push(\"add\", \"oc\", result1, result2, \"\\n\");\n\n\t\t//this._data[2] = 1/numSamples;\n\n\t\treturn code.join(\" \");\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 6);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tif (this._rttManager) {\n\t\t\tthis._data[8] = 1/this._textureWidth;\n\t\t\tthis._data[9] = 1/this._textureHeight;\n\t\t\t//this._data[8] = 1/this._rttManager.viewWidth;\n\t\t\t//this._data[9] = 1/this._rttManager.viewHeight;\n\t\t}\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = 1;//this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DFXAATask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DHBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\n\t/**\n\t * Creates a new Filter3DHDepthOfFFieldTask\n\t * @param amount The maximum amount of blur to apply in pixels at the most out-of-focus areas\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data = new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t\tthis.calculateStepSize();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.x, v0.x, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.x, ft0.x, fc0.y\\n\" +\n\t\t\t\t\"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invW:number = 1/this._textureWidth;\n\n\t\tthis._data[0] = this._amount*.5*invW;\n\t\tthis._data[1] = this._realStepSize*invW;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DHBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DHBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DHBlurTask;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport AGALMiniAssembler\t\t\tfrom \"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\";\nimport IProgram\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IProgram\";\n\nimport RTTBufferManager\t\t\t\tfrom \"awayjs-renderergl/lib/managers/RTTBufferManager\";\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:Image2D;\n\n\tpublic _scaledTextureWidth:number = -1;\n\tpublic _scaledTextureHeight:number = -1;\n\tpublic _rttManager:RTTBufferManager;\n\tpublic _textureWidth:number = -1;\n\tpublic _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:Image2D;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\t\tthis._requireDepthRender = requireDepthRender;\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():Image2D\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:Image2D)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get rttManager():RTTBufferManager\n\t{\n\t\treturn this._rttManager;\n\t}\n\n\tpublic set rttManager(value:RTTBufferManager)\n\t{\n\t\tif (this._rttManager == value)\n\t\t\treturn;\n\n\t\tthis._rttManager = value;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):Image2D\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.updateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic updateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = stage.context.createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.getVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.getFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic getVertexCode():string\n\t{\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = new Image2D(this._scaledTextureWidth, this._scaledTextureHeight);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.updateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:Image2D)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport default Filter3DTaskBase;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport Filter3DTaskBase\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\n\nclass Filter3DVBlurTask extends Filter3DTaskBase\n{\n\tprivate static MAX_AUTO_SAMPLES:number = 15;\n\tprivate _amount:number;\n\tprivate _data:Float32Array;\n\tprivate _stepSize:number = 1;\n\tprivate _realStepSize:number;\n\t\n\t/**\n\t *\n\t * @param amount\n\t * @param stepSize The distance between samples. Set to -1 to autodetect with acceptable quality.\n\t */\n\tconstructor(amount:number, stepSize:number = -1)\n\t{\n\t\tsuper();\n\t\tthis._amount = amount;\n\t\tthis._data =  new Float32Array([0, 0, 0, 1]);\n\t\tthis.stepSize = stepSize;\n\t}\n\n\tpublic get amount():number\n\t{\n\t\treturn this._amount;\n\t}\n\n\tpublic set amount(value:number)\n\t{\n\t\tif (this._amount == value)\n\t\t\treturn;\n\n\t\tthis._amount = value;\n\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic get stepSize():number\n\t{\n\t\treturn this._stepSize;\n\t}\n\n\tpublic set stepSize(value:number)\n\t{\n\t\tif (this._stepSize == value)\n\t\t\treturn;\n\t\tthis._stepSize = value;\n\t\tthis.calculateStepSize();\n\t\tthis.invalidateProgram();\n\t\tthis.updateBlurData();\n\t}\n\n\tpublic getFragmentCode():string\n\t{\n\t\tvar code:string;\n\t\tvar numSamples:number = 1;\n\n\t\tcode = \"mov ft0, v0\t\\n\" +\n\t\t\t\"sub ft0.y, v0.y, fc0.x\\n\";\n\n\t\tcode += \"tex ft1, ft0, fs0 <2d,linear,clamp>\\n\";\n\n\t\tfor (var x:number = this._realStepSize; x <= this._amount; x += this._realStepSize) {\n\t\t\tcode += \"add ft0.y, ft0.y, fc0.y\\n\";\n\t\t\tcode += \"tex ft2, ft0, fs0 <2d,linear,clamp>\\n\" +\n\t\t\t\t\"add ft1, ft1, ft2\\n\";\n\t\t\t++numSamples;\n\t\t}\n\n\t\tcode += \"mul oc, ft1, fc0.z\\n\";\n\n\t\tthis._data[2] = 1/numSamples;\n\n\t\treturn code;\n\t}\n\n\tpublic activate(stage:Stage, camera3D:Camera, depthTexture:Image2D)\n\t{\n\t\tstage.context.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, this._data, 1);\n\t}\n\n\tpublic updateTextures(stage:Stage)\n\t{\n\t\tsuper.updateTextures(stage);\n\n\t\tthis.updateBlurData();\n\t}\n\n\tprivate updateBlurData()\n\t{\n\t\t// todo: must be normalized using view size ratio instead of texture\n\t\tvar invH:number = 1/this._textureHeight;\n\n\t\tthis._data[0] = this._amount*.5*invH;\n\t\tthis._data[1] = this._realStepSize*invH;\n\t}\n\n\tprivate calculateStepSize()\n\t{\n\t\tthis._realStepSize = this._stepSize > 0? this._stepSize : this._amount > Filter3DVBlurTask.MAX_AUTO_SAMPLES? this._amount/Filter3DVBlurTask.MAX_AUTO_SAMPLES : 1;\n\t}\n}\n\nexport default Filter3DVBlurTask;",
    "export {default as Filter3DCompositeTask}\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DCompositeTask\";\nexport {default as Filter3DFXAATask}\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DFXAATask\";\nexport {default as Filter3DHBlurTask}\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DHBlurTask\";\nexport {default as Filter3DTaskBase}\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DTaskBase\";\nexport {default as Filter3DVBlurTask}\t\t\t\tfrom \"awayjs-renderergl/lib/filters/tasks/Filter3DVBlurTask\";\nexport {default as BlurFilter3D}\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/BlurFilter3D\";\nexport {default as CompositeFilter3D}\t\t\t\tfrom \"awayjs-renderergl/lib/filters/CompositeFilter3D\";\nexport {default as Filter3DBase}\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/Filter3DBase\";\nexport {default as FXAAFilter3D}\t\t\t\t\tfrom \"awayjs-renderergl/lib/filters/FXAAFilter3D\";",
    "import Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ImageUtils\t\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport IIndexBuffer\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"awayjs-stagegl/lib/base/IVertexBuffer\";\nimport RTTEvent\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/RTTEvent\";\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[c];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = ImageUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = ImageUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new RTTEvent(RTTEvent.RESIZE, this));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 20);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (1 - y)*.5;\n\t\tvar v2:number = (y + 1)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport default RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}",
    "export {default as RTTBufferManager}\t\t\t\tfrom \"awayjs-renderergl/lib/managers/RTTBufferManager\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Billboard\t\t\t\t\tfrom \"awayjs-display/lib/display/Billboard\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass GL_Billboard extends GL_RenderableBase\n{\n\tprivate static _samplerElements:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\tpublic _id:number;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(billboard:Billboard, renderer:RendererBase)\n\t{\n\t\tsuper(billboard, renderer);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._billboard = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar texture:TextureBase = this._billboard.material.getTextureAt(0);\n\n\t\tvar id:number = -1;\n\n\t\tif (texture)\n\t\t\tid = ((this.renderable.style? this.renderable.style.getSamplerAt(texture) || texture.getSamplerAt(0) : texture.getSamplerAt(0)) || DefaultMaterialManager.getDefaultSampler()).id;\n\n\t\tthis._id = id;\n\n\t\tvar elements:TriangleElements = GL_Billboard._samplerElements[id];\n\n\t\tvar width:number = this._billboard.billboardWidth;\n\t\tvar height:number = this._billboard.billboardHeight;\n\t\tvar billboardRect:Rectangle = this._billboard.billboardRect;\n\n\t\tif (!elements) {\n\t\t\telements = GL_Billboard._samplerElements[id] = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t\telements.setNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\telements.setTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\telements.setUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\telements.setPositions(Array<number>(-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, height-billboardRect.y, 0, width-billboardRect.x, -billboardRect.y, 0, -billboardRect.x, -billboardRect.y, 0));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._billboard.material;\n\t}\n\n}\n\nexport default GL_Billboard;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport Graphic\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphic\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_GraphicRenderable\n */\nclass GL_GraphicRenderable extends GL_RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic graphic:Graphic;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(graphic:Graphic, renderer:RendererBase)\n\t{\n\t\tsuper(graphic, renderer);\n\n\t\tthis.graphic = graphic;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.graphic = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {ElementsBase}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\treturn this.graphic.elements;\n\t}\n\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this.graphic.material;\n\t}\n}\n\nexport default GL_GraphicRenderable;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport LineElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/LineElements\";\nimport ElementsEvent\t\t\t\tfrom \"awayjs-display/lib/events/ElementsEvent\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport LineSegment\t\t\t\t\tfrom \"awayjs-display/lib/display/LineSegment\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_LineSegmentRenderable\n */\nclass GL_LineSegmentRenderable extends GL_RenderableBase\n{\n\tprivate static _lineGraphics:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tprivate _lineSegment:LineSegment;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param graphic\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(lineSegment:LineSegment, renderer:RendererBase)\n\t{\n\t\tsuper(lineSegment, renderer);\n\n\t\tthis._lineSegment = lineSegment;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._lineSegment = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineElements}\n\t * @protected\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:LineElements = GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] || (GL_LineSegmentRenderable._lineGraphics[this._lineSegment.id] = new LineElements());\n\n\t\tvar start:Vector3D = this._lineSegment.startPostion;\n\t\tvar end:Vector3D = this._lineSegment.endPosition;\n\n\t\tvar positions:Float32Array;\n\t\tvar thickness:Float32Array;\n\n\t\t//if (geometry.indices != null) {\n\t\t//\tpositions = <Float32Array> geometry.positions.get(geometry.numVertices);\n\t\t//\tthickness = geometry.thickness.get(geometry.numVertices);\n\t\t//} else {\n\t\t\tpositions = new Float32Array(6);\n\t\t\tthickness = new Float32Array(1);\n\t\t//}\n\n\t\tpositions[0] = start.x;\n\t\tpositions[1] = start.y;\n\t\tpositions[2] = start.z;\n\t\tpositions[3] = end.x;\n\t\tpositions[4] = end.y;\n\t\tpositions[5] = end.z;\n\t\tthickness[0] = this._lineSegment.thickness;\n\n\t\tgeometry.setPositions(positions);\n\t\tgeometry.setThickness(thickness);\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._lineSegment.material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param renderable\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubSpriteRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(indexOffset:number):GL_RenderableBase\n\t{\n\t\treturn new GL_LineSegmentRenderable(<LineSegment> this.renderable, this._renderer);\n\t}\n}\n\nexport default GL_LineSegmentRenderable;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport IRenderer\t\t\t\t\tfrom \"awayjs-display/lib/IRenderer\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport IEntity\t\t\t\t\t\tfrom \"awayjs-display/lib/display/IEntity\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport RenderableEvent\t\t\tfrom \"awayjs-display/lib/events/RenderableEvent\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport GL_ElementsBase\t\t\t\tfrom \"awayjs-renderergl/lib/elements/GL_ElementsBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\n\n/**\n * @class RenderableListItem\n */\nclass GL_RenderableBase extends AbstractionBase\n{\n\tprivate _onSurfaceUpdatedDelegate:(event:RenderableEvent) => void;\n\tprivate _onInvalidateElementsDelegate:(event:RenderableEvent) => void;\n\n\tpublic _elements:ElementsBase;\n\tpublic _surfaceGL:GL_SurfaceBase;\n\tprivate _elementsDirty:boolean = true;\n\tprivate _surfaceDirty:boolean = true;\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _renderer:RendererBase;\n\n\tpublic _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic next:GL_RenderableBase;\n\n\tpublic id:number;\n\n\t/**\n\t *\n\t */\n\tpublic surfaceID:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic maskId:number;\n\n\t/**\n\t *\n\t */\n\tpublic masksConfig:Array<Array<number>>;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\tpublic uvMatrix:Matrix;\n\t\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\tpublic get elements():ElementsBase\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\treturn this._elements;\n\t}\n\n\tpublic get surfaceGL():GL_SurfaceBase\n\t{\n\t\tif (this._surfaceDirty)\n\t\t\tthis._updateSurface();\n\n\t\treturn this._surfaceGL;\n\t}\n\n\n\t/**\n\t *\n\t * @param renderable\n\t * @param sourceEntity\n\t * @param surface\n\t * @param renderer\n\t */\n\tconstructor(renderable:IRenderable, renderer:RendererBase)\n\t{\n\t\tsuper(renderable, renderer);\n\n\t\tthis._onSurfaceUpdatedDelegate = (event:RenderableEvent) => this._onSurfaceUpdated(event);\n\t\tthis._onInvalidateElementsDelegate = (event:RenderableEvent) => this.onInvalidateElements(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._renderer = renderer;\n\t\tthis._stage = renderer.stage;\n\n\t\tthis.renderable = renderable;\n\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.addEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis.next = null;\n\t\tthis.masksConfig = null;\n\t\tthis.renderSceneTransform = null;\n\n\t\tthis._renderer = null;\n\t\tthis._stage = null;\n\t\tthis.sourceEntity = null;\n\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_RENDER_OWNER, this._onSurfaceUpdatedDelegate);\n\t\tthis.renderable.removeEventListener(RenderableEvent.INVALIDATE_ELEMENTS, this._onInvalidateElementsDelegate);\n\t\tthis.renderable = null;\n\n\t\tthis._surfaceGL.usages--;\n\n\t\tif (!this._surfaceGL.usages)\n\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\n\t\tthis._surfaceGL = null;\n\t\tthis._elements = null;\n\t}\n\n\tpublic onInvalidateElements(event:RenderableEvent)\n\t{\n\t\tthis._elementsDirty = true;\n\t}\n\n\tprivate _onSurfaceUpdated(event:RenderableEvent)\n\t{\n\t\tthis._surfaceDirty = true;\n\t}\n\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Sets the surface state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:IPass, camera:Camera)\n\t{\n\t\tpass._iActivate(camera);\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._setRenderState(pass, camera, viewProjection);\n\n\t\tif (this._elementsDirty)\n\t\t\tthis._updateElements();\n\n\t\tpass.shader._elementsPool.getAbstraction((this.renderable.animator)? (<AnimatorBase> this.renderable.animator).getRenderableElements(this, this._elements) : this._elements)._iRender(this, camera, viewProjection);\n\t}\n\n\tpublic _setRenderState(pass:IPass, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass._iRender(this, camera, viewProjection);\n\t}\n\n\t/**\n\t * Clears the surface state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:IPass)\n\t{\n\t\tpass._iDeactivate();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateElements()\n\t{\n\t\tthis._elements = this._pGetElements();\n\n\t\tthis._elementsDirty = false;\n\t}\n\n\tprivate _updateSurface()\n\t{\n\t\tvar surface:ISurface = this._pGetSurface() || DefaultMaterialManager.getDefaultMaterial(this.renderable);\n\n\t\tvar surfaceGL:GL_SurfaceBase = <GL_SurfaceBase> this._renderer.getSurfacePool(this.elements).getAbstraction(surface);\n\n\t\tif (this._surfaceGL != surfaceGL) {\n\n\t\t\tif (this._surfaceGL) {\n\t\t\t\tthis._surfaceGL.usages--;\n\n\t\t\t\t//dispose current surfaceGL object\n\t\t\t\tif (!this._surfaceGL.usages)\n\t\t\t\t\tthis._surfaceGL.onClear(new AssetEvent(AssetEvent.CLEAR, this._surfaceGL.surface));\n\t\t\t}\n\n\t\t\tthis._surfaceGL = surfaceGL;\n\n\t\t\tthis._surfaceGL.usages++;\n\t\t}\n\n\t\t//create a cache of image & sampler objects for the renderable\n\t\tvar numImages:number = surfaceGL.numImages;\n\n\t\tthis.images.length = numImages;\n\t\tthis.samplers.length = numImages;\n\t\tthis.uvMatrix = this.renderable.style? this.renderable.style.uvMatrix : surface.style? surface.style.uvMatrix : null;\n\n\t\tvar numTextures:number = surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\tindex = surfaceGL.getImageIndex(texture, j);\n\t\t\t\timage =  this.renderable.style? this.renderable.style.getImageAt(texture, j) : null;\n\t\t\t\tthis.images[index] = image? <GL_ImageBase> this._stage.getAbstraction(image) : null;\n\t\t\t\tsampler = this.renderable.style? this.renderable.style.getSamplerAt(texture, j) : null;\n\t\t\t\tthis.samplers[index] = sampler? <GL_SamplerBase> this._stage.getAbstraction(sampler) : null;\n\t\t\t}\n\t\t}\n\n\t\tthis._surfaceDirty = false;\n\t}\n}\n\nexport default GL_RenderableBase;",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport ElementsBase\t\t\t\t\tfrom \"awayjs-display/lib/graphics/ElementsBase\";\nimport TriangleElements\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport ContextGLProgramType\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProgramType\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport RendererBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/RendererBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport PassBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/PassBase\";\n\n/**\n * @class away.pool.GL_SkyboxRenderable\n */\nclass GL_SkyboxRenderable extends GL_RenderableBase\n{\n\tpublic static vertexAttributesOffset:number = 1;\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleElements;\n\n\tprivate _vertexArray:Float32Array;\n\n\t/**\n\t *\n\t */\n\tprivate _skybox:Skybox;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(skybox:Skybox, renderer:RendererBase)\n\t{\n\t\tsuper(skybox, renderer);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._vertexArray = new Float32Array([0, 0, 0, 0, 1, 1, 1, 1]);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleElements}\n\t * @private\n\t */\n\tpublic _pGetElements():ElementsBase\n\t{\n\t\tvar geometry:TriangleElements = GL_SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = GL_SkyboxRenderable._geometry = new TriangleElements(new AttributesBuffer(11, 4));\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.setIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.setPositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tpublic _pGetSurface():ISurface\n\t{\n\t\treturn this._skybox;\n\t}\n\n\tpublic static _iIncludeDependencies(shader:ShaderBase)\n\t{\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\";\n\t}\n\n\tpublic static _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _setRenderState(pass:PassBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._setRenderState(pass, camera, viewProjection);\n\n\t\tvar context:IContextGL = this._stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexArray[0] = pos.x;\n\t\tthis._vertexArray[1] = pos.y;\n\t\tthis._vertexArray[2] = pos.z;\n\t\tthis._vertexArray[4] = this._vertexArray[5] = this._vertexArray[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexArray, 2);\n\t}\n}\n\nexport default GL_SkyboxRenderable;",
    "export {default as GL_BillboardRenderable}\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_BillboardRenderable\";\nexport {default as GL_GraphicRenderable}\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_GraphicRenderable\";\nexport {default as GL_LineSegmentRenderable}\t\tfrom \"awayjs-renderergl/lib/renderables/GL_LineSegmentRenderable\";\nexport {default as GL_RenderableBase}\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nexport {default as GL_SkyboxRenderable}\t\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_SkyboxRenderable\";",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport DirectionalLight\t\t\t\tfrom \"awayjs-display/lib/display/DirectionalLight\";\nimport LightProbe\t\t\t\t\tfrom \"awayjs-display/lib/display/LightProbe\";\nimport PointLight\t\t\t\t\tfrom \"awayjs-display/lib/display/PointLight\";\nimport LightPickerBase\t\t\t\tfrom \"awayjs-display/lib/materials/lightpickers/LightPickerBase\";\nimport LightSources\t\t\t\t\tfrom \"awayjs-display/lib/materials/LightSources\";\n\nimport ContextGLProfile\t\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLProfile\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport IContextGL\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/IContextGL\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\n\nimport ILightingPass\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/ILightingPass\";\n\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport CompilerBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/compilers/CompilerBase\";\nimport LightingCompiler\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass LightingShader extends ShaderBase\n{\n\tpublic _lightingPass:ILightingPass;\n\n\tprivate _includeCasters:boolean = true;\n\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numDirectionalLights:number;\n\tpublic numPointLights:number;\n\tpublic numLightProbes:number;\n\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, stage:Stage)\n\t{\n\t\tsuper(elementsClass, lightingPass, stage);\n\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis.numPointLights = this._lightingPass.numPointLights;\n\t\tthis.numDirectionalLights = this._lightingPass.numDirectionalLights;\n\t\tthis.numLightProbes = this._lightingPass.numLightProbes;\n\n\t\tvar numAllLights:number = this._lightingPass.numPointLights + this._lightingPass.numDirectionalLights;\n\t\tvar numLightProbes:number = this._lightingPass.numLightProbes;\n\t\tvar diffuseLightSources:number = this._lightingPass._iUsesDiffuse(this)? this._lightingPass.diffuseLightSources : 0x00;\n\t\tvar specularLightSources:number = this._lightingPass._iUsesSpecular(this)? this._lightingPass.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis.usesLightFallOff = this._lightingPass.enableLightFallOff && this.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis.usesCommonData = this.usesLightFallOff;\n\t\tthis.numLights = numAllLights + numLightProbes;\n\t\tthis.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis.usesShadows = this._lightingPass._iUsesShadows(this);\n\n\t\t//IMPORTANT this must occur after shader lighting initialisation above\n\t\tsuper._iIncludeDependencies();\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.LightingCompiler}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:ILightingPass):CompilerBase\n\t{\n\t\treturn new LightingCompiler(elementsClass, pass, this);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._lightingPass.lightPicker)\n\t\t\tthis._lightingPass.lightPicker.collectLights(renderable.sourceEntity);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes();\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this._lightingPass.lightPicker.directionalLights;\n\t\toffset = this._lightingPass.directionalLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this._lightingPass.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this._lightingPass.lightPicker.pointLights;\n\t\toffset = this._lightingPass.pointLightsOffset;\n\t\tlen = this._lightingPass.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this._lightingPass.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes()\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this._lightingPass.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this._lightingPass.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this._lightingPass.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this._lightingPass.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.diffuseMap)).activate(this.lightProbeDiffuseIndices[i], probe.diffuseSampler.mipmap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<GL_ImageBase> this._stage.getAbstraction(probe.specularMap)).activate(this.lightProbeSpecularIndices[i], probe.diffuseSampler.mipmap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this._lightingPass.lightProbesOffset + i];\n\t}\n}\n\nexport default LightingShader;",
    "import ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * RegisterPool is used by the shader compilers process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport default RegisterPool;\n",
    "import BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport Matrix\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Vector3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport ColorTransform\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport ContextGLBlendFactor\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLBlendFactor\";\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\nimport ContextGLTriangleFace\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTriangleFace\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport ProgramData\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/ProgramData\";\nimport GL_IAssetClass\t\t\t\tfrom \"awayjs-stagegl/lib/library/GL_IAssetClass\";\n\nimport AnimationSetBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nimport AnimatorBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport AnimationRegisterCache\t\tfrom \"awayjs-renderergl/lib/animators/data/AnimationRegisterCache\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport ElementsPool\t\t\t\t\tfrom \"awayjs-renderergl/lib/elements/ElementsPool\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport CompilerBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/compilers/CompilerBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n * ShaderBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderBase implements IAbstractionPool\n{\n\tpublic static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _elementsPool:ElementsPool;\n\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _pass:IPass;\n\tpublic _stage:Stage;\n\tprivate _programData:ProgramData;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tprivate _invalidShader:boolean = true;\n\tprivate _invalidProgram:boolean = true;\n\tprivate _animationVertexCode:string = \"\";\n\tprivate _animationFragmentCode:string = \"\";\n\n\tpublic get programData():ProgramData\n\t{\n\t\tif (this._invalidProgram)\n\t\t\tthis._updateProgram();\n\n\t\treturn this._programData;\n\t}\n\n\tpublic usesBlending:boolean = false;\n\n\tpublic useImageRect:boolean = false;\n\n\tpublic usesCurves:boolean = false;\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\n\t/**\n\t * Indicate whether the shader should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic writeDepth:boolean = true;\n\n\tpublic profile:string;\n\n\tpublic usesAnimation:boolean;\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Float32Array = new Float32Array(16);\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic numLights:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic usesColorTransform:boolean;\n\tpublic alphaThreshold:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t *\n\t */\n\tpublic usesCommonData:boolean;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the vertex color.\n\t */\n\tpublic colorDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsColors:boolean;\n\n\t/**\n\t * Indicates whether or not normals are output.\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist and normals are being output.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\t/**\n\t * Indicates whether there are any dependencies on the local position vector.\n\t */\n\tpublic usesPositionFragment:boolean = false;\n\n\tpublic vertexConstantData:Float32Array;\n\tpublic fragmentConstantData:Float32Array;\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the curve vertex attribute stream.\n\t */\n\tpublic curvesIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalIndex:number;\n\n\t/**\n\t * The index for the color attribute stream.\n\t */\n\tpublic colorBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvMatrixIndex:number;\n\n\t/**\n\t * The index for the color transform fragment constant.\n\t */\n\tpublic colorTransformIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointIndexIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic jointWeightIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic imageIndices:Array<number> = new Array<number>();\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, stage:Stage)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._pass = pass;\n\t\tthis._stage = stage;\n\n\t\tthis.profile = this._stage.profile;\n\n\t\tthis._elementsPool = new ElementsPool(this, elementsClass);\n\t}\n\n\tpublic getAbstraction(texture:TextureBase):GL_TextureBase\n\t{\n\t\treturn (this._abstractionPool[texture.id] || (this._abstractionPool[texture.id] = new (<GL_IAssetClass> ShaderBase._abstractionClassPool[texture.assetType])(texture, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(texture:TextureBase)\n\t{\n\t\tthis._abstractionPool[texture.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tShaderBase._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._pass.getImageIndex(texture, index);\n\t}\n\n\tpublic _iIncludeDependencies()\n\t{\n\t\tthis._pass._iIncludeDependencies(this);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param elementsClass\n\t * @param pass\n\t * @param stage\n\t * @returns {CompilerBase}\n\t */\n\tpublic createCompiler(elementsClass:IElementsClassGL, pass:IPass):CompilerBase\n\t{\n\t\treturn new CompilerBase(elementsClass, pass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.colorDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesCommonData = false;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesPositionFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.curvesIndex = -1;\n\t\tthis.uvIndex = -1;\n\t\tthis.uvMatrixIndex = -1;\n\t\tthis.colorTransformIndex = -1;\n\t\tthis.secondaryUVIndex = -1;\n\t\tthis.normalIndex = -1;\n\t\tthis.colorBufferIndex = -1;\n\t\tthis.tangentIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t\tthis.jointIndexIndex = -1;\n\t\tthis.jointWeightIndex = -1;\n\t\tthis.imageIndices.length = 0;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData = new Float32Array(this.numUsedVertexConstants*4);\n\t\tthis.fragmentConstantData = new Float32Array(this.numUsedFragmentConstants*4);\n\n\t\t//Initializes commonly required constant values.\n\t\tif (this.commonsDataIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\t\t}\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvMatrixIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t}\n\n\t\t//Initializes the default colorTransform.\n\t\tif (this.colorTransformIndex >= 0) {\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t}\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\t\t\tcase BlendMode.NORMAL:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis.usesBlending = false;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis.usesBlending = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\t\t}\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).activate(this, this._stage);\n\n\t\tthis._stage.context.setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\n\t\tthis._stage.context.setDepthTest(( this.writeDepth && !this.usesBlending ), this.depthCompareMode);\n\n\t\tif (this.usesBlending)\n\t\t\tthis._stage.context.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tif (this.usesAnimation)\n\t\t\t(<AnimationSetBase> this._pass.animationSet).deactivate(this, this._stage);\n\n\t\t//For the love of god don't remove this if you want your multi-material shadows to not flicker like shit\n\t\tthis._stage.context.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (renderable.renderable.animator)\n\t\t\t(<AnimatorBase> renderable.renderable.animator).setRenderState(this, renderable, this._stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvMatrix:Matrix = renderable.uvMatrix;\n\n\t\t\tif (uvMatrix) {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = uvMatrix.a;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = uvMatrix.b;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = uvMatrix.tx;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = uvMatrix.c;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = uvMatrix.d;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = uvMatrix.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvMatrixIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.usesColorTransform) {\n\n\t\t\tvar colorTransform:ColorTransform = renderable.sourceEntity._iAssignedColorTransform();\n\n\t\t\tif (colorTransform) {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = colorTransform.redMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = colorTransform.greenMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = colorTransform.blueMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = colorTransform.alphaMultiplier;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = colorTransform.redOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = colorTransform.greenOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = colorTransform.blueOffset/255;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = colorTransform.alphaOffset/255;\n\t\t\t} else {\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 1] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 2] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 3] = 1;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 4] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 5] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 6] = 0;\n\t\t\t\tthis.fragmentConstantData[this.colorTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic invalidateProgram()\n\t{\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic invalidateShader()\n\t{\n\t\tthis._invalidShader = true;\n\t\tthis._invalidProgram = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._programData.dispose();\n\t\tthis._programData = null;\n\t}\n\n\tprivate _updateProgram()\n\t{\n\t\tthis._invalidProgram = false;\n\n\t\tvar compiler:CompilerBase;\n\n\t\tif (this._invalidShader) {\n\t\t\tthis._invalidShader = false;\n\n\t\t\tcompiler = this.createCompiler(this._elementsClass, this._pass);\n\t\t\tcompiler.compile();\n\t\t}\n\n\t\tthis._calcAnimationCode(compiler.shadedTarget);\n\n\t\tvar programData:ProgramData = this._stage.getProgramData(this._animationVertexCode + compiler.vertexCode, compiler.fragmentCode + this._animationFragmentCode + compiler.postAnimationFragmentCode);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (this._programData != programData) {\n\t\t\tif (this._programData)\n\t\t\t\tthis._programData.dispose();\n\n\t\t\tthis._programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\t}\n\n\tprivate _calcAnimationCode(shadedTarget:string)\n\t{\n\t\t//reset code\n\t\tthis._animationVertexCode = \"\";\n\t\tthis._animationFragmentCode = \"\";\n\n\t\t//check to see if GPU animation is used\n\t\tif (this.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> this._pass.animationSet;\n\n\t\t\tthis._animationVertexCode += animationSet.getAGALVertexCode(this);\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += animationSet.getAGALUVCode(this);\n\n\t\t\tif (this.usesFragmentAnimation)\n\t\t\t\tthis._animationFragmentCode += animationSet.getAGALFragmentCode(this, shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(this);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = this.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.animationTargetRegisters[i] + \", \" + this.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (this.uvDependencies > 0 && !this.usesUVTransform)\n\t\t\t\tthis._animationVertexCode += \"mov \" + this.uvTarget + \",\" + this.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport default ShaderBase;",
    "import RegisterPool\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/RegisterPool\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilers.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport default ShaderRegisterCache;",
    "import ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\n\tpublic animatedPosition:ShaderRegisterElement;\n\tpublic positionVarying:ShaderRegisterElement;\n\n\tpublic curvesInput:ShaderRegisterElement;\n\tpublic curvesVarying:ShaderRegisterElement;\n\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\n\tpublic colorInput:ShaderRegisterElement;\n\tpublic colorVarying:ShaderRegisterElement;\n\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tpublic textures:Array<ShaderRegisterElement> = Array<ShaderRegisterElement>();\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport default ShaderRegisterData;",
    "/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport default ShaderRegisterElement;",
    "import ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass CompilerBase\n{\n\tpublic _pShader:ShaderBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pElementsClass:IElementsClassGL;\n\tpublic _pRenderPass:IPass;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string> = new Array<string>();\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string> = new Array<string>();\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, pass:IPass, shader:ShaderBase)\n\t{\n\t\tthis._pElementsClass = elementsClass;\n\t\tthis._pRenderPass = pass;\n\t\tthis._pShader = shader;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(shader.profile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = elementsClass.vertexAttributesOffset;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShader.reset();\n\n\t\tthis._pShader._iIncludeDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pRenderPass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pRenderPass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\tif (this._pShader.usesColorTransform)\n\t\t\tthis.compileColorTransformCode();\n\t\telse\n\t\t\tthis._pShader.colorTransformIndex = -1;\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShader.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pRenderPass._iInitConstantData(this._pShader);\n\t}\n\t/**\n\t * Calculate the transformed colours\n\t */\n\tprivate compileColorTransformCode()\n\t{\n\t\t// rm, gm, bm, am - multiplier\n\t\t// ro, go, bo, ao - offset\n\t\tvar ct1:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tvar ct2:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShader.colorTransformIndex = ct1.index*4;\n\t\tthis._pPostAnimationFragmentCode += \"mul \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct1 + \"\\n\";\n\t\tthis._pPostAnimationFragmentCode += \"add \" + this._pSharedRegisters.shadedTarget + \", \" + this._pSharedRegisters.shadedTarget + \", \" + ct2 + \"\\n\";\n\t}\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShader.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n        //compile the local-space position if required\n        if (this._pShader.usesPositionFragment)\n            this.compilePositionCode();\n\n\t\tif (this._pShader.usesCurves)\n\t\t\tthis.compileCurvesCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShader.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShader.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShader.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShader.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pElementsClass._iGetVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pElementsClass._iGetFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pRenderPass._iGetPreLightingVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pRenderPass._iGetPreLightingFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShader.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShader.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.animatedPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShader.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n    private compilePositionCode()\n    {\n        this._pSharedRegisters.positionVarying = this._pRegisterCache.getFreeVarying();\n        this._pVertexCode += \"mov \" + this._pSharedRegisters.positionVarying + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\";\n    }\n\n\n\tprivate compileCurvesCode()\n\t{\n\t\tthis._pSharedRegisters.curvesInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.curvesIndex = this._pSharedRegisters.curvesInput.index;\n\n\t\tthis._pSharedRegisters.curvesVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.curvesVarying + \", \" + this._pSharedRegisters.curvesInput + \"\\n\";\n\n\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeFragmentSingleTemp();\n\n\t\tthis._pFragmentCode += \"mul \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".y, \" + this._pSharedRegisters.curvesVarying + \".y\\n\" +\n\t\t\t\t\t\t\t\"sub \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".z\\n\" +\n\t\t\t\t\t\t\t\"mul \" + temp + \", \" + temp + \", \" + this._pSharedRegisters.curvesVarying + \".x\\n\" +\n\t\t\t\t\t\t\t\"kil \" + temp + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.uvIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pSharedRegisters.uvVarying = this._pRegisterCache.getFreeVarying();\n\n\t\tif (this._pShader.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShader.uvMatrixIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShader.uvMatrixIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShader.secondaryUVIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShader.viewDirDependencies);\n\n\t\tthis._pShader.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShader.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShader.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShader.outputsNormals && !this._pShader.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pRenderPass._iGetNormalVertexCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShader.outputsNormals || !this._pShader.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShader.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShader.outputsNormals) {\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pRenderPass._iGetNormalFragmentCode(this._pShader, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShader.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShader.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShader.pInitRegisterIndices();\n\n\t\tthis._pSharedRegisters.animatedPosition = this._pRegisterCache.getFreeVertexVectorTemp()\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedPosition, 1);\n\n\t\tthis._pAnimatableAttributes.push(\"va0\");\n\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedPosition.toString());\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\n\t\t//create commonly shared constant registers\n\t\tif (this._pShader.usesCommonData || this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\t\tthis._pShader.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\t\t}\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t//Needs to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShader.tangentDependencies > 0 || this._pShader.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.tangentIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShader.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShader.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.normalIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\n\t\tif (this._pShader.colorDependencies > 0) {\n\t\t\tthis._pSharedRegisters.colorInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShader.colorBufferIndex = this._pSharedRegisters.colorInput.index;\n\n\t\t\tthis._pSharedRegisters.colorVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.colorVarying + \", \" + this._pSharedRegisters.colorInput + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport default CompilerBase;",
    "import LightingShader\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/LightingShader\";\nimport CompilerBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/compilers/CompilerBase\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport ILightingPass\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/ILightingPass\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\n\n/**\n * CompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass LightingCompiler extends CompilerBase\n{\n\tprivate _shaderLightingObject:LightingShader;\n\tprivate _lightingPass:ILightingPass;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new CompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(elementsClass:IElementsClassGL, lightingPass:ILightingPass, shaderLightingObject:LightingShader)\n\t{\n\t\tsuper(elementsClass, lightingPass, shaderLightingObject);\n\n\t\tthis._shaderLightingObject = shaderLightingObject;\n\t\tthis._lightingPass = lightingPass;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._lightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._lightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._shaderLightingObject.numPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.animatedPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.animatedPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._shaderLightingObject.numLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._lightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._shaderLightingObject.numLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._shaderLightingObject.numDirectionalLights*3);\n\t\t}\n\t}\n}\n\nexport default LightingCompiler;",
    "export {default as CompilerBase}\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/compilers/CompilerBase\";\nexport {default as LightingCompiler}\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/compilers/LightingCompiler\";\nexport {default as LightingShader}\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/LightingShader\";\nexport {default as RegisterPool}\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/RegisterPool\";\nexport {default as ShaderBase}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nexport {default as ShaderRegisterCache}\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nexport {default as ShaderRegisterData}\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nexport {default as ShaderRegisterElement}\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";",
    "import IEntitySorter\t\t\t\tfrom \"awayjs-renderergl/lib/sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase;\n\t\tvar slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\tvar headB:GL_RenderableBase;\n\t\tvar fast:GL_RenderableBase, slow:GL_RenderableBase;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:GL_RenderableBase;\n\t\tvar curr:GL_RenderableBase;\n\t\tvar l:GL_RenderableBase;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.surfaceID;\n\t\t\t\tvar mb:number = headB.surfaceID;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport default RenderableMergeSort;",
    "import IEntitySorter\t\t\t\tfrom \"awayjs-renderergl/lib/sort/IEntitySorter\";\n\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:GL_RenderableBase):GL_RenderableBase\n\t{\n\t\treturn head;\n\t}\n}\n\nexport default RenderableNullSort;",
    "export {default as IEntitySorter}\t\t\t\t\tfrom \"awayjs-renderergl/lib/sort/IEntitySorter\";\nexport {default as RenderableMergeSort}\t\t\t\tfrom \"awayjs-renderergl/lib/sort/RenderableMergeSort\";\nexport {default as RenderableNullSort}\t\t\t\tfrom \"awayjs-renderergl/lib/sort/RenderableNullSort\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport BasicMaterial\t\t\t\tfrom \"awayjs-display/lib/materials/BasicMaterial\";\n\nimport BasicMaterialPass\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\n\n/**\n * RenderMaterialObject forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_BasicMaterialSurface extends GL_SurfaceBase\n{\n\tprivate _material:BasicMaterial;\n\tprivate _pass:BasicMaterialPass;\n\n\n\tconstructor(material:BasicMaterial, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(material, elementsClass, renderPool);\n\n\t\tthis._material = material;\n\n\t\tthis._pAddPass(this._pass = new BasicMaterialPass(this, material, elementsClass, this._stage));\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._material = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._material.blendMode != BlendMode.NORMAL || this._material.alphaBlending || (this._material.colorTransform && this._material.colorTransform.alphaMultiplier < 1));\n\t\tthis._pass.preserveAlpha = this._material.preserveAlpha;//this._pRequiresBlending;\n\t\tthis._pass.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._material.blendMode);\n\t\t//this._pass.forceSeparateMVP = false;\n\t}\n}\n\nexport default GL_BasicMaterialSurface;",
    "import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n * GL_DepthSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_DepthSurface extends GL_SurfacePassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _textureVO:GL_TextureBase;\n\n\t/**\n\t *\n\t * @param pool\n\t * @param surface\n\t * @param elementsClass\n\t * @param stage\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default GL_DepthSurface;",
    "﻿import ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\nimport GL_SurfacePassBase\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n * DistanceRender is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceRender extends GL_SurfacePassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _fragmentConstantsIndex:number;\n\n\t/**\n\t * Creates a new DistanceRender object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, elementsClass, renderPool);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\t\tsuper._iInitConstantData(shader);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = shader.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.projectionDependencies++;\n\t\tshader.viewDirDependencies++;\n\n\t\tif (shader.alphaThreshold > 0)\n\t\t\tshader.uvDependencies++;\n\n\t\tif (shader.viewDirDependencies > 0)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (this._textureVO && shader.alphaThreshold > 0) {\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += this._textureVO._iGetFragmentCode(albedo, registerCache, sharedRegisters, sharedRegisters.uvVarying);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (this._textureVO && this._shader.alphaThreshold > 0) {\n\t\t\tthis._textureVO.activate(this);\n\n\t\t\tdata[index + 8] = this._shader.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport default DistanceRender;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport BlendMode\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport Skybox\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Skybox\";\n\nimport ContextGLCompareMode\t\t\tfrom \"awayjs-stagegl/lib/base/ContextGLCompareMode\";\n\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_SurfacePassBase\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\";\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n * GL_SkyboxSurface forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass GL_SkyboxSurface extends GL_SurfacePassBase\n{\n\tpublic _skybox:Skybox;\n\tpublic _texture:GL_TextureBase;\n\n\tconstructor(skybox:Skybox, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(skybox, elementsClass, renderPool);\n\n\t\tthis._skybox = skybox;\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis._texture = <GL_TextureBase> this._shader.getAbstraction(this._skybox.texture);\n\n\t\tthis._pAddPass(this);\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture.onClear(new AssetEvent(AssetEvent.CLEAR, this._skybox.texture));\n\t\tthis._texture = null;\n\n\t\tthis._skybox = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tsuper._pUpdateRender();\n\n\t\tthis._pRequiresBlending = (this._surface.blendMode != BlendMode.NORMAL);\n\n\t\tthis.shader.setBlendMode((this._surface.blendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._surface.blendMode);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tshader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._texture._iGetFragmentCode(sharedRegisters.shadedTarget, registerCache, sharedRegisters, sharedRegisters.positionVarying);\n\t}\n\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tthis._texture._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tthis._stage.context.setDepthTest(false, ContextGLCompareMode.LESS);\n\n\t\tthis._texture.activate(this);\n\t}\n}\n\nexport default GL_SkyboxSurface;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport SurfaceEvent\t\t\t\t\tfrom \"awayjs-display/lib/events/SurfaceEvent\";\nimport IRenderable\t\t\t\t\tfrom \"awayjs-display/lib/base/IRenderable\";\nimport MaterialBase\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\nimport DefaultMaterialManager\t\tfrom \"awayjs-display/lib/managers/DefaultMaterialManager\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\nimport GL_ImageBase\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_ImageBase\";\nimport GL_SamplerBase\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerBase\";\n\nimport AnimatorBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimatorBase\";\nimport PassEvent\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport SurfacePool\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.Passes\n */\nclass GL_SurfaceBase extends AbstractionBase\n{\n\tprivate _onInvalidateAnimationDelegate:(event:SurfaceEvent) => void;\n\tprivate _onInvalidatePassesDelegate:(event:SurfaceEvent) => void;\n\n\tpublic usages:number = 0;\n\tpublic _forceSeparateMVP:boolean = false;\n\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\n\tprivate _renderOrderId:number;\n\tprivate _invalidAnimation:boolean = true;\n\tprivate _invalidRender:boolean = true;\n\tprivate _invalidImages:boolean = true;\n\tprivate _passes:Array<IPass> = new Array<IPass>();\n\tprivate _imageIndices:Object = new Object();\n\tprivate _numImages:number;\n\n\n\n\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassInvalidateDelegate:(event:PassEvent) => void;\n\n\tpublic surfaceID:number;\n\n\tpublic images:Array<GL_ImageBase> = new Array<GL_ImageBase>();\n\tpublic samplers:Array<GL_SamplerBase> = new Array<GL_SamplerBase>();\n\n\t/**\n\t * Indicates whether or not the renderable requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\tpublic get renderOrderId():number\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._renderOrderId;\n\t}\n\n\tpublic get passes():Array<IPass>\n\t{\n\t\tif (this._invalidAnimation)\n\t\t\tthis._updateAnimation();\n\n\t\treturn this._passes;\n\t}\n\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\tpublic get numImages():number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._numImages;\n\t}\n\n\tconstructor(surface:ISurface, elementsClass:IElementsClassGL, renderPool:SurfacePool)\n\t{\n\t\tsuper(surface, renderPool);\n\n\t\tthis._onInvalidateAnimationDelegate = (event:SurfaceEvent) => this.onInvalidateAnimation(event);\n\t\tthis._onInvalidatePassesDelegate = (event:SurfaceEvent) => this.onInvalidatePasses(event);\n\n\t\tthis.surfaceID = surface.id;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = renderPool.stage;\n\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_ANIMATION, this._onInvalidateAnimationDelegate);\n\t\tthis._surface.addEventListener(SurfaceEvent.INVALIDATE_PASSES, this._onInvalidatePassesDelegate);\n\n\t\tthis._onPassInvalidateDelegate = (event:PassEvent) => this.onPassInvalidate(event);\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._elementsClass._iIncludeDependencies(shader);\n\n\t\tshader.alphaThreshold = this._surface.alphaThreshold;\n\t\tshader.useImageRect = this._surface.imageRect;\n\t\tshader.usesCurves = this._surface.curves;\n\n\t\tif (this._surface instanceof MaterialBase) {\n\t\t\tvar material:MaterialBase = <MaterialBase> this._surface;\n\t\t\tshader.useAlphaPremultiplied = material.alphaPremultiplied;\n\t\t\tshader.useBothSides = material.bothSides;\n\t\t\tshader.usesUVTransform = material.animateUVs;\n\t\t\tshader.usesColorTransform = material.useColorTransform;\n\t\t}\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (this._invalidImages)\n\t\t\tthis._updateImages();\n\n\t\treturn this._imageIndices[texture.id][index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\t\tthis._passes[i].dispose();\n\t\t}\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tthis._invalidRender = true;\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidatePasses(event:SurfaceEvent)\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._passes[i].invalidate();\n\n\t\tthis._invalidAnimation = true;\n\t\tthis._invalidImages = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onInvalidateAnimation(event:SurfaceEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\t/**\n\t *\n\t * @param surface\n\t */\n\tprivate _updateAnimation()\n\t{\n\t\tif (this._invalidRender)\n\t\t\tthis._pUpdateRender();\n\n\t\tthis._invalidAnimation = false;\n\n\t\tvar enabledGPUAnimation:boolean = this._getEnabledGPUAnimation();\n\n\t\tvar renderOrderId = 0;\n\t\tvar mult:number = 1;\n\t\tvar shader:ShaderBase;\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tshader = this._passes[i].shader;\n\n\t\t\tif (shader.usesAnimation != enabledGPUAnimation) {\n\t\t\t\tshader.usesAnimation = enabledGPUAnimation;\n\t\t\t\tshader.invalidateProgram();\n\t\t\t}\n\n\t\t\trenderOrderId += shader.programData.id*mult;\n\t\t\tmult *= 1000;\n\t\t}\n\n\t\tthis._renderOrderId = renderOrderId;\n\t}\n\n\tprivate _updateImages()\n\t{\n\t\tthis._invalidImages = false;\n\n\t\tvar numTextures:number = this._surface.getNumTextures();\n\t\tvar texture:TextureBase;\n\t\tvar numImages:number;\n\t\tvar images:Array<number>;\n\t\tvar image:ImageBase;\n\t\tvar sampler:SamplerBase;\n\t\tvar index:number = 0;\n\n\t\tfor (var i:number = 0; i < numTextures; i++) {\n\t\t\ttexture = this._surface.getTextureAt(i);\n\t\t\tnumImages = texture.getNumImages();\n\t\t\timages = this._imageIndices[texture.id] = new Array<number>();\n\t\t\tfor (var j:number = 0; j < numImages; j++) {\n\t\t\t\timage = texture.getImageAt(j) || (this._surface.style? this._surface.style.getImageAt(texture, j) : null) || DefaultMaterialManager.getDefaultImage2D();\n\t\t\t\tthis.images[index] = <GL_ImageBase> this._stage.getAbstraction(image);\n\n\t\t\t\tsampler = texture.getSamplerAt(j) || (this._surface.style? this._surface.style.getSamplerAt(texture, j) : null) || DefaultMaterialManager.getDefaultSampler();\n\t\t\t\tthis.samplers[index] = <GL_SamplerBase> this._stage.getAbstraction(sampler);\n\n\t\t\t\timages[j] = index++;\n\t\t\t}\n\t\t}\n\n\t\tthis._numImages = index;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateRender()\n\t{\n\t\tthis._invalidRender = false;\n\n\t\t//overrride to update shader object properties\n\t}\n\n\t/**\n\t * Removes a pass from the surface.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemovePass(pass:IPass)\n\t{\n\t\tpass.removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\t}\n\n\t/**\n\t * Removes all passes from the surface\n\t */\n\tpublic _pClearPasses()\n\t{\n\t\tvar len:number = this._passes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._passes[i].removeEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\n\t\tthis._passes.length = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the surface\n\t * @param pass\n\t */\n\tpublic _pAddPass(pass:IPass)\n\t{\n\t\tthis._passes.push(pass);\n\t\tpass.addEventListener(PassEvent.INVALIDATE, this._onPassInvalidateDelegate);\n\t}\n\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassInvalidate(event:PassEvent)\n\t{\n\t\tthis._invalidAnimation = true;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate _getEnabledGPUAnimation():boolean\n\t{\n\t\tif (this._surface.animationSet) {\n\t\t\tthis._surface.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IRenderable> = this._surface.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = this._passes.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(this._passes[i].shader);\n\n\t\t\treturn !this._surface.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport default GL_SurfaceBase;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\n\nimport AnimationSetBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\n\n/**\n * GL_SurfacePassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass GL_SurfacePassBase extends GL_SurfaceBase implements IPass\n{\n\tpublic _shader:ShaderBase;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default GL_SurfacePassBase;",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport ISurfaceClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\n\n/**\n * @class away.pool.SurfacePool\n */\nclass SurfacePool implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\tprivate _elementsClass:IElementsClassGL;\n\tprivate _stage:Stage;\n\tprivate _surfaceClassGL:ISurfaceClassGL;\n\n\tget stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param surfaceClassGL\n\t */\n\tconstructor(elementsClass:IElementsClassGL, stage:Stage, surfaceClassGL:ISurfaceClassGL = null)\n\t{\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t\tthis._surfaceClassGL = surfaceClassGL;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t * @returns IElements\n\t */\n\tpublic getAbstraction(surface:ISurface):GL_SurfaceBase\n\t{\n\t\treturn (this._abstractionPool[surface.id] || (this._abstractionPool[surface.id] = new (<ISurfaceClassGL> this._surfaceClassGL || SurfacePool._abstractionClassPool[surface.assetType])(surface, this._elementsClass, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param elementsOwner\n\t */\n\tpublic clearAbstraction(surface:ISurface)\n\t{\n\t\tdelete this._abstractionPool[surface.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(surfaceClassGL:ISurfaceClassGL, assetClass:IAssetClass)\n\t{\n\t\tSurfacePool._abstractionClassPool[assetClass.assetType] = surfaceClassGL;\n\t}\n}\n\nexport default SurfacePool;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport PassBase\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/PassBase\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n * BasicMaterialPass forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterialPass extends PassBase\n{\n\tprivate _textureVO:GL_TextureBase;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper(render, surface, elementsClass, stage);\n\n\t\tthis._shader = new ShaderBase(elementsClass, this, this._stage);\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tsuper._iIncludeDependencies(shader);\n\n\t\tif (this._textureVO != null)\n\t\t\tshader.uvDependencies++;\n    }\n\n\tpublic invalidate()\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._textureVO = this._surface.getTextureAt(0)? <GL_TextureBase> this._shader.getAbstraction(this._surface.getTextureAt(0)) : null;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._textureVO) {\n\t\t\tthis._textureVO.onClear(new AssetEvent(AssetEvent.CLEAR, this._surface.getTextureAt(0)));\n\t\t\tthis._textureVO = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shader:ShaderBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n        var alphaReg:ShaderRegisterElement;\n\n        if (this.preserveAlpha) {\n            alphaReg = regCache.getFreeFragmentSingleTemp();\n            regCache.addFragmentTempUsages(alphaReg, 1);\n            code += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n        }\n\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\tif (this._textureVO != null) {\n\n\t\t\tcode += this._textureVO._iGetFragmentCode(targetReg, regCache, sharedReg, sharedReg.uvVarying);\n\n\t\t\tif (shader.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" + \"kil \" + targetReg + \".w\\n\" + \"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\t\t} else if (shader.colorBufferIndex != -1) {\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + sharedReg.colorVarying + \"\\n\";\n\t\t} else {\n\t\t\tvar diffuseInputReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n        if (this.preserveAlpha) {\n            code += \"mul \" + sharedReg.shadedTarget + \".w, \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n            regCache.removeFragmentTempUsage(alphaReg);\n        }\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRender(renderable, camera, viewProjection);\n\n\t\tif (this._textureVO != null)\n\t\t\tthis._textureVO._setRenderState(renderable);\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tsuper._iActivate(camera);\n\n\t\tif (this._textureVO != null) {\n\t\t\tthis._textureVO.activate(this._render);\n\n\t\t\tif (this._shader.alphaThreshold > 0)\n\t\t\t\tthis._shader.fragmentConstantData[this._fragmentConstantsIndex] = this._shader.alphaThreshold;\n\t\t} else if (this._shader.colorBufferIndex == -1) {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport default BasicMaterialPass;",
    "import Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\n\nimport Camera\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Camera\";\nimport ISurface\t\t\t\t\t\tfrom \"awayjs-display/lib/base/ISurface\";\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport AnimationSetBase\t\t\t\tfrom \"awayjs-renderergl/lib/animators/AnimationSetBase\";\nimport PassEvent\t\t\t\t\tfrom \"awayjs-renderergl/lib/events/PassEvent\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport IPass\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nimport IElementsClassGL\t\t\t\tfrom \"awayjs-renderergl/lib/elements/IElementsClassGL\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\n\n/**\n * PassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass PassBase extends EventDispatcher implements IPass\n{\n\tpublic _render:GL_SurfaceBase;\n\tpublic _surface:ISurface;\n\tpublic _elementsClass:IElementsClassGL;\n\tpublic _stage:Stage;\n\t\n\tpublic _shader:ShaderBase;\n\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tpublic get shader():ShaderBase\n\t{\n\t\treturn this._shader;\n\t}\n\n\tpublic get animationSet():AnimationSetBase\n\t{\n\t\treturn <AnimationSetBase> this._surface.animationSet;\n\t}\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Creates a new PassBase object.\n\t */\n\tconstructor(render:GL_SurfaceBase, surface:ISurface, elementsClass:IElementsClassGL, stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._render = render;\n\t\tthis._surface = surface;\n\t\tthis._elementsClass = elementsClass;\n\t\tthis._stage = stage;\n\t}\n\n\tpublic getImageIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\treturn this._render.getImageIndex(texture, index);\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis._shader.invalidateShader();\n\n\t\tthis.dispatchEvent(new PassEvent(PassEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._render = null;\n\t\tthis._surface = null;\n\t\tthis._elementsClass = null;\n\t\tthis._stage = null;\n\n\t\tif (this._shader) {\n\t\t\tthis._shader.dispose();\n\t\t\tthis._shader = null;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling pass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRender(renderable:GL_RenderableBase, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis._shader._iRender(renderable, camera, viewProjection);\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling pass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(camera:Camera)\n\t{\n\t\tthis._shader._iActivate(camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate()\n\t{\n\t\tthis._shader._iDeactivate();\n\t}\n\n\tpublic _iIncludeDependencies(shader:ShaderBase)\n\t{\n\t\tthis._render._iIncludeDependencies(shader);\n\t\t\n\t\tif (this._forceSeparateMVP)\n\t\t\tshader.globalPosDependencies++;\n\t}\n\n\n\tpublic _iInitConstantData(shader:ShaderBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shader:ShaderBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport default PassBase;",
    "export {default as BasicMaterialPass}\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/BasicMaterialPass\";\nexport {default as ILightingPass}\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/ILightingPass\";\nexport {default as IPass}\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/IPass\";\nexport {default as PassBase}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/passes/PassBase\";\nexport {default as GL_BasicMaterialSurface}\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_BasicMaterialSurface\";\nexport {default as GL_DepthSurface}\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_DepthSurface\";\nexport {default as GL_DistanceSurface}\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_DistanceSurface\";\nexport {default as GL_SkyboxSurface}\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SkyboxSurface\";\nexport {default as GL_SurfaceBase}\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nexport {default as GL_SurfacePassBase}\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfacePassBase\";\nexport {default as ISurfaceClassGL}\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/ISurfaceClassGL\";\nexport {default as SurfacePool}\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/SurfacePool\";",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport GL_Image2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Image2D\";\nimport GL_Sampler2D\t\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_Sampler2D\";\n\nimport MappingMode\t\t\t\t\tfrom \"awayjs-display/lib/textures/MappingMode\";\nimport Single2DTexture\t\t\t\tfrom \"awayjs-display/lib/textures/Single2DTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.GL_Single2DTexture\n */\nclass GL_Single2DTexture extends GL_TextureBase\n{\n\n\tprivate _single2DTexture:Single2DTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\tprivate _samplerIndex:number;\n\n\tconstructor(single2DTexture:Single2DTexture, shader:ShaderBase)\n\t{\n\t\tsuper(single2DTexture, shader);\n\n\t\tthis._single2DTexture = single2DTexture;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._single2DTexture = null;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The uv coordinate vector with which to sample the texture map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar wrap:string = \"wrap\";\n\t\tvar format:string = \"\";//this.getFormatString(this._single2DTexture.image2D);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tvar temp:ShaderRegisterElement;\n\n\t\t//modify depending on mapping mode\n\t\tif (this._single2DTexture.mappingMode == MappingMode.RADIAL_GRADIENT) {\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"mul \" + temp + \".xy, \" + inputReg + \", \" + inputReg + \"\\n\";\n\t\t\tcode += \"add \" + temp + \".x, \" + temp + \".x, \" + temp + \".y\\n\";\n\t\t\tcode += \"sub \" + temp + \".y, \" + temp + \".y, \" + temp + \".y\\n\";\n\t\t\tcode += \"sqt \" + temp + \".x, \" + temp + \".x, \" + temp + \".x\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\t//handles texture atlasing\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar samplerReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\tthis._samplerIndex = samplerReg.index*4;\n\t\t\ttemp = regCache.getFreeFragmentVectorTemp();\n\n\t\t\tcode += \"mul \" + temp + \", \" + inputReg + \", \" + samplerReg + \".xy\\n\";\n\t\t\tcode += \"add \" + temp + \", \" + temp + \", \" + samplerReg + \".zw\\n\";\n\t\t\tinputReg = temp;\n\t\t}\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._single2DTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\tcode += \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> render.samplers[this._imageIndex];\n\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = render.images[this._imageIndex];\n\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_Sampler2D = <GL_Sampler2D> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tvar image:GL_Image2D = renderable.images[this._imageIndex];\n\n\t\tif (image)\n\t\t\timage.activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t\tif (this._shader.useImageRect && sampler) {\n\t\t\tvar index:number = this._samplerIndex;\n\t\t\tvar data:Float32Array = this._shader.fragmentConstantData;\n\t\t\tif (!sampler._sampler.imageRect) {\n\t\t\t\tdata[index] = 1;\n\t\t\t\tdata[index + 1] = 1;\n\t\t\t\tdata[index + 2] = 0;\n\t\t\t\tdata[index + 3] = 0;\n\t\t\t} else {\n\t\t\t\tdata[index] = sampler._sampler.imageRect.width;\n\t\t\t\tdata[index + 1] = sampler._sampler.imageRect.height;\n\t\t\t\tdata[index + 2] = sampler._sampler.imageRect.x;\n\t\t\t\tdata[index + 3] = sampler._sampler.imageRect.y;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default GL_Single2DTexture;",
    "import AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport GL_SamplerCube\t\t\t\tfrom \"awayjs-stagegl/lib/image/GL_SamplerCube\";\n\nimport SingleCubeTexture\t\t\tfrom \"awayjs-display/lib/textures/SingleCubeTexture\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\nimport GL_TextureBase\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass GL_SingleCubeTexture extends GL_TextureBase\n{\n\tprivate _singleCubeTexture:SingleCubeTexture;\n\tprivate _textureIndex:number;\n\tprivate _imageIndex:number;\n\n\tconstructor(singleCubeTexture:SingleCubeTexture, shader:ShaderBase)\n\t{\n\t\tsuper(singleCubeTexture, shader);\n\n\t\tthis._singleCubeTexture = singleCubeTexture;\n\t}\n\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._singleCubeTexture = null;\n\t}\n\n\tpublic _iIncludeDependencies(includeInput:boolean = true)\n\t{\n\t\tif (includeInput)\n\t\t\tthis._shader.usesPositionFragment = true;\n\t}\n\n\t/**\n\t *\n\t * @param shader\n\t * @param regCache\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t * @returns {string}\n\t * @private\n\t */\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement):string\n\t{\n\t\tvar format:string = \"\";//this.getFormatString(this._singleCubeTexture.imageCube);\n\t\tvar filter:string = \"linear,miplinear\";\n\n\t\tthis._imageIndex = this._shader.getImageIndex(this._singleCubeTexture, 0);\n\n\t\tvar textureReg:ShaderRegisterElement = this.getTextureReg(this._imageIndex, regCache, sharedReg);\n\t\tthis._textureIndex = textureReg.index;\n\n\t\treturn \"tex \" + targetReg + \", \" + inputReg + \", \" + textureReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> render.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (render.images[this._imageIndex])\n\t\t\trender.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\tvar sampler:GL_SamplerCube = <GL_SamplerCube> renderable.samplers[this._imageIndex];\n\n\t\tif (sampler)\n\t\t\tsampler.activate(this._textureIndex);\n\n\t\tif (renderable.images[this._imageIndex] && sampler) //TODO: allow image to be re-written without accompanying sampler on the renderable\n\t\t\trenderable.images[this._imageIndex].activate(this._textureIndex, sampler._sampler.mipmap);\n\t}\n}\n\nexport default GL_SingleCubeTexture;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport SamplerBase\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport ContextGLTextureFormat\t\tfrom \"awayjs-stagegl/lib/base/ContextGLTextureFormat\";\nimport Stage\t\t\t\t\t\tfrom \"awayjs-stagegl/lib/base/Stage\";\n\nimport TextureBase\t\t\t\t\tfrom \"awayjs-display/lib/textures/TextureBase\";\n\nimport GL_SurfaceBase\t\t\t\tfrom \"awayjs-renderergl/lib/surfaces/GL_SurfaceBase\";\nimport GL_RenderableBase\t\t\tfrom \"awayjs-renderergl/lib/renderables/GL_RenderableBase\";\nimport ShaderBase\t\t\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderBase\";\nimport ShaderRegisterCache\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterCache\";\nimport ShaderRegisterData\t\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterData\";\nimport ShaderRegisterElement\t\tfrom \"awayjs-renderergl/lib/shaders/ShaderRegisterElement\";\n\n/**\n *\n * @class away.pool.GL_TextureBaseBase\n */\nclass GL_TextureBase extends AbstractionBase\n{\n\tprivate _texture:TextureBase;\n\tpublic _shader:ShaderBase;\n\tpublic _stage:Stage;\n\n\tconstructor(texture:TextureBase, shader:ShaderBase)\n\t{\n\t\tsuper(texture, shader);\n\n\t\tthis._texture = texture;\n\t\tthis._shader = shader;\n\t\tthis._stage = shader._stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._texture = null;\n\t\tthis._shader = null;\n\t\tthis._stage = null;\n\t}\n\n\tpublic _iGetFragmentCode(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement = null):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _setRenderState(renderable:GL_RenderableBase)\n\t{\n\t\t//overidden for state logic\n\t}\n\n\tpublic activate(render:GL_SurfaceBase)\n\t{\n\t\t//overridden for activation logic\n\t}\n\n\tpublic getTextureReg(imageIndex:number, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):ShaderRegisterElement\n\t{\n\t\tvar index:number = this._shader.imageIndices.indexOf(imageIndex); //todo: collapse the index based on duplicate image objects to save registrations\n\n\t\tif (index == -1) {\n\t\t\tvar textureReg:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\t\tsharedReg.textures.push(textureReg);\n\t\t\tthis._shader.imageIndices.push(imageIndex);\n\n\t\t\treturn textureReg;\n\t\t}\n\n\t\treturn sharedReg.textures[index];\n\t}\n\n\tpublic getFormatString(image:ImageBase):string\n\t{\n\t\tswitch (image.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport default GL_TextureBase;",
    "export {default as GL_Single2DTexture}\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_Single2DTexture\";\nexport {default as GL_SingleCubeTexture}\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_SingleCubeTexture\";\nexport {default as GL_TextureBase}\t\t\t\t\tfrom \"awayjs-renderergl/lib/textures/GL_TextureBase\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix3DUtils\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\n\nimport DisplayObjectContainer\t\t\tfrom \"awayjs-display/lib/display/DisplayObjectContainer\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\nimport MaterialBase\t\t\t\t\t\tfrom \"awayjs-display/lib/materials/MaterialBase\";\n\n/**\n *  Class Merge merges two or more static sprites into one.<code>Merge</code>\n */\nclass Merge\n{\n\n\t//private const LIMIT:uint = 196605;\n\tprivate _objectSpace:boolean;\n\tprivate _keepMaterial:boolean;\n\tprivate _disposeSources:boolean;\n\tprivate _graphicVOs:Array<GraphicVO>;\n\tprivate _toDispose:Array<Sprite>;\n\n\t/**\n\t * @param    keepMaterial    [optional]    Determines if the merged object uses the recevier sprite material information or keeps its source material(s). Defaults to false.\n\t * If false and receiver object has multiple materials, the last material found in receiver subsprites is applied to the merged subsprite(es).\n\t * @param    disposeSources  [optional]    Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t * If true, only receiver geometry and resulting sprite are kept in  memory.\n\t * @param    objectSpace     [optional]    Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tconstructor(keepMaterial:boolean = false, disposeSources:boolean = false, objectSpace:boolean = false)\n\t{\n\t\tthis._keepMaterial = keepMaterial;\n\t\tthis._disposeSources = disposeSources;\n\t\tthis._objectSpace = objectSpace;\n\t}\n\n\t/**\n\t * Determines if the sprite and geometry source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set disposeSources(b:boolean)\n\t{\n\t\tthis._disposeSources = b;\n\t}\n\n\tpublic get disposeSources():boolean\n\t{\n\t\treturn this._disposeSources;\n\t}\n\n\t/**\n\t * Determines if the material source(s) used for the merging are disposed. Defaults to false.\n\t */\n\tpublic set keepMaterial(b:boolean)\n\t{\n\t\tthis._keepMaterial = b;\n\t}\n\n\tpublic get keepMaterial():boolean\n\t{\n\t\treturn this._keepMaterial;\n\t}\n\n\t/**\n\t * Determines if source sprite(es) is/are merged using objectSpace or worldspace. Defaults to false.\n\t */\n\tpublic set objectSpace(b:boolean)\n\t{\n\t\tthis._objectSpace = b;\n\t}\n\n\tpublic get objectSpace():boolean\n\t{\n\t\treturn this._objectSpace;\n\t}\n\n\t/**\n\t * Merges all the children of a container into a single Sprite. If no Sprite object is found, method returns the receiver without modification.\n\t *\n\t * @param    receiver           The Sprite to receive the merged contents of the container.\n\t * @param    objectContainer    The DisplayObjectContainer holding the sprites to be mergd.\n\t *\n\t * @return The merged Sprite instance.\n\t */\n\tpublic applyToContainer(receiver:Sprite, objectContainer:DisplayObjectContainer)\n\t{\n\t\tthis.reset();\n\n\t\t//collect container sprites\n\t\tthis.parseContainer(receiver, objectContainer);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t * Merges all the sprites found in the Array&lt;Sprite&gt; into a single Sprite.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of the sprites.\n\t * @param    sprites      A series of Spritees to be merged with the reciever sprite.\n\t */\n\tpublic applyToSpritees(receiver:Sprite, sprites:Array<Sprite>)\n\t{\n\t\tthis.reset();\n\n\t\tif (!sprites.length)\n\t\t\treturn;\n\n\t\t//collect sprites in vector\n\t\tfor (var i:number /*uint*/ = 0; i < sprites.length; i++)\n\t\t\tif (sprites[i] != receiver)\n\t\t\t\tthis.collect(sprites[i], this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\t/**\n\t *  Merges 2 sprites into one. It is recommand to use apply when 2 sprites are to be merged. If more need to be merged, use either applyToSpritees or applyToContainer methods.\n\t *\n\t * @param    receiver    The Sprite to receive the merged contents of both sprites.\n\t * @param    sprite        The Sprite to be merged with the receiver sprite\n\t */\n\tpublic apply(receiver:Sprite, sprite:Sprite)\n\t{\n\t\tthis.reset();\n\n\t\t//collect sprite\n\t\tthis.collect(sprite, this._disposeSources);\n\n\t\t//collect receiver\n\t\tthis.collect(receiver, false);\n\n\t\t//merge to receiver\n\t\tthis.merge(receiver, this._disposeSources);\n\t}\n\n\tprivate reset()\n\t{\n\t\tthis._toDispose  = new Array<Sprite>();\n\t\tthis._graphicVOs = new Array<GraphicVO>();\n\t}\n\n\tprivate merge(destSprite:Sprite, dispose:boolean)\n\t{\n\t\tvar i:number /*uint*/;\n\t\t//var oldGraphics:Graphics;\n\t\tvar destGraphics:Graphics;\n\t\tvar useSubMaterials:boolean;\n\n\t\t//oldGraphics = destSprite.graphics.clone();\n\t\tdestGraphics = destSprite.graphics;\n\n\t\t// Only apply materials directly to sub-sprites if necessary,\n\t\t// i.e. if there is more than one material available.\n\t\tuseSubMaterials = (this._graphicVOs.length > 1);\n\n\t\tfor (i = 0; i < this._graphicVOs.length; i++) {\n\t\t\tvar elements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\n\t\t\tvar data:GraphicVO = this._graphicVOs[i];\n\t\t\telements.setIndices(data.indices);\n\t\t\telements.setPositions(data.vertices);\n\t\t\telements.setNormals(data.normals);\n\t\t\telements.setTangents(data.tangents);\n\t\t\telements.setUVs(data.uvs);\n\n\t\t\tdestGraphics.addGraphic(elements);\n\n\t\t\tif (this._keepMaterial && useSubMaterials)\n\t\t\t\tdestSprite.graphics[i].material = data.material;\n\t\t}\n\n\t\tif (this._keepMaterial && !useSubMaterials && this._graphicVOs.length)\n\t\t\tdestSprite.material = this._graphicVOs[0].material;\n\n\t\tif (dispose) {\n\t\t\tvar len:number = this._toDispose.length;\n\t\t\tfor (var i:number; i < len; i++)\n\t\t\t\tthis._toDispose[i].dispose();;\n\t\t}\n\n\t\tthis._toDispose = null;\n\t}\n\n\tprivate collect(sprite:Sprite, dispose:boolean)\n\t{\n\t\tvar subIdx:number /*uint*/;\n\t\tvar calc:number /*uint*/;\n\t\tfor (subIdx = 0; subIdx < sprite.graphics.count; subIdx++) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\t\t\tvar iIdx:number /*uint*/, vIdx:number /*uint*/, nIdx:number /*uint*/, tIdx:number /*uint*/, uIdx:number /*uint*/;\n\t\t\tvar indexOffset:number /*uint*/;\n\t\t\tvar elements:TriangleElements;\n\t\t\tvar vo:GraphicVO;\n\t\t\tvar vertices:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\t\t\tvar ind:Uint16Array, pd:ArrayBufferView, nd:Float32Array, td:Float32Array, ud:ArrayBufferView;\n\n\t\t\telements = <TriangleElements> sprite.graphics.getGraphicAt(subIdx).elements;\n\t\t\tpd = elements.positions.get(elements.numVertices);\n\t\t\tnd = elements.normals.get(elements.numVertices);\n\t\t\ttd = elements.tangents.get(elements.numVertices);\n\t\t\tud = elements.uvs.get(elements.numVertices);\n\n\t\t\t// Get (or create) a VO for this material\n\t\t\tvo = this.getGraphicData(sprite.graphics.getGraphicAt(subIdx).material);\n\n\t\t\t// Vertices and normals are copied to temporary vectors, to be transformed\n\t\t\t// before concatenated onto those of the data. This is unnecessary if no\n\t\t\t// transformation will be performed, i.e. for object space merging.\n\t\t\tvertices = (this._objectSpace)? vo.vertices : new Array<number>();\n\t\t\tnormals = (this._objectSpace)? vo.normals : new Array<number>();\n\t\t\ttangents = (this._objectSpace)? vo.tangents : new Array<number>();\n\n\t\t\t// Copy over vertex attributes\n\t\t\tvIdx = vertices.length;\n\t\t\tnIdx = normals.length;\n\t\t\ttIdx = tangents.length;\n\t\t\tuIdx = vo.uvs.length;\n\t\t\tlen = elements.numVertices;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\n\t\t\t\t// Position\n\t\t\t\tvertices[vIdx++] = pd[calc];\n\t\t\t\tvertices[vIdx++] = pd[calc + 1];\n\t\t\t\tvertices[vIdx++] = pd[calc + 2];\n\n\t\t\t\t// Normal\n\t\t\t\tnormals[nIdx++] = nd[calc];\n\t\t\t\tnormals[nIdx++] = nd[calc + 1];\n\t\t\t\tnormals[nIdx++] = nd[calc + 2];\n\n\t\t\t\t// Tangent\n\t\t\t\ttangents[tIdx++] = td[calc];\n\t\t\t\ttangents[tIdx++] = td[calc + 1];\n\t\t\t\ttangents[tIdx++] = td[calc + 2];\n\n\t\t\t\t// UV\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2];\n\t\t\t\tvo.uvs[uIdx++] = ud[i*2 + 1];\n\t\t\t}\n\n\t\t\t// Copy over triangle indices\n\t\t\tindexOffset = (!this._objectSpace)? vo.vertices.length/3 :0;\n\t\t\tiIdx = vo.indices.length;\n\t\t\tlen = elements.numElements;\n\t\t\tind = elements.indices.get(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcalc = i*3;\n\t\t\t\tvo.indices[iIdx++] = ind[calc] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 1] + indexOffset;\n\t\t\t\tvo.indices[iIdx++] = ind[calc + 2] + indexOffset;\n\t\t\t}\n\n\t\t\tif (!this._objectSpace) {\n\t\t\t\tsprite.sceneTransform.transformVectors(vertices, vertices);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, normals, normals);\n\t\t\t\tMatrix3DUtils.deltaTransformVectors(sprite.sceneTransform, tangents, tangents);\n\n\t\t\t\t// Copy vertex data from temporary (transformed) vectors\n\t\t\t\tvIdx = vo.vertices.length;\n\t\t\t\tnIdx = vo.normals.length;\n\t\t\t\ttIdx = vo.tangents.length;\n\t\t\t\tlen = vertices.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tvo.vertices[vIdx++] = vertices[i];\n\t\t\t\t\tvo.normals[nIdx++] = normals[i];\n\t\t\t\t\tvo.tangents[tIdx++] = tangents[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dispose)\n\t\t\tthis._toDispose.push(sprite);\n\t}\n\n\tprivate getGraphicData(material:MaterialBase):GraphicVO\n\t{\n\t\tvar data:GraphicVO;\n\n\t\tif (this._keepMaterial) {\n\t\t\tvar i:number /*uint*/;\n\t\t\tvar len:number /*uint*/;\n\n\t\t\tlen = this._graphicVOs.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (this._graphicVOs[i].material == material) {\n\t\t\t\t\tdata = this._graphicVOs[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._graphicVOs.length) {\n\t\t\t// If materials are not to be kept, all data can be\n\t\t\t// put into a single VO, so return that one.\n\t\t\tdata = this._graphicVOs[0];\n\t\t}\n\n\t\t// No data (for this material) found, create new.\n\t\tif (!data) {\n\t\t\tdata = new GraphicVO();\n\t\t\tdata.vertices = new Array<number>();\n\t\t\tdata.normals = new Array<number>();\n\t\t\tdata.tangents = new Array<number>();\n\t\t\tdata.uvs = new Array<number>();\n\t\t\tdata.indices = new Array<number /*uint*/>();\n\t\t\tdata.material = material;\n\n\t\t\tthis._graphicVOs.push(data);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate parseContainer(receiver:Sprite, object:DisplayObjectContainer)\n\t{\n\t\tvar child:DisplayObjectContainer;\n\t\tvar i:number /*uint*/;\n\n\t\tif (object instanceof Sprite && object != (<DisplayObjectContainer> receiver))\n\t\t\tthis.collect(<Sprite> object, this._disposeSources);\n\n\t\tfor (i = 0; i < object.numChildren; ++i) {\n\t\t\tchild = <DisplayObjectContainer> object.getChildAt(i);\n\t\t\tthis.parseContainer(receiver, child);\n\t\t}\n\t}\n}\n\nexport default Merge;\n\nclass GraphicVO\n{\n\tpublic uvs:Array<number>;\n\tpublic vertices:Array<number>;\n\tpublic normals:Array<number>;\n\tpublic tangents:Array<number>;\n\tpublic indices:Array<number /*uint*/>;\n\tpublic material:MaterialBase;\n}\n",
    "import Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n * ...\n */\nclass ParticleGraphicsTransform\n{\n\tprivate _defaultVertexTransform:Matrix3D;\n\tprivate _defaultInvVertexTransform:Matrix3D;\n\tprivate _defaultUVTransform:Matrix;\n\n\tpublic set vertexTransform(value:Matrix3D)\n\t{\n\t\tthis._defaultVertexTransform = value;\n\t\tthis._defaultInvVertexTransform = value.clone();\n\t\tthis._defaultInvVertexTransform.invert();\n\t\tthis._defaultInvVertexTransform.transpose();\n\t}\n\n\tpublic set UVTransform(value:Matrix)\n\t{\n\t\tthis._defaultUVTransform = value;\n\t}\n\n\tpublic get UVTransform():Matrix\n\t{\n\t\treturn this._defaultUVTransform;\n\t}\n\n\tpublic get vertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultVertexTransform;\n\t}\n\n\tpublic get invVertexTransform():Matrix3D\n\t{\n\t\treturn this._defaultInvVertexTransform;\n\t}\n}\n\nexport default ParticleGraphicsTransform;",
    "export {default as Merge}\t\t\t\t\t\t\tfrom \"awayjs-renderergl/lib/tools/commands/Merge\";\nexport {default as ParticleGraphicsTransform}\t\tfrom \"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\";",
    "import AttributesBuffer\t\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport Matrix\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Point\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport Vector3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport ParticleData\t\t\t\t\t\tfrom \"awayjs-display/lib/animators/data/ParticleData\";\nimport Graphics\t\t\t\t\t\t\tfrom \"awayjs-display/lib/graphics/Graphics\";\nimport TriangleElements\t\t\t\t\tfrom \"awayjs-display/lib/graphics/TriangleElements\";\nimport Sprite\t\t\t\t\t\t\tfrom \"awayjs-display/lib/display/Sprite\";\n\nimport ParticleGraphicsTransform\t\tfrom \"awayjs-renderergl/lib/tools/data/ParticleGraphicsTransform\";\n\n/**\n * ...\n */\nclass ParticleGraphicsHelper\n{\n\tpublic static MAX_VERTEX:number /*int*/ = 65535;\n\n\tpublic static generateGraphics(output:Graphics, graphicsArray:Array<Graphics>, transforms:Array<ParticleGraphicsTransform> = null)\n\t{\n\t\tvar indicesVector:Array<Array<number>> /*uint*/ = new Array<Array<number>>() /*uint*/;\n\t\tvar positionsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar normalsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar tangentsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar uvsVector:Array<Array<number>> = new Array<Array<number>>();\n\t\tvar vertexCounters:Array<number> /*uint*/ = new Array<number>() /*uint*/;\n\t\tvar particles:Array<ParticleData> = new Array<ParticleData>();\n\t\tvar elementsArray:Array<TriangleElements> = new Array<TriangleElements>();\n\t\tvar numParticles:number /*uint*/ = graphicsArray.length;\n\n\t\tvar sourceGraphics:Graphics;\n\t\tvar sourceElements:TriangleElements;\n\t\tvar numGraphics:number /*uint*/;\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\t\tvar uvs:Array<number>;\n\t\tvar vertexCounter:number /*uint*/;\n\t\tvar elements:TriangleElements;\n\t\tvar i:number /*int*/;\n\t\tvar j:number /*int*/;\n\t\tvar sub2SubMap:Array<number> /*int*/ = new Array<number>() /*int*/;\n\n\t\tvar tempVertex:Vector3D = new Vector3D;\n\t\tvar tempNormal:Vector3D = new Vector3D;\n\t\tvar tempTangents:Vector3D = new Vector3D;\n\t\tvar tempUV:Point = new Point;\n\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\tsourceGraphics = graphicsArray[i];\n\t\t\tnumGraphics = sourceGraphics.count;\n\t\t\tfor (var srcIndex:number /*int*/ = 0; srcIndex < numGraphics; srcIndex++) {\n\t\t\t\t//create a different particle subgeometry group for each source subgeometry in a particle.\n\t\t\t\tif (sub2SubMap.length <= srcIndex) {\n\t\t\t\t\tsub2SubMap.push(elementsArray.length);\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tsourceElements = <TriangleElements> sourceGraphics.getGraphicAt(srcIndex).elements;\n\n\t\t\t\t//add a new particle subgeometry if this source subgeometry will take us over the maxvertex limit\n\t\t\t\tif (sourceElements.numVertices + vertexCounters[sub2SubMap[srcIndex]] > ParticleGraphicsHelper.MAX_VERTEX) {\n\t\t\t\t\t//update submap and add new subgeom vectors\n\t\t\t\t\tsub2SubMap[srcIndex] = elementsArray.length;\n\t\t\t\t\tindicesVector.push(new Array<number>() /*uint*/);\n\t\t\t\t\tpositionsVector.push(new Array<number>());\n\t\t\t\t\tnormalsVector.push(new Array<number>());\n\t\t\t\t\ttangentsVector.push(new Array<number>());\n\t\t\t\t\tuvsVector.push(new Array<number>());\n\t\t\t\t\telementsArray.push(new TriangleElements(new AttributesBuffer()));\n\t\t\t\t\tvertexCounters.push(0);\n\t\t\t\t}\n\n\t\t\t\tj = sub2SubMap[srcIndex];\n\n\t\t\t\t//select the correct vector\n\t\t\t\tindices = indicesVector[j];\n\t\t\t\tpositions = positionsVector[j];\n\t\t\t\tnormals = normalsVector[j];\n\t\t\t\ttangents = tangentsVector[j];\n\t\t\t\tuvs = uvsVector[j];\n\t\t\t\tvertexCounter = vertexCounters[j];\n\t\t\t\telements = elementsArray[j];\n\n\t\t\t\tvar particleData:ParticleData = new ParticleData();\n\t\t\t\tparticleData.numVertices = sourceElements.numVertices;\n\t\t\t\tparticleData.startVertexIndex = vertexCounter;\n\t\t\t\tparticleData.particleIndex = i;\n\t\t\t\tparticleData.elements = elements;\n\t\t\t\tparticles.push(particleData);\n\n\t\t\t\tvertexCounters[j] += sourceElements.numVertices;\n\n\t\t\t\tvar k:number /*int*/;\n\t\t\t\tvar tempLen:number /*int*/;\n\t\t\t\tvar compact:TriangleElements = sourceElements;\n\t\t\t\tvar product:number /*uint*/;\n\t\t\t\tvar sourcePositions:ArrayBufferView;\n\t\t\t\tvar sourceNormals:Float32Array;\n\t\t\t\tvar sourceTangents:Float32Array;\n\t\t\t\tvar sourceUVs:ArrayBufferView;\n\n\t\t\t\tif (compact) {\n\t\t\t\t\ttempLen = compact.numVertices;\n\t\t\t\t\tsourcePositions = compact.positions.get(tempLen);\n\t\t\t\t\tsourceNormals = compact.normals.get(tempLen);\n\t\t\t\t\tsourceTangents = compact.tangents.get(tempLen);\n\t\t\t\t\tsourceUVs = compact.uvs.get(tempLen);\n\n\t\t\t\t\tif (transforms) {\n\t\t\t\t\t\tvar particleGraphicsTransform:ParticleGraphicsTransform = transforms[i];\n\t\t\t\t\t\tvar vertexTransform:Matrix3D = particleGraphicsTransform.vertexTransform;\n\t\t\t\t\t\tvar invVertexTransform:Matrix3D = particleGraphicsTransform.invVertexTransform;\n\t\t\t\t\t\tvar UVTransform:Matrix = particleGraphicsTransform.UVTransform;\n\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * 0 - 2: vertex position X, Y, Z\n\t\t\t\t\t\t\t * 3 - 5: normal X, Y, Z\n\t\t\t\t\t\t\t * 6 - 8: tangent X, Y, Z\n\t\t\t\t\t\t\t * 9 - 10: U V\n\t\t\t\t\t\t\t * 11 - 12: Secondary U V*/\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\ttempVertex.x = sourcePositions[product];\n\t\t\t\t\t\t\ttempVertex.y = sourcePositions[product + 1];\n\t\t\t\t\t\t\ttempVertex.z = sourcePositions[product + 2];\n\t\t\t\t\t\t\ttempNormal.x = sourceNormals[product];\n\t\t\t\t\t\t\ttempNormal.y = sourceNormals[product + 1];\n\t\t\t\t\t\t\ttempNormal.z = sourceNormals[product + 2];\n\t\t\t\t\t\t\ttempTangents.x = sourceTangents[product];\n\t\t\t\t\t\t\ttempTangents.y = sourceTangents[product + 1];\n\t\t\t\t\t\t\ttempTangents.z = sourceTangents[product + 2];\n\t\t\t\t\t\t\ttempUV.x = sourceUVs[k*2];\n\t\t\t\t\t\t\ttempUV.y = sourceUVs[k*2 + 1];\n\t\t\t\t\t\t\tif (vertexTransform) {\n\t\t\t\t\t\t\t\ttempVertex = vertexTransform.transformVector(tempVertex);\n\t\t\t\t\t\t\t\ttempNormal = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t\ttempTangents = invVertexTransform.deltaTransformVector(tempNormal);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (UVTransform)\n\t\t\t\t\t\t\t\ttempUV = UVTransform.transformPoint(tempUV);\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(tempVertex.x, tempVertex.y, tempVertex.z);\n\t\t\t\t\t\t\tnormals.push(tempNormal.x, tempNormal.y, tempNormal.z);\n\t\t\t\t\t\t\ttangents.push(tempTangents.x, tempTangents.y, tempTangents.z);\n\t\t\t\t\t\t\tuvs.push(tempUV.x, tempUV.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\t\t\tproduct = k*3;\n\t\t\t\t\t\t\t//this is faster than that only push one data\n\t\t\t\t\t\t\tpositions.push(sourcePositions[product], sourcePositions[product + 1], sourcePositions[product + 2]);\n\t\t\t\t\t\t\tnormals.push(sourceNormals[product], sourceNormals[product + 1], sourceNormals[product + 2]);\n\t\t\t\t\t\t\ttangents.push(sourceTangents[product], sourceTangents[product + 1], sourceTangents[product + 2]);\n\t\t\t\t\t\t\tuvs.push(sourceUVs[k*2], sourceUVs[k*2 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Todo\n\t\t\t\t}\n\n\t\t\t\ttempLen = sourceElements.numElements;\n\t\t\t\tvar sourceIndices:Uint16Array = sourceElements.indices.get(tempLen);\n\t\t\t\tfor (k = 0; k < tempLen; k++) {\n\t\t\t\t\tproduct = k*3;\n\t\t\t\t\tindices.push(sourceIndices[product] + vertexCounter, sourceIndices[product + 1] + vertexCounter, sourceIndices[product + 2] + vertexCounter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\toutput.particles = particles;\n\t\toutput.numParticles = numParticles;\n\n\t\tnumParticles = elementsArray.length;\n\t\tfor (i = 0; i < numParticles; i++) {\n\t\t\telements = elementsArray[i];\n\t\t\telements.autoDeriveNormals = false;\n\t\t\telements.autoDeriveTangents = false;\n\t\t\telements.setIndices(indicesVector[i]);\n\t\t\telements.setPositions(positionsVector[i]);\n\t\t\telements.setNormals(normalsVector[i]);\n\t\t\telements.setTangents(tangentsVector[i]);\n\t\t\telements.setUVs(uvsVector[i]);\n\t\t\toutput.addGraphic(elements);\n\t\t}\n\t}\n}\n\nexport default ParticleGraphicsHelper;",
    "import Matrix3D\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\n\n/**\n *\n */\nclass PerspectiveMatrix3D extends Matrix3D\n{\n\tconstructor(v:Float32Array = null)\n\t{\n\t\tsuper(v);\n\t}\n\n\tpublic perspectiveFieldOfViewLH(fieldOfViewY:number, aspectRatio:number, zNear:number, zFar:number)\n\t{\n\t\tvar yScale:number = 1/Math.tan(fieldOfViewY/2);\n\t\tvar xScale:number = yScale/aspectRatio;\n\n\t\tthis.rawData[0] = xScale;\n\t\tthis.rawData[1] = 0.0;\n\t\tthis.rawData[2] = 0.0;\n\t\tthis.rawData[3] = 0.0;\n\n\t\tthis.rawData[4] = 0.0;\n\t\tthis.rawData[5] = yScale;\n\t\tthis.rawData[6] = 0.0;\n\t\tthis.rawData[7] = 0.0;\n\n\t\tthis.rawData[8] = 0.0;\n\t\tthis.rawData[9] = 0.0;\n\t\tthis.rawData[10] = zFar/(zFar - zNear);\n\t\tthis.rawData[11] = 1.0;\n\n\t\tthis.rawData[12] = 0.0;\n\t\tthis.rawData[13] = 0.0;\n\t\tthis.rawData[14] = (zNear*zFar)/(zNear - zFar);\n\t\tthis.rawData[15] = 0.0;\n\t}\n}\n\nexport default PerspectiveMatrix3D;",
    "export {default as ParticleGraphicsHelper}\t\t\tfrom \"awayjs-renderergl/lib/utils/ParticleGraphicsHelper\";\nexport {default as PerspectiveMatrix3D}\t\t\t\tfrom \"awayjs-renderergl/lib/utils/PerspectiveMatrix3D\";"
  ],
  "sourceRoot": ""
}